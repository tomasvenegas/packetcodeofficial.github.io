{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v7.json", "dbt_version": "1.3.1", "generated_at": "2023-02-09T19:13:55.110403Z", "invocation_id": "0037dc46-e649-4cba-8a8c-59afe48132f5", "env": {}, "project_id": "1b762dd680b567002d7cabc78313a399", "user_id": "2d606203-5d4d-4d46-82d1-e43d4f092865", "send_anonymous_usage_stats": true, "adapter_type": "redshift"}, "nodes": {"model.houm.property__recommended_new_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_property__recommended_new_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__recommended_new_properties"], "unique_id": "model.houm.property__recommended_new_properties", "raw_code": "SELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__recommended_new_properties') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__recommended_new_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__recommended_new_properties.sql", "name": "property__recommended_new_properties", "alias": "property__recommended_new_properties", "checksum": {"name": "sha256", "checksum": "b615775c4e9250d591b064503c8edcb24aec7630e4fe28873b84ba576bc33fa2"}, "tags": ["dw", "ml", "feature_store"], "refs": [["stg_property__recommended_new_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__recommended_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1675970035.812468, "compiled_code": "SELECT  \n        '2023-02-09 16:13:54.685542-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__recommended_new_properties\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__recommended_new_properties\""}, "model.houm.property__sale_recommended_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.stg_property__sale_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__sale_recommended_properties"], "unique_id": "model.houm.property__sale_recommended_properties", "raw_code": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM {{ ref('property__published_properties') }} \n)\n\nSELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__sale_recommended_properties') }} a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Sale','Rental & Sale') and b.sales_status in ('published','republished')\nAND c.business_type in ('Sale','Rental & Sale') and c.sales_status in ('published','republished')\nAND a.service_type = 'sales'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__sale_recommended_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__sale_recommended_properties.sql", "name": "property__sale_recommended_properties", "alias": "property__sale_recommended_properties", "checksum": {"name": "sha256", "checksum": "579460af400fb80ddadb5ec82b985561d400b55a95fffd442c857aeba769de65"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__published_properties"], ["stg_property__sale_recommended_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__sale_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1675970035.826614, "compiled_code": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" \n)\n\nSELECT  \n        '2023-02-09 16:13:54.685542-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__sale_recommended_properties\" a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Sale','Rental & Sale') and b.sales_status in ('published','republished')\nAND c.business_type in ('Sale','Rental & Sale') and c.sales_status in ('published','republished')\nAND a.service_type = 'sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__sale_recommended_properties\""}, "model.houm.property__rent_recommended_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.stg_property__rent_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__rent_recommended_properties"], "unique_id": "model.houm.property__rent_recommended_properties", "raw_code": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM {{ ref('property__published_properties') }} \n)\n\nSELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__rent_recommended_properties') }} a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Rental','Rental & Sale') and b.rental_status in ('published','republished')\nAND c.business_type in ('Rental','Rental & Sale') and c.rental_status in ('published','republished')\nAND a.service_type = 'rent'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__rent_recommended_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__rent_recommended_properties.sql", "name": "property__rent_recommended_properties", "alias": "property__rent_recommended_properties", "checksum": {"name": "sha256", "checksum": "6cee3ba28aaf16c8b6270b1e6165c4dfd7f2cdd14ebd705b0b953b751dff06a8"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__published_properties"], ["stg_property__rent_recommended_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__rent_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1675970035.8312168, "compiled_code": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" \n)\n\nSELECT  \n        '2023-02-09 16:13:54.685542-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__rent_recommended_properties\" a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Rental','Rental & Sale') and b.rental_status in ('published','republished')\nAND c.business_type in ('Rental','Rental & Sale') and c.rental_status in ('published','republished')\nAND a.service_type = 'rent'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__rent_recommended_properties\""}, "model.houm.property__rev_kpi_recommendation_performance": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__rev_kpi_recommendation_performance"], "unique_id": "model.houm.property__rev_kpi_recommendation_performance", "raw_code": "WITH median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY recommended_price_ratio) as median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    min_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY min_recommended_price_ratio) as min_median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    max_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY max_recommended_price_ratio) as max_median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ), \n    average_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        COUNT(*) as properties_counted,\n        AVG(recommended_price_ratio) as average_price_ratio,\n        AVG(min_recommended_price_ratio) as average_min_price_ratio,\n        AVG(max_recommended_price_ratio) as average_max_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }} average_ratio\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    stdev_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        STDDEV(recommended_price_ratio) as stdev_price_ratio,\n        STDDEV(min_recommended_price_ratio) as stdev_min_price_ratio,\n        STDDEV(max_recommended_price_ratio) as stdev_max_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    rev_kpi AS (\n    SELECT average_ratio.service_type,\n    average_ratio.country,\n    average_ratio.city_marketplace,\n    average_ratio.status,\n    average_ratio.properties_counted,\n    average_price_ratio,\n    stdev_ratio.stdev_price_ratio,\n    average_min_price_ratio,\n    stdev_ratio.stdev_min_price_ratio,\n    average_max_price_ratio,\n    stdev_ratio.stdev_max_price_ratio,\n    median_price_ratio,\n    min_median_price_ratio,\n    max_median_price_ratio\n    FROM (average_ratio\n        LEFT JOIN median_ratio\n        ON (average_ratio.service_type = median_ratio.service_type\n        AND average_ratio.status = median_ratio.status\n        AND average_ratio.country = median_ratio.country\n        AND average_ratio.city_marketplace = median_ratio.city_marketplace\n        )\n        LEFT JOIN min_median_ratio\n        ON (average_ratio.service_type = min_median_ratio.service_type\n        AND average_ratio.status = min_median_ratio.status\n        AND average_ratio.country = min_median_ratio.country\n        AND average_ratio.city_marketplace = min_median_ratio.city_marketplace\n        )\n        LEFT JOIN max_median_ratio\n        ON (average_ratio.service_type = max_median_ratio.service_type\n        AND average_ratio.status = max_median_ratio.status\n        AND average_ratio.country = max_median_ratio.country\n        AND average_ratio.city_marketplace = max_median_ratio.city_marketplace\n        )\n        LEFT JOIN stdev_ratio\n        ON (average_ratio.service_type = stdev_ratio.service_type\n        AND average_ratio.status = stdev_ratio.status\n        AND average_ratio.country = stdev_ratio.country\n        AND average_ratio.city_marketplace = stdev_ratio.city_marketplace\n        )\n        )\n    )\n\n    SELECT *\n    FROM rev_kpi\n    ORDER BY service_type,\n             country,\n             city_marketplace,\n             status", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "original_file_path": "models/dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "name": "property__rev_kpi_recommendation_performance", "alias": "property__rev_kpi_recommendation_performance", "checksum": {"name": "sha256", "checksum": "0b394490824dc364b855e947044f974242e5ee6a5f7ce0e8b1f7d7f43c4e7c6e"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1675970035.835582, "compiled_code": "WITH median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY recommended_price_ratio) as median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    min_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY min_recommended_price_ratio) as min_median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    max_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY max_recommended_price_ratio) as max_median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ), \n    average_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        COUNT(*) as properties_counted,\n        AVG(recommended_price_ratio) as average_price_ratio,\n        AVG(min_recommended_price_ratio) as average_min_price_ratio,\n        AVG(max_recommended_price_ratio) as average_max_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\" average_ratio\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    stdev_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        STDDEV(recommended_price_ratio) as stdev_price_ratio,\n        STDDEV(min_recommended_price_ratio) as stdev_min_price_ratio,\n        STDDEV(max_recommended_price_ratio) as stdev_max_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    rev_kpi AS (\n    SELECT average_ratio.service_type,\n    average_ratio.country,\n    average_ratio.city_marketplace,\n    average_ratio.status,\n    average_ratio.properties_counted,\n    average_price_ratio,\n    stdev_ratio.stdev_price_ratio,\n    average_min_price_ratio,\n    stdev_ratio.stdev_min_price_ratio,\n    average_max_price_ratio,\n    stdev_ratio.stdev_max_price_ratio,\n    median_price_ratio,\n    min_median_price_ratio,\n    max_median_price_ratio\n    FROM (average_ratio\n        LEFT JOIN median_ratio\n        ON (average_ratio.service_type = median_ratio.service_type\n        AND average_ratio.status = median_ratio.status\n        AND average_ratio.country = median_ratio.country\n        AND average_ratio.city_marketplace = median_ratio.city_marketplace\n        )\n        LEFT JOIN min_median_ratio\n        ON (average_ratio.service_type = min_median_ratio.service_type\n        AND average_ratio.status = min_median_ratio.status\n        AND average_ratio.country = min_median_ratio.country\n        AND average_ratio.city_marketplace = min_median_ratio.city_marketplace\n        )\n        LEFT JOIN max_median_ratio\n        ON (average_ratio.service_type = max_median_ratio.service_type\n        AND average_ratio.status = max_median_ratio.status\n        AND average_ratio.country = max_median_ratio.country\n        AND average_ratio.city_marketplace = max_median_ratio.city_marketplace\n        )\n        LEFT JOIN stdev_ratio\n        ON (average_ratio.service_type = stdev_ratio.service_type\n        AND average_ratio.status = stdev_ratio.status\n        AND average_ratio.country = stdev_ratio.country\n        AND average_ratio.city_marketplace = stdev_ratio.city_marketplace\n        )\n        )\n    )\n\n    SELECT *\n    FROM rev_kpi\n    ORDER BY service_type,\n             country,\n             city_marketplace,\n             status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__rev_kpi_recommendation_performance\""}, "model.houm.goals_current": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units", "model.houm.sales_units", "model.houm.sales_local_revenue", "model.houm.eop_subs", "model.houm.cum_sales_units", "model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "goals_current"], "unique_id": "model.houm.goals_current", "raw_code": "WITH GoalsCurrent AS (\nSELECT *\nFROM {{ ref('rentals_units') }}\nUNION ALL\nSELECT *\nFROM {{ ref('sales_units') }}\nUNION ALL\nSELECT *\nFROM {{ref('sales_local_revenue')}}\nUNION ALL\nSELECT *\nFROM {{ref('eop_subs')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_rentals_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_local_revenue')}})\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/goals_current.sql", "original_file_path": "models/dwh/marts/core/finance/goals_current.sql", "name": "goals_current", "alias": "goals_current", "checksum": {"name": "sha256", "checksum": "23317083206c46e8e8d8c544cb8b431810b4fc08b8b2d17e69dba0915e9b83a4"}, "tags": [], "refs": [["rentals_units"], ["sales_units"], ["sales_local_revenue"], ["eop_subs"], ["cum_sales_units"], ["cum_rentals_units"], ["cum_sales_local_revenue"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/goals_current.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970035.837612, "compiled_code": "WITH GoalsCurrent AS (\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"eop_subs\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_sales_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_rentals_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_sales_local_revenue\")\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"goals_current\""}, "model.houm.cum_rentals_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_rentals_units"], "unique_id": "model.houm.cum_rentals_units", "raw_code": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('rentals_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_rentals_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_rentals_units.sql", "name": "cum_rentals_units", "alias": "cum_rentals_units", "checksum": {"name": "sha256", "checksum": "b57592818d6920d917a5a7d191773833f0052a04488fe59b114871f3b3c303d0"}, "tags": [], "refs": [["rentals_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970035.839662, "compiled_code": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_rentals_units\""}, "model.houm.cum_sales_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_units"], "unique_id": "model.houm.cum_sales_units", "raw_code": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('sales_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_units.sql", "name": "cum_sales_units", "alias": "cum_sales_units", "checksum": {"name": "sha256", "checksum": "84a8f919c91fb3b354ac880eb7ef3c42870af9a1de67d62bc7508d944e5e9a00"}, "tags": [], "refs": [["sales_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970035.841262, "compiled_code": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_sales_units\""}, "model.houm.cum_sales_local_revenue": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_local_revenue"], "unique_id": "model.houm.cum_sales_local_revenue", "raw_code": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    {{ ref('sales_local_revenue') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_local_revenue.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "name": "cum_sales_local_revenue", "alias": "cum_sales_local_revenue", "checksum": {"name": "sha256", "checksum": "a394ed7fc2202cccf0378864df609e448a6a6cebad9c23c559de6d86bb4de73c"}, "tags": [], "refs": [["sales_local_revenue"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970035.842836, "compiled_code": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_sales_local_revenue\""}, "model.houm.sales_seller_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads"], "unique_id": "model.houm.sales_seller_metric_leads", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads.sql", "name": "sales_seller_metric_leads", "alias": "sales_seller_metric_leads", "checksum": {"name": "sha256", "checksum": "b0db4978aa91622ff5ed1dfb0a1393deada4b86aaa2a54c0bf8f55303de1734a"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.844458, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\""}, "model.houm.rental_landlord_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "name": "rental_landlord_metric_paid_media_cost", "alias": "rental_landlord_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4ec3cea3ff46c4c3498f6b68955ed87fc5acccd4b7575b874748b36ee5c33ba6"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.850645, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\""}, "model.houm.rental_landlord_metric_renewal_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_renewal_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_renewal_subs"], "unique_id": "model.houm.rental_landlord_metric_renewal_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_renewal_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_renewal_subs.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_renewal_subs.sql", "name": "rental_landlord_metric_renewal_subs", "alias": "rental_landlord_metric_renewal_subs", "checksum": {"name": "sha256", "checksum": "30047fffbc2962f9cc0694f93406a7dbfaa814cd2c7575dcc120584877645492"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_renewal_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_renewal_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.854559, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_renewal_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_renewal_subs\""}, "model.houm.sales_seller_metric_photo_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_photo_scheduled", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "name": "sales_seller_metric_photo_scheduled", "alias": "sales_seller_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "6aa940f76677aa9565cd466477aa4daf72509825b44a44ecdd63d1de2b24251f"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.859091, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_republished_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_republished_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_republished_subs"], "unique_id": "model.houm.rental_landlord_metric_republished_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_republished_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_republished_subs.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_republished_subs.sql", "name": "rental_landlord_metric_republished_subs", "alias": "rental_landlord_metric_republished_subs", "checksum": {"name": "sha256", "checksum": "6e961b77f9bb84315dc60aef9cecd26600909719e71cc69940c7dbfa95db74e7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_republished_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_republished_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.862957, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_republished_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_republished_subs\""}, "model.houm.rental_landlord_metric_new_subs_brokerage": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_subs_brokerage"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_subs_brokerage"], "unique_id": "model.houm.rental_landlord_metric_new_subs_brokerage", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_new_subs_brokerage') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_subs_brokerage.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_subs_brokerage.sql", "name": "rental_landlord_metric_new_subs_brokerage", "alias": "rental_landlord_metric_new_subs_brokerage", "checksum": {"name": "sha256", "checksum": "778be155e40854670a028c1c0d90fe907b96087d179a25f091eee6edcc4ba48b"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_subs_brokerage"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_subs_brokerage.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.866922, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs_brokerage\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs_brokerage\""}, "model.houm.rental_landlord_metric_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_done"], "unique_id": "model.houm.rental_landlord_metric_photo_done", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "name": "rental_landlord_metric_photo_done", "alias": "rental_landlord_metric_photo_done", "checksum": {"name": "sha256", "checksum": "45a5785f0a180b847167b08050e694aa3cfb2f1ca38356a48316640807c0071c"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.870775, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\""}, "model.houm.sales_seller_metric_new_sale_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_new_sale_listing') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "name": "sales_seller_metric_new_sale_listing", "alias": "sales_seller_metric_new_sale_listing", "checksum": {"name": "sha256", "checksum": "9563888b2dac40d8a4db78bd8c687cd46fb2f34f569fd34756a0586637f26570"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.874749, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\""}, "model.houm.sales_company_metric_new_units_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_units_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_units_listing"], "unique_id": "model.houm.sales_company_metric_new_units_listing", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_units_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'unit_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_units_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_units_listing.sql", "name": "sales_company_metric_new_units_listing", "alias": "sales_company_metric_new_units_listing", "checksum": {"name": "sha256", "checksum": "8064ea47d952412e5c880bc63e3b598c2d2c6983fd466c72d40ae3559415e0da"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_units_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_units_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.878579, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_units_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN unit_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN unit_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN unit_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN unit_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN unit_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN unit_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN unit_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN unit_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN unit_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_units_listing\""}, "model.houm.sales_company_metric_new_unittypes_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_unittypes_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_unittypes_listing"], "unique_id": "model.houm.sales_company_metric_new_unittypes_listing", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_unittypes_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'unit_type_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "name": "sales_company_metric_new_unittypes_listing", "alias": "sales_company_metric_new_unittypes_listing", "checksum": {"name": "sha256", "checksum": "f89c8c1ef17a927bcea010fa3a48e5f08fd3979e52e8f48c14060e3678616daf"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_unittypes_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.8824599, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_unittypes_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN unit_type_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN unit_type_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN unit_type_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN unit_type_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN unit_type_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN unit_type_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN unit_type_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN unit_type_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN unit_type_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_unittypes_listing\""}, "model.houm.sales_seller_metric_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_leads_qualified_date", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "name": "sales_seller_metric_leads_qualified_date", "alias": "sales_seller_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "609b61ba4f0b62f1aefdb0f635a7dce230ce6c158bb5bb8f5f5012741c790d17"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.886386, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\""}, "model.houm.sales_company_metric_new_project_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_project_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_project_listing"], "unique_id": "model.houm.sales_company_metric_new_project_listing", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_project_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_project_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_project_listing.sql", "name": "sales_company_metric_new_project_listing", "alias": "sales_company_metric_new_project_listing", "checksum": {"name": "sha256", "checksum": "1c42f8ff411e7b104ed24b04ad0197e576bfec22c02bfd0804e3ef520c3fbb20"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_project_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_project_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.890955, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_project_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_project_listing\""}, "model.houm.properties_published": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_propertydetails", "model.houm.stg_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "properties_published"], "unique_id": "model.houm.properties_published", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH prop_status_business AS (\r\nSELECT \r\n  property.id AS property_id,\r\n  details_rentals.status AS rental_status, \r\n  details_sales.status AS sales_status, \r\n  property.*, \r\n  CASE \r\n    WHEN  details_rentals.status IN ('published','republished') \r\n      AND property.for_rental \r\n      AND property.is_deleted = FALSE THEN TRUE \r\n    ELSE FALSE \r\n  END is_rental_published,\r\n  CASE \r\n    WHEN  details_sales.status IN ('published','republished') \r\n      AND property.for_sale \r\n      AND property.is_deleted = FALSE THEN TRUE \r\n    ELSE FALSE \r\n  END is_sales_published \r\nFROM {{ ref('proc_properties') }} AS property\r\nLEFT JOIN {{ ref('stg_propertydetails') }} AS details_rentals \r\n  ON property.id = details_rentals.property_id \r\nLEFT JOIN {{ ref('stg_property_salesdetails') }} AS details_sales\r\n  ON property.id = details_sales.property_id  \r\nINNER JOIN {{ref('proc_properties_mz')}} AS prop_mz\r\n  ON property.id = prop_mz.property_id \r\n)\r\n\r\nSELECT \r\n  *\r\nFROM prop_status_business \r\nWHERE TRUE \r\n  AND (is_rental_published = TRUE OR is_sales_published = TRUE)", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/properties_published.sql", "original_file_path": "models/dwh/marts/supply/properties_published.sql", "name": "properties_published", "alias": "properties_published", "checksum": {"name": "sha256", "checksum": "c264278aec75e3fdc365d1b34d70638c602d6498565075a956aa617cb69fde53"}, "tags": ["dw", "marts", "supply"], "refs": [["proc_properties"], ["stg_propertydetails"], ["stg_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/dwh/marts/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/marts/supply/properties_published.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970038.726814, "compiled_code": "\n\nWITH prop_status_business AS (\nSELECT \n  property.id AS property_id,\n  details_rentals.status AS rental_status, \n  details_sales.status AS sales_status, \n  property.*, \n  CASE \n    WHEN  details_rentals.status IN ('published','republished') \n      AND property.for_rental \n      AND property.is_deleted = FALSE THEN TRUE \n    ELSE FALSE \n  END is_rental_published,\n  CASE \n    WHEN  details_sales.status IN ('published','republished') \n      AND property.for_sale \n      AND property.is_deleted = FALSE THEN TRUE \n    ELSE FALSE \n  END is_sales_published \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS property\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS details_rentals \n  ON property.id = details_rentals.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\" AS details_sales\n  ON property.id = details_sales.property_id  \nINNER JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n  ON property.id = prop_mz.property_id \n)\n\nSELECT \n  *\nFROM prop_status_business \nWHERE TRUE \n  AND (is_rental_published = TRUE OR is_sales_published = TRUE)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"properties_published\""}, "model.houm.rental_landlord_metric_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "name": "rental_landlord_metric_leads_qualified", "alias": "rental_landlord_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "da7a2dbc304913b8c1e526ca186dd73975fb818b5a26ca5fa804e1998dc8a672"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9212239, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\""}, "model.houm.rental_landlord_metric_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_subs"], "unique_id": "model.houm.rental_landlord_metric_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_subs.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_subs.sql", "name": "rental_landlord_metric_subs", "alias": "rental_landlord_metric_subs", "checksum": {"name": "sha256", "checksum": "d6fea3b49ad55d9a7d6060d2a9d138d5b6c0e8dbfacde6109487719950c2513b"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9252522, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_subs\""}, "model.houm.property_finder_rentals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_core_properties", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "property_finder_rentals"], "unique_id": "model.houm.property_finder_rentals", "raw_code": "{{ config(materialized='table') }}\n\nWITH published_properties AS (\nSELECT \n\t*\nFROM {{ ref('proc_core_properties')}} AS prop\nWHERE TRUE \n\tAND is_rental_published\n\tAND is_deleted = FALSE \n)\n\n, rental_properties AS (\nSELECT \n\tprop.property_id,\n\tprop.uid,\n\tprop.rental_last_publication_date AS last_publication_date, \n\tEXTRACT('day' from ('{{ var(\"processed_time\") }}'::timestamp - prop.rental_last_publication_date ) ) AS published_days,\n\n\tprop.country, \n\tprop.city, \n\tprop.commune,\n\tprop.neighborhood,\n\tprop.stratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n\tmacrozone_city,\n\n\tprop.supply_source,\n    prop.supply_relation, \n\n\tprop.has_third_party_coordination,\n\tprop.has_houm_box,\n\tprop.is_inhabited,\t\t\n\t\n\tprop.sales_status,\n\tprop.is_sales_published,\n\tprop.sales_currency, \n\tprop.sales_price,\n\tprop.sales_local_currency, \n\tprop.sales_local_price,\n\t\n\tprop.rental_status, \n\tprop.rental_status = 'rented' AS is_rented,\n\tprop.is_rental_published,\n\tprop.rental_currency, \n\tprop.rental_price,\n\tprop.rental_local_currency, \n\tprop.rental_local_price,\n\t\n\tprop.common_expenses,\n\tprop.type,\n\tprop.tipology, \n\tprop.has_video,\n\tprop.has_video360, \n\n\tprop.bedrooms, \n\tprop.bathrooms, \n\tprop.parking_spots,\n\tprop.built_area, \n\tprop.total_area, \n\tprop.balcony_area,\n\tprop.has_loggia, \n\tprop.loggia_area, \n\tprop.apartment_floor,\n\tprop.building_floors,\n\tprop.orientation_esp,\n\t\n\tprop.is_pet_friendly, \n\tprop.is_furnished, \t\n\tprop.has_elevator,\t\n\tprop.has_warehouse_unit, \t\n\tprop.has_laundry_capacity, \t\n\tprop.has_laundry_room, \t\n\tprop.has_bbq_area, \n\tprop.has_swimming_pool, \t\n\tprop.has_gym, \t\n\tprop.has_bike_rack,\n\tprop.admin_url, \n\tprop.marketplace_url,\n\tprop.video360_url, \n\tprop.video_url,\n\tprop.latitude,\n\tprop.longitude,\n\t'{{ var(\"processed_time\") }}' AS processed_time \nFROM published_properties AS prop\nLEFT JOIN {{ ref('dim_macrozones')}} AS macrozone\n\tON prop.geo_id = macrozone.geo_id \n)\n\n\nSELECT\n\tproperty_id,\n\tuid,\n\tlast_publication_date, \n\tpublished_days,\n\t\n\tcountry, \n\tcity, \n\tcommune,\n\tneighborhood,\n\tstratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tsupply_source,\n    supply_relation, \n\n\thas_third_party_coordination,\n\tCASE \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tELSE ''\n\tEND AS has_third_party_coordination_front, \n\t\n\thas_houm_box, \n\tCASE \n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE ''\n\tEND has_houm_box_front,\n\tCASE \n\t\tWHEN has_houm_box AND has_third_party_coordination THEN '\ud83d\udec2 \ud83d\udd12' \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE '\u2b55\ufe0f'\n\tEND AS operational_category,\n\n\tis_inhabited,\n\tCASE \n\t\tWHEN is_inhabited THEN '\ud83d\udc6a'\n\t\tELSE ''\n\tEND AS is_inhabited_front, \n\t\n\tsales_status,\n\tis_sales_published,\n\tsales_currency, \n\tsales_price,\n\tsales_local_currency, \n\tsales_local_price,\n\t\n\trental_status, \n\tis_rented,\n\tis_rental_published,\n\trental_currency, \n\trental_price,\n\trental_local_currency, \n\trental_local_price,\n\t\n\tcommon_expenses,\n\n\tCASE type\n\t\tWHEN 'apartment' THEN 'Depto \ud83c\udfe2'\n\t\tELSE 'Casa \ud83c\udfe0'\n\tEND AS type_front, \n\t\n\ttipology, \n\thas_video360, \n\tCASE \n\t\tWHEN has_video360 THEN '\ud83c\udfa5'\n\t\tELSE ''\n\tEND has_video360_front,\n\thas_video,\n\tCASE \n\t\tWHEN has_video THEN '\ud83d\udcf9'\n\t\tELSE ''\n\tEND has_video_front,\n\tbedrooms, \n\tbathrooms, \n\tparking_spots,\n\tbuilt_area, \n\ttotal_area, \n\tbalcony_area,\n\thas_loggia, \n\tloggia_area, \n\tapartment_floor,\n\tbuilding_floors,\n\torientation_esp,\n\n\tis_furnished, \n\tCASE \n\t\tWHEN is_furnished THEN '\ud83d\udecb\ufe0f'\n\t\tELSE ''\n\tEND AS is_furnished_front, \n\t\n\thas_elevator,\n\tCASE\n\t\tWHEN has_elevator THEN '\u2b06\ufe0f'\n\t\tELSE ''\n\tEND AS has_elevator_front,\n\t\n\thas_warehouse_unit, \n\tCASE \n\t\tWHEN has_warehouse_unit THEN '\ud83d\udce6'\n\t\tELSE ''\n\tEND AS has_warehouse_unit_front, \n\t\n\thas_laundry_capacity, \n\tCASE \n\t\tWHEN has_laundry_capacity THEN '\ud83e\uddfc'\n\t\tELSE ''\n\tEND AS has_laundry_capacity_front,\n\t\n\thas_laundry_room, \n\tCASE \n\t\tWHEN has_laundry_room THEN '\ud83e\uddfa'\n\t\tELSE ''\n\tEND AS has_laundry_room_front,\n\t\n\tCASE \n\t\tWHEN has_laundry_capacity AND has_laundry_room THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc y Lavander\u00eda \ud83e\uddfa'\n\t\tWHEN has_laundry_capacity THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc'\n\t\tWHEN has_laundry_room THEN 'Lavander\u00eda\ud83e\uddfa'\n\tEND AS has_laundry_sistem, \n\n\thas_bbq_area, \n\tCASE \n\t\tWHEN has_bbq_area THEN '\ud83c\udf56'\n\t\tELSE ''\n\tEND AS has_bbq_area_front,\n\n\thas_swimming_pool, \n\tCASE \n\t\tWHEN has_swimming_pool THEN '\ud83c\udfca'\n\t\tELSE ''\n\tEND AS has_swimming_pool_front,\n\t\n\thas_gym, \n\tCASE \n\t\tWHEN has_gym THEN '\ud83c\udfcb'\n\t\tELSE ''\n\tEND AS has_gym_front,\n\t\n\thas_bike_rack,\n\tCASE \n\t\tWHEN has_bike_rack THEN '\ud83d\udeb4\ufe0f'\n\t\tELSE ''\n\tEND AS has_bike_rack_front,\n\n\tadmin_url, \n\tmarketplace_url,\n\tvideo360_url, \n\tvideo_url,\n\tlatitude,\n\tlongitude,\n\tprocessed_time \nFROM rental_properties", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/property_finder_rentals.sql", "original_file_path": "models/dwh/marts/supply/property_finder_rentals.sql", "name": "property_finder_rentals", "alias": "property_finder_rentals", "checksum": {"name": "sha256", "checksum": "27c9b75faa0ca480fc9092fede41f96a2fe58c0acf81e435f6fee372172abe62"}, "tags": ["dw", "marts", "supply"], "refs": [["proc_core_properties"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/property_finder_rentals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9291341, "compiled_code": "\n\nWITH published_properties AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_properties\" AS prop\nWHERE TRUE \n\tAND is_rental_published\n\tAND is_deleted = FALSE \n)\n\n, rental_properties AS (\nSELECT \n\tprop.property_id,\n\tprop.uid,\n\tprop.rental_last_publication_date AS last_publication_date, \n\tEXTRACT('day' from ('2023-02-09 16:13:54.685542-03:00'::timestamp - prop.rental_last_publication_date ) ) AS published_days,\n\n\tprop.country, \n\tprop.city, \n\tprop.commune,\n\tprop.neighborhood,\n\tprop.stratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n\tmacrozone_city,\n\n\tprop.supply_source,\n    prop.supply_relation, \n\n\tprop.has_third_party_coordination,\n\tprop.has_houm_box,\n\tprop.is_inhabited,\t\t\n\t\n\tprop.sales_status,\n\tprop.is_sales_published,\n\tprop.sales_currency, \n\tprop.sales_price,\n\tprop.sales_local_currency, \n\tprop.sales_local_price,\n\t\n\tprop.rental_status, \n\tprop.rental_status = 'rented' AS is_rented,\n\tprop.is_rental_published,\n\tprop.rental_currency, \n\tprop.rental_price,\n\tprop.rental_local_currency, \n\tprop.rental_local_price,\n\t\n\tprop.common_expenses,\n\tprop.type,\n\tprop.tipology, \n\tprop.has_video,\n\tprop.has_video360, \n\n\tprop.bedrooms, \n\tprop.bathrooms, \n\tprop.parking_spots,\n\tprop.built_area, \n\tprop.total_area, \n\tprop.balcony_area,\n\tprop.has_loggia, \n\tprop.loggia_area, \n\tprop.apartment_floor,\n\tprop.building_floors,\n\tprop.orientation_esp,\n\t\n\tprop.is_pet_friendly, \n\tprop.is_furnished, \t\n\tprop.has_elevator,\t\n\tprop.has_warehouse_unit, \t\n\tprop.has_laundry_capacity, \t\n\tprop.has_laundry_room, \t\n\tprop.has_bbq_area, \n\tprop.has_swimming_pool, \t\n\tprop.has_gym, \t\n\tprop.has_bike_rack,\n\tprop.admin_url, \n\tprop.marketplace_url,\n\tprop.video360_url, \n\tprop.video_url,\n\tprop.latitude,\n\tprop.longitude,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time \nFROM published_properties AS prop\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS macrozone\n\tON prop.geo_id = macrozone.geo_id \n)\n\n\nSELECT\n\tproperty_id,\n\tuid,\n\tlast_publication_date, \n\tpublished_days,\n\t\n\tcountry, \n\tcity, \n\tcommune,\n\tneighborhood,\n\tstratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tsupply_source,\n    supply_relation, \n\n\thas_third_party_coordination,\n\tCASE \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tELSE ''\n\tEND AS has_third_party_coordination_front, \n\t\n\thas_houm_box, \n\tCASE \n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE ''\n\tEND has_houm_box_front,\n\tCASE \n\t\tWHEN has_houm_box AND has_third_party_coordination THEN '\ud83d\udec2 \ud83d\udd12' \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE '\u2b55\ufe0f'\n\tEND AS operational_category,\n\n\tis_inhabited,\n\tCASE \n\t\tWHEN is_inhabited THEN '\ud83d\udc6a'\n\t\tELSE ''\n\tEND AS is_inhabited_front, \n\t\n\tsales_status,\n\tis_sales_published,\n\tsales_currency, \n\tsales_price,\n\tsales_local_currency, \n\tsales_local_price,\n\t\n\trental_status, \n\tis_rented,\n\tis_rental_published,\n\trental_currency, \n\trental_price,\n\trental_local_currency, \n\trental_local_price,\n\t\n\tcommon_expenses,\n\n\tCASE type\n\t\tWHEN 'apartment' THEN 'Depto \ud83c\udfe2'\n\t\tELSE 'Casa \ud83c\udfe0'\n\tEND AS type_front, \n\t\n\ttipology, \n\thas_video360, \n\tCASE \n\t\tWHEN has_video360 THEN '\ud83c\udfa5'\n\t\tELSE ''\n\tEND has_video360_front,\n\thas_video,\n\tCASE \n\t\tWHEN has_video THEN '\ud83d\udcf9'\n\t\tELSE ''\n\tEND has_video_front,\n\tbedrooms, \n\tbathrooms, \n\tparking_spots,\n\tbuilt_area, \n\ttotal_area, \n\tbalcony_area,\n\thas_loggia, \n\tloggia_area, \n\tapartment_floor,\n\tbuilding_floors,\n\torientation_esp,\n\n\tis_furnished, \n\tCASE \n\t\tWHEN is_furnished THEN '\ud83d\udecb\ufe0f'\n\t\tELSE ''\n\tEND AS is_furnished_front, \n\t\n\thas_elevator,\n\tCASE\n\t\tWHEN has_elevator THEN '\u2b06\ufe0f'\n\t\tELSE ''\n\tEND AS has_elevator_front,\n\t\n\thas_warehouse_unit, \n\tCASE \n\t\tWHEN has_warehouse_unit THEN '\ud83d\udce6'\n\t\tELSE ''\n\tEND AS has_warehouse_unit_front, \n\t\n\thas_laundry_capacity, \n\tCASE \n\t\tWHEN has_laundry_capacity THEN '\ud83e\uddfc'\n\t\tELSE ''\n\tEND AS has_laundry_capacity_front,\n\t\n\thas_laundry_room, \n\tCASE \n\t\tWHEN has_laundry_room THEN '\ud83e\uddfa'\n\t\tELSE ''\n\tEND AS has_laundry_room_front,\n\t\n\tCASE \n\t\tWHEN has_laundry_capacity AND has_laundry_room THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc y Lavander\u00eda \ud83e\uddfa'\n\t\tWHEN has_laundry_capacity THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc'\n\t\tWHEN has_laundry_room THEN 'Lavander\u00eda\ud83e\uddfa'\n\tEND AS has_laundry_sistem, \n\n\thas_bbq_area, \n\tCASE \n\t\tWHEN has_bbq_area THEN '\ud83c\udf56'\n\t\tELSE ''\n\tEND AS has_bbq_area_front,\n\n\thas_swimming_pool, \n\tCASE \n\t\tWHEN has_swimming_pool THEN '\ud83c\udfca'\n\t\tELSE ''\n\tEND AS has_swimming_pool_front,\n\t\n\thas_gym, \n\tCASE \n\t\tWHEN has_gym THEN '\ud83c\udfcb'\n\t\tELSE ''\n\tEND AS has_gym_front,\n\t\n\thas_bike_rack,\n\tCASE \n\t\tWHEN has_bike_rack THEN '\ud83d\udeb4\ufe0f'\n\t\tELSE ''\n\tEND AS has_bike_rack_front,\n\n\tadmin_url, \n\tmarketplace_url,\n\tvideo360_url, \n\tvideo_url,\n\tlatitude,\n\tlongitude,\n\tprocessed_time \nFROM rental_properties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"property_finder_rentals\""}, "model.houm.property_finder_sales": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_core_properties", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "property_finder_sales"], "unique_id": "model.houm.property_finder_sales", "raw_code": "{{ config(materialized='table') }}\n\nWITH published_properties AS (\nSELECT \n\t*\nFROM {{ ref('proc_core_properties')}} AS prop\nWHERE TRUE \n\tAND is_sales_published\n\tAND is_deleted = FALSE \n)\n\n, sales_properties AS (\nSELECT \n\tprop.property_id,\n\tprop.uid,\n\tprop.sales_last_publication_date AS last_publication_date, \n\tEXTRACT('day' from ('{{ var(\"processed_time\") }}'::timestamp - prop.sales_last_publication_date ) ) AS published_days,\n\n\tprop.country, \n\tprop.city, \n\tprop.commune,\n\tprop.neighborhood,\n\tprop.stratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tprop.supply_source,\n    prop.supply_relation, \n\n\tprop.has_third_party_coordination,\n\tprop.has_houm_box,\n\tprop.is_inhabited,\t\t\n\t\n\tprop.sales_status,\n\tprop.is_sales_published,\n\tprop.sales_currency, \n\tprop.sales_price,\n\tprop.sales_local_currency, \n\tprop.sales_local_price,\n\t\n\tprop.rental_status, \n\tprop.rental_status = 'rented' AS is_rented,\n\tprop.is_rental_published,\n\tprop.rental_currency, \n\tprop.rental_price,\n\tprop.rental_local_currency, \n\tprop.rental_local_price,\n\t\n\tprop.common_expenses,\n\tprop.type,\n\tprop.tipology, \n\tprop.has_video,\n\tprop.has_video360, \n\n\tprop.bedrooms, \n\tprop.bathrooms, \n\tprop.parking_spots,\n\tprop.built_area, \n\tprop.total_area, \n\tprop.balcony_area,\n\tprop.has_loggia, \n\tprop.loggia_area, \n\tprop.apartment_floor,\n\tprop.building_floors,\n\tprop.orientation_esp,\n\t\n\tprop.is_pet_friendly, \n\tprop.is_furnished, \t\n\tprop.has_elevator,\t\n\tprop.has_warehouse_unit, \t\n\tprop.has_laundry_capacity, \t\n\tprop.has_laundry_room, \t\n\tprop.has_bbq_area, \n\tprop.has_swimming_pool, \t\n\tprop.has_gym, \t\n\tprop.has_bike_rack,\n\tprop.admin_url, \n\tprop.marketplace_url,\n\tprop.video360_url, \n\tprop.video_url,\n\tprop.latitude,\n\tprop.longitude,\n\t'{{ var(\"processed_time\") }}' AS processed_time \nFROM published_properties AS prop\nLEFT JOIN {{ ref('dim_macrozones')}} AS macrozone\n\tON prop.geo_id = macrozone.geo_id \n)\n\n\nSELECT\n\tproperty_id,\n\tuid,\n\tlast_publication_date, \n\tpublished_days,\n\t\n\tcountry, \n\tcity, \n\tcommune,\n\tneighborhood,\n\tstratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tsupply_source,\n    supply_relation, \n\n\thas_third_party_coordination,\n\tCASE \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tELSE ''\n\tEND AS has_third_party_coordination_front, \n\t\n\thas_houm_box, \n\tCASE \n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE ''\n\tEND has_houm_box_front,\n\tCASE \n\t\tWHEN has_houm_box AND has_third_party_coordination THEN '\ud83d\udec2 \ud83d\udd12' \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE '\u2b55\ufe0f'\n\tEND AS operational_category,\n\n\tis_inhabited,\n\tCASE \n\t\tWHEN is_inhabited THEN '\ud83d\udc6a'\n\t\tELSE ''\n\tEND AS is_inhabited_front, \n\t\n\tsales_status,\n\tis_sales_published,\n\tsales_currency, \n\tsales_price,\n\tsales_local_currency, \n\tsales_local_price,\n\t\n\trental_status, \n\tis_rented,\n\tis_rental_published,\n\trental_currency, \n\trental_price,\n\trental_local_currency, \n\trental_local_price,\n\t\n\tcommon_expenses,\n\n\tCASE type\n\t\tWHEN 'apartment' THEN 'Depto \ud83c\udfe2'\n\t\tELSE 'Casa \ud83c\udfe0'\n\tEND AS type_front, \n\t\n\ttipology, \n\thas_video360, \n\tCASE \n\t\tWHEN has_video360 THEN '\ud83c\udfa5'\n\t\tELSE ''\n\tEND has_video360_front,\n\thas_video,\n\tCASE \n\t\tWHEN has_video THEN '\ud83d\udcf9'\n\t\tELSE ''\n\tEND has_video_front,\n\tbedrooms, \n\tbathrooms, \n\tparking_spots,\n\tbuilt_area, \n\ttotal_area, \n\tbalcony_area,\n\thas_loggia, \n\tloggia_area, \n\tapartment_floor,\n\tbuilding_floors,\n\torientation_esp,\n\n\tis_furnished, \n\tCASE \n\t\tWHEN is_furnished THEN '\ud83d\udecb\ufe0f'\n\t\tELSE ''\n\tEND AS is_furnished_front, \n\t\n\thas_elevator,\n\tCASE\n\t\tWHEN has_elevator THEN '\u2b06\ufe0f'\n\t\tELSE ''\n\tEND AS has_elevator_front,\n\t\n\thas_warehouse_unit, \n\tCASE \n\t\tWHEN has_warehouse_unit THEN '\ud83d\udce6'\n\t\tELSE ''\n\tEND AS has_warehouse_unit_front, \n\t\n\thas_laundry_capacity, \n\tCASE \n\t\tWHEN has_laundry_capacity THEN '\ud83e\uddfc'\n\t\tELSE ''\n\tEND AS has_laundry_capacity_front,\n\t\n\thas_laundry_room, \n\tCASE \n\t\tWHEN has_laundry_room THEN '\ud83e\uddfa'\n\t\tELSE ''\n\tEND AS has_laundry_room_front,\n\t\n\tCASE \n\t\tWHEN has_laundry_capacity AND has_laundry_room THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc y Lavander\u00eda \ud83e\uddfa'\n\t\tWHEN has_laundry_capacity THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc'\n\t\tWHEN has_laundry_room THEN 'Lavander\u00eda\ud83e\uddfa'\n\tEND AS has_laundry_sistem, \n\n\thas_bbq_area, \n\tCASE \n\t\tWHEN has_bbq_area THEN '\ud83c\udf56'\n\t\tELSE ''\n\tEND AS has_bbq_area_front,\n\n\thas_swimming_pool, \n\tCASE \n\t\tWHEN has_swimming_pool THEN '\ud83c\udfca'\n\t\tELSE ''\n\tEND AS has_swimming_pool_front,\n\t\n\thas_gym, \n\tCASE \n\t\tWHEN has_gym THEN '\ud83c\udfcb'\n\t\tELSE ''\n\tEND AS has_gym_front,\n\t\n\thas_bike_rack,\n\tCASE \n\t\tWHEN has_bike_rack THEN '\ud83d\udeb4\ufe0f'\n\t\tELSE ''\n\tEND AS has_bike_rack_front,\n\n\tadmin_url, \n\tmarketplace_url,\n\tvideo360_url, \n\tvideo_url,\n\tlatitude,\n\tlongitude,\n\tprocessed_time \nFROM sales_properties", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/property_finder_sales.sql", "original_file_path": "models/dwh/marts/supply/property_finder_sales.sql", "name": "property_finder_sales", "alias": "property_finder_sales", "checksum": {"name": "sha256", "checksum": "247f7bcd9caea504ca292503e1a38302e71e5896a08bc2ebba4124473a16a6e6"}, "tags": ["dw", "marts", "supply"], "refs": [["proc_core_properties"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/property_finder_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.935298, "compiled_code": "\n\nWITH published_properties AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_properties\" AS prop\nWHERE TRUE \n\tAND is_sales_published\n\tAND is_deleted = FALSE \n)\n\n, sales_properties AS (\nSELECT \n\tprop.property_id,\n\tprop.uid,\n\tprop.sales_last_publication_date AS last_publication_date, \n\tEXTRACT('day' from ('2023-02-09 16:13:54.685542-03:00'::timestamp - prop.sales_last_publication_date ) ) AS published_days,\n\n\tprop.country, \n\tprop.city, \n\tprop.commune,\n\tprop.neighborhood,\n\tprop.stratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tprop.supply_source,\n    prop.supply_relation, \n\n\tprop.has_third_party_coordination,\n\tprop.has_houm_box,\n\tprop.is_inhabited,\t\t\n\t\n\tprop.sales_status,\n\tprop.is_sales_published,\n\tprop.sales_currency, \n\tprop.sales_price,\n\tprop.sales_local_currency, \n\tprop.sales_local_price,\n\t\n\tprop.rental_status, \n\tprop.rental_status = 'rented' AS is_rented,\n\tprop.is_rental_published,\n\tprop.rental_currency, \n\tprop.rental_price,\n\tprop.rental_local_currency, \n\tprop.rental_local_price,\n\t\n\tprop.common_expenses,\n\tprop.type,\n\tprop.tipology, \n\tprop.has_video,\n\tprop.has_video360, \n\n\tprop.bedrooms, \n\tprop.bathrooms, \n\tprop.parking_spots,\n\tprop.built_area, \n\tprop.total_area, \n\tprop.balcony_area,\n\tprop.has_loggia, \n\tprop.loggia_area, \n\tprop.apartment_floor,\n\tprop.building_floors,\n\tprop.orientation_esp,\n\t\n\tprop.is_pet_friendly, \n\tprop.is_furnished, \t\n\tprop.has_elevator,\t\n\tprop.has_warehouse_unit, \t\n\tprop.has_laundry_capacity, \t\n\tprop.has_laundry_room, \t\n\tprop.has_bbq_area, \n\tprop.has_swimming_pool, \t\n\tprop.has_gym, \t\n\tprop.has_bike_rack,\n\tprop.admin_url, \n\tprop.marketplace_url,\n\tprop.video360_url, \n\tprop.video_url,\n\tprop.latitude,\n\tprop.longitude,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time \nFROM published_properties AS prop\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS macrozone\n\tON prop.geo_id = macrozone.geo_id \n)\n\n\nSELECT\n\tproperty_id,\n\tuid,\n\tlast_publication_date, \n\tpublished_days,\n\t\n\tcountry, \n\tcity, \n\tcommune,\n\tneighborhood,\n\tstratus,\n\t\n\tmacrozone_country, \n\tmacrozone_region,\n    macrozone_city,\n\n\tsupply_source,\n    supply_relation, \n\n\thas_third_party_coordination,\n\tCASE \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tELSE ''\n\tEND AS has_third_party_coordination_front, \n\t\n\thas_houm_box, \n\tCASE \n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE ''\n\tEND has_houm_box_front,\n\tCASE \n\t\tWHEN has_houm_box AND has_third_party_coordination THEN '\ud83d\udec2 \ud83d\udd12' \n\t\tWHEN has_third_party_coordination THEN '\ud83d\udec2'\n\t\tWHEN has_houm_box THEN '\ud83d\udd12'\n\t\tELSE '\u2b55\ufe0f'\n\tEND AS operational_category,\n\n\tis_inhabited,\n\tCASE \n\t\tWHEN is_inhabited THEN '\ud83d\udc6a'\n\t\tELSE ''\n\tEND AS is_inhabited_front, \n\t\n\tsales_status,\n\tis_sales_published,\n\tsales_currency, \n\tsales_price,\n\tsales_local_currency, \n\tsales_local_price,\n\t\n\trental_status, \n\tis_rented,\n\tis_rental_published,\n\trental_currency, \n\trental_price,\n\trental_local_currency, \n\trental_local_price,\n\t\n\tcommon_expenses,\n\n\tCASE type\n\t\tWHEN 'apartment' THEN 'Depto \ud83c\udfe2'\n\t\tELSE 'Casa \ud83c\udfe0'\n\tEND AS type_front, \n\t\n\ttipology, \n\thas_video360, \n\tCASE \n\t\tWHEN has_video360 THEN '\ud83c\udfa5'\n\t\tELSE ''\n\tEND has_video360_front,\n\thas_video,\n\tCASE \n\t\tWHEN has_video THEN '\ud83d\udcf9'\n\t\tELSE ''\n\tEND has_video_front,\n\tbedrooms, \n\tbathrooms, \n\tparking_spots,\n\tbuilt_area, \n\ttotal_area, \n\tbalcony_area,\n\thas_loggia, \n\tloggia_area, \n\tapartment_floor,\n\tbuilding_floors,\n\torientation_esp,\n\n\tis_furnished, \n\tCASE \n\t\tWHEN is_furnished THEN '\ud83d\udecb\ufe0f'\n\t\tELSE ''\n\tEND AS is_furnished_front, \n\t\n\thas_elevator,\n\tCASE\n\t\tWHEN has_elevator THEN '\u2b06\ufe0f'\n\t\tELSE ''\n\tEND AS has_elevator_front,\n\t\n\thas_warehouse_unit, \n\tCASE \n\t\tWHEN has_warehouse_unit THEN '\ud83d\udce6'\n\t\tELSE ''\n\tEND AS has_warehouse_unit_front, \n\t\n\thas_laundry_capacity, \n\tCASE \n\t\tWHEN has_laundry_capacity THEN '\ud83e\uddfc'\n\t\tELSE ''\n\tEND AS has_laundry_capacity_front,\n\t\n\thas_laundry_room, \n\tCASE \n\t\tWHEN has_laundry_room THEN '\ud83e\uddfa'\n\t\tELSE ''\n\tEND AS has_laundry_room_front,\n\t\n\tCASE \n\t\tWHEN has_laundry_capacity AND has_laundry_room THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc y Lavander\u00eda \ud83e\uddfa'\n\t\tWHEN has_laundry_capacity THEN 'Conexi\u00f3n Lavadora \ud83e\uddfc'\n\t\tWHEN has_laundry_room THEN 'Lavander\u00eda\ud83e\uddfa'\n\tEND AS has_laundry_sistem, \n\n\thas_bbq_area, \n\tCASE \n\t\tWHEN has_bbq_area THEN '\ud83c\udf56'\n\t\tELSE ''\n\tEND AS has_bbq_area_front,\n\n\thas_swimming_pool, \n\tCASE \n\t\tWHEN has_swimming_pool THEN '\ud83c\udfca'\n\t\tELSE ''\n\tEND AS has_swimming_pool_front,\n\t\n\thas_gym, \n\tCASE \n\t\tWHEN has_gym THEN '\ud83c\udfcb'\n\t\tELSE ''\n\tEND AS has_gym_front,\n\t\n\thas_bike_rack,\n\tCASE \n\t\tWHEN has_bike_rack THEN '\ud83d\udeb4\ufe0f'\n\t\tELSE ''\n\tEND AS has_bike_rack_front,\n\n\tadmin_url, \n\tmarketplace_url,\n\tvideo360_url, \n\tvideo_url,\n\tlatitude,\n\tlongitude,\n\tprocessed_time \nFROM sales_properties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"property_finder_sales\""}, "model.houm.rental_landlord_metric_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_subs"], "unique_id": "model.houm.rental_landlord_metric_new_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_new_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_subs.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_subs.sql", "name": "rental_landlord_metric_new_subs", "alias": "rental_landlord_metric_new_subs", "checksum": {"name": "sha256", "checksum": "b0a01cbd93ac4ff505ec46e4cd68a7f0c4456bf014375ab2c8f0a4804a330e79"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.941262, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs\""}, "model.houm.rental_landlord_metric_photo_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_photo_scheduled", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "name": "rental_landlord_metric_photo_scheduled", "alias": "rental_landlord_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "716c9f1df6fe59f5813be45d1fddb7988ba57f928f3624f729974a807e37a3d7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9452128, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified_date", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "name": "rental_landlord_metric_leads_qualified_date", "alias": "rental_landlord_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "faa76e50a08b88bc88c1b0e2050dca429f4a008c1950674e548c49d633e50896"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9490821, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\""}, "model.houm.rental_landlord_metric_new_rental_listing_b2c": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing_b2c", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_new_rental_listing_b2c') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_new_rental_listing_b2c", "alias": "rental_landlord_metric_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "ce73738ae3ab5aba8ce47dbdd779517fdf3e4374510e637f2ffc006ad8161bdf"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing_b2c"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.953706, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_photo_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_created"], "unique_id": "model.houm.rental_landlord_metric_photo_created", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "name": "rental_landlord_metric_photo_created", "alias": "rental_landlord_metric_photo_created", "checksum": {"name": "sha256", "checksum": "a24242cd5867cad2b23065a963b2a6818d77e2ba96e2d7e83d2ff174e14871f7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9575438, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\""}, "model.houm.sales_seller_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "name": "sales_seller_metric_paid_media_cost", "alias": "sales_seller_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "30e0eeb6863267621866dfbbc57bb8250b8210225f289e4df20df7fd488f1ef7"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9615119, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\""}, "model.houm.rental_landlord_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads"], "unique_id": "model.houm.rental_landlord_metric_leads", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads.sql", "name": "rental_landlord_metric_leads", "alias": "rental_landlord_metric_leads", "checksum": {"name": "sha256", "checksum": "73ad210bc9700df23a7cf7648fe735a2b864c3718ae4fe024778e6289e9514d7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.965308, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\""}, "model.houm.sales_seller_metric_photo_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_created"], "unique_id": "model.houm.sales_seller_metric_photo_created", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "name": "sales_seller_metric_photo_created", "alias": "sales_seller_metric_photo_created", "checksum": {"name": "sha256", "checksum": "fe30d1e68a6bb3c84a9dab8084c529d7cd1bb2bbef21056abefa26df2a5ffafe"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9692538, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\""}, "model.houm.sales_seller_metric_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_done"], "unique_id": "model.houm.sales_seller_metric_photo_done", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "name": "sales_seller_metric_photo_done", "alias": "sales_seller_metric_photo_done", "checksum": {"name": "sha256", "checksum": "aac3108cac20c82a2b35bd2a0f5e21e225914d064fdf23f8b75c79f7e9611057"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.973047, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\""}, "model.houm.rental_landlord_metric_new_rental_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_new_rental_listing') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "name": "rental_landlord_metric_new_rental_listing", "alias": "rental_landlord_metric_new_rental_listing", "checksum": {"name": "sha256", "checksum": "c769749d5de2e85a0b80a720038f452f31741e973877e9870afbba7600940f22"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.976981, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\""}, "model.houm.sales_seller_metric_new_sale_listing_b2c": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing_b2c", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_new_sale_listing_b2c') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "name": "sales_seller_metric_new_sale_listing_b2c", "alias": "sales_seller_metric_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "01ea04b555aadf666080d9ba75ff13ab1cda3fef9b082c7f178d86edd1c5f78f"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing_b2c"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9808419, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\""}, "model.houm.sales_seller_metric_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_leads_qualified", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "name": "sales_seller_metric_leads_qualified", "alias": "sales_seller_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "ef7da62573562bff04d0ef5b25197256eaa96830b6f560c693785c775ee18fc2"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.9855602, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\""}, "model.houm.rental_landlord_metric_new_subs_non_brokerage": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_subs_non_brokerage"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_subs_non_brokerage"], "unique_id": "model.houm.rental_landlord_metric_new_subs_non_brokerage", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_new_subs_non_brokerage') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_subs_non_brokerage.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_subs_non_brokerage.sql", "name": "rental_landlord_metric_new_subs_non_brokerage", "alias": "rental_landlord_metric_new_subs_non_brokerage", "checksum": {"name": "sha256", "checksum": "0d0bd906ab7ed0c2128c1d55db2ea11eca7b9b231ca500df84f4ebdf4a10dee2"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_subs_non_brokerage"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_subs_non_brokerage.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1675970035.989394, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs_non_brokerage\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs_non_brokerage\""}, "model.houm.temp_rental_tenant_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_lead_activities", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_leads"], "unique_id": "model.houm.temp_rental_tenant_metric_leads", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Unique Tenant Lead' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   lead_id,\n   created_at_utc::DATE\nFROM {{ref('proc_demand_lead_activities')}}\nWHERE TRUE \n   AND business_type = 'rentals'\n   AND source IS NOT NULL\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.lead_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'lead_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_leads.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_leads.sql", "name": "temp_rental_tenant_metric_leads", "alias": "temp_rental_tenant_metric_leads", "checksum": {"name": "sha256", "checksum": "d96979a45f53a8b9c4d65e2dd309357591225f0c4c7f3cb2137960f2a814f805"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_lead_activities"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970035.99323, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Unique Tenant Lead'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   lead_id,\n   created_at_utc::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\"\nWHERE TRUE \n   AND business_type = 'rentals'\n   AND source IS NOT NULL\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.lead_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT lead_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads\""}, "model.houm.temp_rental_tenant_metric_reservations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_reservations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_reservations"], "unique_id": "model.houm.temp_rental_tenant_metric_reservations", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Reservations' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM {{ref('proc_demand_reservations')}}\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_reservations.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_reservations.sql", "name": "temp_rental_tenant_metric_reservations", "alias": "temp_rental_tenant_metric_reservations", "checksum": {"name": "sha256", "checksum": "fd7a7200d98f7663ca9ec2749e870451e4a47dfe78c1a62ca0400ced57c0f56c"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_reservations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.019787, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Reservations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations\""}, "model.houm.temp_rental_tenant_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_marketing_paid_media", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_paid_media_cost"], "unique_id": "model.houm.temp_rental_tenant_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Paid Media Cost (USD) - Tenant' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   day_cost_usd,\n   executed_at::DATE \nFROM {{ref('proc_marketing_paid_media')}}\nWHERE TRUE\n   AND geo_id IS NOT NULL\n   AND business_marketing = 'Tenant'\n   AND funnel_marketing = 'Demand'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.day_cost_usd\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.executed_at = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_paid_media_cost.sql", "name": "temp_rental_tenant_metric_paid_media_cost", "alias": "temp_rental_tenant_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "8420b57dee73c3e6f89085f81a0def93d2d32989ecf50f6fdabf01a34344e0c8"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_marketing_paid_media"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.037049, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Paid Media Cost (USD) - Tenant'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   day_cost_usd,\n   executed_at::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\"\nWHERE TRUE\n   AND geo_id IS NOT NULL\n   AND business_marketing = 'Tenant'\n   AND funnel_marketing = 'Demand'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.day_cost_usd\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.executed_at = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    SUM(DISTINCT day_cost_usd) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_paid_media_cost\""}, "model.houm.temp_rental_tenant_metric_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_done"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Visit Done' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE \nFROM {{ref('proc_demand_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND status = 'Done'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_done.sql", "name": "temp_rental_tenant_metric_schedules_done", "alias": "temp_rental_tenant_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "20fdd7e1eb3bda163394f4708c56529b0a7d217836c6c06b4b1d3f4bd0286a70"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.053471, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Visit Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND status = 'Done'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_done\""}, "model.houm.temp_rental_landlord_metric_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_landlord_leads", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_leads_qualified_date"], "unique_id": "model.houm.temp_rental_landlord_metric_leads_qualified_date", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Unique Landlord Hot Qualified Leads' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   supply_qualification_date\nFROM {{ref('proc_supply_landlord_leads')}}\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND supply_qualification in (3,4,5,6)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.supply_qualification_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified_date.sql", "name": "temp_rental_landlord_metric_leads_qualified_date", "alias": "temp_rental_landlord_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "1691203cd37b68e903ecd01c699f207c2298a94a56b8877cf559916acbb6f673"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_landlord_leads"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.070459, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Unique Landlord Hot Qualified Leads'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   supply_qualification_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\"\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND supply_qualification in (3,4,5,6)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.supply_qualification_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_qualified_date\""}, "model.houm.temp_rental_tenant_metric_new_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_subs", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_new_tenant"], "unique_id": "model.houm.temp_rental_tenant_metric_new_tenant", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'New Tenant' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   sub_id,\n   sub_payment_date_local\nFROM {{ref('proc_closure_subs')}}\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.sub_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.sub_payment_date_local = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_new_tenant.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_new_tenant.sql", "name": "temp_rental_tenant_metric_new_tenant", "alias": "temp_rental_tenant_metric_new_tenant", "checksum": {"name": "sha256", "checksum": "86f92fa6d77f0b6890302461b0b7fd3b494942b94efb1886a41a99055d0404fb"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_subs"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.086839, "compiled_code": "    \nWITH base AS (\nSELECT \n    'New Tenant'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   sub_id,\n   sub_payment_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.sub_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.sub_payment_date_local = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_tenant\""}, "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_schedules_timing", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_correct_visit_done"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Correct Visit Done' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE \nFROM {{ref('proc_demand_schedules_timing')}}\nWHERE TRUE\n   AND schedule_type_name= 'Visit' \n   AND is_dummy = FALSE\n   AND roles::text LIKE '%RentGuide%'\n   AND status = 'Done'\n   -- puntualidad\n   AND begin_date >= arrived_date\n   AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n   AND ST_Distance(property_point , arrived_point) <=500  \n   AND end_date >= done_date\n   -- terminada a la hora \n   AND done_date >= DATEADD(min, 5, start_date::timestamp)\n   AND done_date <= DATEADD(min, 120, start_date::timestamp)\n   AND ST_Distance(property_point , done_point) <=500\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_correct_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_correct_visit_done.sql", "name": "temp_rental_tenant_metric_schedules_correct_visit_done", "alias": "temp_rental_tenant_metric_schedules_correct_visit_done", "checksum": {"name": "sha256", "checksum": "123e3119124b64798d7af0eb216b230816b2cef89bbb4a976f76926694689d61"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_schedules_timing"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.103145, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Correct Visit Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\nWHERE TRUE\n   AND schedule_type_name= 'Visit' \n   AND is_dummy = FALSE\n   AND roles::text LIKE '%RentGuide%'\n   AND status = 'Done'\n   -- puntualidad\n   AND begin_date >= arrived_date\n   AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n   AND ST_Distance(property_point , arrived_point) <=500  \n   AND end_date >= done_date\n   -- terminada a la hora \n   AND done_date >= DATEADD(min, 5, start_date::timestamp)\n   AND done_date <= DATEADD(min, 120, start_date::timestamp)\n   AND ST_Distance(property_point , done_point) <=500\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_correct_visit_done\""}, "model.houm.metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_total_eval", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_refunded", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_sales_seller_metric_properties_stock", "model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "metrics"], "unique_id": "model.houm.metrics", "raw_code": "{{ config(materialized='table') }}\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_created')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_scheduled')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_ratio_done_scheduled')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_first_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_second_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_third_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_schedules_correct_visit_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_landlord_metric_photo_created')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_landlord_metric_photo_scheduled')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_landlord_metric_photo_done')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_landlord_metric_photo_ratio_done_scheduled')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_leads_interactions')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_leads_interactions_markethoum')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_leads_interactions_portalapplicants')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_leads_interactions_whatsapp')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_leads')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_total_eval')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_approved_eval')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_ongoing_eval')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_rejected_eval')}}\nUNION ALL\nSELECT\n    *\nFROM {{ref('temp_rental_tenant_metric_lost_eval')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_reservations')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_reservations_effective')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_reservations_refunded')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_reservations_ratio_effective_total')}}\nUNION ALL\nSELECT \n    *   \nFROM {{ref('temp_rental_tenant_metric_reservations_ratio_total_visit_done')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_new_tenant')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_new_subs')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_paid_media_cost')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_mkt_ratio_pmc_visit_done')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_tenant_metric_mkt_ratio_pmc_new_subs')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_landlord_metric_properties_stock')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_sales_seller_metric_properties_stock')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_landlord_metric_leads')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_landlord_metric_leads_qualified')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_landlord_metric_leads_qualified_date')}}\nUNION ALL\nSELECT \n    *\nFROM {{ref('temp_rental_landlord_metric_leads_ratio_qualified_leads')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/metrics.sql", "original_file_path": "models/dwh/marts/kpi/metrics.sql", "name": "metrics", "alias": "metrics", "checksum": {"name": "sha256", "checksum": "4def52bc7033a6fdebb96f1b7160a7ba7bfd140f5ef9f9f35c39d02efe824b36"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_schedules_created"], ["temp_rental_tenant_metric_schedules_scheduled"], ["temp_rental_tenant_metric_schedules_done"], ["temp_rental_tenant_metric_schedules_ratio_done_scheduled"], ["temp_rental_tenant_metric_schedules_first_done"], ["temp_rental_tenant_metric_schedules_second_done"], ["temp_rental_tenant_metric_schedules_third_done"], ["temp_rental_tenant_metric_schedules_correct_visit_done"], ["temp_rental_landlord_metric_photo_created"], ["temp_rental_landlord_metric_photo_scheduled"], ["temp_rental_landlord_metric_photo_done"], ["temp_rental_landlord_metric_photo_ratio_done_scheduled"], ["temp_rental_tenant_metric_leads_interactions"], ["temp_rental_tenant_metric_leads_interactions_markethoum"], ["temp_rental_tenant_metric_leads_interactions_portalapplicants"], ["temp_rental_tenant_metric_leads_interactions_whatsapp"], ["temp_rental_tenant_metric_leads"], ["temp_rental_tenant_metric_total_eval"], ["temp_rental_tenant_metric_approved_eval"], ["temp_rental_tenant_metric_ongoing_eval"], ["temp_rental_tenant_metric_rejected_eval"], ["temp_rental_tenant_metric_lost_eval"], ["temp_rental_tenant_metric_reservations"], ["temp_rental_tenant_metric_reservations_effective"], ["temp_rental_tenant_metric_reservations_refunded"], ["temp_rental_tenant_metric_reservations_ratio_effective_total"], ["temp_rental_tenant_metric_reservations_ratio_total_visit_done"], ["temp_rental_tenant_metric_new_tenant"], ["temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation"], ["temp_rental_tenant_metric_new_subs"], ["temp_rental_tenant_metric_paid_media_cost"], ["temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads"], ["temp_rental_tenant_metric_mkt_ratio_pmc_visit_done"], ["temp_rental_tenant_metric_mkt_ratio_pmc_new_subs"], ["temp_rental_landlord_metric_properties_stock"], ["temp_sales_seller_metric_properties_stock"], ["temp_rental_landlord_metric_leads"], ["temp_rental_landlord_metric_leads_qualified"], ["temp_rental_landlord_metric_leads_qualified_date"], ["temp_rental_landlord_metric_leads_ratio_qualified_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.119621, "compiled_code": "\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_created\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_scheduled\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_ratio_done_scheduled\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_first_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_second_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_third_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_correct_visit_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_created\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_scheduled\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_done\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_ratio_done_scheduled\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_markethoum\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_portalapplicants\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_whatsapp\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_total_eval\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_approved_eval\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_ongoing_eval\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_rejected_eval\"\nUNION ALL\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_lost_eval\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_effective\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_refunded\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_ratio_effective_total\"\nUNION ALL\nSELECT \n    *   \nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_ratio_total_visit_done\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_tenant\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_subs\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_paid_media_cost\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_visit_done\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_new_subs\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_properties_stock\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_sales_seller_metric_properties_stock\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_qualified\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_qualified_date\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_ratio_qualified_leads\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"metrics\""}, "model.houm.temp_rental_tenant_metric_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_subs", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_new_subs"], "unique_id": "model.houm.temp_rental_tenant_metric_new_subs", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'New Subs' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   sub_id,\n   sub_payment_date_local\nFROM {{ref('proc_closure_subs')}}\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT' )\n   AND plan_has_management = TRUE \n   AND is_test = FALSE\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.sub_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.sub_payment_date_local = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_new_subs.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_new_subs.sql", "name": "temp_rental_tenant_metric_new_subs", "alias": "temp_rental_tenant_metric_new_subs", "checksum": {"name": "sha256", "checksum": "7b8eef4e61675bf22f15e7cf54298e083955f2d99291176ecb495762326fed34"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_subs"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.122047, "compiled_code": "    \nWITH base AS (\nSELECT \n    'New Subs'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   sub_id,\n   sub_payment_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT' )\n   AND plan_has_management = TRUE \n   AND is_test = FALSE\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.sub_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.sub_payment_date_local = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT sub_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_subs\""}, "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation"], "unique_id": "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'New Tenant/Effective Reservations', numerator_table = 'temp_rental_tenant_metric_new_tenant', denominator_table = 'temp_rental_tenant_metric_reservations_effective' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation.sql", "name": "temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "alias": "temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "checksum": {"name": "sha256", "checksum": "189af6a223ac855ad14541f953a8c01505dfc8367effe2d279da38d1eee70c71"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_reservations_effective"], ["temp_rental_tenant_metric_new_tenant"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.139211, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'New Tenant/Effective Reservations'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_effective\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_tenant\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation\""}, "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_photo_ratio_done_scheduled"], "unique_id": "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'Photo - Done/Scheduled', numerator_table = 'temp_rental_landlord_metric_photo_done', denominator_table = 'temp_rental_landlord_metric_photo_scheduled' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_photo_ratio_done_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_photo_ratio_done_scheduled.sql", "name": "temp_rental_landlord_metric_photo_ratio_done_scheduled", "alias": "temp_rental_landlord_metric_photo_ratio_done_scheduled", "checksum": {"name": "sha256", "checksum": "31bd63bced0e622ad685edb536fa38d721c450fce9f183e5836763b7c4f85170"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_landlord_metric_photo_scheduled"], ["temp_rental_landlord_metric_photo_done"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_photo_ratio_done_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.144154, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'Photo - Done/Scheduled'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_scheduled\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_done\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_ratio_done_scheduled\""}, "model.houm.temp_rental_landlord_metric_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_photo_done"], "unique_id": "model.houm.temp_rental_landlord_metric_photo_done", "raw_code": "{{ config(materialized='view') }}\n{{ create_base_metric( metric_name = 'Photo Done' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE\nFROM {{ref('proc_supply_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND supply_relation != 'New Properties'\n   AND status = 'Done'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_photo_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_photo_done.sql", "name": "temp_rental_landlord_metric_photo_done", "alias": "temp_rental_landlord_metric_photo_done", "checksum": {"name": "sha256", "checksum": "bc53a27ebb9ae7ccc0525b68e7a9ad9937b478e1206508b0953ff8048c9f7551"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.148005, "compiled_code": "\nWITH base AS (\nSELECT \n    'Photo Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND supply_relation != 'New Properties'\n   AND status = 'Done'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_done\""}, "model.houm.temp_rental_tenant_metric_reservations_effective": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_reservations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_reservations_effective"], "unique_id": "model.houm.temp_rental_tenant_metric_reservations_effective", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Effective Reservations' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM {{ref('proc_demand_reservations')}}\nWHERE TRUE\n   AND status = 'PAID' \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_reservations_effective.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_effective.sql", "name": "temp_rental_tenant_metric_reservations_effective", "alias": "temp_rental_tenant_metric_reservations_effective", "checksum": {"name": "sha256", "checksum": "0e3b0f4d799eca51c69dbfddbdad0ff9ab702103829a3ccc36ad96919f63e5fe"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_reservations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.164358, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Effective Reservations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE\n   AND status = 'PAID' \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_effective\""}, "model.houm.metrics_order": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "metrics_order"], "unique_id": "model.houm.metrics_order", "raw_code": "{{ config(materialized='table') }}   \nSELECT \n    *\nFROM {{ref('seed_metrics_order')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/metrics_order.sql", "original_file_path": "models/dwh/marts/kpi/metrics_order.sql", "name": "metrics_order", "alias": "metrics_order", "checksum": {"name": "sha256", "checksum": "09b6328e04252aa6c3f85e4e00086b78dc90adc62597d1d205b4d8506c5e6973"}, "tags": ["dw", "marts", "kpi"], "refs": [["seed_metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/metrics_order.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.1807418, "compiled_code": "   \nSELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_metrics_order\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"metrics_order\""}, "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_mkt_ratio_pmc_new_subs"], "unique_id": "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'PMC/New Subs (USD)', numerator_table = 'temp_rental_tenant_metric_paid_media_cost', denominator_table = 'temp_rental_tenant_metric_new_subs' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_new_subs.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_new_subs.sql", "name": "temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "alias": "temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "checksum": {"name": "sha256", "checksum": "0b56b739f2edd949030e06829e6d002c705c4ca952f2a5f141b53e14f1027a58"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_new_subs"], ["temp_rental_tenant_metric_paid_media_cost"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.182542, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'PMC/New Subs (USD)'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_new_subs\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_paid_media_cost\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_new_subs\""}, "model.houm.temp_rental_landlord_metric_photo_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_photo_scheduled"], "unique_id": "model.houm.temp_rental_landlord_metric_photo_scheduled", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Photo Scheduled' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE\nFROM {{ref('proc_supply_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_photo_scheduled.sql", "name": "temp_rental_landlord_metric_photo_scheduled", "alias": "temp_rental_landlord_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "aa51e4520df320e2c59e8aac3f3af3654f805eb869a8b903d299927e870ddafd"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.186263, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Photo Scheduled'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_scheduled\""}, "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_leads_ratio_qualified_leads"], "unique_id": "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'Created Unique - Hot Qualified/Leads', numerator_table = 'temp_rental_landlord_metric_leads_qualified', denominator_table = 'temp_rental_landlord_metric_leads' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_leads_ratio_qualified_leads.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_leads_ratio_qualified_leads.sql", "name": "temp_rental_landlord_metric_leads_ratio_qualified_leads", "alias": "temp_rental_landlord_metric_leads_ratio_qualified_leads", "checksum": {"name": "sha256", "checksum": "f621832992d1ebc62024398dd301756a75598bce66a4e41fe1084ae8dde4f67d"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_landlord_metric_leads"], ["temp_rental_landlord_metric_leads_qualified"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_leads_ratio_qualified_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.2033012, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'Created Unique - Hot Qualified/Leads'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_qualified\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_ratio_qualified_leads\""}, "model.houm.temp_rental_tenant_metric_approved_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_approved_eval"], "unique_id": "model.houm.temp_rental_tenant_metric_approved_eval", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Commercially Approved Evaluations' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM {{ref('proc_closure_evaluations')}}\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Commercially Approved Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_approved_eval.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_approved_eval.sql", "name": "temp_rental_tenant_metric_approved_eval", "alias": "temp_rental_tenant_metric_approved_eval", "checksum": {"name": "sha256", "checksum": "1b8d47472c4f5bd01020724d8cdbc349241425e2e9706d05c7d28cbf4b0295be"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_evaluations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_approved_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.2070348, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Commercially Approved Evaluations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Commercially Approved Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_approved_eval\""}, "model.houm.metrics_name": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "metrics_name"], "unique_id": "model.houm.metrics_name", "raw_code": "{{ config(materialized='table') }}   \nSELECT \n    *\nFROM {{ref('seed_metrics')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/metrics_name.sql", "original_file_path": "models/dwh/marts/kpi/metrics_name.sql", "name": "metrics_name", "alias": "metrics_name", "checksum": {"name": "sha256", "checksum": "d3fa5788eca8dc80f4d3039990bfb950af0c2e40fd864cb55f1e0bcbf2fa3fab"}, "tags": ["dw", "marts", "kpi"], "refs": [["seed_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/metrics_name.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.2233799, "compiled_code": "   \nSELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_metrics\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"metrics_name\""}, "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_ratio_done_scheduled"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'Visit - Done/Scheduled', numerator_table = 'temp_rental_tenant_metric_schedules_done', denominator_table = 'temp_rental_tenant_metric_schedules_scheduled' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_ratio_done_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_ratio_done_scheduled.sql", "name": "temp_rental_tenant_metric_schedules_ratio_done_scheduled", "alias": "temp_rental_tenant_metric_schedules_ratio_done_scheduled", "checksum": {"name": "sha256", "checksum": "64a20f79cb41c8c120707481306e1c3f56af3bf602ffa3000e050412e50626c6"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_schedules_scheduled"], ["temp_rental_tenant_metric_schedules_done"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_ratio_done_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.2251809, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'Visit - Done/Scheduled'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_scheduled\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_done\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_ratio_done_scheduled\""}, "model.houm.temp_sales_seller_metric_properties_stock": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric_avg"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_marketplace_published_properties", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_sales_seller_metric_properties_stock"], "unique_id": "model.houm.temp_sales_seller_metric_properties_stock", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Properties Stock Sales' )}} \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   total,\n   full_date::DATE\nFROM {{ref('proc_marketplace_published_properties')}}\nWHERE TRUE\n   AND business_type = 'Sales'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.total\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.full_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n, day_metric_houm AS (\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7,8\n)\n\n{{ create_metric_avg( to_aggregate = 'sum_aggregate', agregation_func = 'AVG', is_distinct = 'FALSE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_sales_seller_metric_properties_stock.sql", "original_file_path": "models/dwh/marts/kpi/temp_sales_seller_metric_properties_stock.sql", "name": "temp_sales_seller_metric_properties_stock", "alias": "temp_sales_seller_metric_properties_stock", "checksum": {"name": "sha256", "checksum": "04ca813bef8114bf43a84eaf2616c7eec7a4eeda7ff6649e19e039812bed943f"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_marketplace_published_properties"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_sales_seller_metric_properties_stock.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.228939, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Properties Stock Sales'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n) \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   total,\n   full_date::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketplace_published_properties\"\nWHERE TRUE\n   AND business_type = 'Sales'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.total\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.full_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n, day_metric_houm AS (\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7,8\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_sales_seller_metric_properties_stock\""}, "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_reservations_ratio_effective_total"], "unique_id": "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'Reservations Effective/Reservations', numerator_table = 'temp_rental_tenant_metric_reservations_effective', denominator_table = 'temp_rental_tenant_metric_reservations' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_effective_total.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_effective_total.sql", "name": "temp_rental_tenant_metric_reservations_ratio_effective_total", "alias": "temp_rental_tenant_metric_reservations_ratio_effective_total", "checksum": {"name": "sha256", "checksum": "464f2acb0246fb267c89606b7e7eb9cfd827614cea831f2e0c50aac113a1be34"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_reservations"], ["temp_rental_tenant_metric_reservations_effective"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_effective_total.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.249749, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'Reservations Effective/Reservations'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_effective\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_ratio_effective_total\""}, "model.houm.temp_rental_landlord_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_landlord_leads", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_leads"], "unique_id": "model.houm.temp_rental_landlord_metric_leads", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Created Unique Landlord Leads' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   add_time::DATE\nFROM {{ref('proc_supply_landlord_leads')}}\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_time = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_leads.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_leads.sql", "name": "temp_rental_landlord_metric_leads", "alias": "temp_rental_landlord_metric_leads", "checksum": {"name": "sha256", "checksum": "0d632bad55ea4de664bb6a60ea03f0dcdc7e0db7940f1e3d5a81d3bedb9c149f"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_landlord_leads"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.2534862, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Created Unique Landlord Leads'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   add_time::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\"\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_time = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads\""}, "model.houm.temp_rental_tenant_metric_reservations_refunded": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_reservations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_reservations_refunded"], "unique_id": "model.houm.temp_rental_tenant_metric_reservations_refunded", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Refunded Reservations' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM {{ref('proc_demand_reservations')}}\nWHERE TRUE\n   AND status = 'REFUNDED' \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_reservations_refunded.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_refunded.sql", "name": "temp_rental_tenant_metric_reservations_refunded", "alias": "temp_rental_tenant_metric_reservations_refunded", "checksum": {"name": "sha256", "checksum": "4809a0d769e752b7704bb54b38a899a981337a4717f94abb7a0f3cd150e1c81e"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_reservations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.270509, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Refunded Reservations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   reservation_id,\n   payment_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE\n   AND status = 'REFUNDED' \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.reservation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.payment_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT reservation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_refunded\""}, "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_reservations_ratio_total_visit_done"], "unique_id": "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'Reservations/Visit Done', numerator_table = 'temp_rental_tenant_metric_reservations', denominator_table = 'temp_rental_tenant_metric_schedules_done' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_total_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_total_visit_done.sql", "name": "temp_rental_tenant_metric_reservations_ratio_total_visit_done", "alias": "temp_rental_tenant_metric_reservations_ratio_total_visit_done", "checksum": {"name": "sha256", "checksum": "b5ace701672749353b244c90f0507533337c6db2846d3fff1677224685454218"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_schedules_done"], ["temp_rental_tenant_metric_reservations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_reservations_ratio_total_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.286734, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'Reservations/Visit Done'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_done\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_reservations_ratio_total_visit_done\""}, "model.houm.temp_rental_tenant_metric_schedules_second_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_second_done"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_second_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = '2nd Visit Done' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM {{ref('proc_core_scheduler_schedules')}}\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_second_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_second_done.sql", "name": "temp_rental_tenant_metric_schedules_second_done", "alias": "temp_rental_tenant_metric_schedules_second_done", "checksum": {"name": "sha256", "checksum": "0356b20590e2582b5c7610bd7cb2e1be424c8e457404e64ccd52d3374e9cc3c6"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_core_scheduler_schedules"], ["seed_test_email"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_second_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.290566, "compiled_code": "    \nWITH base AS (\nSELECT \n    '2nd Visit Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_second_done\""}, "model.houm.temp_rental_tenant_metric_total_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_total_eval"], "unique_id": "model.houm.temp_rental_tenant_metric_total_eval", "raw_code": "{{ config(materialized='view') }}   \n{{ create_base_metric( metric_name = 'Total Evaluations' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM {{ref('proc_closure_evaluations')}}\nWHERE TRUE \n   AND is_test = FALSE \n) \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id \n)\n\n{{ create_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_total_eval.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_total_eval.sql", "name": "temp_rental_tenant_metric_total_eval", "alias": "temp_rental_tenant_metric_total_eval", "checksum": {"name": "sha256", "checksum": "23dd80274ddefdbdb893c7fd607f875b20915b57c7c4e9f98426ccd58dfaba41"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_evaluations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_total_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.306941, "compiled_code": "   \nWITH base AS (\nSELECT \n    'Total Evaluations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE TRUE \n   AND is_test = FALSE \n) \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id \n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_total_eval\""}, "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads"], "unique_id": "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'PMC/Unique Leads (USD)', numerator_table = 'temp_rental_tenant_metric_paid_media_cost', denominator_table = 'temp_rental_tenant_metric_leads' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads.sql", "name": "temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "alias": "temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "checksum": {"name": "sha256", "checksum": "eeaf4be3e68e3fdc3ed0bbd3830e2e61cba7b99b200992d839911caf88468c04"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_leads"], ["temp_rental_tenant_metric_paid_media_cost"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.323149, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'PMC/Unique Leads (USD)'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_paid_media_cost\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads\""}, "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_lead_activities", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_leads_interactions_whatsapp"], "unique_id": "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "raw_code": "{{ config(materialized='view') }}  \n{{ create_base_metric( metric_name = 'Interaction Tenant Lead - Whatsapp' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM {{ref('proc_demand_lead_activities')}}\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Whatsapp'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_whatsapp.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_whatsapp.sql", "name": "temp_rental_tenant_metric_leads_interactions_whatsapp", "alias": "temp_rental_tenant_metric_leads_interactions_whatsapp", "checksum": {"name": "sha256", "checksum": "8e0025444ab983b1eaae4489905dcbd8efcacd09320a49d1192615f7436b4cd4"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_lead_activities"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.326853, "compiled_code": "  \nWITH base AS (\nSELECT \n    'Interaction Tenant Lead - Whatsapp'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\"\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Whatsapp'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_whatsapp\""}, "model.houm.temp_rental_tenant_metric_ongoing_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_ongoing_eval"], "unique_id": "model.houm.temp_rental_tenant_metric_ongoing_eval", "raw_code": "{{ config(materialized='view') }}  \n{{ create_base_metric( metric_name = 'Ongoing Evaluations' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM {{ref('proc_closure_evaluations')}}\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Ongoing Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_ongoing_eval.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_ongoing_eval.sql", "name": "temp_rental_tenant_metric_ongoing_eval", "alias": "temp_rental_tenant_metric_ongoing_eval", "checksum": {"name": "sha256", "checksum": "a67d987ffb4e4a0f48486399ed584c6f9025e267c376b34bf303f33474de3f77"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_evaluations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_ongoing_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.3438442, "compiled_code": "  \nWITH base AS (\nSELECT \n    'Ongoing Evaluations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Ongoing Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_ongoing_eval\""}, "model.houm.temp_rental_tenant_metric_rejected_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_rejected_eval"], "unique_id": "model.houm.temp_rental_tenant_metric_rejected_eval", "raw_code": "{{ config(materialized='view') }}  \n{{ create_base_metric( metric_name = 'Commercialy Rejected Evaluations' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM {{ref('proc_closure_evaluations')}}\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Commercialy Rejected Evaluations'\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_rejected_eval.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_rejected_eval.sql", "name": "temp_rental_tenant_metric_rejected_eval", "alias": "temp_rental_tenant_metric_rejected_eval", "checksum": {"name": "sha256", "checksum": "45742f9f1f080fd1493879f6ea5fe876252ddf98f646148765a7aaf8d7842faa"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_evaluations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_rejected_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.360053, "compiled_code": "  \nWITH base AS (\nSELECT \n    'Commercialy Rejected Evaluations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE TRUE\n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Commercialy Rejected Evaluations'\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_rejected_eval\""}, "model.houm.temp_rental_landlord_metric_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_landlord_leads", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_leads_qualified"], "unique_id": "model.houm.temp_rental_landlord_metric_leads_qualified", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Created Unique Landlord Hot Qualified Leads' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   add_time::DATE\nFROM {{ref('proc_supply_landlord_leads')}}\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND supply_qualification in (3,4,5,6)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_time = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified.sql", "name": "temp_rental_landlord_metric_leads_qualified", "alias": "temp_rental_landlord_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "c5f9dbe9e534471f56a49200e4c49c37f8247a778dc689d493cf6708602838a8"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_landlord_leads"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.376331, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Created Unique Landlord Hot Qualified Leads'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   person_email,\n   add_time::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\"\nWHERE TRUE  \n   AND (is_test = FALSE)\n   AND (is_deleted = FALSE)\n   AND (is_merged = FALSE )\n   AND (property_supply_source != 'B2B' OR property_supply_source IS NULL)\n   AND supply_qualification in (3,4,5,6)\n   AND (add_time IS NOT NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.person_email\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_time = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT person_email) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_leads_qualified\""}, "model.houm.trans_macrozone_to_location": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_dim_locations_houm_traduccion_1"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "trans_macrozone_to_location"], "unique_id": "model.houm.trans_macrozone_to_location", "raw_code": "{{ config(materialized='table') }}   \nSELECT \n    *\nFROM {{ref('seed_dim_locations_houm_traduccion_1')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/trans_macrozone_to_location.sql", "original_file_path": "models/dwh/marts/kpi/trans_macrozone_to_location.sql", "name": "trans_macrozone_to_location", "alias": "trans_macrozone_to_location", "checksum": {"name": "sha256", "checksum": "48638588c2db1a116b6924e78414f5deb80e550af471c9e0efaa72416c1bf044"}, "tags": ["dw", "marts", "kpi"], "refs": [["seed_dim_locations_houm_traduccion_1"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/trans_macrozone_to_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.3925672, "compiled_code": "   \nSELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_dim_locations_houm_traduccion_1\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\""}, "model.houm.temp_rental_tenant_metric_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_scheduled"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_scheduled", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Visit Scheduled' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date \nFROM {{ref('proc_demand_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_scheduled.sql", "name": "temp_rental_tenant_metric_schedules_scheduled", "alias": "temp_rental_tenant_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "81ce1c66d9b583eb628376bda7cde85ca2f8361ec11a24d479b947eb58bed832"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.3945339, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Visit Scheduled'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   begin_date \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_scheduled\""}, "model.houm.temp_rental_tenant_metric_lost_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_lost_eval"], "unique_id": "model.houm.temp_rental_tenant_metric_lost_eval", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Lost Evaluations' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM {{ref('proc_closure_evaluations')}}\nWHERE TRUE \n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Lost Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\nWHERE TRUE\n)\n\n{{ create_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_lost_eval.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_lost_eval.sql", "name": "temp_rental_tenant_metric_lost_eval", "alias": "temp_rental_tenant_metric_lost_eval", "checksum": {"name": "sha256", "checksum": "8d9e7d6eb948cd7e431df13262d62a72abf8582a5a5b41d80b60e2636202dd64"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_closure_evaluations"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_lost_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.410719, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Lost Evaluations'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   evaluation_id,\n   add_date\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE TRUE \n   AND is_test = FALSE \n   AND evaluation_status_grouped = 'Lost Evaluations'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.evaluation_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.add_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\nWHERE TRUE\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT evaluation_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_lost_eval\""}, "model.houm.temp_rental_tenant_metric_schedules_third_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_third_done"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_third_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = '3rd Visit Done' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM {{ref('proc_core_scheduler_schedules')}}\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '3ra+  Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_third_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_third_done.sql", "name": "temp_rental_tenant_metric_schedules_third_done", "alias": "temp_rental_tenant_metric_schedules_third_done", "checksum": {"name": "sha256", "checksum": "3bdddb01d3ba6298c9e040d0839a70fe6db9262d5a79d5487c16a0af9caa3543"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_core_scheduler_schedules"], ["seed_test_email"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_third_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.427593, "compiled_code": "    \nWITH base AS (\nSELECT \n    '3rd Visit Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '3ra+  Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_third_done\""}, "model.houm.temp_rental_landlord_metric_photo_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_supply_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_photo_created"], "unique_id": "model.houm.temp_rental_landlord_metric_photo_created", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Photo Created' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   created_at::DATE\nFROM {{ref('proc_supply_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_photo_created.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_photo_created.sql", "name": "temp_rental_landlord_metric_photo_created", "alias": "temp_rental_landlord_metric_photo_created", "checksum": {"name": "sha256", "checksum": "3aa7f34723ce60d1ac996d270c786430e6a28e26a5e2019eaed9be31504f7051"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_supply_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.444011, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Photo Created'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   created_at::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Photo' \n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_photo_created\""}, "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_lead_activities", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_leads_interactions_markethoum"], "unique_id": "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Interaction Tenant Lead - Houm Marketplace' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM {{ref('proc_demand_lead_activities')}}\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Houm Marketplace'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_markethoum.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_markethoum.sql", "name": "temp_rental_tenant_metric_leads_interactions_markethoum", "alias": "temp_rental_tenant_metric_leads_interactions_markethoum", "checksum": {"name": "sha256", "checksum": "cf8f437b99dc2cd6803b80709ae52a6d4e83ced3fa51a8efefc1940481e89dc9"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_lead_activities"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_markethoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.460212, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Interaction Tenant Lead - Houm Marketplace'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\"\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Houm Marketplace'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_markethoum\""}, "model.houm.temp_rental_tenant_metric_leads_interactions": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_lead_activities", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_leads_interactions"], "unique_id": "model.houm.temp_rental_tenant_metric_leads_interactions", "raw_code": "{{ config(materialized='view') }} \n{{ create_base_metric( metric_name = 'Interaction Tenant Lead' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM {{ref('proc_demand_lead_activities')}}\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source IS NOT NULL\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)    \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions.sql", "name": "temp_rental_tenant_metric_leads_interactions", "alias": "temp_rental_tenant_metric_leads_interactions", "checksum": {"name": "sha256", "checksum": "4bb1e0ec3462615093a9caca9fa00080f4c1a0ce851456e34e2b60b22d20cdee"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_lead_activities"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.476578, "compiled_code": " \nWITH base AS (\nSELECT \n    'Interaction Tenant Lead'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\"\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source IS NOT NULL\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)    \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions\""}, "model.houm.temp_rental_landlord_metric_properties_stock": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric_avg"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_marketplace_published_properties", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_landlord_metric_properties_stock"], "unique_id": "model.houm.temp_rental_landlord_metric_properties_stock", "raw_code": "{{ config(materialized='view') }}   \n{{ create_base_metric( metric_name = 'Properties Stock Rentals' )}} \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   total,\n   full_date::DATE\nFROM {{ref('proc_marketplace_published_properties')}}\nWHERE TRUE\n   AND business_type = 'Rentals'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.total\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.full_date = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n, day_metric_houm AS (\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7,8\n)\n\n{{ create_metric_avg( to_aggregate = 'sum_aggregate', agregation_func = 'AVG', is_distinct = 'FALSE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_landlord_metric_properties_stock.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_landlord_metric_properties_stock.sql", "name": "temp_rental_landlord_metric_properties_stock", "alias": "temp_rental_landlord_metric_properties_stock", "checksum": {"name": "sha256", "checksum": "f2a396865deda2685f79335bec63f075af82e2b602c511847c2a8258b072979f"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_marketplace_published_properties"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_landlord_metric_properties_stock.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.492736, "compiled_code": "   \nWITH base AS (\nSELECT \n    'Properties Stock Rentals'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n) \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   total,\n   full_date::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketplace_published_properties\"\nWHERE TRUE\n   AND business_type = 'Rentals'\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.total\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.full_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n, day_metric_houm AS (\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7,8\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM day_metric_houm\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    AVG(sum_aggregate) AS total\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_landlord_metric_properties_stock\""}, "model.houm.temp_rental_tenant_metric_schedules_first_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_first_done"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_first_done", "raw_code": "{{ config(materialized='view') }}  \n{{ create_base_metric( metric_name = '1st Visit Done' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM {{ref('proc_core_scheduler_schedules')}}\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_first_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_first_done.sql", "name": "temp_rental_tenant_metric_schedules_first_done", "alias": "temp_rental_tenant_metric_schedules_first_done", "checksum": {"name": "sha256", "checksum": "4eea0b951e366db10ff4942cb05c81cf2ee9ed7d298179b10ff23f219d9ccba7"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_core_scheduler_schedules"], ["seed_test_email"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_first_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.5073211, "compiled_code": "  \nWITH base AS (\nSELECT \n    '1st Visit Done'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   appraiser_email,\n   begin_date::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nWHERE TRUE\n   AND visit_type = 'Visit' \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n   AND ( (applicant_email NOT LIKE '%test.test' AND applicant_email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.begin_date = base.full_date\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON model.appraiser_email = test_persons.email\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_first_done\""}, "model.houm.temp_rental_tenant_metric_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_schedules", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_schedules_created"], "unique_id": "model.houm.temp_rental_tenant_metric_schedules_created", "raw_code": "{{ config(materialized='view') }}  \n{{ create_base_metric( metric_name = 'Visit Created' )}}  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   created_at::DATE \nFROM {{ref('proc_demand_schedules')}}\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_created.sql", "name": "temp_rental_tenant_metric_schedules_created", "alias": "temp_rental_tenant_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "15f616691ccc39e846712ef7107287be8d3b4169b4fcdd5ef3396a8a359bbdb8"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_schedules"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.5243258, "compiled_code": "  \nWITH base AS (\nSELECT \n    'Visit Created'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)  \n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   schedule_id,\n   created_at::DATE \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE\n   AND schedule_type_name = 'Visit' \n   AND supply_relation != 'New Properties'\n   AND ( (email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)  \n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.schedule_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT schedule_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_created\""}, "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_metric_ratio"], "nodes": ["model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_mkt_ratio_pmc_visit_done"], "unique_id": "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "raw_code": "{{ config(materialized='view') }}    \n{{ create_metric_ratio(ratio_name = 'PMC/Visit Done (USD)', numerator_table = 'temp_rental_tenant_metric_paid_media_cost', denominator_table = 'temp_rental_tenant_metric_schedules_done' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_visit_done.sql", "name": "temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "alias": "temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "checksum": {"name": "sha256", "checksum": "9f02229223783465ac607879f737688b1bda4d54f82f985f636c819053509841"}, "tags": ["dw", "marts", "kpi"], "refs": [["temp_rental_tenant_metric_schedules_done"], ["temp_rental_tenant_metric_paid_media_cost"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_mkt_ratio_pmc_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.5405471, "compiled_code": "    \nWITH ratio AS (\nSELECT \n    'PMC/Visit Done (USD)'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_schedules_done\" AS denominator\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_paid_media_cost\" AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_mkt_ratio_pmc_visit_done\""}, "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_base_metric", "macro.houm.create_metric"], "nodes": ["model.houm.dim_base_metrics", "model.houm.proc_demand_lead_activities", "model.houm.metrics_name", "model.houm.metrics_order"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "temp_rental_tenant_metric_leads_interactions_portalapplicants"], "unique_id": "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "raw_code": "{{ config(materialized='view') }}    \n{{ create_base_metric( metric_name = 'Interaction Tenant Lead - Portal Applicant' )}}\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM {{ref('proc_demand_lead_activities')}}\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Portal Applicant'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n{{ create_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_portalapplicants.sql", "original_file_path": "models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_portalapplicants.sql", "name": "temp_rental_tenant_metric_leads_interactions_portalapplicants", "alias": "temp_rental_tenant_metric_leads_interactions_portalapplicants", "checksum": {"name": "sha256", "checksum": "7ba9808c27a600fb68347b547f633fba3a1e3ac500b5dfedff02565d3341d007"}, "tags": ["dw", "marts", "kpi"], "refs": [["dim_base_metrics"], ["proc_demand_lead_activities"], ["metrics_name"], ["metrics_order"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/temp_rental_tenant_metric_leads_interactions_portalapplicants.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "kpi"]}, "created_at": 1675970036.544396, "compiled_code": "    \nWITH base AS (\nSELECT \n    'Interaction Tenant Lead - Portal Applicant'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\"\n)\n, model AS (\nSELECT \n   loc_country,\n   loc_city,\n   loc_region,\n   activity_id,\n   created_at_utc::DATE\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\"\nWHERE TRUE\n   AND business_type = 'rentals'\n   AND source = 'Portal Applicant'\n   AND portal IS NOT NULL \n   AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE) \n   -- Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n   AND  source NOT LIKE 'Marketing'\n   -- Limpieza de test\n   AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) \n   -- Limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n   AND ((country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR country = 'Colombia' OR country = 'Mexico') \n)\n, metric AS (\nSELECT \n   base.metric_name,\n   metric_order.metric_id,\n   metric_order.funnel_type,\n   base.country,\n   base.region,\n   base.city,\n   base.full_date,\n   model.activity_id\nFROM base\nLEFT JOIN model\n   ON model.loc_country = base.country \n   AND model.loc_region = base.region \n   AND model.loc_city = base.city \n   AND model.created_at_utc = base.full_date\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_name\" AS metric_name\n   ON metric_name.metric = base.metric_name\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"metrics_order\" AS metric_order\n   ON metric_order.metric_id = metric_name.id\n)\n\n\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'week' AS thedate_type, \n    date_trunc('week', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_trunc('day', full_date) < date_trunc('day', '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to day' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) < date_part(day, '2023-02-09'::DATE)\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'country' AS location_type, \n    country AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'region' AS location_type, \n    region AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n\nUNION ALL\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    'city' AS location_type, \n    city AS location_name, \n    'month to end' AS thedate_type, \n    date_trunc('month', full_date) AS thedate_start,\n    COUNT(DISTINCT activity_id) AS total\n    \nFROM metric \nWHERE date_part(day, full_date) > date_part(day, '2023-02-09'::DATE)\nAND full_date < '2023-02-09'::DATE\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"temp_rental_tenant_metric_leads_interactions_portalapplicants\""}, "model.houm.sales_investor_metric_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads_qualified_date"], "unique_id": "model.houm.sales_investor_metric_leads_qualified_date", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "name": "sales_investor_metric_leads_qualified_date", "alias": "sales_investor_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "7c3a2127d8d531a7c6ae6d6e54512d907f026d683af5601a5069490cc53a0ad3"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.560629, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified_date\""}, "model.houm.rental_tenant_metric_schedules_cancelled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_cancelled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_cancelled"], "unique_id": "model.houm.rental_tenant_metric_schedules_cancelled", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_cancelled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "name": "rental_tenant_metric_schedules_cancelled", "alias": "rental_tenant_metric_schedules_cancelled", "checksum": {"name": "sha256", "checksum": "2400f665c155032bf433077ded38563a1f427c1b27c45860f6eaf8504e381ed6"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_cancelled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.564523, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled\""}, "model.houm.sales_buyer_metric_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads_qualified"], "unique_id": "model.houm.sales_buyer_metric_leads_qualified", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "name": "sales_buyer_metric_leads_qualified", "alias": "sales_buyer_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "f1ff9f7186146c837da00d8072f9f2a4a1ac09adb0847753fcbcd8f060b8f8dc"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.568438, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified\""}, "model.houm.rental_tenant_metric_total_evaluations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_total_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_total_evaluations"], "unique_id": "model.houm.rental_tenant_metric_total_evaluations", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_total_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_total_evaluations.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_total_evaluations.sql", "name": "rental_tenant_metric_total_evaluations", "alias": "rental_tenant_metric_total_evaluations", "checksum": {"name": "sha256", "checksum": "866b83f78bc378307cf46118e97643be19104215d0b5db81045eafdc1777353d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_total_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_total_evaluations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.572268, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_total_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_total_evaluations\""}, "model.houm.rental_tenant_metric_portal_leads_interactions": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_leads_interactions') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "name": "rental_tenant_metric_portal_leads_interactions", "alias": "rental_tenant_metric_portal_leads_interactions", "checksum": {"name": "sha256", "checksum": "433a2867587eb2ddf9633908ae8be1206029b2355ec16cdae05d7e0a5d63fb0d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.5769222, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN activity_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN activity_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN activity_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN activity_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN activity_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN activity_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN activity_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN activity_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN activity_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\""}, "model.houm.rental_tenant_metric_correct_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_correct_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_correct_visit_done"], "unique_id": "model.houm.rental_tenant_metric_correct_visit_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_correct_visit_done') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "name": "rental_tenant_metric_correct_visit_done", "alias": "rental_tenant_metric_correct_visit_done", "checksum": {"name": "sha256", "checksum": "274f9236ff6208964265a9e98964d158fa298803e070c686e0c721e9f31a2d1d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_correct_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.580727, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_done\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\""}, "model.houm.sales_buyer_metric_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads_qualified_date"], "unique_id": "model.houm.sales_buyer_metric_leads_qualified_date", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "name": "sales_buyer_metric_leads_qualified_date", "alias": "sales_buyer_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "ea71a9728e31e4915bed23c6dd3fe3e4d4eea8a7c7b26c8acfef0dfac7e974a3"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.584676, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified_date\""}, "model.houm.sales_demand_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_demand_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_demand_metric_paid_media_cost"], "unique_id": "model.houm.sales_demand_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n  * \nFROM {{ ref('sales_demand_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "name": "sales_demand_metric_paid_media_cost", "alias": "sales_demand_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "2dfd7b117e70323019dcfcc73cf8a46e20a3ae6956ac232631a92d0768ba2213"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_demand_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.588465, "compiled_code": "\n\nWITH metric AS (\nSELECT \n  * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_schedules_scheduled_organic": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_organic"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_organic"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_organic", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_organic') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "name": "rental_tenant_metric_schedules_scheduled_organic", "alias": "rental_tenant_metric_schedules_scheduled_organic", "checksum": {"name": "sha256", "checksum": "87f10cbb1c356146198c1fb26d5caea9eefb3fa8880a889cea9e4ed6064b2f44"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_organic"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.592305, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_organic\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_organic\""}, "model.houm.rental_tenant_metric_lost_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_lost_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_lost_eval"], "unique_id": "model.houm.rental_tenant_metric_lost_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_lost_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_lost_eval.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_lost_eval.sql", "name": "rental_tenant_metric_lost_eval", "alias": "rental_tenant_metric_lost_eval", "checksum": {"name": "sha256", "checksum": "9262a9ac02a373f45fa452e36eb5ce3e0ba912cd307d1185a9d524d8f32ec2ef"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_lost_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_lost_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.596185, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_lost_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_lost_eval\""}, "model.houm.rental_tenant_metric_schedules_first_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_first_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_first_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_first_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_first_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_first_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_first_done.sql", "name": "rental_tenant_metric_schedules_first_done", "alias": "rental_tenant_metric_schedules_first_done", "checksum": {"name": "sha256", "checksum": "5f6325fd746388921b410c5396121ec9a2fc9ff29a782d00ed88a9f90428028e"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_first_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_first_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.599982, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_first_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_first_done\""}, "model.houm.rental_tenant_metric_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_schedules_created", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "name": "rental_tenant_metric_schedules_created", "alias": "rental_tenant_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "072d60a2610bc4d054e4cab933dbbf298294b91d5b89a3542d4e4acb4217b13e"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6038861, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\""}, "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions_markethoum"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions_markethoum"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_leads_interactions_markethoum') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_markethoum.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_markethoum.sql", "name": "rental_tenant_metric_portal_leads_interactions_markethoum", "alias": "rental_tenant_metric_portal_leads_interactions_markethoum", "checksum": {"name": "sha256", "checksum": "51a795c029c1f156ffd0c8c76a266d7e905d722c6c7421c3eabb3c308783fe6d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions_markethoum"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_markethoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.608499, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_markethoum\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN activity_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN activity_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN activity_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN activity_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN activity_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN activity_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN activity_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN activity_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN activity_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_markethoum\""}, "model.houm.sales_buyer_metric_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_schedules_created", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "name": "sales_buyer_metric_schedules_created", "alias": "sales_buyer_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "7d0aaf6e49c17bf9779577761deec712ec6bb89682a767ae64e79a3296a01a63"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6124532, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\""}, "model.houm.rental_tenant_metric_correct_visit_finished": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_correct_visit_finished"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_correct_visit_finished"], "unique_id": "model.houm.rental_tenant_metric_correct_visit_finished", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_correct_visit_finished') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "name": "rental_tenant_metric_correct_visit_finished", "alias": "rental_tenant_metric_correct_visit_finished", "checksum": {"name": "sha256", "checksum": "371426e23c3851dcfc331a71b15b5b9206241827644c42701256fd1fee356187"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_correct_visit_finished"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6163032, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_finished\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_finished\""}, "model.houm.sales_buyer_metric_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_done", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "name": "sales_buyer_metric_schedules_done", "alias": "sales_buyer_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "b4e3bd54afb0fa0974f4d224803355e5fa5d9f4d6959a580365a6b69b1629233"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.620186, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\""}, "model.houm.rental_tenant_metric_portal_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads"], "unique_id": "model.houm.rental_tenant_metric_portal_leads", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_leads') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'lead_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "name": "rental_tenant_metric_portal_leads", "alias": "rental_tenant_metric_portal_leads", "checksum": {"name": "sha256", "checksum": "be2e8d042d040c7588963ce157dae6805ebed42728a953ba421ab7b32ae186e2"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6241012, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN lead_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN lead_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN lead_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN lead_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN lead_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN lead_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN lead_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN lead_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN lead_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\""}, "model.houm.rental_tenant_metric_schedules_second_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_second_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_second_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_second_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_second_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_second_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_second_done.sql", "name": "rental_tenant_metric_schedules_second_done", "alias": "rental_tenant_metric_schedules_second_done", "checksum": {"name": "sha256", "checksum": "2a6531e49260664167ade4231abedaf630bc32fc3038c797ac05b5864f1639dd"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_second_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_second_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.627934, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_second_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_second_done\""}, "model.houm.sales_buyer_metric_bid_realized": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_bid_realized"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_bid_realized"], "unique_id": "model.houm.sales_buyer_metric_bid_realized", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_bid_realized') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'bid_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_bid_realized.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_bid_realized.sql", "name": "sales_buyer_metric_bid_realized", "alias": "sales_buyer_metric_bid_realized", "checksum": {"name": "sha256", "checksum": "60665ac7bef5a4cf5b9ea6d5e92c0a33b1ef99f7a36eb508278c7345f333e30d"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_bid_realized"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_bid_realized.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.631819, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_realized\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN bid_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN bid_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN bid_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN bid_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN bid_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN bid_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN bid_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN bid_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN bid_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_realized\""}, "model.houm.sales_buyer_metric_schedules_third_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_third_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_third_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_third_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_schedules_third_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_third_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_third_done.sql", "name": "sales_buyer_metric_schedules_third_done", "alias": "sales_buyer_metric_schedules_third_done", "checksum": {"name": "sha256", "checksum": "4d239651021e44d40f4ae0caf486f425779463185f9a74b8a6d0d4c3dee4c886"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_third_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_third_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.635617, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_third_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_third_done\""}, "model.houm.sales_buyer_metric_bid_without_response": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_bid_without_response"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_bid_without_response"], "unique_id": "model.houm.sales_buyer_metric_bid_without_response", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_bid_without_response') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'bid_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_bid_without_response.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_bid_without_response.sql", "name": "sales_buyer_metric_bid_without_response", "alias": "sales_buyer_metric_bid_without_response", "checksum": {"name": "sha256", "checksum": "8b22c27d0df9ed8cb7134fba494ed7e7d92d0dbf0470571f75f69ea29c801d14"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_bid_without_response"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_bid_without_response.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.640349, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_without_response\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN bid_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN bid_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN bid_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN bid_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN bid_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN bid_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN bid_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN bid_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN bid_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_without_response\""}, "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_autoscheduled"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_autoscheduled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "name": "rental_tenant_metric_schedules_scheduled_autoscheduled", "alias": "rental_tenant_metric_schedules_scheduled_autoscheduled", "checksum": {"name": "sha256", "checksum": "e9ec00db32be4dfa104f194ac7b95872c3ae9f5509bc6fbdcfbcafad137c7b08"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_autoscheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6441238, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_autoscheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_autoscheduled\""}, "model.houm.rental_tenant_metric_reservations_refunded": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations_refunded"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_reservations_refunded", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations_refunded') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "name": "rental_tenant_metric_reservations_refunded", "alias": "rental_tenant_metric_reservations_refunded", "checksum": {"name": "sha256", "checksum": "aa4e07d10bf7fc82e94172a1a4b261448817019509332d4fd33271cbc05e93d0"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_refunded"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.648061, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\""}, "model.houm.sales_buyer_metric_generated_links": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_generated_links"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_generated_links"], "unique_id": "model.houm.sales_buyer_metric_generated_links", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_generated_links') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'negotiation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_generated_links.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_generated_links.sql", "name": "sales_buyer_metric_generated_links", "alias": "sales_buyer_metric_generated_links", "checksum": {"name": "sha256", "checksum": "02c638f97e0344770c7d2d5ff6c8b8a5c0fb01718b0972b7bf66a7a6a33ad1b5"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_generated_links"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_generated_links.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6518369, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_generated_links\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN negotiation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN negotiation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN negotiation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN negotiation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN negotiation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN negotiation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN negotiation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN negotiation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN negotiation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_generated_links\""}, "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions_portalapplicants"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_leads_interactions_portalapplicants') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_portalapplicants.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_portalapplicants.sql", "name": "rental_tenant_metric_portal_leads_interactions_portalapplicants", "alias": "rental_tenant_metric_portal_leads_interactions_portalapplicants", "checksum": {"name": "sha256", "checksum": "0341aeca15dbcdc80ad5c7f3e17f61d32868acb3471e0c2295a70ad278b24cb5"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions_portalapplicants"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_portalapplicants.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.655661, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_portalapplicants\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN activity_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN activity_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN activity_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN activity_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN activity_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN activity_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN activity_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN activity_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN activity_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_portalapplicants\""}, "model.houm.sales_demand_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_demand_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_demand_metric_leads"], "unique_id": "model.houm.sales_demand_metric_leads", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n   * \nFROM {{ ref('sales_demand_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_demand_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_demand_metric_leads.sql", "name": "sales_demand_metric_leads", "alias": "sales_demand_metric_leads", "checksum": {"name": "sha256", "checksum": "5cf8e76d891693b278535a942ab735679f0d7187a251a47dd5b68177ebb68782"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_demand_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_demand_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.659565, "compiled_code": "\n\nWITH metric AS (\nSELECT \n   * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\""}, "model.houm.rental_tenant_metric_schedules_scheduled_admin": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_admin"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_admin"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_admin", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_admin') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "name": "rental_tenant_metric_schedules_scheduled_admin", "alias": "rental_tenant_metric_schedules_scheduled_admin", "checksum": {"name": "sha256", "checksum": "fa00fb360e39eed72ef6b1ada37ea986bb79d3fe734097a2578685b64f176448"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_admin"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.6633542, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_admin\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_admin\""}, "model.houm.sales_buyer_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads"], "unique_id": "model.houm.sales_buyer_metric_leads", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads.sql", "name": "sales_buyer_metric_leads", "alias": "sales_buyer_metric_leads", "checksum": {"name": "sha256", "checksum": "88bbd234b1896b13903d44d150c6d7622d99d0a3a8bda8de3f27d9f0b47a04c1"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.667261, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads\""}, "model.houm.rental_tenant_metric_rejected_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_rejected_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_rejected_eval"], "unique_id": "model.houm.rental_tenant_metric_rejected_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_rejected_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_rejected_eval.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_rejected_eval.sql", "name": "rental_tenant_metric_rejected_eval", "alias": "rental_tenant_metric_rejected_eval", "checksum": {"name": "sha256", "checksum": "73d78059faed3f44e8fe46838f8d8b02015529dec9c806943116bf5807c7af2c"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_rejected_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_rejected_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.671076, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_rejected_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_rejected_eval\""}, "model.houm.sales_buyer_metric_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_schedules_scheduled", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "name": "sales_buyer_metric_schedules_scheduled", "alias": "sales_buyer_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "2541a2e1eca253fa156bab75fb173bbe3b929cebbd185e1ff4875a129a92c028"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.675821, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\""}, "model.houm.sales_buyer_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "name": "sales_buyer_metric_paid_media_cost", "alias": "sales_buyer_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "e815fb4f4b270c8f2a934e9abce792465f2d8fb1a209b6084285533f0540f851"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.679594, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions_whatsapp"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions_whatsapp"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_leads_interactions_whatsapp') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_whatsapp.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_whatsapp.sql", "name": "rental_tenant_metric_portal_leads_interactions_whatsapp", "alias": "rental_tenant_metric_portal_leads_interactions_whatsapp", "checksum": {"name": "sha256", "checksum": "b221e8ccc05ece1236d5da6214664f97bd889c11bdb0d3557e8b922d61d03341"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions_whatsapp"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.683419, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_whatsapp\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN activity_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN activity_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN activity_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN activity_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN activity_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN activity_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN activity_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN activity_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN activity_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_whatsapp\""}, "model.houm.rental_tenant_metric_new_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_new_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_new_tenant", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_new_tenant') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "name": "rental_tenant_metric_new_tenant", "alias": "rental_tenant_metric_new_tenant", "checksum": {"name": "sha256", "checksum": "0a762078e5712f3603981b20ccc0f1953c566b1506e6f3e0b8e4d2dcdbce3edf"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_tenant"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.687314, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\""}, "model.houm.sales_buyer_metric_schedules_first_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_first_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_first_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_first_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_schedules_first_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_first_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_first_done.sql", "name": "sales_buyer_metric_schedules_first_done", "alias": "sales_buyer_metric_schedules_first_done", "checksum": {"name": "sha256", "checksum": "0fd308286c9c426f431a2deccdfe19663f47112a3b4bc76a6f6b123c4d3bc16b"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_first_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_first_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.691115, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_first_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_first_done\""}, "model.houm.rental_tenant_metric_schedules_third_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_third_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_third_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_third_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_third_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_third_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_third_done.sql", "name": "rental_tenant_metric_schedules_third_done", "alias": "rental_tenant_metric_schedules_third_done", "checksum": {"name": "sha256", "checksum": "f552d86487881be186af0e7760267ed3b781007c2b3bf05ebc7c45ae0fe77d71"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_third_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_third_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.695039, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_third_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_third_done\""}, "model.houm.sales_investor_metric_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads"], "unique_id": "model.houm.sales_investor_metric_leads", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads.sql", "name": "sales_investor_metric_leads", "alias": "sales_investor_metric_leads", "checksum": {"name": "sha256", "checksum": "f3fbafedb73ca97c763392016adf4148744a1d1a882734fd2be16ce042a8f2b0"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.698826, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads\""}, "model.houm.rental_tenant_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "name": "rental_tenant_metric_paid_media_cost", "alias": "rental_tenant_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4b461dca80920707f9abd87e812d5eb5463ebd0154aa853a29cabe7270b0b538"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7027462, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_reservations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations"], "unique_id": "model.houm.rental_tenant_metric_reservations", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "name": "rental_tenant_metric_reservations", "alias": "rental_tenant_metric_reservations", "checksum": {"name": "sha256", "checksum": "04f120cf9f93ddcd93ecf37eff2f0ab3cae3acd1cda5fd5cf5c90859f922f235"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.707312, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\""}, "model.houm.rental_tenant_metric_schedules_unfinished": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_unfinished"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_unfinished"], "unique_id": "model.houm.rental_tenant_metric_schedules_unfinished", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_unfinished') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "name": "rental_tenant_metric_schedules_unfinished", "alias": "rental_tenant_metric_schedules_unfinished", "checksum": {"name": "sha256", "checksum": "8c2e049fc07dea3c068c78fca00e55ad78845767e4c543fad09997234d9579f9"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_unfinished"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.711116, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_unfinished\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_unfinished\""}, "model.houm.sales_buyer_metric_bid_rejected": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_bid_rejected"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_bid_rejected"], "unique_id": "model.houm.sales_buyer_metric_bid_rejected", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_bid_rejected') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'bid_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_bid_rejected.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_bid_rejected.sql", "name": "sales_buyer_metric_bid_rejected", "alias": "sales_buyer_metric_bid_rejected", "checksum": {"name": "sha256", "checksum": "be2302534991eb87ed06a8e8f431421e0818c0036b6c72f6d6c8af4645c5f70c"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_bid_rejected"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_bid_rejected.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.715002, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_rejected\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN bid_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN bid_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN bid_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN bid_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN bid_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN bid_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN bid_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN bid_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN bid_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_rejected\""}, "model.houm.sales_investor_metric_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_created"], "unique_id": "model.houm.sales_investor_metric_schedules_created", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n   * \nFROM {{ ref('sales_investor_metric_details_schedules_created') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_created.sql", "name": "sales_investor_metric_schedules_created", "alias": "sales_investor_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "39d941d4c08b637469b38ab75182f52a8aa3bc5e6edadae2d42e3db063075ab2"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7188082, "compiled_code": "\n\nWITH metric AS (\nSELECT \n   * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_created\""}, "model.houm.rental_tenant_metric_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_done", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "name": "rental_tenant_metric_schedules_done", "alias": "rental_tenant_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "d9f89e115f9c3c887a359a816e87b80ea070feabaae8feca0328681ca8cc93e8"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.722731, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\""}, "model.houm.sales_investor_metric_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_paid_media_cost"], "unique_id": "model.houm.sales_investor_metric_paid_media_cost", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "name": "sales_investor_metric_paid_media_cost", "alias": "sales_investor_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "5aa62489d4b0f729fa2b196cdcec71c1318bb172027f875cda7a858f816ead17"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7265038, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_paid_media_cost\""}, "model.houm.sales_investor_metric_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_done"], "unique_id": "model.houm.sales_investor_metric_schedules_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_schedules_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_done.sql", "name": "sales_investor_metric_schedules_done", "alias": "sales_investor_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "aff8bdc885c31ecd8d12879b8ba716d50b1e57d253070fc5cfabee7b59490d2e"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.730422, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_done\""}, "model.houm.rental_tenant_metric_approved_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_approved_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_approved_eval"], "unique_id": "model.houm.rental_tenant_metric_approved_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_approved_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_approved_eval.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_approved_eval.sql", "name": "rental_tenant_metric_approved_eval", "alias": "rental_tenant_metric_approved_eval", "checksum": {"name": "sha256", "checksum": "a16895dd18aeb986e886e97225a3e1e78b47fc20f4d6168182cbbcbac5a2de54"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_approved_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_approved_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7341871, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_approved_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_approved_eval\""}, "model.houm.rental_tenant_metric_done_time": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_done_time"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_done_time"], "unique_id": "model.houm.rental_tenant_metric_done_time", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_done_time') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_done_time.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_done_time.sql", "name": "rental_tenant_metric_done_time", "alias": "rental_tenant_metric_done_time", "checksum": {"name": "sha256", "checksum": "87e2d8895239d6158cc49760fbf714258d3194f99dbe87e2ad8fafe5e55b088a"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_done_time"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_done_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.737992, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_done_time\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_done_time\""}, "model.houm.rental_tenant_metric_arrived_on_time": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_arrived_on_time"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_arrived_on_time"], "unique_id": "model.houm.rental_tenant_metric_arrived_on_time", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_arrived_on_time') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "name": "rental_tenant_metric_arrived_on_time", "alias": "rental_tenant_metric_arrived_on_time", "checksum": {"name": "sha256", "checksum": "ecb0d149b41a4d1321b5bb98774ea735964df62bcf0ca945188970042127159d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_arrived_on_time"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.742687, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_arrived_on_time\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_arrived_on_time\""}, "model.houm.rental_tenant_metric_total_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_total_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_total_eval"], "unique_id": "model.houm.rental_tenant_metric_total_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_total_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_total_eval.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_total_eval.sql", "name": "rental_tenant_metric_total_eval", "alias": "rental_tenant_metric_total_eval", "checksum": {"name": "sha256", "checksum": "866b83f78bc378307cf46118e97643be19104215d0b5db81045eafdc1777353d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_total_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_total_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.746476, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_total_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_total_eval\""}, "model.houm.sales_buyer_metric_bid_accepted": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_bid_accepted"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_bid_accepted"], "unique_id": "model.houm.sales_buyer_metric_bid_accepted", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_bid_accepted') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'bid_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_bid_accepted.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_bid_accepted.sql", "name": "sales_buyer_metric_bid_accepted", "alias": "sales_buyer_metric_bid_accepted", "checksum": {"name": "sha256", "checksum": "db5034111a0e25c42559ac99adebddaef41b081c1d67a1b905d847f975815074"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_bid_accepted"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_bid_accepted.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.75038, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_accepted\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN bid_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN bid_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN bid_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN bid_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN bid_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN bid_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN bid_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN bid_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN bid_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_accepted\""}, "model.houm.sales_buyer_metric_correct_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_correct_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_correct_visit_done"], "unique_id": "model.houm.sales_buyer_metric_correct_visit_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_correct_visit_done') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "name": "sales_buyer_metric_correct_visit_done", "alias": "sales_buyer_metric_correct_visit_done", "checksum": {"name": "sha256", "checksum": "5b275fd99385a6dabe65060ece34c52c118cf68d177b510829ea797a92f5f949"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_correct_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7541928, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_correct_visit_done\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_correct_visit_done\""}, "model.houm.sales_buyer_metric_bid_with_counter_bid": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_bid_with_counter_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_bid_with_counter_bid"], "unique_id": "model.houm.sales_buyer_metric_bid_with_counter_bid", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_bid_with_counter_bid') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'bid_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_bid_with_counter_bid.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_bid_with_counter_bid.sql", "name": "sales_buyer_metric_bid_with_counter_bid", "alias": "sales_buyer_metric_bid_with_counter_bid", "checksum": {"name": "sha256", "checksum": "fe4a25117e79e607bafb883f80f5277c46b30869223644dc3029998041ec0d45"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_bid_with_counter_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_bid_with_counter_bid.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.758112, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_with_counter_bid\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN bid_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN bid_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN bid_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN bid_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN bid_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN bid_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN bid_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN bid_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN bid_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_with_counter_bid\""}, "model.houm.rental_tenant_metric_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_new_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_subs"], "unique_id": "model.houm.rental_tenant_metric_new_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_new_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_subs.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "name": "rental_tenant_metric_new_subs", "alias": "rental_tenant_metric_new_subs", "checksum": {"name": "sha256", "checksum": "407cd3f91d7c64a0931d619478d124a240083630e14d27b04e8c65cc9d4ee932"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7619042, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\""}, "model.houm.rental_tenant_metric_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled", "raw_code": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "name": "rental_tenant_metric_schedules_scheduled", "alias": "rental_tenant_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "e227f76e393eeba2eac39a6eaef0bee93895cc74e7b4f588723f5bc12db0e267"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.765815, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\""}, "model.houm.rental_tenant_metric_reservations_effective": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations_effective"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_reservations_effective", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations_effective') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "name": "rental_tenant_metric_reservations_effective", "alias": "rental_tenant_metric_reservations_effective", "checksum": {"name": "sha256", "checksum": "805df390ecbe26aeab9814d2deaeb38359a08e71f9a5720b26cb025fe6fed034"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_effective"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.769585, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\""}, "model.houm.sales_investor_metric_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads_qualified"], "unique_id": "model.houm.sales_investor_metric_leads_qualified", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "name": "sales_investor_metric_leads_qualified", "alias": "sales_investor_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "27d8d442c392edae39ba94ad0c70110ef98c57f96804b5e623d53ae988ae4709"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7742348, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified\""}, "model.houm.rental_tenant_metric_ongoing_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_ongoing_eval"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_ongoing_eval"], "unique_id": "model.houm.rental_tenant_metric_ongoing_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_ongoing_eval') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'evaluation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_ongoing_eval.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_ongoing_eval.sql", "name": "rental_tenant_metric_ongoing_eval", "alias": "rental_tenant_metric_ongoing_eval", "checksum": {"name": "sha256", "checksum": "a13eaf69ef41ef088073bf3ef9d23477e5a5aa21fec0bfa831f40c73c819eb3a"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_ongoing_eval"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_ongoing_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7781188, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_ongoing_eval\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN evaluation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN evaluation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN evaluation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN evaluation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN evaluation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN evaluation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN evaluation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN evaluation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN evaluation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_ongoing_eval\""}, "model.houm.sales_investor_metric_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_scheduled"], "unique_id": "model.houm.sales_investor_metric_schedules_scheduled", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_schedules_scheduled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "name": "sales_investor_metric_schedules_scheduled", "alias": "sales_investor_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "b7bd6c07a74706d1a625a3f6119df21557a4df03b0db8918cecbff3fada14b89"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.781919, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_scheduled\""}, "model.houm.sales_buyer_metric_schedules_second_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_second_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_second_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_second_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_schedules_second_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_second_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_second_done.sql", "name": "sales_buyer_metric_schedules_second_done", "alias": "sales_buyer_metric_schedules_second_done", "checksum": {"name": "sha256", "checksum": "4dd9869862f40817bb1f06395fcf172942458b81491f11efb83fa07f37b3b2f8"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_second_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_second_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.785853, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_second_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_second_done\""}, "model.houm.rental_tenant_metric_schedules_cancelled_at": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_cancelled_at"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_cancelled_at"], "unique_id": "model.houm.rental_tenant_metric_schedules_cancelled_at", "raw_code": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_cancelled_at') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "name": "rental_tenant_metric_schedules_cancelled_at", "alias": "rental_tenant_metric_schedules_cancelled_at", "checksum": {"name": "sha256", "checksum": "22a30967e9429ef1fb5d3422556f6ea03859eccdae7c3b3c690f43f9000625a6"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_cancelled_at"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1675970036.7896671, "compiled_code": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled_at\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled_at\""}, "model.houm.rental_tenant_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum", "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants", "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_new_subs", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_total_eval", "model.houm.rental_tenant_metric_approved_eval", "model.houm.rental_tenant_metric_ongoing_eval", "model.houm.rental_tenant_metric_rejected_eval", "model.houm.rental_tenant_metric_lost_eval", "model.houm.rental_tenant_metric_schedules_first_done", "model.houm.rental_tenant_metric_schedules_second_done", "model.houm.rental_tenant_metric_schedules_third_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_tenant_funnel"], "unique_id": "model.houm.rental_tenant_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions_markethoum') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions_portalapplicants') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions_whatsapp') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_effective') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_refunded') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_tenant') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_subs') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_total_eval') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_approved_eval') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_ongoing_eval') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_rejected_eval') }}    \n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_lost_eval') }}\n    UNION ALL \n    SELECT *\n    FROM {{ ref('rental_tenant_metric_schedules_first_done') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_tenant_metric_schedules_second_done') }}\n    UNION ALL \n    SELECT *\n    FROM {{ ref('rental_tenant_metric_schedules_third_done') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "name": "rental_tenant_funnel", "alias": "rental_tenant_funnel", "checksum": {"name": "sha256", "checksum": "e2c9b0e6d93fcf693a8a20100a42e093f057c5a809e9754ac933de943aa0bd1e"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_portal_leads"], ["rental_tenant_metric_portal_leads_interactions"], ["rental_tenant_metric_portal_leads_interactions_markethoum"], ["rental_tenant_metric_portal_leads_interactions_portalapplicants"], ["rental_tenant_metric_portal_leads_interactions_whatsapp"], ["rental_tenant_metric_paid_media_cost"], ["rental_tenant_metric_schedules_created"], ["rental_tenant_metric_schedules_done"], ["rental_tenant_metric_schedules_scheduled"], ["rental_tenant_metric_reservations"], ["rental_tenant_metric_reservations_effective"], ["rental_tenant_metric_reservations_refunded"], ["rental_tenant_metric_new_tenant"], ["rental_tenant_metric_new_subs"], ["rental_tenant_metric_correct_visit_done"], ["rental_tenant_metric_total_eval"], ["rental_tenant_metric_approved_eval"], ["rental_tenant_metric_ongoing_eval"], ["rental_tenant_metric_rejected_eval"], ["rental_tenant_metric_lost_eval"], ["rental_tenant_metric_schedules_first_done"], ["rental_tenant_metric_schedules_second_done"], ["rental_tenant_metric_schedules_third_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.793597, "compiled_code": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_markethoum\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_portalapplicants\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions_whatsapp\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_total_eval\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_approved_eval\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_ongoing_eval\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_rejected_eval\"    \n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_lost_eval\"\n    UNION ALL \n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_first_done\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_second_done\"\n    UNION ALL \n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_third_done\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2023-02-09 16:13:54.685542-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_funnel\""}, "model.houm.rental_real_time_ops_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_schedules_scheduled_organic", "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_schedules_scheduled_admin", "model.houm.rental_tenant_metric_schedules_cancelled", "model.houm.rental_tenant_metric_schedules_cancelled_at", "model.houm.rental_tenant_metric_schedules_unfinished", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_real_time_ops_funnel"], "unique_id": "model.houm.rental_real_time_ops_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_organic') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_autoscheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_admin') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_cancelled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_cancelled_at') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_unfinished') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_effective') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_refunded') }}\n    \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "name": "rental_real_time_ops_funnel", "alias": "rental_real_time_ops_funnel", "checksum": {"name": "sha256", "checksum": "0dd24e8d6f44b25b797c7d7fce3a728f61dfb7bcae6bbdb1e358b300fbd63ab9"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_schedules_created"], ["rental_tenant_metric_schedules_scheduled"], ["rental_tenant_metric_schedules_scheduled_organic"], ["rental_tenant_metric_schedules_scheduled_autoscheduled"], ["rental_tenant_metric_schedules_scheduled_admin"], ["rental_tenant_metric_schedules_cancelled"], ["rental_tenant_metric_schedules_cancelled_at"], ["rental_tenant_metric_schedules_unfinished"], ["rental_tenant_metric_schedules_done"], ["rental_tenant_metric_reservations"], ["rental_tenant_metric_reservations_effective"], ["rental_tenant_metric_reservations_refunded"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.801621, "compiled_code": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_organic\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_autoscheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_admin\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled_at\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_unfinished\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\"\n    \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2023-02-09 16:13:54.685542-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_real_time_ops_funnel\""}, "model.houm.rental_landlord_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.rental_landlord_metric_new_subs", "model.houm.rental_landlord_metric_subs", "model.houm.rental_landlord_metric_republished_subs", "model.houm.rental_landlord_metric_renewal_subs", "model.houm.rental_landlord_metric_new_subs_brokerage", "model.houm.rental_landlord_metric_new_subs_non_brokerage", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_landlord_funnel"], "unique_id": "model.houm.rental_landlord_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_paid_media_cost') }}\n    UNION ALL    \n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing_b2c') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_new_subs') }} \n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_subs') }} \n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_republished_subs') }} \n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_renewal_subs') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_new_subs_brokerage') }} \n    UNION ALL\n    SELECT *\n    FROM {{ ref('rental_landlord_metric_new_subs_non_brokerage') }} \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "name": "rental_landlord_funnel", "alias": "rental_landlord_funnel", "checksum": {"name": "sha256", "checksum": "de1442fa989ec57ba794f052a1c5e8885c608dd0f0012209453a3675234233ab"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_landlord_metric_leads"], ["rental_landlord_metric_leads_qualified"], ["rental_landlord_metric_leads_qualified_date"], ["rental_landlord_metric_paid_media_cost"], ["rental_landlord_metric_photo_created"], ["rental_landlord_metric_photo_done"], ["rental_landlord_metric_photo_scheduled"], ["rental_landlord_metric_new_rental_listing"], ["rental_landlord_metric_new_rental_listing_b2c"], ["rental_landlord_metric_new_subs"], ["rental_landlord_metric_subs"], ["rental_landlord_metric_republished_subs"], ["rental_landlord_metric_renewal_subs"], ["rental_landlord_metric_new_subs_brokerage"], ["rental_landlord_metric_new_subs_non_brokerage"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.8080509, "compiled_code": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\"\n    UNION ALL    \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs\" \n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_subs\" \n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_republished_subs\" \n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_renewal_subs\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs_brokerage\" \n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_subs_non_brokerage\" \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2023-02-09 16:13:54.685542-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_funnel\""}, "model.houm.rental_real_time_ops_funnel_timing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_arrived_on_time", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_correct_visit_finished", "model.houm.rental_tenant_metric_done_time", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_real_time_ops_funnel_timing"], "unique_id": "model.houm.rental_real_time_ops_funnel_timing", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_arrived_on_time') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_finished') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_done_time') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "name": "rental_real_time_ops_funnel_timing", "alias": "rental_real_time_ops_funnel_timing", "checksum": {"name": "sha256", "checksum": "55dec969762fb81998e624f05a3277b51fc0e4f4e304c597afec957994e86bb4"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_arrived_on_time"], ["rental_tenant_metric_correct_visit_done"], ["rental_tenant_metric_correct_visit_finished"], ["rental_tenant_metric_done_time"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.815545, "compiled_code": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_arrived_on_time\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_finished\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_done_time\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2023-02-09 16:13:54.685542-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_real_time_ops_funnel_timing\""}, "model.houm.sales_buyer_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_demand_metric_leads", "model.houm.sales_buyer_metric_leads", "model.houm.sales_buyer_metric_leads_qualified", "model.houm.sales_buyer_metric_leads_qualified_date", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.sales_buyer_metric_correct_visit_done", "model.houm.sales_buyer_metric_generated_links", "model.houm.sales_buyer_metric_bid_realized", "model.houm.sales_buyer_metric_bid_without_response", "model.houm.sales_buyer_metric_bid_rejected", "model.houm.sales_buyer_metric_bid_with_counter_bid", "model.houm.sales_buyer_metric_bid_accepted", "model.houm.sales_buyer_metric_schedules_first_done", "model.houm.sales_buyer_metric_schedules_second_done", "model.houm.sales_buyer_metric_schedules_third_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_buyer_funnel"], "unique_id": "model.houm.sales_buyer_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_correct_visit_done') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_generated_links') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_bid_realized') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_bid_without_response') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_bid_rejected') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_bid_with_counter_bid') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_bid_accepted') }}\n    UNION ALL \n    SELECT *\n    FROM {{ ref('sales_buyer_metric_schedules_first_done') }}\n    UNION ALL \n    SELECT *\n    FROM {{ ref('sales_buyer_metric_schedules_second_done') }}\n    UNION ALL \n    SELECT *\n    FROM {{ ref('sales_buyer_metric_schedules_third_done') }}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n   '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_buyer_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "name": "sales_buyer_funnel", "alias": "sales_buyer_funnel", "checksum": {"name": "sha256", "checksum": "1a1aac5e5016c5170d2b4ff6ae0b86934c8ff59673396c500d4d7d0306cd50e0"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_demand_metric_paid_media_cost"], ["sales_buyer_metric_paid_media_cost"], ["sales_demand_metric_leads"], ["sales_buyer_metric_leads"], ["sales_buyer_metric_leads_qualified"], ["sales_buyer_metric_leads_qualified_date"], ["sales_buyer_metric_schedules_created"], ["sales_buyer_metric_schedules_done"], ["sales_buyer_metric_schedules_scheduled"], ["sales_buyer_metric_correct_visit_done"], ["sales_buyer_metric_generated_links"], ["sales_buyer_metric_bid_realized"], ["sales_buyer_metric_bid_without_response"], ["sales_buyer_metric_bid_rejected"], ["sales_buyer_metric_bid_with_counter_bid"], ["sales_buyer_metric_bid_accepted"], ["sales_buyer_metric_schedules_first_done"], ["sales_buyer_metric_schedules_second_done"], ["sales_buyer_metric_schedules_third_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.820696, "compiled_code": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_correct_visit_done\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_generated_links\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_realized\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_without_response\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_rejected\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_with_counter_bid\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_bid_accepted\"\n    UNION ALL \n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_first_done\"\n    UNION ALL \n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_second_done\"\n    UNION ALL \n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_third_done\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_funnel\""}, "model.houm.sales_company_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_company_metric_new_project_listing", "model.houm.sales_company_metric_new_units_listing", "model.houm.sales_company_metric_new_unittypes_listing", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_company_funnel"], "unique_id": "model.houm.sales_company_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_project_listing') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_units_listing') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_unittypes_listing')}}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,  \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_company_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_company_funnel.sql", "name": "sales_company_funnel", "alias": "sales_company_funnel", "checksum": {"name": "sha256", "checksum": "b72b79ee3bf5622d4708fea6b59317a97abf631fd896e48dffbe64ce49161394"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_company_metric_new_project_listing"], ["sales_company_metric_new_units_listing"], ["sales_company_metric_new_unittypes_listing"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_company_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.828012, "compiled_code": "\n\nWITH metrics AS (\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_project_listing\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_units_listing\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_unittypes_listing\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,  \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_funnel\""}, "model.houm.sales_seller_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_seller_funnel"], "unique_id": "model.houm.sales_seller_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_seller_metric_paid_media_cost') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified_date') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_created') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_done') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_scheduled') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing_b2c') }}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_seller_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "name": "sales_seller_funnel", "alias": "sales_seller_funnel", "checksum": {"name": "sha256", "checksum": "fc45c59693b6e252b336fd6b0967ef262784f34d70031a9c3b8ca9d70d769546"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_seller_metric_paid_media_cost"], ["sales_seller_metric_leads"], ["sales_seller_metric_leads_qualified"], ["sales_seller_metric_leads_qualified_date"], ["sales_seller_metric_photo_created"], ["sales_seller_metric_photo_done"], ["sales_seller_metric_photo_scheduled"], ["sales_seller_metric_new_sale_listing"], ["sales_seller_metric_new_sale_listing_b2c"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.8330529, "compiled_code": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_funnel\""}, "model.houm.sales_investor_funnel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_investor_metric_paid_media_cost", "model.houm.sales_demand_metric_leads", "model.houm.sales_investor_metric_leads", "model.houm.sales_investor_metric_leads_qualified", "model.houm.sales_investor_metric_leads_qualified_date", "model.houm.sales_investor_metric_schedules_created", "model.houm.sales_investor_metric_schedules_scheduled", "model.houm.sales_investor_metric_schedules_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_investor_funnel"], "unique_id": "model.houm.sales_investor_funnel", "raw_code": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_done') }}\n)\n\nSELECT \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_investor_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_investor_funnel.sql", "name": "sales_investor_funnel", "alias": "sales_investor_funnel", "checksum": {"name": "sha256", "checksum": "0932d7c320bcbf859176268fdb89882aa8a043c8a8a3a209399eb7a1d6b8b941"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_demand_metric_paid_media_cost"], ["sales_investor_metric_paid_media_cost"], ["sales_demand_metric_leads"], ["sales_investor_metric_leads"], ["sales_investor_metric_leads_qualified"], ["sales_investor_metric_leads_qualified_date"], ["sales_investor_metric_schedules_created"], ["sales_investor_metric_schedules_scheduled"], ["sales_investor_metric_schedules_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_investor_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1675970036.838801, "compiled_code": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_done\"\n)\n\nSELECT \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_funnel\""}, "model.houm.dim_currency": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_currency"], "unique_id": "model.houm.dim_currency", "raw_code": "{{ config(materialized='incremental') }}\r\n\r\nwith usd_etl as (\r\n        SELECT getdate()::timestamp  as etl_time,\r\n                current_date::date as date \r\n                ,'USD' as currency_type\r\n                ,'US Dollar' as currency_name \r\n                ,'United State' as currency_country\r\n                ,'1'::float as value_usd\r\n)\r\n, clp_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,  current_date::date as date \r\n            ,'CLP' as currency_type\r\n            ,'Chilean Peso' as currency_name\r\n            ,'Chile' as currency_country\r\n            ,'813.01'::float as value_usd\r\n)\r\n, cop_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,current_date::date as date\r\n            ,'COP' as currency_type\r\n            ,'Colombian Peso' as currency_name\r\n            ,'Colombia' as currency_country\r\n            ,'3826.18'::float as value_usd\r\n)\r\nSELECT * FROM usd_etl\r\nUNION ALL\r\nSELECT * FROM clp_etl\r\nUNION ALL\r\nSELECT * FROM cop_etl", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_currency.sql", "original_file_path": "models/dwh/dims/dim_currency.sql", "name": "dim_currency", "alias": "dim_currency", "checksum": {"name": "sha256", "checksum": "177dc3a0f203d96dd2b03bf18b57f89503c9a8893324bc155fe0558c2c16be10"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_currency.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "incremental"}, "created_at": 1675970036.844688, "compiled_code": "\n\nwith usd_etl as (\n        SELECT getdate()::timestamp  as etl_time,\n                current_date::date as date \n                ,'USD' as currency_type\n                ,'US Dollar' as currency_name \n                ,'United State' as currency_country\n                ,'1'::float as value_usd\n)\n, clp_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,  current_date::date as date \n            ,'CLP' as currency_type\n            ,'Chilean Peso' as currency_name\n            ,'Chile' as currency_country\n            ,'813.01'::float as value_usd\n)\n, cop_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,current_date::date as date\n            ,'COP' as currency_type\n            ,'Colombian Peso' as currency_name\n            ,'Colombia' as currency_country\n            ,'3826.18'::float as value_usd\n)\nSELECT * FROM usd_etl\nUNION ALL\nSELECT * FROM clp_etl\nUNION ALL\nSELECT * FROM cop_etl", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_currency\""}, "model.houm.dim_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_properties"], "unique_id": "model.houm.dim_properties", "raw_code": "SELECT \r\n        properties.id AS property_id ,\r\n        propertydetails.status AS rental_status,\r\n        salesdetails.status AS sales_status,\r\n        properties.*\r\nFROM {{ ref('proc_properties') }} AS properties\r\nLEFT JOIN {{ ref('proc_propertydetails') }} AS propertydetails\r\n        ON properties.id = propertydetails.property_id \r\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS salesdetails \r\n        ON properties.id = salesdetails.property_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_properties.sql", "original_file_path": "models/dwh/dims/dim_properties.sql", "name": "dim_properties", "alias": "dim_properties", "checksum": {"name": "sha256", "checksum": "a8140c7ffec383758d337fbdfcc21cacd286d165a744aa91ff9eb69f417d4601"}, "tags": ["dw", "dims"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.8463318, "compiled_code": "SELECT \n        properties.id AS property_id ,\n        propertydetails.status AS rental_status,\n        salesdetails.status AS sales_status,\n        properties.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" AS propertydetails\n        ON properties.id = propertydetails.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS salesdetails \n        ON properties.id = salesdetails.property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_properties\""}, "model.houm.dim_macrozones": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_macrozones"], "unique_id": "model.houm.dim_macrozones", "raw_code": "SELECT \r\n        geo_id,\r\n        created_at,\r\n        updated_at,\r\n        name,\r\n        description,\r\n        country,\r\n        polygon,\r\n        city,\r\n        city_marketplace_id,\r\n        timezone,\r\n        country_sufix,\r\n        Region_Houm,\r\n        City_Houm, \r\n        is_test \r\nFROM {{ ref('proc_macrozone') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_macrozones.sql", "original_file_path": "models/dwh/dims/dim_macrozones.sql", "name": "dim_macrozones", "alias": "dim_macrozones", "checksum": {"name": "sha256", "checksum": "4da348da90d96781c1a441337ac597fe904cc3d0efc8e7ecb729a7d0ca44873a"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {"macrozone": {"name": "macrozone", "description": "This is operational name of a polygon at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/dwh/dims/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/dims/dim_macrozones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970038.733524, "compiled_code": "SELECT \n        geo_id,\n        created_at,\n        updated_at,\n        name,\n        description,\n        country,\n        polygon,\n        city,\n        city_marketplace_id,\n        timezone,\n        country_sufix,\n        Region_Houm,\n        City_Houm, \n        is_test \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\""}, "model.houm.dim_locations_houm": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_locations_houm"], "unique_id": "model.houm.dim_locations_houm", "raw_code": "SELECT \n    *\nFROM {{ref('seed_dim_locations_houm')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_locations_houm.sql", "original_file_path": "models/dwh/dims/dim_locations_houm.sql", "name": "dim_locations_houm", "alias": "dim_locations_houm", "checksum": {"name": "sha256", "checksum": "c5089052208f1739435575a59221e58ffac072b29ef1382c0308350ebfe73dde"}, "tags": ["dw", "dims"], "refs": [["seed_dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_locations_houm.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.849599, "compiled_code": "SELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_dim_locations_houm\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\""}, "model.houm.dim_ipc": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_ipc"], "unique_id": "model.houm.dim_ipc", "raw_code": "SELECT \n    CASE \n        WHEN IS_VALID_JSON(_id) THEN JSON_EXTRACT_PATH_TEXT( _id, '$oid') \n        ELSE NULL \n    END AS id, \n    date AS thedate, \n    save_date,\n    value::FLOAT \nFROM mongo_tables.payments_cl_db_monthly_ipc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_ipc.sql", "original_file_path": "models/dwh/dims/dim_ipc.sql", "name": "dim_ipc", "alias": "dim_ipc", "checksum": {"name": "sha256", "checksum": "1e2232a958dd7b61176e08b5b3dd246b27c8d3d042a6debb6c45f393051b78a5"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_ipc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.851305, "compiled_code": "SELECT \n    CASE \n        WHEN IS_VALID_JSON(_id) THEN JSON_EXTRACT_PATH_TEXT( _id, '$oid') \n        ELSE NULL \n    END AS id, \n    date AS thedate, \n    save_date,\n    value::FLOAT \nFROM mongo_tables.payments_cl_db_monthly_ipc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_ipc\""}, "model.houm.dim_base_metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.dim_dates", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_base_metrics"], "unique_id": "model.houm.dim_base_metrics", "raw_code": "SELECT \n   country,\n   region,\n   city,\n   dim_dates.full_date::DATE\nFROM {{ref('dim_dates')}} AS dim_dates\nCROSS JOIN {{ref('dim_locations_houm')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_base_metrics.sql", "original_file_path": "models/dwh/dims/dim_base_metrics.sql", "name": "dim_base_metrics", "alias": "dim_base_metrics", "checksum": {"name": "sha256", "checksum": "0defb65d74e1802e56e3fd7c2823b6d24cebb3b651598533e8650c63d185dc08"}, "tags": ["dw", "dims"], "refs": [["dim_dates"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_base_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.852834, "compiled_code": "SELECT \n   country,\n   region,\n   city,\n   dim_dates.full_date::DATE\nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_dates\" AS dim_dates\nCROSS JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_base_metrics\""}, "model.houm.dim_cities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_cities"], "unique_id": "model.houm.dim_cities", "raw_code": "SELECT  \ndistinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) AS geo_id,\n\tmax(timezone) AS timezone\nFROM {{ref('proc_macrozone')}}\nGROUP BY 1,2", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_cities.sql", "original_file_path": "models/dwh/dims/dim_cities.sql", "name": "dim_cities", "alias": "dim_cities", "checksum": {"name": "sha256", "checksum": "0813581fab1322e7822137fa7eb8a1f2da489321415c2f431d5cf1d79ad253fb"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.8545768, "compiled_code": "SELECT  \ndistinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) AS geo_id,\n\tmax(timezone) AS timezone\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"\nGROUP BY 1,2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_cities\""}, "model.houm.dim_dates": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_dim_dates"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_dates"], "unique_id": "model.houm.dim_dates", "raw_code": "{{ config(materialized='table') }}\r\n\r\nSELECT \r\n  *\r\nFROM {{ref('seed_dim_dates')}}\r\n\r\n/*\r\n-- This is the query that create the csv for the seed. \r\n SELECT\r\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\r\n-- DATE\r\n    datum                                                         AS full_date,\r\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\r\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\r\n-- YEAR\r\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\r\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\r\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\r\n-- QUARTER\r\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\r\n-- MONTH\r\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\r\n    to_char(datum, 'Month')                                       AS month_name,\r\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\r\n-- WEEK\r\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\r\n-- DAY\r\n    to_char(datum, 'Day')                                         AS day_name,\r\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\r\n      THEN 0\r\n    ELSE 1 END                                                    AS day_is_weekday,\r\n    CASE WHEN\r\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\r\n                        INTERVAL '1' MONTH) :: DATE -\r\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\r\n      THEN 1\r\n    ELSE 0 END                                                    AS day_is_last_of_month ,\r\n-- YEAR\r\n    cast(TO_CHAR(datum, 'IYYY') AS SMALLINT)                   AS iso_year_number ,\r\n    cast(TO_CHAR(datum, 'IW')  AS SMALLINT)                    AS iso_year_week_number ,\r\n    TO_CHAR(datum, 'IYYY-IW')                                  AS iso_year_week_name\r\n  FROM\r\n    (\r\n      SELECT\r\n        '2017-01-01' :: DATE + generate_series AS datum,\r\n        generate_series                        AS seq\r\n      FROM generate_series(0, 8 * 365, 1)\r\n    ) DQ\r\n  ORDER BY 1 desc\r\n*/", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_dates.sql", "original_file_path": "models/dwh/dims/dim_dates.sql", "name": "dim_dates", "alias": "dim_dates", "checksum": {"name": "sha256", "checksum": "e603ac9172004d6865690e97b5490e9f452ea6118ac49080546c2fdabce7467a"}, "tags": ["dw", "dims"], "refs": [["seed_dim_dates"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_dates.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1675970036.856145, "compiled_code": "\n\nSELECT \n  *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_dim_dates\"\n\n/*\n-- This is the query that create the csv for the seed. \n SELECT\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\n-- DATE\n    datum                                                         AS full_date,\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\n-- YEAR\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\n-- QUARTER\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\n-- MONTH\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\n    to_char(datum, 'Month')                                       AS month_name,\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\n-- WEEK\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\n-- DAY\n    to_char(datum, 'Day')                                         AS day_name,\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\n      THEN 0\n    ELSE 1 END                                                    AS day_is_weekday,\n    CASE WHEN\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\n                        INTERVAL '1' MONTH) :: DATE -\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\n      THEN 1\n    ELSE 0 END                                                    AS day_is_last_of_month ,\n-- YEAR\n    cast(TO_CHAR(datum, 'IYYY') AS SMALLINT)                   AS iso_year_number ,\n    cast(TO_CHAR(datum, 'IW')  AS SMALLINT)                    AS iso_year_week_number ,\n    TO_CHAR(datum, 'IYYY-IW')                                  AS iso_year_week_name\n  FROM\n    (\n      SELECT\n        '2017-01-01' :: DATE + generate_series AS datum,\n        generate_series                        AS seq\n      FROM generate_series(0, 8 * 365, 1)\n    ) DQ\n  ORDER BY 1 desc\n*/", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_dates\""}, "model.houm.dim_uf_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.dim_dates"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_uf_cl"], "unique_id": "model.houm.dim_uf_cl", "raw_code": "WITH lost_values AS (\nSELECT \n    *\nFROM (\n        SELECT '2021-08-10'::DATE, 29773.93  UNION ALL\n        SELECT '2021-09-10'::DATE, 30008.40  \n    ) AS aux\n    (fecha, valor )\n)\n\n, dim_uf AS (\nSELECT \n    dim_dates.full_date,\n    COALESCE( economic_indicator_uf.valor, lost_values.valor ) AS uf_to_cl \nFROM {{ ref('dim_dates') }} AS dim_dates \nLEFT JOIN economic_indicator_uf\n    ON economic_indicator_uf.fecha = dim_dates.full_date   \nLEFT JOIN lost_values\n    ON lost_values.fecha = dim_dates.full_date\n)\n\nSELECT \n    *,\n    FIRST_VALUE( full_date ) over( ) AS last_full_date,\n    FIRST_VALUE( uf_to_cl ) over( ) AS last_value_uf_to_cl \nFROM dim_uf\nWHERE uf_to_cl IS NOT NULL", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_uf_cl.sql", "original_file_path": "models/dwh/dims/dim_uf_cl.sql", "name": "dim_uf_cl", "alias": "dim_uf_cl", "checksum": {"name": "sha256", "checksum": "18c5b9d3045f2d3af7c3f674a30ffa32bfde99b7cd029f414b3ab3590808befc"}, "tags": ["dw", "dims"], "refs": [["dim_dates"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_uf_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.85801, "compiled_code": "WITH lost_values AS (\nSELECT \n    *\nFROM (\n        SELECT '2021-08-10'::DATE, 29773.93  UNION ALL\n        SELECT '2021-09-10'::DATE, 30008.40  \n    ) AS aux\n    (fecha, valor )\n)\n\n, dim_uf AS (\nSELECT \n    dim_dates.full_date,\n    COALESCE( economic_indicator_uf.valor, lost_values.valor ) AS uf_to_cl \nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_dates\" AS dim_dates \nLEFT JOIN economic_indicator_uf\n    ON economic_indicator_uf.fecha = dim_dates.full_date   \nLEFT JOIN lost_values\n    ON lost_values.fecha = dim_dates.full_date\n)\n\nSELECT \n    *,\n    FIRST_VALUE( full_date ) over( ) AS last_full_date,\n    FIRST_VALUE( uf_to_cl ) over( ) AS last_value_uf_to_cl \nFROM dim_uf\nWHERE uf_to_cl IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_uf_cl\""}, "model.houm.dim_locations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.dim_polygons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_locations"], "unique_id": "model.houm.dim_locations", "raw_code": "SELECT  \r\n        id,\r\n        created_at,\r\n        updated_at,\r\n        macrozone,\r\n        city,\r\n        region,\r\n        country,\r\n        description,\r\n        granularity,\r\n        polygon\r\nFROM {{ source('public', 'dim_polygons') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_locations.sql", "original_file_path": "models/dwh/dims/dim_locations.sql", "name": "dim_locations", "alias": "dim_locations", "checksum": {"name": "sha256", "checksum": "853122210c9981677897b8874bdb0a5f19f2e58dbc6910f60dc1221228e20baf"}, "tags": ["dw", "dims"], "refs": [], "sources": [["public", "dim_polygons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_locations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.859583, "compiled_code": "SELECT  \n        id,\n        created_at,\n        updated_at,\n        macrozone,\n        city,\n        region,\n        country,\n        description,\n        granularity,\n        polygon\nFROM \"houmdw_prod\".\"public\".\"dim_polygons\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_locations\""}, "model.houm.dim_portafolio_purchase": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_propiedades_axion"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_portafolio_purchase"], "unique_id": "model.houm.dim_portafolio_purchase", "raw_code": "SELECT \n    *\nFROM {{ref('seed_propiedades_axion')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_portafolio_purchase.sql", "original_file_path": "models/dwh/dims/dim_portafolio_purchase.sql", "name": "dim_portafolio_purchase", "alias": "dim_portafolio_purchase", "checksum": {"name": "sha256", "checksum": "341ccc04091ddce50ebb0adb809b457c9dac1c7c57e5656a9b7ca5df9edf2b16"}, "tags": ["dw", "dims"], "refs": [["seed_propiedades_axion"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_portafolio_purchase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"]}, "created_at": 1675970036.862091, "compiled_code": "SELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_propiedades_axion\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_portafolio_purchase\""}, "model.houm.rental_landlord_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "name": "rental_landlord_metric_details_paid_media_cost", "alias": "rental_landlord_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "019f304f9a1ae14d7cd10913de86a2bc03cb246b1de5ac4bc3477ee9279b187d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.863669, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\""}, "model.houm.sales_seller_metric_details_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified_date", "raw_code": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( supply_qualification in (3,4,5,6) )\n  AND ( supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'supply_qualification_date') }}\nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "name": "sales_seller_metric_details_leads_qualified_date", "alias": "sales_seller_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "95cdaf1f4cc383aac3ac2019a1a739994fb7376f1e9c21ea502eeb7cd61cf442"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.8791559, "compiled_code": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( supply_qualification in (3,4,5,6) )\n  AND ( supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', supply_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',supply_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',supply_qualification_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND supply_qualification_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND supply_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\""}, "model.houm.rental_landlord_metric_details_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_subs"], "unique_id": "model.houm.rental_landlord_metric_details_new_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH new_subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM new_subs\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_subs.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_subs.sql", "name": "rental_landlord_metric_details_new_subs", "alias": "rental_landlord_metric_details_new_subs", "checksum": {"name": "sha256", "checksum": "a7a6522f9665b2b9d22f9787b9b9bda8bd71d2cba4cd6493620df0bff8de1fdf"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970036.8913121, "compiled_code": "\n\nWITH new_subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM new_subs\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs\""}, "model.houm.sales_seller_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10 AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n     {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "name": "sales_seller_metric_details_paid_media_cost", "alias": "sales_seller_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "fffcda39ae6896487da4299e8bc9de250bc236bd078d6298d0dee85aef9cf88d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.903567, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10 AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n     CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\""}, "model.houm.rental_landlord_metric_details_republished_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_republished_subs"], "unique_id": "model.houm.rental_landlord_metric_details_republished_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH republished AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('REPLUBLISHED', 'REPUBLISHED')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    120::INT AS orden ,\n    'Republished Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM republished\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_republished_subs.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_republished_subs.sql", "name": "rental_landlord_metric_details_republished_subs", "alias": "rental_landlord_metric_details_republished_subs", "checksum": {"name": "sha256", "checksum": "8ca497f3f6bdf5ffc65ce611f39b1012225a002700d1b0dd4e6a6161ae26426d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_republished_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970036.915631, "compiled_code": "\n\nWITH republished AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('REPLUBLISHED', 'REPUBLISHED')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    120::INT AS orden ,\n    'Republished Subs'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM republished\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_republished_subs\""}, "model.houm.sales_seller_metric_details_new_sale_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH sale_properties as (\r\nSELECT \r\n    properties.id AS property_id ,\r\n    properties.country ,\r\n    properties.for_sale ,\r\n    salesdetails.first_publication_date AS date_sales \r\nFROM {{ ref('proc_properties') }} AS properties\r\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS salesdetails ON properties.id =salesdetails.property_id\r\nWHERE TRUE\r\n        AND salesdetails.first_publication_date IS NOT NULL \r\n        AND properties.is_deleted = FALSE  \r\n        AND properties.supply_relation != 'New Properties'\r\n)\r\n\r\n, date_tranformation AS (\r\nSELECT\r\n    80::INT AS orden ,\r\n    'New Sale Listing'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\r\n    sale_properties.property_id \r\nFROM sale_properties\r\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \r\n        ON sale_properties.property_id = prop_mz.property_id \r\nORDER BY date_sales DESC\r\n)\r\n\r\nSELECT\r\n       * , \r\n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\r\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "name": "sales_seller_metric_details_new_sale_listing", "alias": "sales_seller_metric_details_new_sale_listing", "checksum": {"name": "sha256", "checksum": "724e7070fec1b90d3006811367206c7bbe16bf947b97e9616fa425fdbdd8b116"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.927707, "compiled_code": "\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS salesdetails ON properties.id =salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n)\n\n, date_tranformation AS (\nSELECT\n    80::INT AS orden ,\n    'New Sale Listing'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\""}, "model.houm.sales_company_metric_details_new_units_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_units", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_units_listing"], "unique_id": "model.houm.sales_company_metric_details_new_units_listing", "raw_code": "{{ config(materialized='table') }}\n\nWITH new_units_listing AS (\nSELECT  \n    property_id  , \n    unit_id ,\n    unit_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unit_created_at::date , date_sales::date) AS units_publication_date \nFROM  {{ ref('proc_supply_units') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unit_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'New Units Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_units_listing.property_id ,\n    new_units_listing.unit_id \nFROM new_units_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_units_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n       * , \n       {{ create_date_aggregate_columns(thedate = 'units_publication_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "name": "sales_company_metric_details_new_units_listing", "alias": "sales_company_metric_details_new_units_listing", "checksum": {"name": "sha256", "checksum": "e3203cc7f8c115569f8412762e3b6a2747cefa1551698fb3622104f447dcd204"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_units"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.94015, "compiled_code": "\n\nWITH new_units_listing AS (\nSELECT  \n    property_id  , \n    unit_id ,\n    unit_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unit_created_at::date , date_sales::date) AS units_publication_date \nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_units\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unit_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'New Units Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_units_listing.property_id ,\n    new_units_listing.unit_id \nFROM new_units_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_units_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n       * , \n       CASE \n        WHEN units_publication_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', units_publication_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',units_publication_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',units_publication_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND units_publication_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND units_publication_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_units_listing\""}, "model.houm.sales_seller_metric_details_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_done"], "unique_id": "model.houm.sales_seller_metric_details_photo_done", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT  \r\n    70::INT AS orden , \r\n    'SalesPhoto Done'::TEXT AS metric , \r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "name": "sales_seller_metric_details_photo_done", "alias": "sales_seller_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "94bb0ed15a856c7f21ef08b84cf90b436e8b5ee7378e305cade2a75bcf2bd361"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.953121, "compiled_code": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n   AND status = 'Done'\n)\n\nSELECT  \n    70::INT AS orden , \n    'SalesPhoto Done'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\""}, "model.houm.rental_landlord_metric_details_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_done"], "unique_id": "model.houm.rental_landlord_metric_details_photo_done", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT  \r\n    70::INT AS orden , \r\n    'Photo Done'::TEXT AS metric , \r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "name": "rental_landlord_metric_details_photo_done", "alias": "rental_landlord_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "4337f954f1efa5203ab9d719dce37cbea1c640274cb28555f8900d758d93f513"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.965253, "compiled_code": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n   AND status = 'Done'\n)\n\nSELECT  \n    70::INT AS orden , \n    'Photo Done'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\""}, "model.houm.sales_company_metric_details_new_unittypes_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_unittypes", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_unittypes_listing"], "unique_id": "model.houm.sales_company_metric_details_new_unittypes_listing", "raw_code": "{{ config(materialized='table') }}\n\nWITH new_unittypes_listing AS (\nSELECT  \n    property_id  , \n    unit_type_id ,\n    unittype_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unittype_created_at::date , date_sales::date) AS units_publication_date \nFROM  {{ ref('proc_supply_unittypes') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unittype_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'New Unit Types Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_unittypes_listing.property_id ,\n    new_unittypes_listing.unit_type_id\nFROM new_unittypes_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_unittypes_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n    * , \n    {{ create_date_aggregate_columns(thedate = 'units_publication_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "name": "sales_company_metric_details_new_unittypes_listing", "alias": "sales_company_metric_details_new_unittypes_listing", "checksum": {"name": "sha256", "checksum": "8ca580400fae0235c351e5ad25d16e52e772a0c09fcc2383a4c1d799a4681780"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_unittypes"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.9773781, "compiled_code": "\n\nWITH new_unittypes_listing AS (\nSELECT  \n    property_id  , \n    unit_type_id ,\n    unittype_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unittype_created_at::date , date_sales::date) AS units_publication_date \nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unittype_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'New Unit Types Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_unittypes_listing.property_id ,\n    new_unittypes_listing.unit_type_id\nFROM new_unittypes_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_unittypes_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n    * , \n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', units_publication_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',units_publication_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',units_publication_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND units_publication_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND units_publication_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_unittypes_listing\""}, "model.houm.rental_landlord_metric_details_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified", "raw_code": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Landlord Hot Qualified Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::date as add_date ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "name": "rental_landlord_metric_details_leads_qualified", "alias": "rental_landlord_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "355fe774c28943023d7667cb394c318bd4174d8b7e3d14f23cad91416cc1a657"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970036.989734, "compiled_code": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Landlord Hot Qualified Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::date as add_date ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\""}, "model.houm.rental_landlord_metric_details_new_subs_brokerage": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_subs_brokerage"], "unique_id": "model.houm.rental_landlord_metric_details_new_subs_brokerage", "raw_code": "{{ config(materialized='view') }}\n\nWITH transfer_subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason in ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    140::INT AS orden ,\n    'New Subs - With Brokerage'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM transfer_subs\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_subs_brokerage.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_subs_brokerage.sql", "name": "rental_landlord_metric_details_new_subs_brokerage", "alias": "rental_landlord_metric_details_new_subs_brokerage", "checksum": {"name": "sha256", "checksum": "046d2ff2f848e639244c2438df23dd1759b10755613e2f068127caac55850022"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_subs_brokerage.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970037.0018408, "compiled_code": "\n\nWITH transfer_subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason in ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    140::INT AS orden ,\n    'New Subs - With Brokerage'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM transfer_subs\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs_brokerage\""}, "model.houm.sales_seller_metric_details_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified", "raw_code": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND (supply_qualification in (3,4,5,6) )\n  AND (add_time IS NOT NULL)\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "name": "sales_seller_metric_details_leads_qualified", "alias": "sales_seller_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "7d3f51b8b67d1e317afc2379b28691d628f7e890fcb2c853f0a3074de115dc7f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.0138829, "compiled_code": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND (supply_qualification in (3,4,5,6) )\n  AND (add_time IS NOT NULL)\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\""}, "model.houm.rental_landlord_metric_details_new_rental_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH rental_properties AS (\r\nSELECT\r\n    id AS property_id ,\r\n    country ,\r\n    for_rental ,\r\n    first_publication_date AS date_rentals\r\nFROM {{ ref('proc_properties') }} \r\nWHERE TRUE \r\n        AND first_publication_date IS NOT NULL \r\n        AND is_deleted = FALSE \r\n)\r\n\r\n, date_tranformation AS (\r\nSELECT     \r\n    80::INT AS orden ,\r\n    'New Rental Listing'::TEXT AS metric , \r\n    geo_id , \r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\r\n    rental_properties.property_id \r\nFROM rental_properties\r\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz \r\n        ON rental_properties.property_id = prop_mz.property_id \r\nORDER BY date_rentals DESC\r\n)\r\n\r\nSELECT \r\n       * , \r\n       {{ create_date_aggregate_columns(thedate = 'date_rentals') }}\r\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "name": "rental_landlord_metric_details_new_rental_listing", "alias": "rental_landlord_metric_details_new_rental_listing", "checksum": {"name": "sha256", "checksum": "17df1a3c35a9f7aadac7662411cc7c81fc8680bc1590a2919fef929083c28cfb"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.026709, "compiled_code": "\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT     \n    80::INT AS orden ,\n    'New Rental Listing'::TEXT AS metric , \n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id \nFROM rental_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT \n       * , \n       CASE \n        WHEN date_rentals = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_rentals = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_rentals ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_rentals) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_rentals) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND date_rentals <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND date_rentals <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\""}, "model.houm.sales_seller_metric_details_photo_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_details_photo_scheduled", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n)\r\n\r\nSELECT  \r\n    60::INT AS orden , \r\n    'SalesPhoto Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n     {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "name": "sales_seller_metric_details_photo_scheduled", "alias": "sales_seller_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "79fc24dd7b1e3ffcfc1b319676d0daa5501dbd2df0479bc740c2414dbcfcb948"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.039019, "compiled_code": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n)\n\nSELECT  \n    60::INT AS orden , \n    'SalesPhoto Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n     CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\""}, "model.houm.rental_landlord_metric_details_photo_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_details_photo_scheduled", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT \r\n    *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT  \r\n    60::INT AS orden ,\r\n    'Photo Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id , \r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "name": "rental_landlord_metric_details_photo_scheduled", "alias": "rental_landlord_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "0b09a7101bdbba9990226cf29e192e2f9e72628dffa013aca12470359b304792"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.051261, "compiled_code": "\n\nWITH schedules_photo_clean AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n)\n\nSELECT  \n    60::INT AS orden ,\n    'Photo Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    begin_date ,\n    schedule_id , \n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\""}, "model.houm.sales_seller_metric_details_photo_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_created"], "unique_id": "model.houm.sales_seller_metric_details_photo_created", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean as (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n)\r\n\r\nSELECT  \r\n    50::INT AS orden , \r\n    'SalesPhoto Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_photo_clean\r\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "name": "sales_seller_metric_details_photo_created", "alias": "sales_seller_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "e79496c2f4a697b7e600ac73e6939456d94ad5ef0829e296bf52ef5be56cb4b7"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.063485, "compiled_code": "\n\nWITH schedules_photo_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n)\n\nSELECT  \n    50::INT AS orden , \n    'SalesPhoto Created'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\""}, "model.houm.rental_landlord_metric_details_renewal_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_renewal_subs"], "unique_id": "model.houm.rental_landlord_metric_details_renewal_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH renewal AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('RENEWAL')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    130::INT AS orden ,\n    'Renewal Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM renewal\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_renewal_subs.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_renewal_subs.sql", "name": "rental_landlord_metric_details_renewal_subs", "alias": "rental_landlord_metric_details_renewal_subs", "checksum": {"name": "sha256", "checksum": "43ab0db7810ca839f3ffc593ba9b614e02128893b4e999913654b3d2f09fd1cb"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_renewal_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970037.0755682, "compiled_code": "\n\nWITH renewal AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('RENEWAL')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    130::INT AS orden ,\n    'Renewal Subs'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM renewal\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_renewal_subs\""}, "model.houm.sales_seller_metric_details_new_sale_listing_b2c": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing_b2c", "raw_code": "{{ config(materialized='table') }}\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM {{ ref('proc_properties') }} AS properties\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS salesdetails ON properties.id = salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n        AND properties.supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Sale Listing B2C'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\nFROM  date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "name": "sales_seller_metric_details_new_sale_listing_b2c", "alias": "sales_seller_metric_details_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "b762bf39fe69a203a3020bf54c267d36924b2203a3011cc8a338ddbe0192e34c"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.0876648, "compiled_code": "\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS salesdetails ON properties.id = salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n        AND properties.supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Sale Listing B2C'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM  date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\""}, "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "raw_code": "{{ config(materialized='table') }}\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM {{ ref('proc_properties') }} \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n        AND supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Rental Listing B2C'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id\nFROM rental_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT  \n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_rentals') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_details_new_rental_listing_b2c", "alias": "rental_landlord_metric_details_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "9c2215879077dda82c379209697d0f272abbf77ca68adc9400694670e9a95beb"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.100904, "compiled_code": "\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n        AND supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Rental Listing B2C'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id\nFROM rental_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT  \n       * , \n       CASE \n        WHEN date_rentals = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_rentals = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_rentals ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_rentals) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_rentals) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND date_rentals <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND date_rentals <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_details_photo_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_created"], "unique_id": "model.houm.rental_landlord_metric_details_photo_created", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT  \r\n    50::INT AS orden , \r\n    'Photo Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_photo_clean\r\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "name": "rental_landlord_metric_details_photo_created", "alias": "rental_landlord_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "e53f3108ec18731b9bcb45c2ca8214014016e1885cf1b74d3739963577a28980"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.1132438, "compiled_code": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n)\n\nSELECT  \n    50::INT AS orden , \n    'Photo Created'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\""}, "model.houm.sales_seller_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads"], "unique_id": "model.houm.sales_seller_metric_details_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden , \n    'Created Unique Seller Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id\nFROM supply_seller_leads_clean \nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "name": "sales_seller_metric_details_leads", "alias": "sales_seller_metric_details_leads", "checksum": {"name": "sha256", "checksum": "e7572709e76462c807cfde06a1d945001f3475e13a283cbefe12cc4b807a829f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.125422, "compiled_code": "\n\nWITH  supply_seller_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden , \n    'Created Unique Seller Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id\nFROM supply_seller_leads_clean \nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\""}, "model.houm.rental_landlord_metric_details_new_subs_non_brokerage": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_subs_non_brokerage"], "unique_id": "model.houm.rental_landlord_metric_details_new_subs_non_brokerage", "raw_code": "{{ config(materialized='view') }}\n\nWITH transfer_subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason = 'NEW_LEAD_WITHOUT_BROKERAGE'\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    150::INT AS orden ,\n    'New Subs - Without Brokerage'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM transfer_subs\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_subs_non_brokerage.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_subs_non_brokerage.sql", "name": "rental_landlord_metric_details_new_subs_non_brokerage", "alias": "rental_landlord_metric_details_new_subs_non_brokerage", "checksum": {"name": "sha256", "checksum": "4327964425499fb160fcd969bb11730dc234dbbe09b707003beeef40f2ed285f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_subs_non_brokerage.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970037.1375418, "compiled_code": "\n\nWITH transfer_subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason = 'NEW_LEAD_WITHOUT_BROKERAGE'\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    150::INT AS orden ,\n    'New Subs - Without Brokerage'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM transfer_subs\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_subs_non_brokerage\""}, "model.houm.rental_landlord_metric_details_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified_date", "raw_code": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND (supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Landlord Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'supply_qualification_date') }}\nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "name": "rental_landlord_metric_details_leads_qualified_date", "alias": "rental_landlord_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "da022899b47792e77f30717b6f7d8394cc5c6dbcee66bb4ce12dabe53d3a915f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.149705, "compiled_code": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND (supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Landlord Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', supply_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',supply_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',supply_qualification_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND supply_qualification_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND supply_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\""}, "model.houm.rental_landlord_metric_details_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_subs"], "unique_id": "model.houm.rental_landlord_metric_details_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD_WITHOUT_BROKERAGE', 'REPLUBLISHED', 'RENEWAL', 'NEW_LEAD', 'REPUBLISHED','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM subs\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_subs.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_subs.sql", "name": "rental_landlord_metric_details_subs", "alias": "rental_landlord_metric_details_subs", "checksum": {"name": "sha256", "checksum": "34f1208c5ffbde49c795d6c150f02572b110823ed99c803df483f673a7654b05"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "view"}, "created_at": 1675970037.161819, "compiled_code": "\n\nWITH subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD_WITHOUT_BROKERAGE', 'REPLUBLISHED', 'RENEWAL', 'NEW_LEAD', 'REPUBLISHED','REPUBLISH_DUE_TO_DEFAULTER_TENANT')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'Subs'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM subs\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_subs\""}, "model.houm.rental_landlord_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads"], "unique_id": "model.houm.rental_landlord_metric_details_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden ,\n    'Created Unique Landlord Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::date AS add_date , \n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "name": "rental_landlord_metric_details_leads", "alias": "rental_landlord_metric_details_leads", "checksum": {"name": "sha256", "checksum": "34b44543ba14cb8530825431e16f03ec5db1e11e0a25005b4061bcf3dae0098b"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.174658, "compiled_code": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden ,\n    'Created Unique Landlord Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::date AS add_date , \n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\""}, "model.houm.sales_company_metric_details_new_project_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_projects", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_project_listing"], "unique_id": "model.houm.sales_company_metric_details_new_project_listing", "raw_code": "{{ config(materialized='table') }}\n\nWITH new_project_listing AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_projects') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'New Project Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    new_project_listing.property_id \nFROM new_project_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_project_listing.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT \n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "name": "sales_company_metric_details_new_project_listing", "alias": "sales_company_metric_details_new_project_listing", "checksum": {"name": "sha256", "checksum": "e17317031c03d7e1029903726e3d10251bb9880f99798b7f8346d28062ce20a3"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_projects"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1675970037.186805, "compiled_code": "\n\nWITH new_project_listing AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'New Project Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    new_project_listing.property_id \nFROM new_project_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_project_listing.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT \n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_project_listing\""}, "model.houm.fact_daily_virtual_uf_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_cl"], "unique_id": "model.houm.fact_daily_virtual_uf_cl", "raw_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_cl') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "name": "fact_daily_virtual_uf_cl", "alias": "fact_daily_virtual_uf_cl", "checksum": {"name": "sha256", "checksum": "4fd1b2adb692cb8b7ea1aa71462e75567e117ccc974e98eaf0986f0784e739dd"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1675970037.1991198, "compiled_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_cl\""}, "model.houm.fact_daily_virtual_uf_co": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_co"], "unique_id": "model.houm.fact_daily_virtual_uf_co", "raw_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_co') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "name": "fact_daily_virtual_uf_co", "alias": "fact_daily_virtual_uf_co", "checksum": {"name": "sha256", "checksum": "e3949025b3ff978828964228c357f5833abf99f04c1f200db61a4c4a75c49c7b"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_co"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1675970037.2007942, "compiled_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_co\""}, "model.houm.fact_daily_virtual_uf_mx": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_mx"], "unique_id": "model.houm.fact_daily_virtual_uf_mx", "raw_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_mx') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "name": "fact_daily_virtual_uf_mx", "alias": "fact_daily_virtual_uf_mx", "checksum": {"name": "sha256", "checksum": "e76f8c6fda5323ce42f067da226b422ecc4dfd24137d0f0c90396b4df27574ec"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_mx"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1675970037.20244, "compiled_code": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_mx\""}, "model.houm.sales_investor_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_investor_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer New Properties'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost NP (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "name": "sales_investor_metric_details_paid_media_cost", "alias": "sales_investor_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "12508cf8ce1dd356cd736b4b768be184362036f7005548696263e48e8002fcdc"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.204257, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer New Properties'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost NP (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_bid_with_counter_bid": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_bid_with_counter_bid"], "unique_id": "model.houm.sales_buyer_metric_details_bid_with_counter_bid", "raw_code": "{{ config(materialized='view') }}\n\nWITH bid AS (\nSELECT \n    *\nFROM {{ ref('proc_bid') }} \nWHERE TRUE   \nAND (status_bid_presented = 'Rechazada con contra-oferta')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    150::INT AS orden,\n    'Bids Rejected With Counter Bid'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'updated_at_local') }}\nFROM date_transformation\nWHERE TRUE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_bid_with_counter_bid.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_bid_with_counter_bid.sql", "name": "sales_buyer_metric_details_bid_with_counter_bid", "alias": "sales_buyer_metric_details_bid_with_counter_bid", "checksum": {"name": "sha256", "checksum": "9e75f58b5ff5c25fd53efb5e397bae9d1d9b95dd0cf80b1e37cb6671d27ee4e9"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_bid_with_counter_bid.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.216429, "compiled_code": "\n\nWITH bid AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" \nWHERE TRUE   \nAND (status_bid_presented = 'Rechazada con contra-oferta')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    150::INT AS orden,\n    'Bids Rejected With Counter Bid'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', updated_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',updated_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',updated_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND updated_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND updated_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_with_counter_bid\""}, "model.houm.rental_tenant_metric_details_rejected_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_evaluations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_rejected_eval"], "unique_id": "model.houm.rental_tenant_metric_details_rejected_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH commercialy_rejected_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM {{ ref('proc_closure_evaluations') }} \nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Commercialy Rejected Evaluations'\n)\n\n, date_transformation AS (\nSELECT\n\t98::INT AS orden ,\n    'Commercialy Rejected Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM commercialy_rejected_evaluations_clean\nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    {{ create_date_aggregate_columns(thedate = 'add_date') }} \nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_rejected_eval.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_rejected_eval.sql", "name": "rental_tenant_metric_details_rejected_eval", "alias": "rental_tenant_metric_details_rejected_eval", "checksum": {"name": "sha256", "checksum": "4b613f3e8eedeb6e602aed0d29e4f5a07cf6eb2e24c7bf34289d5c6e9c5ff421"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_evaluations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_rejected_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.22855, "compiled_code": "\n\nWITH commercialy_rejected_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\" \nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Commercialy Rejected Evaluations'\n)\n\n, date_transformation AS (\nSELECT\n\t98::INT AS orden ,\n    'Commercialy Rejected Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM commercialy_rejected_evaluations_clean\nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_rejected_eval\""}, "model.houm.rental_tenant_metric_details_schedules_unfinished": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_unfinished"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_unfinished", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status IN ('Scheduled', 'Confirmed') )\n   AND '{{ var(\"processed_time\") }}' >= end_date\n)\n\nSELECT \n    59::INT AS orden , \n    'Visit Unfinished'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "name": "rental_tenant_metric_details_schedules_unfinished", "alias": "rental_tenant_metric_details_schedules_unfinished", "checksum": {"name": "sha256", "checksum": "5e06bc2d8548b057dce2619f4cc5e9444a6c62f8ad5c382432a15ee27e0da37b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.2414248, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status IN ('Scheduled', 'Confirmed') )\n   AND '2023-02-09 16:13:54.685542-03:00' >= end_date\n)\n\nSELECT \n    59::INT AS orden , \n    'Visit Unfinished'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_unfinished\""}, "model.houm.rental_tenant_metric_details_reservations_refunded": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_refunded", "raw_code": "{{ config(materialized='view') }}\n\nWITH refunded_reservations AS (\nSELECT \n    *\nFROM {{ ref('proc_demand_reservations') }}\nWHERE TRUE \n    AND status = 'REFUNDED' \n)\n, date_transformation AS (\nSELECT    \n    90::INT AS orden ,\n    'Refunded Reservations'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local ::DATE ,\n    reservation_id ,\n    status \nFROM refunded_reservations \nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "name": "rental_tenant_metric_details_reservations_refunded", "alias": "rental_tenant_metric_details_reservations_refunded", "checksum": {"name": "sha256", "checksum": "668957fee8af6f2107d3d36b83312a2238a2388422d72a7a86ab64709e8ed487"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.2543218, "compiled_code": "\n\nWITH refunded_reservations AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE \n    AND status = 'REFUNDED' \n)\n, date_transformation AS (\nSELECT    \n    90::INT AS orden ,\n    'Refunded Reservations'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local ::DATE ,\n    reservation_id ,\n    status \nFROM refunded_reservations \nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\""}, "model.houm.rental_tenant_metric_details_lost_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_evaluations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_lost_eval"], "unique_id": "model.houm.rental_tenant_metric_details_lost_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH lost_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM {{ ref('proc_closure_evaluations') }}\nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Lost Evaluations'\n)\n\n, date_transformation AS (\nSELECT\n\t99::INT AS orden ,\n    'Lost Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM lost_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    {{ create_date_aggregate_columns(thedate = 'add_date') }} \nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_lost_eval.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_lost_eval.sql", "name": "rental_tenant_metric_details_lost_eval", "alias": "rental_tenant_metric_details_lost_eval", "checksum": {"name": "sha256", "checksum": "6ef5c3e831c78a195e24d9619bbf1408e43c26c59db7a41d9795eecfef01ed14"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_evaluations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_lost_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.266416, "compiled_code": "\n\nWITH lost_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Lost Evaluations'\n)\n\n, date_transformation AS (\nSELECT\n\t99::INT AS orden ,\n    'Lost Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM lost_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_lost_eval\""}, "model.houm.rental_tenant_metric_details_schedules_second_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_second_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_second_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n)\n\nSELECT \n    62::INT AS orden ,\n    '2da Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_second_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_second_done.sql", "name": "rental_tenant_metric_details_schedules_second_done", "alias": "rental_tenant_metric_details_schedules_second_done", "checksum": {"name": "sha256", "checksum": "c8936c7aa55d3f1a511bb780ca68653530f9772c615ab8739c288cd085e140f7"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_second_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.278572, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n)\n\nSELECT \n    62::INT AS orden ,\n    '2da Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_second_done\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_autoscheduled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%App%'\n)\n\n\nSELECT \n    52::INT AS orden , \n    'Visit Scheduled Autoscheduled'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "name": "rental_tenant_metric_details_schedules_scheduled_autoscheduled", "alias": "rental_tenant_metric_details_schedules_scheduled_autoscheduled", "checksum": {"name": "sha256", "checksum": "c10a7d5fdf2e7b6600c59c933f05ad53c3a46c3ff9be73a17e8bc2fe64a8b5fa"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.290792, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%App%'\n)\n\n\nSELECT \n    52::INT AS orden , \n    'Visit Scheduled Autoscheduled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_autoscheduled\""}, "model.houm.rental_tenant_metric_details_ongoing_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_evaluations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_ongoing_eval"], "unique_id": "model.houm.rental_tenant_metric_details_ongoing_eval", "raw_code": "{{ config(materialized='view') }}\n\n\nWITH ongoing_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM {{ ref('proc_closure_evaluations') }}\nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Ongoing Evaluations'\n)\n\n, date_transformation AS (\nSELECT \n\t97::INT AS orden ,\n    'Ongoing Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM ongoing_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT\n    date_transformation.* ,\n     {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_ongoing_eval.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_ongoing_eval.sql", "name": "rental_tenant_metric_details_ongoing_eval", "alias": "rental_tenant_metric_details_ongoing_eval", "checksum": {"name": "sha256", "checksum": "013fd63afe5c6fcfdeb084aee6a38535448e518f39f21ed60b2ca14e356b1e42"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_evaluations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_ongoing_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.302794, "compiled_code": "\n\n\nWITH ongoing_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\"\nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Ongoing Evaluations'\n)\n\n, date_transformation AS (\nSELECT \n\t97::INT AS orden ,\n    'Ongoing Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM ongoing_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT\n    date_transformation.* ,\n     CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_ongoing_eval\""}, "model.houm.sales_buyer_metric_details_bid_rejected": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_bid_rejected"], "unique_id": "model.houm.sales_buyer_metric_details_bid_rejected", "raw_code": "{{ config(materialized='view') }}\n\nWITH bid AS (\nSELECT \n    *\nFROM {{ ref('proc_bid') }} \nWHERE TRUE   \nAND (status_bid_presented = 'Rechazada')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    140::INT AS orden,\n    'Bid Rejected'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'updated_at_local') }}\nFROM date_transformation\nWHERE TRUE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_bid_rejected.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_bid_rejected.sql", "name": "sales_buyer_metric_details_bid_rejected", "alias": "sales_buyer_metric_details_bid_rejected", "checksum": {"name": "sha256", "checksum": "be71bddd39e068f66ef550ec19800abde9bf49a330d2de3240451684a80ba6e3"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_bid_rejected.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.3156312, "compiled_code": "\n\nWITH bid AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" \nWHERE TRUE   \nAND (status_bid_presented = 'Rechazada')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    140::INT AS orden,\n    'Bid Rejected'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', updated_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',updated_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',updated_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND updated_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND updated_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_rejected\""}, "model.houm.sales_demand_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_demand_metric_details_leads"], "unique_id": "model.houm.sales_demand_metric_details_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden , \n    'Created Unique NP & SH Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone , \n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_demand_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_demand_metric_details_leads.sql", "name": "sales_demand_metric_details_leads", "alias": "sales_demand_metric_details_leads", "checksum": {"name": "sha256", "checksum": "0f6cbc97e96c70f3471c73dc170390338a9d2bdee20c6d8d235ced6ee28cfcac"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_demand_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.3277252, "compiled_code": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden , \n    'Created Unique NP & SH Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone , \n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_correct_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_correct_visit_done"], "unique_id": "model.houm.rental_tenant_metric_details_correct_visit_done", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    61::INT AS orden , \n    'Correct Visit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "name": "rental_tenant_metric_details_correct_visit_done", "alias": "rental_tenant_metric_details_correct_visit_done", "checksum": {"name": "sha256", "checksum": "aa30c2c4490f6930810886eedcf43317ba6a7565b7f6bc1d906c5dac9fffa8d0"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.33984, "compiled_code": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    61::INT AS orden , \n    'Correct Visit Done'::TEXT AS metric , \n    geo_id ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_done\""}, "model.houm.rental_tenant_metric_details_correct_visit_finished": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_correct_visit_finished"], "unique_id": "model.houm.rental_tenant_metric_details_correct_visit_finished", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND end_date >= done_date\n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    120::INT AS orden , \n    'Correct Visit Finished'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "name": "rental_tenant_metric_details_correct_visit_finished", "alias": "rental_tenant_metric_details_correct_visit_finished", "checksum": {"name": "sha256", "checksum": "5c1bb5c8b7da79f635c762a11edfffa4cbad1b77fa14d2111fbe2a0ce31b1785"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.351988, "compiled_code": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND end_date >= done_date\n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    120::INT AS orden , \n    'Correct Visit Finished'::TEXT AS metric , \n    geo_id ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_finished\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\n\r\nSELECT \r\n    50::INT AS orden , \r\n    'Visit Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \r\nFROM schedules_visit_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "name": "rental_tenant_metric_details_schedules_scheduled", "alias": "rental_tenant_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "40d2ee39f2f5cb8b77844d72e54d07d16640b90794f353d985e322607dab8963"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.364074, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\n\nSELECT \n    50::INT AS orden , \n    'Visit Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\""}, "model.houm.sales_investor_metric_details_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_created"], "unique_id": "model.houm.sales_investor_metric_details_schedules_created", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    70::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_at ,\n    schedule_id ,\n   {{ create_date_aggregate_columns(thedate = 'created_at') }}\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "name": "sales_investor_metric_details_schedules_created", "alias": "sales_investor_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "c23b855caadee8fed2f7c107a8259267d0521c53fdacb84c1c6a38abc6f0e937"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.3760798, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    70::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n   CASE \n        WHEN created_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_lead_activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions_portalapplicants"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants", "raw_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM {{ ref('proc_demand_lead_activities') }} \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Portal Applicant'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    22::INT AS orden ,\n    'Interaction Tenant Lead - Portal Applicant'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_date_local') }}\nFROM leads_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions_portalapplicants.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_portalapplicants.sql", "name": "rental_tenant_metric_details_leads_interactions_portalapplicants", "alias": "rental_tenant_metric_details_leads_interactions_portalapplicants", "checksum": {"name": "sha256", "checksum": "906075d51e561bc633e1c849d0a76251fc92093b95420a01fd63b845745ffa5d"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_lead_activities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_portalapplicants.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"]}, "created_at": 1675970037.388951, "compiled_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\" \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Portal Applicant'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    22::INT AS orden ,\n    'Interaction Tenant Lead - Portal Applicant'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM leads_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_portalapplicants\""}, "model.houm.rental_tenant_metric_details_leads_interactions_markethoum": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_lead_activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions_markethoum"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions_markethoum", "raw_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM {{ ref('proc_demand_lead_activities') }} \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Houm Marketplace'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    21::INT AS orden ,\n    'Interaction Tenant Lead - Houm Marketplace'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_date_local') }}\nFROM leads_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions_markethoum.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_markethoum.sql", "name": "rental_tenant_metric_details_leads_interactions_markethoum", "alias": "rental_tenant_metric_details_leads_interactions_markethoum", "checksum": {"name": "sha256", "checksum": "963c83c2d48361f9d9d4ee99e5e75a7621a24faba01f887000fbb88f462a81d7"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_lead_activities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_markethoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"]}, "created_at": 1675970037.40089, "compiled_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\" \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Houm Marketplace'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    21::INT AS orden ,\n    'Interaction Tenant Lead - Houm Marketplace'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM leads_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_markethoum\""}, "model.houm.rental_tenant_metric_details_arrived_on_time": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_arrived_on_time"], "unique_id": "model.houm.rental_tenant_metric_details_arrived_on_time", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500\n)\n\nSELECT  \n    110::INT AS orden , \n    'Arrived On Time'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "name": "rental_tenant_metric_details_arrived_on_time", "alias": "rental_tenant_metric_details_arrived_on_time", "checksum": {"name": "sha256", "checksum": "ddfda885846c5234bcfc044e71b962e34d2cbf075b018d4e6f0012b32ee3e432"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.412891, "compiled_code": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500\n)\n\nSELECT  \n    110::INT AS orden , \n    'Arrived On Time'::TEXT AS metric , \n    geo_id ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_arrived_on_time\""}, "model.houm.rental_tenant_metric_details_total_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_evaluations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_total_eval"], "unique_id": "model.houm.rental_tenant_metric_details_total_eval", "raw_code": "{{ config(materialized='view') }}\n\nWITH total_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM {{ ref('proc_closure_evaluations') }} \nWHERE true \nAND is_test = false \n)\n\n, date_transformation AS (\nSELECT\n\t95::INT AS orden ,\n    'Total Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM total_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    {{ create_date_aggregate_columns(thedate = 'add_date') }} \nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_total_eval.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_total_eval.sql", "name": "rental_tenant_metric_details_total_eval", "alias": "rental_tenant_metric_details_total_eval", "checksum": {"name": "sha256", "checksum": "4f13c4b65373da62004189ffc0730c8809ef6c7b6aa3a15501181709f60e4fbd"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_evaluations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_total_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.425029, "compiled_code": "\n\nWITH total_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\" \nWHERE true \nAND is_test = false \n)\n\n, date_transformation AS (\nSELECT\n\t95::INT AS orden ,\n    'Total Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM total_evaluations_clean \nORDER BY add_time DESC\n)\n\nSELECT \n    date_transformation.* ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_total_eval\""}, "model.houm.rental_tenant_metric_details_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_done", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT \r\n    60::INT AS orden ,\r\n    'Visit Done'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \r\nFROM schedules_visit_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "name": "rental_tenant_metric_details_schedules_done", "alias": "rental_tenant_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "f3a2b001aebb80f6f151b8859045709625a9d246840f4f149e06f5431f670b33"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.4371252, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    60::INT AS orden ,\n    'Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\""}, "model.houm.sales_investor_metric_details_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads_qualified"], "unique_id": "model.houm.sales_investor_metric_details_leads_qualified", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "name": "sales_investor_metric_details_leads_qualified", "alias": "sales_investor_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "05fdbdb93fb171beb0bf397c8fcbd6fbb2813263520724afd2703e56a73cd8ea"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.449192, "compiled_code": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified\""}, "model.houm.sales_buyer_metric_details_bid_accepted": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_bid_accepted"], "unique_id": "model.houm.sales_buyer_metric_details_bid_accepted", "raw_code": "{{ config(materialized='view') }}\n\nWITH bid AS (\nSELECT \n    *\nFROM {{ ref('proc_bid') }} \nWHERE TRUE   \nAND (status_bid_presented = 'Aceptada')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    160::INT AS orden,\n    'Bids Accepted'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'updated_at_local') }}\nFROM date_transformation\nWHERE TRUE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_bid_accepted.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_bid_accepted.sql", "name": "sales_buyer_metric_details_bid_accepted", "alias": "sales_buyer_metric_details_bid_accepted", "checksum": {"name": "sha256", "checksum": "98352e9f3dbf51f81fa9e6ee2bb0603e156b1f523cc8110dfacd4fab2262700b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_bid_accepted.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.462077, "compiled_code": "\n\nWITH bid AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" \nWHERE TRUE   \nAND (status_bid_presented = 'Aceptada')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    160::INT AS orden,\n    'Bids Accepted'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    updated_at,\n    updated_at_local::DATE,\n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN updated_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', updated_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',updated_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',updated_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND updated_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND updated_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_accepted\""}, "model.houm.sales_investor_metric_details_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_investor_metric_details_schedules_scheduled", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    80::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\n\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "name": "sales_investor_metric_details_schedules_scheduled", "alias": "sales_investor_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "aa20cd321b76d2608445f69828a58c06cf2ce92c1d0054142cd1803319241bb1"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.4741938, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    80::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\n\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_organic"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_organic", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (origin like '%Marketplace%')\n)\n\n\nSELECT \n    51::INT AS orden , \n    'Visit Scheduled Organic'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "name": "rental_tenant_metric_details_schedules_scheduled_organic", "alias": "rental_tenant_metric_details_schedules_scheduled_organic", "checksum": {"name": "sha256", "checksum": "0e661deeaabe65108c078beb9705fa2ae0c209f5b0306127574209e6c31f316d"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.48633, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (origin like '%Marketplace%')\n)\n\n\nSELECT \n    51::INT AS orden , \n    'Visit Scheduled Organic'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_organic\""}, "model.houm.sales_buyer_metric_details_correct_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_correct_visit_done"], "unique_id": "model.houm.sales_buyer_metric_details_correct_visit_done", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='SalesVisit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%SalesGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    100::INT AS orden , \n    'Correct SalesVisit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "name": "sales_buyer_metric_details_correct_visit_done", "alias": "sales_buyer_metric_details_correct_visit_done", "checksum": {"name": "sha256", "checksum": "eb773d4ef0fe4511e22b7d3554b27727cb45d18c5b8cd358748e6d8431fe7541"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.498452, "compiled_code": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='SalesVisit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%SalesGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    100::INT AS orden , \n    'Correct SalesVisit Done'::TEXT AS metric , \n    geo_id ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_correct_visit_done\""}, "model.houm.sales_investor_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads"], "unique_id": "model.houm.sales_investor_metric_details_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH  demand_sales_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_demand_sales_leads') }}\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads.sql", "name": "sales_investor_metric_details_leads", "alias": "sales_investor_metric_details_leads", "checksum": {"name": "sha256", "checksum": "fbede9509d2a3a776af6794d74db8fa795fdece03e1ef54f3c5d2d813c67dad6"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.510568, "compiled_code": "\n\nWITH  demand_sales_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\"\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_schedules_cancelled_at": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_cancelled_at"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_cancelled_at", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties' )\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    58::INT AS orden , \n    'Visit Cancelled At'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    updated_at begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'updated_at') }}\nFROM schedules_visit_clean\nORDER BY updated_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "name": "rental_tenant_metric_details_schedules_cancelled_at", "alias": "rental_tenant_metric_details_schedules_cancelled_at", "checksum": {"name": "sha256", "checksum": "4e5264e522684837de88868c8aca1de637d0d33374f494e354981dace082a1b9"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.522631, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties' )\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    58::INT AS orden , \n    'Visit Cancelled At'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    updated_at begin_date ,\n    schedule_id ,\n    CASE \n        WHEN updated_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN updated_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', updated_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',updated_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',updated_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND updated_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',updated_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND updated_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', updated_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY updated_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled_at\""}, "model.houm.sales_buyer_metric_details_schedules_first_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_first_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_first_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n)\n\nSELECT \n    95::INT AS orden ,\n    '1ra Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nWHERE is_test = FALSE\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_first_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_first_done.sql", "name": "sales_buyer_metric_details_schedules_first_done", "alias": "sales_buyer_metric_details_schedules_first_done", "checksum": {"name": "sha256", "checksum": "dd9a35fa24976180c4c639fd95dc2139796d3442a4a6800655d74337f596b9e5"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_first_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.535436, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n)\n\nSELECT \n    95::INT AS orden ,\n    '1ra Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nWHERE is_test = FALSE\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_first_done\""}, "model.houm.sales_buyer_metric_details_generated_links": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_negotiation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_generated_links"], "unique_id": "model.houm.sales_buyer_metric_details_generated_links", "raw_code": "{{ config(materialized='view') }}\n\nWITH negotiation AS (\nSELECT \n    *\nFROM {{ ref('proc_negotiation') }} \nWHERE TRUE  \n  AND (is_test = FALSE) \n)\n\n, date_transformation AS (\nSELECT    \n    110::INT AS orden,\n    'Generated Links'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS negotiation_id\nFROM negotiation\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'created_at_local') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_generated_links.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_generated_links.sql", "name": "sales_buyer_metric_details_generated_links", "alias": "sales_buyer_metric_details_generated_links", "checksum": {"name": "sha256", "checksum": "9e365a711e714cf9cb39a0af9e2fed53660d35e1860f70a9f5e2bfacdc36e736"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_negotiation"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_generated_links.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.5477362, "compiled_code": "\n\nWITH negotiation AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_negotiation\" \nWHERE TRUE  \n  AND (is_test = FALSE) \n)\n\n, date_transformation AS (\nSELECT    \n    110::INT AS orden,\n    'Generated Links'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS negotiation_id\nFROM negotiation\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_generated_links\""}, "model.houm.rental_tenant_metric_details_leads_interactions_whatsapp": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_lead_activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions_whatsapp"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions_whatsapp", "raw_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM {{ ref('proc_demand_lead_activities') }} \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Whatsapp'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    23::INT AS orden ,\n    'Interaction Tenant Lead - Whatsapp'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_date_local')  }}\nFROM leads_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions_whatsapp.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_whatsapp.sql", "name": "rental_tenant_metric_details_leads_interactions_whatsapp", "alias": "rental_tenant_metric_details_leads_interactions_whatsapp", "checksum": {"name": "sha256", "checksum": "dbaae49b2dceb1a858e1ebcc5ab6a253ebfbba447b31833c1a1f20997d6faeef"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_lead_activities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"]}, "created_at": 1675970037.5598102, "compiled_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\" \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source = 'Whatsapp'\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    23::INT AS orden ,\n    'Interaction Tenant Lead - Whatsapp'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM leads_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions_whatsapp\""}, "model.houm.rental_tenant_metric_details_reservations_effective": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_effective", "raw_code": "{{ config(materialized='view') }}\n\nWITH paid_reservations AS (\nSELECT \n    *\nFROM {{ ref('proc_demand_reservations') }}\nWHERE TRUE \n    AND status = 'PAID' \n)\n\n, date_transformation AS (\nSELECT    \n    80::INT AS orden ,\n    'Effective Reservations'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE , \n    reservation_id ,\n    status \nFROM paid_reservations\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "name": "rental_tenant_metric_details_reservations_effective", "alias": "rental_tenant_metric_details_reservations_effective", "checksum": {"name": "sha256", "checksum": "904fb4c4f277c8557f2efc8446ddc1dc9f243d900ed6ed705c1b212b9d5c97b2"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.571755, "compiled_code": "\n\nWITH paid_reservations AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE \n    AND status = 'PAID' \n)\n\n, date_transformation AS (\nSELECT    \n    80::INT AS orden ,\n    'Effective Reservations'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE , \n    reservation_id ,\n    status \nFROM paid_reservations\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\""}, "model.houm.sales_buyer_metric_details_bid_realized": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_bid_realized"], "unique_id": "model.houm.sales_buyer_metric_details_bid_realized", "raw_code": "{{ config(materialized='view') }}\n\nWITH bid AS (\nSELECT \n    *\nFROM {{ ref('proc_bid') }} \nWHERE TRUE   \nAND (status_bid_presented <> 'Otro')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    120::INT AS orden,\n    'Bids Realized'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'created_at_local') }}\nFROM date_transformation\nWHERE TRUE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_bid_realized.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_bid_realized.sql", "name": "sales_buyer_metric_details_bid_realized", "alias": "sales_buyer_metric_details_bid_realized", "checksum": {"name": "sha256", "checksum": "d2ec915842453a1eb4aafce978d5009877916ca4aad77bf9c5caf515bb8590fb"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_bid_realized.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.583849, "compiled_code": "\n\nWITH bid AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" \nWHERE TRUE   \nAND (status_bid_presented <> 'Otro')\nAND (is_test = FALSE)\n)\n\n, date_transformation AS (\nSELECT    \n    120::INT AS orden,\n    'Bids Realized'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_realized\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_admin"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_admin", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%Admin%'\n)\n\n\nSELECT \n    53::INT AS orden , \n    'Visit Scheduled Admin'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "name": "rental_tenant_metric_details_schedules_scheduled_admin", "alias": "rental_tenant_metric_details_schedules_scheduled_admin", "checksum": {"name": "sha256", "checksum": "9b5bc2a9773cd1b5fab5173b1d9657fa3db4b905c2c1329486dd5ff31e4d549f"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.595905, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%Admin%'\n)\n\n\nSELECT \n    53::INT AS orden , \n    'Visit Scheduled Admin'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_admin\""}, "model.houm.sales_buyer_metric_details_schedules_scheduled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_scheduled", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    80::int AS orden ,\r\n    'SalesVisit Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "name": "sales_buyer_metric_details_schedules_scheduled", "alias": "sales_buyer_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "f8e74ec4cd2e42065c29fe67cb41b1aff5673254fc86963d1ad3656c66f92d9b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.608716, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    80::int AS orden ,\n    'SalesVisit Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_done_time": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_done_time"], "unique_id": "model.houm.rental_tenant_metric_details_done_time", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n)\n\nSELECT  \n    100::INT AS orden , \n    'Visit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "name": "rental_tenant_metric_details_done_time", "alias": "rental_tenant_metric_details_done_time", "checksum": {"name": "sha256", "checksum": "e7cd730239b3474cef90a2cdf3d87e8379581fb3f92c5ffae9d03863c99c22cd"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.620924, "compiled_code": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n)\n\nSELECT  \n    100::INT AS orden , \n    'Visit Done'::TEXT AS metric , \n    geo_id ,\n   '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_done_time\""}, "model.houm.rental_tenant_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_lead_activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads"], "unique_id": "model.houm.rental_tenant_metric_details_leads", "raw_code": "With leads_clean AS (\nSELECT \n    * ,\n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM {{ ref('proc_demand_lead_activities') }} \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source IS NOT NULL\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT \n    30::INT AS orden , \n    'Unique Tenant Lead'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n        {{ create_date_aggregate_columns(thedate = 'created_date_local') }}\nFROM leads_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "name": "rental_tenant_metric_details_leads", "alias": "rental_tenant_metric_details_leads", "checksum": {"name": "sha256", "checksum": "2047916cd5a75d0d4a87589d635b20c382e6c2ac0bc8130be55f3d9b76f9985d"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_lead_activities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"]}, "created_at": 1675970037.6331, "compiled_code": "With leads_clean AS (\nSELECT \n    * ,\n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\" \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source IS NOT NULL\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT \n    30::INT AS orden , \n    'Unique Tenant Lead'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n        CASE \n        WHEN created_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM leads_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_new_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_subs"], "unique_id": "model.houm.rental_tenant_metric_details_new_subs", "raw_code": "{{ config(materialized='view') }}\n\nWITH new_subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT' )\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM new_subs\nORDER BY sub_payment_date_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "name": "rental_tenant_metric_details_new_subs", "alias": "rental_tenant_metric_details_new_subs", "checksum": {"name": "sha256", "checksum": "4f940c1b31cac78817be4033f1b1b3ee33203f4ee1e10254c81f360e97e5d6ce"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.6451032, "compiled_code": "\n\nWITH new_subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISH_DUE_TO_DEFAULTER_TENANT' )\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM new_subs\nORDER BY sub_payment_date_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\""}, "model.houm.rental_tenant_metric_details_reservations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations"], "unique_id": "model.houm.rental_tenant_metric_details_reservations", "raw_code": "{{ config(materialized='view') }}\n\nWITH date_transformation AS (\nSELECT    \n    70::INT AS orden ,\n    'Reservations'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE ,\n    reservation_id ,\n    status \nFROM {{ ref('proc_demand_reservations') }}\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * , \n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "name": "rental_tenant_metric_details_reservations", "alias": "rental_tenant_metric_details_reservations", "checksum": {"name": "sha256", "checksum": "47a97b566fc1dfa968e9ba0587b60ff50b6f2420cbd7a75fb870b28790f0affb"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.657265, "compiled_code": "\n\nWITH date_transformation AS (\nSELECT    \n    70::INT AS orden ,\n    'Reservations'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE ,\n    reservation_id ,\n    status \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * , \n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\""}, "model.houm.sales_buyer_metric_details_leads_qualified": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads_qualified"], "unique_id": "model.houm.sales_buyer_metric_details_leads_qualified", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "name": "sales_buyer_metric_details_leads_qualified", "alias": "sales_buyer_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "be5922ed8757e171e851286b96c5c6c97d1d7027b83b6272f9e89c1eddcf8f3a"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.669344, "compiled_code": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified\""}, "model.houm.rental_tenant_metric_details_schedules_first_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_first_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_first_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n)\n\nSELECT \n    61::INT AS orden ,\n    '1ra Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_first_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_first_done.sql", "name": "rental_tenant_metric_details_schedules_first_done", "alias": "rental_tenant_metric_details_schedules_first_done", "checksum": {"name": "sha256", "checksum": "4782ae41ac7dc5b334eca184a2a71aef153e069eeb4bf020a14cde5ef817d1e8"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_first_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.6822112, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '1ra Agenda Done'\n)\n\nSELECT \n    61::INT AS orden ,\n    '1ra Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_first_done\""}, "model.houm.sales_buyer_metric_details_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_created", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    70::int AS orden , \r\n    'SalesVisit Created'::TEXT AS metric , \r\n    geo_id , \r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "name": "sales_buyer_metric_details_schedules_created", "alias": "sales_buyer_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "395b9f68ee1fa8a9f018ff838a9fac7a7a4fc277e64b727faa1eca02605ff39c"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.7231622, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    70::int AS orden , \n    'SalesVisit Created'::TEXT AS metric , \n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time , \n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_schedules_cancelled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_cancelled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_cancelled", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    57::INT AS orden , \n    'Visit Cancelled'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "name": "rental_tenant_metric_details_schedules_cancelled", "alias": "rental_tenant_metric_details_schedules_cancelled", "checksum": {"name": "sha256", "checksum": "31ebcfb73efa116178d6058c505c9caf593c4480fa9de72fa3d3cc015a6410d0"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.735316, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    57::INT AS orden , \n    'Visit Cancelled'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled\""}, "model.houm.rental_tenant_metric_details_schedules_created": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_created", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    40::INT AS orden, \r\n    'Visit Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_visit_clean\r\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "name": "rental_tenant_metric_details_schedules_created", "alias": "rental_tenant_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "409bb86562191e535049214bac0e592e8a82ab909426e52269cafd8ddc0ff374"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.74737, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    40::INT AS orden, \n    'Visit Created'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\""}, "model.houm.sales_buyer_metric_details_schedules_second_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_second_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_second_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n)\n\nSELECT \n    96::INT AS orden ,\n    '2da Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nWHERE is_test = FALSE\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_second_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_second_done.sql", "name": "sales_buyer_metric_details_schedules_second_done", "alias": "sales_buyer_metric_details_schedules_second_done", "checksum": {"name": "sha256", "checksum": "854b8b925a78e8c02d4de055ad3332e996397b61f3b658cb59a3bd0192eefe91"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_second_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.7594151, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND (\n      ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  ) \n   AND status = 'Done'\n   AND client_done_visit = '2da Agenda Done'\n)\n\nSELECT \n    96::INT AS orden ,\n    '2da Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nWHERE is_test = FALSE\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_second_done\""}, "model.houm.rental_tenant_metric_details_leads_interactions": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_lead_activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions", "raw_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM {{ ref('proc_demand_lead_activities') }} \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source IS NOT NULL\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    20::INT AS orden ,\n    'Interaction Tenant Lead'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_date_local') }}\nFROM leads_clean\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "name": "rental_tenant_metric_details_leads_interactions", "alias": "rental_tenant_metric_details_leads_interactions", "checksum": {"name": "sha256", "checksum": "eba51359c3ef8077957068fbf78678abbde24a5ee8ba9a9e496c46b692f9d449"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_lead_activities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"]}, "created_at": 1675970037.771678, "compiled_code": "With leads_clean AS (\nSELECT \n    * , \n    COALESCE( (timezone(timezone, created_at)::timestamptz)::date , created_at::date) AS created_date_local\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\" \nWHERE TRUE\n    AND business_type = 'rentals'\n    AND source IS NOT NULL\n\n    AND  portal IS NOT NULL \n    AND ((portal LIKE 'Houm' AND source LIKE 'Whatsapp') IS FALSE ) \n    AND  source NOT LIKE 'Marketing' --Limpieza de origenes marketing y whatsapp \"Houm\" por mala trazabilidad\n    AND (email IS NULL OR (email NOT LIKE '%test%' AND email NOT LIKE '%@houm%')) --limpieza de test\n    AND ((Country = 'Chile' AND portal IN ('MetroCuadrado', 'FincaRaiz', 'Proppit') IS FALSE) OR Country = 'Colombia' OR Country = 'Mexico') \n    --limpieza de leads whatsapp con pais incorrecto por mala captura de prop_id\\\n)\n\nSELECT\n    20::INT AS orden ,\n    'Interaction Tenant Lead'::TEXT AS metric , \n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    created_date_local ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM leads_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\""}, "model.houm.sales_investor_metric_details_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_done"], "unique_id": "model.houm.sales_investor_metric_details_schedules_done", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "name": "sales_investor_metric_details_schedules_done", "alias": "sales_investor_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "905fa79314429dbdf905a5bf6f05a8d2c7f4f7b249637c668bcc5f40a6ff0f26"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.784231, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_done\""}, "model.houm.sales_buyer_metric_details_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads"], "unique_id": "model.houm.sales_buyer_metric_details_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean as (\nSELECT *\nFROM {{ ref('proc_demand_sales_leads') }}\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'Created Unique SH Buyer Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads.sql", "name": "sales_buyer_metric_details_leads", "alias": "sales_buyer_metric_details_leads", "checksum": {"name": "sha256", "checksum": "bb89551d918daccfb3f6355f3f457dcd6a8fc3f7600dc7202e7ea0de7779ce01"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.7963011, "compiled_code": "\n\nWITH demand_sales_leads_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\"\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'Created Unique SH Buyer Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads\""}, "model.houm.sales_buyer_metric_details_schedules_third_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_third_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_third_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n   AND status = 'Done'\n   AND client_done_visit = '3ra+ Agenda Done'\n)\n\nSELECT \n    97::INT AS orden ,\n    '3ra+ Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nWHERE is_test = FALSE \nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_third_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_third_done.sql", "name": "sales_buyer_metric_details_schedules_third_done", "alias": "sales_buyer_metric_details_schedules_third_done", "checksum": {"name": "sha256", "checksum": "ffb0a089ccce7dcb8184ccff388ebd0739be96441cce4b4c464c4b872423d617"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_third_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.8083782, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit,\n   COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'SalesVisit' \n   AND ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n   AND status = 'Done'\n   AND client_done_visit = '3ra+ Agenda Done'\n)\n\nSELECT \n    97::INT AS orden ,\n    '3ra+ Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nWHERE is_test = FALSE \nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_third_done\""}, "model.houm.rental_tenant_metric_details_new_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_details_new_tenant", "raw_code": "{{ config(materialized='view') }}\n\nWITH new_tenant AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM new_tenant\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "name": "rental_tenant_metric_details_new_tenant", "alias": "rental_tenant_metric_details_new_tenant", "checksum": {"name": "sha256", "checksum": "a7f4d6c88799793eaf208dd0b7549221e0453c2be86d6d2f75c846623df16764"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.820696, "compiled_code": "\n\nWITH new_tenant AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM new_tenant\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\""}, "model.houm.sales_buyer_metric_details_bid_without_response": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_bid_without_response"], "unique_id": "model.houm.sales_buyer_metric_details_bid_without_response", "raw_code": "{{ config(materialized='view') }}\n\nWITH bid AS (\nSELECT \n    *\nFROM {{ ref('proc_bid') }} \nWHERE TRUE\nAND (status_bid_presented = 'Pendiente de respuesta')\nAND (is_test = FALSE)   \n)\n\n, date_transformation AS (\nSELECT    \n    130::INT AS orden,\n    'Bids Without Response'::TEXT AS metric,\n    geo_id,\n    '{{ var(\"processed_time\") }}' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    {{ create_date_aggregate_columns(thedate = 'created_at_local') }}\nFROM date_transformation\nWHERE TRUE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_bid_without_response.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_bid_without_response.sql", "name": "sales_buyer_metric_details_bid_without_response", "alias": "sales_buyer_metric_details_bid_without_response", "checksum": {"name": "sha256", "checksum": "a2ada72744f74a5551ca076a0e7470764a56c44061e9dde17454b7faa9143071"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_bid"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_bid_without_response.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.832654, "compiled_code": "\n\nWITH bid AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" \nWHERE TRUE\nAND (status_bid_presented = 'Pendiente de respuesta')\nAND (is_test = FALSE)   \n)\n\n, date_transformation AS (\nSELECT    \n    130::INT AS orden,\n    'Bids Without Response'::TEXT AS metric,\n    geo_id,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time,\n    created_at,\n    created_at_local::DATE, \n    id AS bid_id,\n    status_bid_presented\nFROM bid\nORDER BY created_at_local DESC\n)\n\nSELECT \n    *,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at_local = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at_local) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND created_at_local <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND created_at_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_bid_without_response\""}, "model.houm.rental_tenant_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at')  }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "name": "rental_tenant_metric_details_paid_media_cost", "alias": "rental_tenant_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4e48bf861ba37089f56fa76f5b01959124114712ae814404e9f6c0a4e06ebbfa"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.8453708, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "name": "sales_buyer_metric_details_paid_media_cost", "alias": "sales_buyer_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "9775026cc115836bfde3e4956888548342175aa8d83bd33bf282e7779861a26b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.857928, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\""}, "model.houm.rental_tenant_metric_details_schedules_third_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_third_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_third_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM {{ ref('proc_core_scheduler_schedules') }}\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n   AND status = 'Done'\n   AND client_done_visit = '3ra+ Agenda Done'\n)\n\nSELECT \n    63::INT AS orden ,\n    '3ra+ Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_third_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_third_done.sql", "name": "rental_tenant_metric_details_schedules_third_done", "alias": "rental_tenant_metric_details_schedules_third_done", "checksum": {"name": "sha256", "checksum": "d35496989d158544dff3031babe294d06b065662ae4f886882fd9a6a7b1f9c5b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_core_scheduler_schedules"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_third_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.871069, "compiled_code": "\n\nWITH schedules_visit_clean AS (\nSELECT \n   schedule_id ,\n   begin_date::date ,\n   property_id ,\n   geo_id ,\n   client_done_visit\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\"\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON proc_core_scheduler_schedules.appraiser_email = test_persons.email\nWHERE TRUE \n   AND visit_type = 'Visit' \n   AND ( applicant_email NOT LIKE '%test.test' \n      AND applicant_email NOT LIKE '%test.com')  \n   AND status = 'Done'\n   AND client_done_visit = '3ra+ Agenda Done'\n)\n\nSELECT \n    63::INT AS orden ,\n    '3ra+ Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_third_done\""}, "model.houm.rental_tenant_metric_details_approved_eval": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_evaluations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_approved_eval"], "unique_id": "model.houm.rental_tenant_metric_details_approved_eval", "raw_code": "{{ config(materialized='view') }}\n\n\nWITH commercialy_approved_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM {{ ref('proc_closure_evaluations') }} \nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Commercially Approved Evaluations'\n)\n\n, date_transformation AS (\nSELECT \n\t96::INT AS orden ,\n    'Commercially Approved Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM commercialy_approved_evaluations_clean\nORDER BY add_time DESC\n)\n\nSELECT\n    date_transformation.* ,\n     {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_approved_eval.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_approved_eval.sql", "name": "rental_tenant_metric_details_approved_eval", "alias": "rental_tenant_metric_details_approved_eval", "checksum": {"name": "sha256", "checksum": "7f4a4fcaa52b02e8c30e338d29b933a37f1fa40c61bff28dd08b36077b01ad77"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_evaluations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_approved_eval.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1675970037.884036, "compiled_code": "\n\n\nWITH commercialy_approved_evaluations_clean AS (\nSELECT\n\tevaluation_id ,\n\taudit_start_dt AS add_time ,\n\taudit_start_dt ::DATE AS add_date ,\n\taudit_time_utc AS add_time_utc ,\n\tevaluation_status_grouped AS evaluation_status ,\n\tproperty_id , \n\tgeo_id ,\n\tmain_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\" \nWHERE true \nAND is_test = false \nAND evaluation_status_grouped = 'Commercially Approved Evaluations'\n)\n\n, date_transformation AS (\nSELECT \n\t96::INT AS orden ,\n    'Commercially Approved Evaluations'::TEXT AS metric ,\n    geo_id , \n    evaluation_id ,\n   \tproperty_id ,\n\t'2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    add_date ,\n    add_time_utc ,\n    main_applicant_id ,\n\tmain_applicant_name ,\n\tcodebtor_id ,\n\tcodebtor_name ,\n\tevaluator_name \nFROM commercialy_approved_evaluations_clean\nORDER BY add_time DESC\n)\n\nSELECT\n    date_transformation.* ,\n     CASE \n        WHEN add_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_approved_eval\""}, "model.houm.sales_buyer_metric_details_schedules_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_done", "raw_code": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT \r\n    90::int AS orden , \r\n    'SalesVisit Done'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "name": "sales_buyer_metric_details_schedules_done", "alias": "sales_buyer_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "659f3ab442517135d75aa1f86e619bf243c2ad45d2f87f54ed3dfaee70269aa2"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.896189, "compiled_code": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::int AS orden , \n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\""}, "model.houm.sales_investor_metric_details_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_investor_metric_details_leads_qualified_date", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL )\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'buyer_qualification_date') }}\nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY buyer_qualification_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "name": "sales_investor_metric_details_leads_qualified_date", "alias": "sales_investor_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "9cab70505a43af3e30aac0c77d6edd09352e0d8591d4ca6c6c02ab17eea57e74"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.908243, "compiled_code": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL )\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', buyer_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',buyer_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',buyer_qualification_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND buyer_qualification_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND buyer_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY buyer_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified_date\""}, "model.houm.sales_demand_metric_details_paid_media_cost": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_demand_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_demand_metric_details_paid_media_cost", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost NP & SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "name": "sales_demand_metric_details_paid_media_cost", "alias": "sales_demand_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "41026afd0647872a1497a5c8acf85a04ac699b968a61bb62ac244d1eed337f67"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.9210181, "compiled_code": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost NP & SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_leads_qualified_date": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_buyer_metric_details_leads_qualified_date", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL)\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'buyer_qualification_date') }}\nFROM demand_sales_leads_clean\nORDER BY buyer_qualification_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "name": "sales_buyer_metric_details_leads_qualified_date", "alias": "sales_buyer_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "914271a5c26cb3e4b61bbffdd91562f7d2f0448b905e5a77d758b6b48ab57dd4"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1675970037.9331782, "compiled_code": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL)\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-2,'2023-02-09 16:13:54.685542-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', buyer_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',buyer_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',buyer_qualification_date) = DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) \n            AND buyer_qualification_date <= DATEADD(DAY,-1,'2023-02-09 16:13:54.685542-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            AND buyer_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2023-02-09 16:13:54.685542-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2023-02-09 16:13:54.685542-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM demand_sales_leads_clean\nORDER BY buyer_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified_date\""}, "model.houm.property__published_properties_rev_suggested_prices": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.proc_properties_rev_suggested_prices"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_properties_rev_suggested_prices"], "unique_id": "model.houm.property__published_properties_rev_suggested_prices", "raw_code": "{{ config(materialized='table') }}\n\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.property_id \n        ,valor_uf.valor as valor_uf\n        ,a.valor\n        ,a.valor_venta\n        ,g.sale_suggested_price\n        ,g.rental_suggested_price\n        ,a.rentals_currency_code \n        ,a.sales_currency_code \n        ,g.rental_suggested_currency as rental_suggested_currency_code\n        ,g.sale_suggested_currency as sale_suggested_currency_code\n        ,g.sale_original_price\n        ,g.rental_original_price\n        ,case when a.valor_venta is null or a.valor_venta = 0 then null\n          when g.sale_suggested_price is null or g.sale_suggested_price = 0 then null\n          else (\n                case    when a.sales_currency_code::text like '%CLP%' and g.sale_suggested_currency like '%CLF%'\n                        then Round( (a.valor_venta/valor_uf.valor )::float / g.sale_suggested_price,3)\n                        when a.sales_currency_code::text like '%CLF%' and g.sale_suggested_currency like '%CLP%'\n                        then Round( (a.valor_venta*valor_uf.valor )::float / g.sale_suggested_price,3)\n                        else Round( (a.valor_venta)::float / g.sale_suggested_price , 3)\n                        end\n                ) end rev_ratio_sales\n        ,case when a.valor is null or a.valor = 0 then null\n          when g.rental_suggested_price is null or g.rental_suggested_price = 0 then null\n          else (\n                case    when a.rentals_currency_code::text like '%CLP%' and g.rental_suggested_currency like '%CLF%'\n                        then Round( (a.valor/valor_uf.valor )::float / g.rental_suggested_price,3)\n                        when a.rentals_currency_code::text like '%CLF%' and g.rental_suggested_currency like '%CLP%'\n                        then Round( (a.valor*valor_uf.valor )::float / g.rental_suggested_price,3)\n                        else Round( (a.valor)::float / g.rental_suggested_price , 3)\n                        end\n                ) end rev_ratio_rentals \nFROM valor_uf, {{ ref('property__published_properties') }} a\nLEFT JOIN {{ ref('proc_properties_rev_suggested_prices') }} g on g.property_id = a.property_id\n)\nselect * from tabla_final", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_properties_rev_suggested_prices.sql", "original_file_path": "models/dwh/analytics/property__published_properties_rev_suggested_prices.sql", "name": "property__published_properties_rev_suggested_prices", "alias": "property__published_properties_rev_suggested_prices", "checksum": {"name": "sha256", "checksum": "63d4ae7e1d551ba3f9e4e1899b134883f6421c88edec76c33e54963a8c8829d5"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["property__published_properties"], ["proc_properties_rev_suggested_prices"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_properties_rev_suggested_prices.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.945363, "compiled_code": "\n\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.property_id \n        ,valor_uf.valor as valor_uf\n        ,a.valor\n        ,a.valor_venta\n        ,g.sale_suggested_price\n        ,g.rental_suggested_price\n        ,a.rentals_currency_code \n        ,a.sales_currency_code \n        ,g.rental_suggested_currency as rental_suggested_currency_code\n        ,g.sale_suggested_currency as sale_suggested_currency_code\n        ,g.sale_original_price\n        ,g.rental_original_price\n        ,case when a.valor_venta is null or a.valor_venta = 0 then null\n          when g.sale_suggested_price is null or g.sale_suggested_price = 0 then null\n          else (\n                case    when a.sales_currency_code::text like '%CLP%' and g.sale_suggested_currency like '%CLF%'\n                        then Round( (a.valor_venta/valor_uf.valor )::float / g.sale_suggested_price,3)\n                        when a.sales_currency_code::text like '%CLF%' and g.sale_suggested_currency like '%CLP%'\n                        then Round( (a.valor_venta*valor_uf.valor )::float / g.sale_suggested_price,3)\n                        else Round( (a.valor_venta)::float / g.sale_suggested_price , 3)\n                        end\n                ) end rev_ratio_sales\n        ,case when a.valor is null or a.valor = 0 then null\n          when g.rental_suggested_price is null or g.rental_suggested_price = 0 then null\n          else (\n                case    when a.rentals_currency_code::text like '%CLP%' and g.rental_suggested_currency like '%CLF%'\n                        then Round( (a.valor/valor_uf.valor )::float / g.rental_suggested_price,3)\n                        when a.rentals_currency_code::text like '%CLF%' and g.rental_suggested_currency like '%CLP%'\n                        then Round( (a.valor*valor_uf.valor )::float / g.rental_suggested_price,3)\n                        else Round( (a.valor)::float / g.rental_suggested_price , 3)\n                        end\n                ) end rev_ratio_rentals \nFROM valor_uf, \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_rev_suggested_prices\" g on g.property_id = a.property_id\n)\nselect * from tabla_final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_properties_rev_suggested_prices\""}, "model.houm.property__external_properties_rent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_external_properties_rent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__external_properties_rent"], "unique_id": "model.houm.property__external_properties_rent", "raw_code": "SELECT\nis_apartment\n,country\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('proc_external_properties_rent') }}\nWHERE publisher != 'houm'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__external_properties_rent.sql", "original_file_path": "models/dwh/analytics/property__external_properties_rent.sql", "name": "property__external_properties_rent", "alias": "property__external_properties_rent", "checksum": {"name": "sha256", "checksum": "89f53bcd934bb6454b551372c0c6a558af83c592ba7209d33663782ab289cfa2"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_external_properties_rent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__external_properties_rent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.947155, "compiled_code": "SELECT\nis_apartment\n,country\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_external_properties_rent\"\nWHERE publisher != 'houm'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__external_properties_rent\""}, "model.houm.property__houm_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__houm_properties"], "unique_id": "model.houm.property__houm_properties", "raw_code": "{{ config(materialized='table') }}\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, {{ ref('proc_properties') }} a\nLEFT JOIN {{ ref('proc_propertydetails') }} b on a.id = b.property_id \nLEFT JOIN {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id\nLEFT JOIN {{ ref('proc_properties_location') }}  f on a.neighborhood_id  = f.id \nLEFT JOIN {{ ref('proc_properties_mz') }}  d on d.property_id  = a.id \nLEFT JOIN {{ ref('proc_macrozone') }} e on d.geo_id = e.geo_id \nwhere a.is_deleted = False \n)\nselect * from tabla_final", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__houm_properties.sql", "original_file_path": "models/dwh/analytics/property__houm_properties.sql", "name": "property__houm_properties", "alias": "property__houm_properties", "checksum": {"name": "sha256", "checksum": "d0f9262933fd8556fbe66cc7b198cc82ad740643744d4fcc3158dea330667c0e"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"], ["proc_properties_location"], ["proc_properties_mz"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__houm_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.9487429, "compiled_code": "\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\"  f on a.neighborhood_id  = f.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\"  d on d.property_id  = a.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" e on d.geo_id = e.geo_id \nwhere a.is_deleted = False \n)\nselect * from tabla_final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__houm_properties\""}, "model.houm.property__rev_ratio_country_city": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties_rev_suggested_prices", "model.houm.property__published_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__rev_ratio_country_city"], "unique_id": "model.houm.property__rev_ratio_country_city", "raw_code": "with table1 as (\nselect b.property_id\n        ,b.country\n        ,b.city_macrozone\n        ,b.city_marketplace\n        ,b.business_type\n        ,b.sales_status\n        ,b.rental_status\n        ,a.sales_currency_code,a.sale_suggested_currency_code\n        ,a.rental_suggested_currency_code\n        ,a.sale_suggested_currency_code\n        ,a.rentals_currency_code\n        ,a.rental_suggested_price\n        ,a.rev_ratio_rentals\n        ,a.rev_ratio_sales\n        ,a.valor\n        ,a.valor_uf\n        --,a.*\nfrom {{ ref('property__published_properties_rev_suggested_prices') }} a\nleft join {{ ref('property__published_properties') }} b on a.property_id = b.property_id\n)\n, rental_table as (\nselect * \nfrom table1\nwhere business_type like '%Rental%' \nand rental_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, sale_table as (\nselect * \nfrom table1\nwhere business_type like '%Sale%' \nand sales_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, final_table as (\nselect country,city_marketplace,'Sales' as business_type,avg(rev_ratio_sales) as rev_ratio\nfrom sale_table\ngroup by country,city_marketplace\nunion all\nselect country,city_marketplace,'Rentals' as business_type,avg(rev_ratio_rentals) as rev_ratio\nfrom rental_table\ngroup by country,city_marketplace\n)\nselect * \nfrom final_table order by rev_ratio asc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__rev_ratio_country_city.sql", "original_file_path": "models/dwh/analytics/property__rev_ratio_country_city.sql", "name": "property__rev_ratio_country_city", "alias": "property__rev_ratio_country_city", "checksum": {"name": "sha256", "checksum": "e895cdf5b3c18b75dbcd506a62fb37fd9fa39c0b8237067492930def627fd760"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["property__published_properties_rev_suggested_prices"], ["property__published_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__rev_ratio_country_city.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.9507132, "compiled_code": "with table1 as (\nselect b.property_id\n        ,b.country\n        ,b.city_macrozone\n        ,b.city_marketplace\n        ,b.business_type\n        ,b.sales_status\n        ,b.rental_status\n        ,a.sales_currency_code,a.sale_suggested_currency_code\n        ,a.rental_suggested_currency_code\n        ,a.sale_suggested_currency_code\n        ,a.rentals_currency_code\n        ,a.rental_suggested_price\n        ,a.rev_ratio_rentals\n        ,a.rev_ratio_sales\n        ,a.valor\n        ,a.valor_uf\n        --,a.*\nfrom \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties_rev_suggested_prices\" a\nleft join \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" b on a.property_id = b.property_id\n)\n, rental_table as (\nselect * \nfrom table1\nwhere business_type like '%Rental%' \nand rental_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, sale_table as (\nselect * \nfrom table1\nwhere business_type like '%Sale%' \nand sales_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, final_table as (\nselect country,city_marketplace,'Sales' as business_type,avg(rev_ratio_sales) as rev_ratio\nfrom sale_table\ngroup by country,city_marketplace\nunion all\nselect country,city_marketplace,'Rentals' as business_type,avg(rev_ratio_rentals) as rev_ratio\nfrom rental_table\ngroup by country,city_marketplace\n)\nselect * \nfrom final_table order by rev_ratio asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__rev_ratio_country_city\""}, "model.houm.property__published_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_properties"], "unique_id": "model.houm.property__published_properties", "raw_code": "{{ config(materialized='table') }}\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, {{ ref('proc_properties') }} a\nLEFT JOIN {{ ref('proc_propertydetails') }} b on a.id = b.property_id \nLEFT JOIN {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id\nLEFT JOIN {{ ref('proc_properties_location') }}  f on a.neighborhood_id  = f.id \nLEFT JOIN {{ ref('proc_properties_mz') }}  d on d.property_id  = a.id \nLEFT JOIN {{ ref('proc_macrozone') }} e on d.geo_id = e.geo_id \nwhere (b.status in ('published','republished')\nor c.status in ('published','republished') ) AND a.is_deleted = False \n)\nselect * from tabla_final", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_properties.sql", "original_file_path": "models/dwh/analytics/property__published_properties.sql", "name": "property__published_properties", "alias": "property__published_properties", "checksum": {"name": "sha256", "checksum": "cc9c9fe3c329036465b1922a83ea1d28805d1adcc3ba0b01ae38a95291db9450"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"], ["proc_properties_location"], ["proc_properties_mz"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.9524941, "compiled_code": "\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\"  f on a.neighborhood_id  = f.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\"  d on d.property_id  = a.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" e on d.geo_id = e.geo_id \nwhere (b.status in ('published','republished')\nor c.status in ('published','republished') ) AND a.is_deleted = False \n)\nselect * from tabla_final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\""}, "model.houm.property__rev_kpi_ratio": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties", "model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__rev_kpi_ratio"], "unique_id": "model.houm.property__rev_kpi_ratio", "raw_code": "WITH sales AS (\n        SELECT id,\n            'sales' AS service_type, \n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_sales_published_properties') }}\n        UNION ALL\n        SELECT id,\n            'sales' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_sales_sold_properties') }}\n    ),\n    rental AS (\n        SELECT id,\n            'rental' AS service_type,\n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_rental_published_properties') }}\n        UNION ALL\n        SELECT id,\n            'rental' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_rental_rented_properties') }}\n    ),\n\nratio_by_id AS (\n    SELECT *\n    FROM sales\n    UNION ALL \n    SELECT *\n    FROM rental\n    ),\nratio_treshold AS (\n    SELECT PERCENTILE_CONT(0.955) WITHIN GROUP (ORDER BY recommended_price_ratio) As upper_val,\n           PERCENTILE_CONT(0.045) WITHIN GROUP (ORDER BY recommended_price_ratio) As lower_val\n    FROM ratio_by_id\n)\n\nSELECT *\nFROM ratio_by_id, ratio_treshold\nWHERE recommended_price_ratio IS NOT NULL\nAND min_recommended_price_ratio IS NOT NULL\nAND max_recommended_price_ratio IS NOT NULL\nAND country IS NOT NULL\nAND city_marketplace IS NOT NULL\nAND recommended_price_ratio < ratio_treshold.upper_val\nAND recommended_price_ratio > ratio_treshold.lower_val", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__rev_kpi_ratio.sql", "original_file_path": "models/dwh/analytics/property__rev_kpi_ratio.sql", "name": "property__rev_kpi_ratio", "alias": "property__rev_kpi_ratio", "checksum": {"name": "sha256", "checksum": "cb0c50f50b5799764021ff15a081cf03af5e0ef00b9c6c9f1a5b33da14407865"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_rev_sales_published_properties"], ["proc_rev_sales_sold_properties"], ["proc_rev_rental_published_properties"], ["proc_rev_rental_rented_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__rev_kpi_ratio.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.954358, "compiled_code": "WITH sales AS (\n        SELECT id,\n            'sales' AS service_type, \n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_published_properties\"\n        UNION ALL\n        SELECT id,\n            'sales' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_sold_properties\"\n    ),\n    rental AS (\n        SELECT id,\n            'rental' AS service_type,\n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_published_properties\"\n        UNION ALL\n        SELECT id,\n            'rental' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_rented_properties\"\n    ),\n\nratio_by_id AS (\n    SELECT *\n    FROM sales\n    UNION ALL \n    SELECT *\n    FROM rental\n    ),\nratio_treshold AS (\n    SELECT PERCENTILE_CONT(0.955) WITHIN GROUP (ORDER BY recommended_price_ratio) As upper_val,\n           PERCENTILE_CONT(0.045) WITHIN GROUP (ORDER BY recommended_price_ratio) As lower_val\n    FROM ratio_by_id\n)\n\nSELECT *\nFROM ratio_by_id, ratio_treshold\nWHERE recommended_price_ratio IS NOT NULL\nAND min_recommended_price_ratio IS NOT NULL\nAND max_recommended_price_ratio IS NOT NULL\nAND country IS NOT NULL\nAND city_marketplace IS NOT NULL\nAND recommended_price_ratio < ratio_treshold.upper_val\nAND recommended_price_ratio > ratio_treshold.lower_val", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\""}, "model.houm.property__external_properties_sales": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_external_properties_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__external_properties_sales"], "unique_id": "model.houm.property__external_properties_sales", "raw_code": "SELECT\nis_apartment\n,country\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('proc_external_properties_sales') }}\nWHERE publisher != 'houm'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__external_properties_sales.sql", "original_file_path": "models/dwh/analytics/property__external_properties_sales.sql", "name": "property__external_properties_sales", "alias": "property__external_properties_sales", "checksum": {"name": "sha256", "checksum": "66e379fd22d5f72e198219a3caf9b53e034f2e74516c9d30d820e5c07b232ac9"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_external_properties_sales"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__external_properties_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.9562, "compiled_code": "SELECT\nis_apartment\n,country\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_external_properties_sales\"\nWHERE publisher != 'houm'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__external_properties_sales\""}, "model.houm.property__published_new_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_new_properties", "model.houm.stg_users", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails", "model.houm.stg_real_estate_developments_developments", "model.houm.stg_real_estate_developments_developmentdetails", "model.houm.stg_real_estate_developments_unittypes", "model.houm.stg_real_estate_developments_units", "model.houm.stg_properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_new_properties"], "unique_id": "model.houm.property__published_new_properties", "raw_code": "with Published_NewProperties as (\nselect properties.id as property_id \n        ,properties.country\n        , case when real_estate_developments_developments.development_status like 'completed' then 'EntregaInmediata' \n              when real_estate_developments_developments.development_status like 'site_plan_approved' then 'EnBlanco'           \n              when real_estate_developments_developments.development_status like 'under_construction' then 'EnVerde'   \n              when real_estate_developments_developments.development_status like 'proposed' then 'Planos'\n              end as project_phase\n        ,arriendoasegurado_propertydetails.latitud as latitude\n        ,arriendoasegurado_propertydetails.longitud as longitude\n        ,real_estate_developments_units.status as unit_status\n        ,properties.supply_relation\n      \t,real_estate_developments_developmentdetails.reservation_value reservation_value\n      \t,real_estate_developments_developments.has_pilot\n      \t,real_estate_developments_developments.has_show_unit\n        -- Tipologias data \n        , real_estate_developments_unittypes.id type_id\n        , real_estate_developments_unittypes.name tipology\n        , real_estate_developments_units.name as nombre_unidad\n        , (case when properties.type = 'departamento' then 'depto \ud83c\udfe2' else type || ' \ud83c\udfe0' end)  as property_type\n        , real_estate_developments_unittypes.rooms Dor\n        , real_estate_developments_unittypes.bathrooms bath\n        , real_estate_developments_unittypes.usable_area\n        , real_estate_developments_unittypes.building_area\n        -- Unidad \n        , real_estate_developments_units.currency\n        , real_estate_developments_units.id unit_id \n        , arriendoasegurado_propertydetails.valor_venta as min_unit_price\n        , real_estate_developments_units.price as unit_price\n        , real_estate_developments_units.price/Nullif( (usable_area - building_area)*0.5+usable_area,0) m2_unit_price\n        --, round(real_estate_developments_units.loan_monthly_payment/0.3) as Renta_m\u00ednima\n        , real_estate_developments_units.suggested_rent as ReV\n        , (real_estate_developments_units.suggested_rent*12)/real_estate_developments_units.price::double precision as Cap_rate\n        --, real_estate_developments_units.suggested_rent*12 as Renta_anual\n        , real_estate_developments_units.floor  as floor \n        , real_estate_developments_units.parking_spaces park\n        , real_estate_developments_units.has_storage\n        , properties_associationamenities.has_patio\n        , properties_associationamenities.has_playground\n        , properties_associationamenities.has_pet_area\n        , properties_associationamenities.has_roof_garden\n        , case when properties_associationamenities.has_patio\n            or properties_associationamenities.has_playground\n            or properties_associationamenities.has_pet_area\n            or properties_associationamenities.has_roof_garden\n            then true  else false end gree_area_boolean\n        --, bi_orientation.orientation_esp\n        , real_estate_developments_units.orientation\nfrom {{ ref('proc_new_properties') }} properties\nleft join {{ ref('stg_users') }} users on users.id = properties.user_id \nleft join {{ ref('proc_property_salesdetails') }} properties_salesdetails on properties_salesdetails.property_id = properties.id\nleft join {{ ref('proc_propertydetails') }} arriendoasegurado_propertydetails on arriendoasegurado_propertydetails.property_id = properties.id \nleft join {{ ref('stg_real_estate_developments_developments') }} real_estate_developments_developments on real_estate_developments_developments.property_id = properties.id \nleft join {{ ref('stg_real_estate_developments_developmentdetails') }} real_estate_developments_developmentdetails on real_estate_developments_developments.id  = real_estate_developments_developmentdetails.development_id \nleft join {{ ref('stg_real_estate_developments_unittypes') }} real_estate_developments_unittypes on real_estate_developments_unittypes.development_id = real_estate_developments_developments.id\nleft join {{ ref('stg_real_estate_developments_units') }} real_estate_developments_units on real_estate_developments_units.unit_type_id = real_estate_developments_unittypes.id \nleft join {{ ref('stg_properties_associationamenities') }} properties_associationamenities on properties_associationamenities.property_id = properties.id \nwhere true\nand properties_salesdetails.status = 'published'\nand properties.is_deleted = False  \nand properties.for_sale = True\nand upper(properties.country) in ('COLOMBIA','CHILE')\n)\n\nSELECT *\nFROM Published_NewProperties", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_new_properties.sql", "original_file_path": "models/dwh/analytics/property__published_new_properties.sql", "name": "property__published_new_properties", "alias": "property__published_new_properties", "checksum": {"name": "sha256", "checksum": "da773dd34a22e61a8a3725e7db245cd3f8171af1b7c1b6bf99aae223634123a3"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_new_properties"], ["stg_users"], ["proc_property_salesdetails"], ["proc_propertydetails"], ["stg_real_estate_developments_developments"], ["stg_real_estate_developments_developmentdetails"], ["stg_real_estate_developments_unittypes"], ["stg_real_estate_developments_units"], ["stg_properties_associationamenities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1675970037.957945, "compiled_code": "with Published_NewProperties as (\nselect properties.id as property_id \n        ,properties.country\n        , case when real_estate_developments_developments.development_status like 'completed' then 'EntregaInmediata' \n              when real_estate_developments_developments.development_status like 'site_plan_approved' then 'EnBlanco'           \n              when real_estate_developments_developments.development_status like 'under_construction' then 'EnVerde'   \n              when real_estate_developments_developments.development_status like 'proposed' then 'Planos'\n              end as project_phase\n        ,arriendoasegurado_propertydetails.latitud as latitude\n        ,arriendoasegurado_propertydetails.longitud as longitude\n        ,real_estate_developments_units.status as unit_status\n        ,properties.supply_relation\n      \t,real_estate_developments_developmentdetails.reservation_value reservation_value\n      \t,real_estate_developments_developments.has_pilot\n      \t,real_estate_developments_developments.has_show_unit\n        -- Tipologias data \n        , real_estate_developments_unittypes.id type_id\n        , real_estate_developments_unittypes.name tipology\n        , real_estate_developments_units.name as nombre_unidad\n        , (case when properties.type = 'departamento' then 'depto \ud83c\udfe2' else type || ' \ud83c\udfe0' end)  as property_type\n        , real_estate_developments_unittypes.rooms Dor\n        , real_estate_developments_unittypes.bathrooms bath\n        , real_estate_developments_unittypes.usable_area\n        , real_estate_developments_unittypes.building_area\n        -- Unidad \n        , real_estate_developments_units.currency\n        , real_estate_developments_units.id unit_id \n        , arriendoasegurado_propertydetails.valor_venta as min_unit_price\n        , real_estate_developments_units.price as unit_price\n        , real_estate_developments_units.price/Nullif( (usable_area - building_area)*0.5+usable_area,0) m2_unit_price\n        --, round(real_estate_developments_units.loan_monthly_payment/0.3) as Renta_m\u00ednima\n        , real_estate_developments_units.suggested_rent as ReV\n        , (real_estate_developments_units.suggested_rent*12)/real_estate_developments_units.price::double precision as Cap_rate\n        --, real_estate_developments_units.suggested_rent*12 as Renta_anual\n        , real_estate_developments_units.floor  as floor \n        , real_estate_developments_units.parking_spaces park\n        , real_estate_developments_units.has_storage\n        , properties_associationamenities.has_patio\n        , properties_associationamenities.has_playground\n        , properties_associationamenities.has_pet_area\n        , properties_associationamenities.has_roof_garden\n        , case when properties_associationamenities.has_patio\n            or properties_associationamenities.has_playground\n            or properties_associationamenities.has_pet_area\n            or properties_associationamenities.has_roof_garden\n            then true  else false end gree_area_boolean\n        --, bi_orientation.orientation_esp\n        , real_estate_developments_units.orientation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_new_properties\" properties\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_users\" users on users.id = properties.user_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" properties_salesdetails on properties_salesdetails.property_id = properties.id\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" arriendoasegurado_propertydetails on arriendoasegurado_propertydetails.property_id = properties.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\" real_estate_developments_developments on real_estate_developments_developments.property_id = properties.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developmentdetails\" real_estate_developments_developmentdetails on real_estate_developments_developments.id  = real_estate_developments_developmentdetails.development_id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\" real_estate_developments_unittypes on real_estate_developments_unittypes.development_id = real_estate_developments_developments.id\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\" real_estate_developments_units on real_estate_developments_units.unit_type_id = real_estate_developments_unittypes.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\" properties_associationamenities on properties_associationamenities.property_id = properties.id \nwhere true\nand properties_salesdetails.status = 'published'\nand properties.is_deleted = False  \nand properties.for_sale = True\nand upper(properties.country) in ('COLOMBIA','CHILE')\n)\n\nSELECT *\nFROM Published_NewProperties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_new_properties\""}, "model.houm.stg_survicate_nps_sac_surveys": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_sac_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_surveys"], "unique_id": "model.houm.stg_survicate_nps_sac_surveys", "raw_code": "SELECT \n    * \nFROM {{ source('survicate', 'nps_sac_surveys') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_surveys.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_surveys.sql", "name": "stg_survicate_nps_sac_surveys", "alias": "stg_survicate_nps_sac_surveys", "checksum": {"name": "sha256", "checksum": "d9604e228476ef76e62ae0019f1d24454b257a60683fe8810347609b1bba52fa"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_sac_surveys"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_surveys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.959779, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_sac_surveys\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_surveys\""}, "model.houm.stg_survicate_nps_sac_bi_executives": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_sac_executives"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_bi_executives"], "unique_id": "model.houm.stg_survicate_nps_sac_bi_executives", "raw_code": "select distinct REPLACE(survey_name, 'CH Satisfacci\u00f3n Clientes post atenci\u00f3n ', '') as \"Executive\",\n        survey_name\nFROM {{ ref('stg_survicate_nps_sac_executives') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "name": "stg_survicate_nps_sac_bi_executives", "alias": "stg_survicate_nps_sac_bi_executives", "checksum": {"name": "sha256", "checksum": "b2d59d412e853ee0282c59a44acfcf3000feac6e7f22457dc9df2c8c6d373912"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_sac_executives"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.961365, "compiled_code": "select distinct REPLACE(survey_name, 'CH Satisfacci\u00f3n Clientes post atenci\u00f3n ', '') as \"Executive\",\n        survey_name\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_executives\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_bi_executives\""}, "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_satisfaction_24hrs"], "unique_id": "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs", "raw_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    houm_user_experience_description,\n    houm_user_experience,\n    houmer_service_satisfaction_description,\n    houmer_service_satisfaction,\n    expected_property_status_description,\n    expected_property_status,\n    houm_evaluation_process_description,\n    houm_evaluation_process,\n    online_contract_process_description,\n    online_contract_process,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid \nFROM {{ source('survicate', 'nps_tenant_satisfaction_24hrs') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "name": "stg_survicate_nps_tenant_satisfaction_24hrs", "alias": "stg_survicate_nps_tenant_satisfaction_24hrs", "checksum": {"name": "sha256", "checksum": "56dcea23093ba02eec4e8348c55c4059da3748df3fdb4bb181861a09e0a0c815"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tenant_satisfaction_24hrs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.962935, "compiled_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    houm_user_experience_description,\n    houm_user_experience,\n    houmer_service_satisfaction_description,\n    houmer_service_satisfaction,\n    expected_property_status_description,\n    expected_property_status,\n    houm_evaluation_process_description,\n    houm_evaluation_process,\n    online_contract_process_description,\n    online_contract_process,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid \nFROM \"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_satisfaction_24hrs\""}, "model.houm.stg_survicate_nps_admin_surveys": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_admin_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_surveys"], "unique_id": "model.houm.stg_survicate_nps_admin_surveys", "raw_code": "SELECT \n    * \nFROM {{ source('survicate', 'nps_admin_surveys') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_surveys.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_surveys.sql", "name": "stg_survicate_nps_admin_surveys", "alias": "stg_survicate_nps_admin_surveys", "checksum": {"name": "sha256", "checksum": "2e4551d40fdc3c4f046ef8a67931e1d32c768a419c5f4ad6789e2b20407a8f55"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_admin_surveys"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_surveys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.964677, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_admin_surveys\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_surveys\""}, "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_satisfaction_6months_cl"], "unique_id": "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "raw_code": "SELECT \n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    houm_administration_satisfaction_description,\n    houm_administration_satisfaction,\n    executive_management_satisfaction_description,\n    executive_management_satisfaction,\n    nps_service_recommendation AS recommendation,\n    text1_suggestion_box AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM {{ source('survicate', 'nps_landlord_satisfaction_6months_cl') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "name": "stg_survicate_nps_landlord_satisfaction_6months_cl", "alias": "stg_survicate_nps_landlord_satisfaction_6months_cl", "checksum": {"name": "sha256", "checksum": "02c4d359ff63eeba974bc1b23b493c5afc742bb4354693dcb07fc29cfaf36513"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_satisfaction_6months_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.966251, "compiled_code": "SELECT \n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    houm_administration_satisfaction_description,\n    houm_administration_satisfaction,\n    executive_management_satisfaction_description,\n    executive_management_satisfaction,\n    nps_service_recommendation AS recommendation,\n    text1_suggestion_box AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\""}, "model.houm.stg_survicate_nps_admin_executives": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_admin_answers", "model.houm.stg_survicate_nps_admin_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_executives"], "unique_id": "model.houm.stg_survicate_nps_admin_executives", "raw_code": "SELECT a.name AS survey_name\n        , b.survey_id\n        , b.first_seen_date\n        , b.first_response_date\n        , b.customer_country\n        , b.ev_satisfaction_description\n        , b.ev_satisfaction\n        , b.service_quality_description\n        , b.service_quality\n        , b.problem_solved\n        , b.executive_call\n        , b.response_time\n        , b.text1_answer\n        , b.page_url\n        , b.visitor_id\n        , b.visitor_uuid\n        , b.response_uuid\nFROM {{ ref('stg_survicate_nps_admin_answers') }} b \nLEFT JOIN {{ ref('stg_survicate_nps_admin_surveys') }} a ON a.id = b.survey_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_executives.sql", "name": "stg_survicate_nps_admin_executives", "alias": "stg_survicate_nps_admin_executives", "checksum": {"name": "sha256", "checksum": "c8b4d9de4626fdf3b961447ecace2f18f372a3fa38481541974379156166e2c8"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_admin_answers"], ["stg_survicate_nps_admin_surveys"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.967829, "compiled_code": "SELECT a.name AS survey_name\n        , b.survey_id\n        , b.first_seen_date\n        , b.first_response_date\n        , b.customer_country\n        , b.ev_satisfaction_description\n        , b.ev_satisfaction\n        , b.service_quality_description\n        , b.service_quality\n        , b.problem_solved\n        , b.executive_call\n        , b.response_time\n        , b.text1_answer\n        , b.page_url\n        , b.visitor_id\n        , b.visitor_uuid\n        , b.response_uuid\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_answers\" b \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_surveys\" a ON a.id = b.survey_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_executives\""}, "model.houm.stg_survicate_nps_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_visit_done"], "unique_id": "model.houm.stg_survicate_nps_visit_done", "raw_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    m1_schedule_easiness_description,\n    m1_contact_speed_description,\n    m1_visit_was_ok_description,\n    m1_houmer_delivers_info_description,\n    m1_schedule_easiness,\n    m1_contact_speed,\n    m1_visit_was_ok,\n    m1_houmer_delivers_info,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    contactform1_name,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM {{ source('survicate', 'nps_visit_done') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_visit_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_visit_done.sql", "name": "stg_survicate_nps_visit_done", "alias": "stg_survicate_nps_visit_done", "checksum": {"name": "sha256", "checksum": "24ed248d268bf64aee6d9cd25a7423d3325853eab896efedd5748356c296e789"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_visit_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.9695392, "compiled_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    m1_schedule_easiness_description,\n    m1_contact_speed_description,\n    m1_visit_was_ok_description,\n    m1_houmer_delivers_info_description,\n    m1_schedule_easiness,\n    m1_contact_speed,\n    m1_visit_was_ok,\n    m1_houmer_delivers_info,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    contactform1_name,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM \"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_visit_done\""}, "model.houm.stg_survicate_nps_admin_answers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_admin_answers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_answers"], "unique_id": "model.houm.stg_survicate_nps_admin_answers", "raw_code": "SELECT \n    * \nFROM {{ source('survicate', 'nps_admin_answers') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_answers.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_answers.sql", "name": "stg_survicate_nps_admin_answers", "alias": "stg_survicate_nps_admin_answers", "checksum": {"name": "sha256", "checksum": "766f48a5f746c4cb47796004d0cd7c621790b1c0a5a183403e9f440c5742b410"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_admin_answers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_answers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.9712691, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_admin_answers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_answers\""}, "model.houm.stg_survicate_nps_sac_executives": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_sac_answers", "model.houm.stg_survicate_nps_sac_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_executives"], "unique_id": "model.houm.stg_survicate_nps_sac_executives", "raw_code": "SELECT b.name AS survey_name, a.survey_id\n        , a.first_seen_date\n        , a.first_response_date\n        , a.ev_atencion_description\n        , a.ev_atencion\n        , a.ev_satisfaction_description\n        , a.ev_satisfaction\n        , a.problem_solved_description\n        , a.problem_solved\n        , a.nps_service_recommendation\n        , a.text1_bad_answer\n        , a.text1_good_answer\n        , a.text1_neutral_answer\n        , a.page_url\n        , a.visitor_id\n        , a.visitor_uuid\n        , a.response_uuid\n        , a.nps\nFROM {{ ref('stg_survicate_nps_sac_answers') }} a\nLEFT JOIN {{ ref('stg_survicate_nps_sac_surveys') }} b ON b.id = a.survey_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_executives.sql", "name": "stg_survicate_nps_sac_executives", "alias": "stg_survicate_nps_sac_executives", "checksum": {"name": "sha256", "checksum": "c6ca6e159bf9ce88eadce16cd00aff3242dab6801ec7bc4faf00229379a07650"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_sac_answers"], ["stg_survicate_nps_sac_surveys"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.972849, "compiled_code": "SELECT b.name AS survey_name, a.survey_id\n        , a.first_seen_date\n        , a.first_response_date\n        , a.ev_atencion_description\n        , a.ev_atencion\n        , a.ev_satisfaction_description\n        , a.ev_satisfaction\n        , a.problem_solved_description\n        , a.problem_solved\n        , a.nps_service_recommendation\n        , a.text1_bad_answer\n        , a.text1_good_answer\n        , a.text1_neutral_answer\n        , a.page_url\n        , a.visitor_id\n        , a.visitor_uuid\n        , a.response_uuid\n        , a.nps\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_answers\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_surveys\" b ON b.id = a.survey_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_executives\""}, "model.houm.stg_survicate_nps_sac_answers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_sac_answers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_answers"], "unique_id": "model.houm.stg_survicate_nps_sac_answers", "raw_code": "SELECT \n    * \nFROM {{ source('survicate', 'nps_sac_answers') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_answers.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_answers.sql", "name": "stg_survicate_nps_sac_answers", "alias": "stg_survicate_nps_sac_answers", "checksum": {"name": "sha256", "checksum": "dc7b379139955690f5c52e335a59139e1469712bdeee2cd3bf26a53cd3988c61"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_sac_answers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_answers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.974524, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_sac_answers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_answers\""}, "model.houm.stg_survicate_nps_landlord_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_listing"], "unique_id": "model.houm.stg_survicate_nps_landlord_listing", "raw_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    sc1_customer_source,\n    m1_process_speed_description,\n    m1_executives_kindness_description,\n    m1_service_quality_description,\n    m1_information_clarity_description,\n    m1_houmchecker_attention_description,\n    m1_process_speed,\n    m1_executives_kindness,\n    m1_service_quality,\n    m1_information_clarity,\n    m1_houmchecker_attention,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM {{ source('survicate', 'nps_landlord_listing') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_listing.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "name": "stg_survicate_nps_landlord_listing", "alias": "stg_survicate_nps_landlord_listing", "checksum": {"name": "sha256", "checksum": "69311b87b5f27edb1d3f5b75edac80ff765f80e9f2d885b1e3e05ceab5bbf2cc"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_listing"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.976096, "compiled_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    sc1_customer_source,\n    m1_process_speed_description,\n    m1_executives_kindness_description,\n    m1_service_quality_description,\n    m1_information_clarity_description,\n    m1_houmchecker_attention_description,\n    m1_process_speed,\n    m1_executives_kindness,\n    m1_service_quality,\n    m1_information_clarity,\n    m1_houmchecker_attention,\n    nps_service_recommendation AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\""}, "model.houm.stg_survicate_nps_landlord_new_sub": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_new_sub"], "unique_id": "model.houm.stg_survicate_nps_landlord_new_sub", "raw_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    sc1_customer_source,\n    -- m1_answer_speed_description,\n    m1_contract_signing_easiness_description,\n    -- m1_property_delivery_easiness_description,\n    m1_information_clarity_description,\n    -- m1_payment_easiness_description,\n    -- m1_answer_speed,\n    m1_contract_signing_easiness,\n    -- m1_property_delivery_easiness,\n    m1_information_clarity,\n    -- m1_payment_easiness,\n    nps_service_recommendation::INT AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    contactform1_name,\n    contactform1_lastname,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM {{ source('survicate', 'nps_landlord_new_sub') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "name": "stg_survicate_nps_landlord_new_sub", "alias": "stg_survicate_nps_landlord_new_sub", "checksum": {"name": "sha256", "checksum": "aab2918189a4a49955b3d081c9772a1b5d2a9decc59446275c798766dc330e3f"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_new_sub"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.977827, "compiled_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    sc1_customer_source,\n    -- m1_answer_speed_description,\n    m1_contract_signing_easiness_description,\n    -- m1_property_delivery_easiness_description,\n    m1_information_clarity_description,\n    -- m1_payment_easiness_description,\n    -- m1_answer_speed,\n    m1_contract_signing_easiness,\n    -- m1_property_delivery_easiness,\n    m1_information_clarity,\n    -- m1_payment_easiness,\n    nps_service_recommendation::INT AS recommendation,\n    nps*100::INT AS nps,\n    text1_bad_answer,\n    text1_neutral_answer,\n    text1_good_answer,\n    CASE \n        WHEN text1_bad_answer || text1_neutral_answer || text1_good_answer = '' THEN NULL\n        ELSE text1_bad_answer || text1_neutral_answer || text1_good_answer \n    END AS comments,\n    contactform1_name,\n    contactform1_lastname,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_new_sub\""}, "model.houm.stg_survicate_nps_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_photo_done"], "unique_id": "model.houm.stg_survicate_nps_photo_done", "raw_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    property_photos_experience_description,\n    property_photos_experience,\n    nps*100::INT AS nps,\n    m1_website_simplicity_description,\n    m1_houmer_before_visit_description,\n    m1_houmer_during_visit_description,\n    m1_website_simplicity,\n    m1_houmer_before_visit,\n    m1_houmer_during_visit,\n    houmer_kindness,\n    houmer_professionalism,\n    houmer_knowledge,\n    houmer_helpfulness,\n    houmer_other,\n    text1_bad_answer,\n    text1_neutral_answer,\n    contactform1_name,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM {{ source('survicate', 'photo_done') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_photo_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_photo_done.sql", "name": "stg_survicate_nps_photo_done", "alias": "stg_survicate_nps_photo_done", "checksum": {"name": "sha256", "checksum": "b6a864b13abc4abd480ce9e0fd485d5a0226550520368e6bab715e5c3c49d67b"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "photo_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.979418, "compiled_code": "SELECT \n    country,\n    survey_name,\n    survey_id,\n    first_seen_date,\n    first_response_date,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS') AS created_at,\n    to_timestamp(first_response_date, 'YYYY-MM-DD hh:MI:SS')::DATE AS created_date,\n    property_photos_experience_description,\n    property_photos_experience,\n    nps*100::INT AS nps,\n    m1_website_simplicity_description,\n    m1_houmer_before_visit_description,\n    m1_houmer_during_visit_description,\n    m1_website_simplicity,\n    m1_houmer_before_visit,\n    m1_houmer_during_visit,\n    houmer_kindness,\n    houmer_professionalism,\n    houmer_knowledge,\n    houmer_helpfulness,\n    houmer_other,\n    text1_bad_answer,\n    text1_neutral_answer,\n    contactform1_name,\n    contactform1_email,\n    contactform1_phone,\n    page_url,\n    visitor_id,\n    visitor_uuid,\n    response_uuid\nFROM \"houmdw_prod\".\"survicate\".\"photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\""}, "model.houm.stg_survicate_nps_tenant_new_sub": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tennant_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_new_sub"], "unique_id": "model.houm.stg_survicate_nps_tenant_new_sub", "raw_code": "SELECT \n    * \nFROM {{ source('survicate', 'nps_tennant_new_sub') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "name": "stg_survicate_nps_tenant_new_sub", "alias": "stg_survicate_nps_tenant_new_sub", "checksum": {"name": "sha256", "checksum": "f58dafcc00ae37da28378affbc4e235e82d0e1680a00c91be2288b5cb0d133ff"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tennant_new_sub"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1675970037.980997, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_new_sub\""}, "model.houm.stg_supermetrics_fbads_video": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_video"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_video"], "unique_id": "model.houm.stg_supermetrics_fbads_video", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_video') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_video.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_video.sql", "name": "stg_supermetrics_fbads_video", "alias": "stg_supermetrics_fbads_video", "checksum": {"name": "sha256", "checksum": "11ff1bb81fba95546d85a300b19169c4abb3215364390a348e4262c1c8e4b8f8"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_video"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_video.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.98256, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_video\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_video\""}, "model.houm.stg_supermetrics_fbads_geo": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_geo"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_geo"], "unique_id": "model.houm.stg_supermetrics_fbads_geo", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_geo') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_geo.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_geo.sql", "name": "stg_supermetrics_fbads_geo", "alias": "stg_supermetrics_fbads_geo", "checksum": {"name": "sha256", "checksum": "781128c47116b5aa982ef64d71e0f87144f1fec08fc2ddd5ce41016312dec26d"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_geo"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_geo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.9847438, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_geo\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_geo\""}, "model.houm.stg_supermetrics_googleads_campaign": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_campaign"], "unique_id": "model.houm.stg_supermetrics_googleads_campaign", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_campaign') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "name": "stg_supermetrics_googleads_campaign", "alias": "stg_supermetrics_googleads_campaign", "checksum": {"name": "sha256", "checksum": "60354a0dd6286a41f2fe95910016843217823907bf36e0d7a439f1c148aeb918"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_campaign"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.986337, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_campaign\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_campaign\""}, "model.houm.stg_supermetrics_fbads_conversion": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_conversion"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_conversion"], "unique_id": "model.houm.stg_supermetrics_fbads_conversion", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_conversion') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "name": "stg_supermetrics_fbads_conversion", "alias": "stg_supermetrics_fbads_conversion", "checksum": {"name": "sha256", "checksum": "734eef3c7b24379b8c5278b2d33225a0d073e5bd69ac4ef4bddc9fda39e1eef2"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_conversion"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.987904, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_conversion\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_conversion\""}, "model.houm.stg_supermetrics_googleads_ad": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_ad"], "unique_id": "model.houm.stg_supermetrics_googleads_ad", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_ad') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_ad.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_ad.sql", "name": "stg_supermetrics_googleads_ad", "alias": "stg_supermetrics_googleads_ad", "checksum": {"name": "sha256", "checksum": "f8c8713e0d9a53878f23c0d28cc297b6d8260f60976e601725d689cb289090e4"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_ad"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_ad.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.9894762, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_ad\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_ad\""}, "model.houm.stg_supermetrics_linkedinads_ad": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.linkedinads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_linkedinads_ad"], "unique_id": "model.houm.stg_supermetrics_linkedinads_ad", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'linkedinads_ad') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_linkedinads_ad.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_linkedinads_ad.sql", "name": "stg_supermetrics_linkedinads_ad", "alias": "stg_supermetrics_linkedinads_ad", "checksum": {"name": "sha256", "checksum": "f6708adf475ce5e9f0f58984b87286a0bb8efa5904841272d5b4d03609dd2f7e"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "linkedinads_ad"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_linkedinads_ad.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.991196, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"linkedinads_ad\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_linkedinads_ad\""}, "model.houm.stg_supermetrics_fbads_campaign": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_campaign"], "unique_id": "model.houm.stg_supermetrics_fbads_campaign", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_campaign') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "name": "stg_supermetrics_fbads_campaign", "alias": "stg_supermetrics_fbads_campaign", "checksum": {"name": "sha256", "checksum": "aebc42f474c0cb42278ed5e37d0b3633698e608acf90ae9e12d19b2842dd5f53"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_campaign"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.9927812, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_campaign\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_campaign\""}, "model.houm.stg_supermetrics_linkedinads_campaign": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.linkedinads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_linkedinads_campaign"], "unique_id": "model.houm.stg_supermetrics_linkedinads_campaign", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'linkedinads_campaign') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_linkedinads_campaign.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_linkedinads_campaign.sql", "name": "stg_supermetrics_linkedinads_campaign", "alias": "stg_supermetrics_linkedinads_campaign", "checksum": {"name": "sha256", "checksum": "ee9686d646cecbd8f861cf8eadcf4d6f3f8d241c2ce59cd4c4a46e755e917a00"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "linkedinads_campaign"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_linkedinads_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.99436, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"linkedinads_campaign\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_linkedinads_campaign\""}, "model.houm.stg_supermetrics_googleads_conversion": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_conversion"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_conversion"], "unique_id": "model.houm.stg_supermetrics_googleads_conversion", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_conversion') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "name": "stg_supermetrics_googleads_conversion", "alias": "stg_supermetrics_googleads_conversion", "checksum": {"name": "sha256", "checksum": "df84d75809484f15fed723571aec001eace73a932d3cd36144763f5c6c9f3f0e"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_conversion"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.9959302, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_conversion\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_conversion\""}, "model.houm.stg_supermetrics_fbads_age_gender": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_age_gender"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_age_gender"], "unique_id": "model.houm.stg_supermetrics_fbads_age_gender", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_age_gender') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "name": "stg_supermetrics_fbads_age_gender", "alias": "stg_supermetrics_fbads_age_gender", "checksum": {"name": "sha256", "checksum": "274fac6de4faac4847b7ba848e531d6f024257121452fa36d26bb42e38352e91"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_age_gender"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.997639, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_age_gender\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_age_gender\""}, "model.houm.stg_supermetrics_fbads_ad": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_ad"], "unique_id": "model.houm.stg_supermetrics_fbads_ad", "raw_code": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_ad') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_ad.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_ad.sql", "name": "stg_supermetrics_fbads_ad", "alias": "stg_supermetrics_fbads_ad", "checksum": {"name": "sha256", "checksum": "bc223c42433b428f2acde5ea113865d231425fcde10c79a6126dce9d4078d99a"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_ad"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_ad.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1675970037.999211, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_ad\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_ad\""}, "model.houm.stg_sales_negotiation": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.negotiation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_negotiation"], "unique_id": "model.houm.stg_sales_negotiation", "raw_code": "SELECT \n    id\n    --,owner_id #Deprecated\n    --,bidder_id #Deprecated\n    ,status\n    ,country\n    --,property_id #Deprecated, normalization to stg_sales_property\n    --,property_uuid #Deprecated normalization to stg_sales_property\n    --,property_address #Deprecated normalization to stg_sales_property\n    ,start_date\n    ,end_date\n    ,houm_advisor_name\n    ,houm_advisor_email\n    ,houm_advisor_user_id\n    ,houm_advisor_uuid\n    --,property_executive_name #Deprecated normalization to stg_sales_property\n    --,property_executive_email #Deprecated normalization to stg_sales_property\n    --,property_executive_user_id #Deprecated normalization to stg_sales_property\n    ,visit_id\n    ,unread\n    ,created_at\n    ,updated_at\n    ,property_uid --FK: property\nFROM {{ source('bidding_app', 'negotiation') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_negotiation.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_negotiation.sql", "name": "stg_sales_negotiation", "alias": "stg_sales_negotiation", "checksum": {"name": "sha256", "checksum": "c8adbe9b17d2917c261b755eaf6a41709b48f1747f928f0fbbfe1396934ee14e"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "negotiation"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_negotiation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.000782, "compiled_code": "SELECT \n    id\n    --,owner_id #Deprecated\n    --,bidder_id #Deprecated\n    ,status\n    ,country\n    --,property_id #Deprecated, normalization to stg_sales_property\n    --,property_uuid #Deprecated normalization to stg_sales_property\n    --,property_address #Deprecated normalization to stg_sales_property\n    ,start_date\n    ,end_date\n    ,houm_advisor_name\n    ,houm_advisor_email\n    ,houm_advisor_user_id\n    ,houm_advisor_uuid\n    --,property_executive_name #Deprecated normalization to stg_sales_property\n    --,property_executive_email #Deprecated normalization to stg_sales_property\n    --,property_executive_user_id #Deprecated normalization to stg_sales_property\n    ,visit_id\n    ,unread\n    ,created_at\n    ,updated_at\n    ,property_uid --FK: property\nFROM \"houmdw_prod\".\"bidding_app\".\"negotiation\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation\""}, "model.houm.stg_sales_negotiation_user": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.negotiation_user"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_negotiation_user"], "unique_id": "model.houm.stg_sales_negotiation_user", "raw_code": "SELECT \n    id\n    ,negotiation_id\n    ,user_id\n    ,user_role\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'negotiation_user') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_negotiation_user.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_negotiation_user.sql", "name": "stg_sales_negotiation_user", "alias": "stg_sales_negotiation_user", "checksum": {"name": "sha256", "checksum": "6a4652b5953664121a43bd9285e513600bb534e8a886912900386a8b6f319a34"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "negotiation_user"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_negotiation_user.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.002346, "compiled_code": "SELECT \n    id\n    ,negotiation_id\n    ,user_id\n    ,user_role\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"negotiation_user\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation_user\""}, "model.houm.stg_sales_bid": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_bid"], "unique_id": "model.houm.stg_sales_bid", "raw_code": "SELECT \n    id\n    ,negotiation_id\n    ,amount\n    ,status\n    ,currency\n    ,comment\n    ,payment_method\n    ,has_credit\n    ,credit_status\n    ,credit_counciling_requested\n    ,created_at\n    ,updated_at\n    ,deposit_amount\n    ,houm_bidder_fee\n    ,houm_owner_fee\n    ,bidder_penalty_fee\n    ,owner_penalty_fee\nFROM {{ source('bidding_app', 'bid') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_bid.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_bid.sql", "name": "stg_sales_bid", "alias": "stg_sales_bid", "checksum": {"name": "sha256", "checksum": "b9b8b6b63ed4a0748f5586ddd9cda15ad4bb00cccc2e8b2def0e936ed1283105"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "bid"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_bid.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.004055, "compiled_code": "SELECT \n    id\n    ,negotiation_id\n    ,amount\n    ,status\n    ,currency\n    ,comment\n    ,payment_method\n    ,has_credit\n    ,credit_status\n    ,credit_counciling_requested\n    ,created_at\n    ,updated_at\n    ,deposit_amount\n    ,houm_bidder_fee\n    ,houm_owner_fee\n    ,bidder_penalty_fee\n    ,owner_penalty_fee\nFROM \"houmdw_prod\".\"bidding_app\".\"bid\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid\""}, "model.houm.stg_sales_identification": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.identification"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_identification"], "unique_id": "model.houm.stg_sales_identification", "raw_code": "SELECT \n    id\n    ,number\n    ,user_id\n    ,user_type\n    --,bidder_id #Deprecated, replaced by user_id (FK:user table)\n    ,type_id \n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'identification') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_identification.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_identification.sql", "name": "stg_sales_identification", "alias": "stg_sales_identification", "checksum": {"name": "sha256", "checksum": "97d448a14df7abbe2676e0f2aae10d4c54257d48d5462edb229ddc1a98718adc"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "identification"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_identification.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.005622, "compiled_code": "SELECT \n    id\n    ,number\n    ,user_id\n    ,user_type\n    --,bidder_id #Deprecated, replaced by user_id (FK:user table)\n    ,type_id \n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"identification\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_identification\""}, "model.houm.stg_sales_property": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.property"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_property"], "unique_id": "model.houm.stg_sales_property", "raw_code": "SELECT \n    id\n    ,property_id\n    ,property_address\n    ,property_executive_name\n    ,property_executive_email\n    ,property_executive_user_id\n    ,created_at\n    ,updated_at\n    ,individualization\nFROM {{ source('bidding_app', 'property') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_property.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_property.sql", "name": "stg_sales_property", "alias": "stg_sales_property", "checksum": {"name": "sha256", "checksum": "a6f39173abc442d9b2610b20641125433454677a77ca192f9b2a7e1431535ece"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "property"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_property.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.007185, "compiled_code": "SELECT \n    id\n    ,property_id\n    ,property_address\n    ,property_executive_name\n    ,property_executive_email\n    ,property_executive_user_id\n    ,created_at\n    ,updated_at\n    ,individualization\nFROM \"houmdw_prod\".\"bidding_app\".\"property\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_property\""}, "model.houm.stg_sales_bid_response": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.bid_response"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_bid_response"], "unique_id": "model.houm.stg_sales_bid_response", "raw_code": "SELECT \n    id\n    ,bid_id\n    ,last_amount\n    ,currency\n    ,reason\n    ,created_at\n    ,updated_at\n    ,user_id\nFROM {{ source('bidding_app', 'bid_response') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_bid_response.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_bid_response.sql", "name": "stg_sales_bid_response", "alias": "stg_sales_bid_response", "checksum": {"name": "sha256", "checksum": "88127a746c083e844ae839696228b9423910703f08e12ccfd7af0ecf17ce3bb4"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "bid_response"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_bid_response.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.008755, "compiled_code": "SELECT \n    id\n    ,bid_id\n    ,last_amount\n    ,currency\n    ,reason\n    ,created_at\n    ,updated_at\n    ,user_id\nFROM \"houmdw_prod\".\"bidding_app\".\"bid_response\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid_response\""}, "model.houm.stg_sales_identification_type": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.identification_type"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_identification_type"], "unique_id": "model.houm.stg_sales_identification_type", "raw_code": "SELECT \n    id\n    ,country \n    ,name\n    ,validation_regex\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'identification_type') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_identification_type.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_identification_type.sql", "name": "stg_sales_identification_type", "alias": "stg_sales_identification_type", "checksum": {"name": "sha256", "checksum": "87e3618425a5ae899e0551215accbe899c809f70869934cb63590ef542933b0f"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "identification_type"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_identification_type.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.010467, "compiled_code": "SELECT \n    id\n    ,country \n    ,name\n    ,validation_regex\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"identification_type\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_identification_type\""}, "model.houm.stg_sales_user": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.user"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_user"], "unique_id": "model.houm.stg_sales_user", "raw_code": "SELECT \n    id\n    ,external_user_id\n    ,name\n    ,last_name\n    ,second_last_name\n    ,email\n    ,phone\n    ,occupation\n    ,nationality\n    ,civil_status\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'user') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_user.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_user.sql", "name": "stg_sales_user", "alias": "stg_sales_user", "checksum": {"name": "sha256", "checksum": "017c6156da6213bf05155933fb4c4d9e696bb60028d1c26ccc74b8953552250f"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "user"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_user.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1675970038.0120351, "compiled_code": "SELECT \n    id\n    ,external_user_id\n    ,name\n    ,last_name\n    ,second_last_name\n    ,email\n    ,phone\n    ,occupation\n    ,nationality\n    ,civil_status\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"user\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_user\""}, "model.houm.stg_whatsapp_ces_sales_promises": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_sales_landlord_promesa", "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_ces_sales_promises"], "unique_id": "model.houm.stg_whatsapp_ces_sales_promises", "raw_code": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue comprar tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_sales_buyer_promesa')}}\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue vender tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_sales_landlord_promesa')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "name": "stg_whatsapp_ces_sales_promises", "alias": "stg_whatsapp_ces_sales_promises", "checksum": {"name": "sha256", "checksum": "633d7e78d32eb3088e1e40b762898780d0fa81646e459dc2f56dc2deab806b2c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_sales_landlord_promesa"], ["airbyte_gspread", "new_nps_sales_buyer_promesa"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.01361, "compiled_code": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue comprar tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_promesa\"\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue vender tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_promesa\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_ces_sales_promises\""}, "model.houm.stg_whatsapp_nps_photo": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_mexico_foto", "source.houm.airbyte_gspread.nps_chile_foto", "source.houm.airbyte_gspread.nps_colombia_foto"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_photo"], "unique_id": "model.houm.stg_whatsapp_nps_photo", "raw_code": "SELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Chile' AS country\nFROM {{ source('airbyte_gspread', 'nps_chile_foto') }}\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Colombia' AS country\nFROM {{ source('airbyte_gspread', 'nps_colombia_foto') }}\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Mexico' AS country\nFROM {{ source('airbyte_gspread', 'nps_mexico_foto') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "name": "stg_whatsapp_nps_photo", "alias": "stg_whatsapp_nps_photo", "checksum": {"name": "sha256", "checksum": "077d2ce9585337e61d07cfddfeef2fd93ef8e015c404b962d9d9afb2c713916b"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_mexico_foto"], ["airbyte_gspread", "nps_chile_foto"], ["airbyte_gspread", "nps_colombia_foto"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.015318, "compiled_code": "SELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Chile' AS country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Colombia' AS country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), \"time\")::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" AS houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" AS schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" AS visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    'Mexico' AS country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_photo\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_24_horas": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_24_horas"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_24_horas", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfrecomendar\u00edas houm a un amigo o conocido?\" AS recommendation,\n    \"\u00bfrecibiste el inmueble en las condiciones que esperabas?\" AS problem_solving,\n    \"\u00bfqu\u00e9 tan satisfecho te encuentras con la atenci\u00f3n entregada por el houmer?\" AS attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_24_hrs') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_horas.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_horas.sql", "name": "stg_whatsapp_nps_automatic_tenant_24_horas", "alias": "stg_whatsapp_nps_automatic_tenant_24_horas", "checksum": {"name": "sha256", "checksum": "bf04e0093d4b9239a2e97803a1bc2ffd96fcb0bb0a8f1e28cfa64c39697b4eca"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_24_hrs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_horas.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.017323, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfrecomendar\u00edas houm a un amigo o conocido?\" AS recommendation,\n    \"\u00bfrecibiste el inmueble en las condiciones que esperabas?\" AS problem_solving,\n    \"\u00bfqu\u00e9 tan satisfecho te encuentras con la atenci\u00f3n entregada por el houmer?\" AS attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_24_horas\""}, "model.houm.stg_whatsapp_nps_rentas_new_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_new_listing"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_new_listing", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_cl') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_co') }}\nUNION ALL \nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_mx') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "name": "stg_whatsapp_nps_rentas_new_listing", "alias": "stg_whatsapp_nps_rentas_new_listing", "checksum": {"name": "sha256", "checksum": "0e9fd68ac7627a2463b0773e97a9fb05ad33ba01f53e101230d8704b948c4288"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_prop_new_listing_cl"], ["airbyte_gspread", "nps_rentas_prop_new_listing_mx"], ["airbyte_gspread", "nps_rentas_prop_new_listing_co"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.018977, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"\nUNION ALL \nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    property_id::INT,\n    \"rapidez en el proceso\" AS process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" AS process_clarity,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing\""}, "model.houm.stg_whatsapp_nps_rentas_propietary_pc": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_propietary_pc"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_propietary_pc", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date, \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_cl') }}\nUNION ALL\nSELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,    \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_co') }}\nUNION ALL\nSELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date, \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_mx') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "name": "stg_whatsapp_nps_rentas_propietary_pc", "alias": "stg_whatsapp_nps_rentas_propietary_pc", "checksum": {"name": "sha256", "checksum": "cd42f49d112fc7081be216d2b06a5974553572f9798c8b50179e2b7c39d9c0d4"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_propietary_pc_mx"], ["airbyte_gspread", "nps_rentas_propietary_pc_co"], ["airbyte_gspread", "nps_rentas_propietary_pc_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.020709, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date, \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_cl\"\nUNION ALL\nSELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,    \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_co\"\nUNION ALL\nSELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\" AS answered_at,\n    CASE \n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\"  IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date, \n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" AS comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" AS contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" AS source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_propietary_pc\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_3_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id::INT as property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,   \n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_3_meses') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_3_meses", "alias": "stg_whatsapp_nps_automatic_landlord_3_meses", "checksum": {"name": "sha256", "checksum": "21398e6c9f772fac390ebc2ef7f423aa2b955d6cff349a585f4ebadcb4756269"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.0225751, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id::INT as property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,   \n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_6_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_6_meses') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "name": "stg_whatsapp_nps_automatic_tenant_6_meses", "alias": "stg_whatsapp_nps_automatic_tenant_6_meses", "checksum": {"name": "sha256", "checksum": "2707e670574a08c2bbb90f8d3f5647d7d1af68ceae5adbcd27b4131e7b3b314b"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_6_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.0243268, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_6_meses\""}, "model.houm.stg_whatsapp_nps_visits_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_mexico_renta", "source.houm.airbyte_gspread.nps_chile_renta", "source.houm.airbyte_gspread.nps_colombia_renta"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_visits_done"], "unique_id": "model.houm.stg_whatsapp_nps_visits_done", "raw_code": "SELECT\n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    \"octubr\" AS appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Chile' AS country\nFROM {{ source('airbyte_gspread', 'nps_chile_renta') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Colombia' AS country \nFROM {{ source('airbyte_gspread', 'nps_colombia_renta') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Mexico' AS country \nFROM {{ source('airbyte_gspread', 'nps_mexico_renta') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "name": "stg_whatsapp_nps_visits_done", "alias": "stg_whatsapp_nps_visits_done", "checksum": {"name": "sha256", "checksum": "11663ee2c64af2c4d2f2d784d6b8a145ac4d9fd4d39e7a563541b7942b40bb49"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_mexico_renta"], ["airbyte_gspread", "nps_chile_renta"], ["airbyte_gspread", "nps_colombia_renta"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.025915, "compiled_code": "SELECT\n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    \"octubr\" AS appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Chile' AS country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Colombia' AS country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    CONCAT(CONCAT(to_date(\"date\",'DD-MM-YYYY'), ' '), time)::TIMESTAMP AS created_at, \n    to_date(\"date\",'DD-MM-YYYY') AS created_date,\n    \"prop id\" AS property_id,\n    address,\n    appraiser,\n    \"schedule id\" AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" AS schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" AS houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" AS visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" AS comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" AS recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" AS houmer_knowledge,\n    'Rentals' AS business,\n    'Mexico' AS country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_done\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_3_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el tiempo de soluci\u00f3n a solicitudes?\" AS problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_3_meses') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "name": "stg_whatsapp_nps_automatic_tenant_3_meses", "alias": "stg_whatsapp_nps_automatic_tenant_3_meses", "checksum": {"name": "sha256", "checksum": "f9caee08043641e41041a2f33732fb89da4086d4bdf1eed04886cd8ba1b3f176"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.027669, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el tiempo de soluci\u00f3n a solicitudes?\" AS problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_3_meses\""}, "model.houm.stg_whatsapp_nps_sales_promises": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_post_venta_seller", "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa", "source.houm.airbyte_gspread.nps_sales_promesa_seller", "source.houm.airbyte_gspread.nps_sales_promesa_buyer"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_promises"], "unique_id": "model.houm.stg_whatsapp_nps_sales_promises", "raw_code": "SELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_seller') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_buyer') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_seller') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho estas con el servicio de compra de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_buyer') }}\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM {{ source('airbyte_gspread','new_nps_sales_buyer_posventa')}}\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM {{ source('airbyte_gspread','new_nps_sales_landlord_posventa')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "name": "stg_whatsapp_nps_sales_promises", "alias": "stg_whatsapp_nps_sales_promises", "checksum": {"name": "sha256", "checksum": "2e2c7003589bd762e251d2b03bbf951e48f0942f717bd6604a13022ed8b2c92c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_post_venta_seller"], ["airbyte_gspread", "nps_sales_post_venta_buyer"], ["airbyte_gspread", "new_nps_sales_landlord_posventa"], ["airbyte_gspread", "new_nps_sales_buyer_posventa"], ["airbyte_gspread", "nps_sales_promesa_seller"], ["airbyte_gspread", "nps_sales_promesa_buyer"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.029258, "compiled_code": "SELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho estas con el servicio de compra de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_posventa\"\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_posventa\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_promises\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_6_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id::INT AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,  \n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" AS problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_6_meses') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_6_meses", "alias": "stg_whatsapp_nps_automatic_landlord_6_meses", "checksum": {"name": "sha256", "checksum": "f6c6539bb5ca181fae9ebf1a52f99a23872b7dc4692d5cef9223faae6c5fab6d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_6_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.031212, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    prop_id::INT AS property_id,\n    \"timestamp\",\n    CASE \n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,  \n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" AS problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\""}, "model.houm.stg_whatsapp_nps_visits_cancelled": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_cancel_visit"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_visits_cancelled"], "unique_id": "model.houm.stg_whatsapp_nps_visits_cancelled", "raw_code": "SELECT \n    address,\n    country,\n    appraiser,\n    begin_date,\n    visit_type,\n    property_id,\n    schedule_id::INT,\n    \"answer_timestamp\",\n    CASE \n        WHEN \"answer_timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"answer_timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comments,\n    recommendation\nFROM {{ source('airbyte_gspread', 'nps_cancel_visit') }}\nWHERE visit_type = 'rent'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "name": "stg_whatsapp_nps_visits_cancelled", "alias": "stg_whatsapp_nps_visits_cancelled", "checksum": {"name": "sha256", "checksum": "8f95a1057a785b3267a41e7475dddf2a6368d80616f5f2c5d2e4a56b35e2a8f8"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_cancel_visit"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.0328152, "compiled_code": "SELECT \n    address,\n    country,\n    appraiser,\n    begin_date,\n    visit_type,\n    property_id,\n    schedule_id::INT,\n    \"answer_timestamp\",\n    CASE \n        WHEN \"answer_timestamp\" IS NULL THEN '2021-10-01'::TIMESTAMP\n        ELSE to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ \n    END AS created_at,\n    CASE\n        WHEN \"answer_timestamp\" IS NULL THEN '2021-10-01'::DATE\n        ELSE (to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE\n    END AS created_date,\n    comments,\n    recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"\nWHERE visit_type = 'rent'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_cancelled\""}, "model.houm.stg_whatsapp_nps_rentas_tenant_pc": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_tenant_pc"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_tenant_pc", "raw_code": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_cl') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_co') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_mx') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "name": "stg_whatsapp_nps_rentas_tenant_pc", "alias": "stg_whatsapp_nps_rentas_tenant_pc", "checksum": {"name": "sha256", "checksum": "ab7495b69d9bc74acaea5a1047cea878d696fb52eaf13c8a878d7fc5f99a204d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_cl"], ["airbyte_gspread", "nps_rentas_tenant_pc_co"], ["airbyte_gspread", "nps_rentas_tenant_pc_mx"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1675970038.034401, "compiled_code": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_tenant_pc\""}, "model.houm.stg_new_nps_automatic_landlord_6_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_automatic_landlord_6_meses"], "unique_id": "model.houm.stg_new_nps_automatic_landlord_6_meses", "raw_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_automatic_landlord_6_meses_hashid\nFROM {{ source('airbyte_gspread','new_nps_automatic_landlord_6_meses')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_6_meses.sql", "name": "stg_new_nps_automatic_landlord_6_meses", "alias": "stg_new_nps_automatic_landlord_6_meses", "checksum": {"name": "sha256", "checksum": "5aba9cd74811fd7eb2f1d9d76fe0037563b5a80ec117a7d72305628990092233"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_automatic_landlord_6_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.036202, "compiled_code": "SELECT \n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_automatic_landlord_6_meses_hashid\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_landlord_6_meses\""}, "model.houm.stg_new_nps_automatic_tenant_6_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_automatic_tenant_6_meses"], "unique_id": "model.houm.stg_new_nps_automatic_tenant_6_meses", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id,\n    subscription_id,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation \nFROM {{ source('airbyte_gspread','new_nps_automatic_tenant_6_meses')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_6_meses.sql", "name": "stg_new_nps_automatic_tenant_6_meses", "alias": "stg_new_nps_automatic_tenant_6_meses", "checksum": {"name": "sha256", "checksum": "74445fcc39ded974292eb1057a764ebaa37d7eac8589bb7ac9b6b9358d75625b"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_automatic_tenant_6_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.037961, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id,\n    subscription_id,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_tenant_6_meses\""}, "model.houm.stg_new_nps_rentals_propietary_poscontract": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_rentals_propietary_poscontract"], "unique_id": "model.houm.stg_new_nps_rentals_propietary_poscontract", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos? (1-6)\" AS source,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" AS recommendation\nFROM {{ source('airbyte_gspread','new_nps_rentals_propietary_poscontract')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_rentals_propietary_poscontract.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_rentals_propietary_poscontract.sql", "name": "stg_new_nps_rentals_propietary_poscontract", "alias": "stg_new_nps_rentals_propietary_poscontract", "checksum": {"name": "sha256", "checksum": "5f65809daef0296c592a5b475312ee4c2e79977de76d7c2b10c9793175eafae4"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_propietary_poscontract"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_rentals_propietary_poscontract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.0395641, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" AS comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos? (1-6)\" AS source,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_propietary_poscontract\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_rentals_propietary_poscontract\""}, "model.houm.stg_new_nps_rentals_24_horas_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_rentals_24_horas_tenant"], "unique_id": "model.houm.stg_new_nps_rentals_24_horas_tenant", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id::INT,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" AS comments,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" AS recommendation \nFROM {{ source('airbyte_gspread','new_nps_rentals_24_horas_tenant')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_rentals_24_horas_tenant.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_rentals_24_horas_tenant.sql", "name": "stg_new_nps_rentals_24_horas_tenant", "alias": "stg_new_nps_rentals_24_horas_tenant", "checksum": {"name": "sha256", "checksum": "961e2a2a7be69cc506b7d41e4c214ebf06bcdd0c9802e339ce898da926ace4c6"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_24_horas_tenant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_rentals_24_horas_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.041172, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id::INT,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" AS comments,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" AS recommendation \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_24_horas_tenant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_rentals_24_horas_tenant\""}, "model.houm.stg_new_nps_visit_rental_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_rental_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_visit_rental_visit_done"], "unique_id": "model.houm.stg_new_nps_visit_rental_visit_done", "raw_code": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    country,\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita? (1-5)\" AS schedule_easyness,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM {{ source('airbyte_gspread','new_nps_visit_rental_visit_done')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_visit_rental_visit_done.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_visit_rental_visit_done.sql", "name": "stg_new_nps_visit_rental_visit_done", "alias": "stg_new_nps_visit_rental_visit_done", "checksum": {"name": "sha256", "checksum": "667bb727479ab32c7e5654b9cd1760a04ece49175ece99ed36c11c25b287efeb"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_rental_visit_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_visit_rental_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.04276, "compiled_code": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    country,\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita? (1-5)\" AS schedule_easyness,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_rental_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_rental_visit_done\""}, "model.houm.stg_new_nps_visit_photo_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_visit_photo_done"], "unique_id": "model.houm.stg_new_nps_visit_photo_done", "raw_code": "SELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM {{ source('airbyte_gspread','new_nps_visit_photo_done')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_visit_photo_done.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_visit_photo_done.sql", "name": "stg_new_nps_visit_photo_done", "alias": "stg_new_nps_visit_photo_done", "checksum": {"name": "sha256", "checksum": "0ab647172798121ac0ab9109b506db4fc115dd95c9e3f9f4ca7c02677d4523c8"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_photo_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_visit_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.044495, "compiled_code": "SELECT \n    \"date\",\n    \"time\",\n    \"type\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_photo_done\""}, "model.houm.stg_new_nps_visit_sales_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_sales_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_visit_sales_visit_done"], "unique_id": "model.houm.stg_new_nps_visit_sales_visit_done", "raw_code": "SELECT\n    \"date\",\n    \"time\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    country,\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM {{ source('airbyte_gspread','new_nps_visit_sales_visit_done')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_visit_sales_visit_done.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_visit_sales_visit_done.sql", "name": "stg_new_nps_visit_sales_visit_done", "alias": "stg_new_nps_visit_sales_visit_done", "checksum": {"name": "sha256", "checksum": "becdd2f4d73544dfeb64890008f1ddc7364ee6bbdb8cd47acaef7c6f52e5cfbf"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_sales_visit_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_visit_sales_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.0461, "compiled_code": "SELECT\n    \"date\",\n    \"time\",\n    \"prop id\"::INT AS property_id,\n    \"address\",\n    country,\n    appraiser,\n    \"schedule id\"::INT AS schedule_id,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_sales_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_sales_visit_done\""}, "model.houm.stg_new_nps_rentals_new_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_new_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_rentals_new_listing"], "unique_id": "model.houm.stg_new_nps_rentals_new_listing", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_rentals_new_listing_hashid\nFROM {{ source('airbyte_gspread','new_nps_rentals_new_listing')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_rentals_new_listing.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_rentals_new_listing.sql", "name": "stg_new_nps_rentals_new_listing", "alias": "stg_new_nps_rentals_new_listing", "checksum": {"name": "sha256", "checksum": "50c805fc0915f46122bc36967142d7776f496d64ecc19c149553d3f27972253f"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_new_listing"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_rentals_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.047692, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_rentals_new_listing_hashid\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_new_listing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_rentals_new_listing\""}, "model.houm.stg_new_nps_visit_cancel_visit": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_cancel_visit"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_visit_cancel_visit"], "unique_id": "model.houm.stg_new_nps_visit_cancel_visit", "raw_code": "SELECT\n    address,\n    country,\n    appraiser,\n    begin_date,\n    visit_type,\n    property_id,\n    schedule_id::INT,\n    \"cancel detail\" AS cancel_detail,\n    \"answer_timestamp\",\n    to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    \"\u00bfconoces la raz\u00f3n de la cancelaci\u00f3n de tu visita?\n(si - no)\" AS cancel_reason,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments\nFROM {{ source('airbyte_gspread','new_nps_visit_cancel_visit')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_visit_cancel_visit.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_visit_cancel_visit.sql", "name": "stg_new_nps_visit_cancel_visit", "alias": "stg_new_nps_visit_cancel_visit", "checksum": {"name": "sha256", "checksum": "ebf0383a2e4386b595badc4d3ca1cd094cf618e542520c4094623c70c8c37135"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_cancel_visit"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_visit_cancel_visit.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.0492811, "compiled_code": "SELECT\n    address,\n    country,\n    appraiser,\n    begin_date,\n    visit_type,\n    property_id,\n    schedule_id::INT,\n    \"cancel detail\" AS cancel_detail,\n    \"answer_timestamp\",\n    to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"answer_timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    \"\u00bfconoces la raz\u00f3n de la cancelaci\u00f3n de tu visita?\n(si - no)\" AS cancel_reason,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_cancel_visit\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_cancel_visit\""}, "model.houm.stg_new_nps_automatic_tenant_3_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_automatic_tenant_3_meses"], "unique_id": "model.houm.stg_new_nps_automatic_tenant_3_meses", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id,\n    subscription_id,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation\nFROM {{ source('airbyte_gspread','new_nps_automatic_tenant_3_meses')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_3_meses.sql", "name": "stg_new_nps_automatic_tenant_3_meses", "alias": "stg_new_nps_automatic_tenant_3_meses", "checksum": {"name": "sha256", "checksum": "11127c05521246830bd869cb5e6c214b4ab7fb7e1ea269288e3366906a159afc"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_automatic_tenant_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_automatic_tenant_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.051018, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id,\n    subscription_id,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_tenant_3_meses\""}, "model.houm.stg_new_nps_automatic_landlord_3_meses": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps_new"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp_new", "stg_new_nps_automatic_landlord_3_meses"], "unique_id": "model.houm.stg_new_nps_automatic_landlord_3_meses", "raw_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_automatic_landlord_3_meses_hashid\nFROM {{ source('airbyte_gspread','new_nps_automatic_landlord_3_meses')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_3_meses.sql", "name": "stg_new_nps_automatic_landlord_3_meses", "alias": "stg_new_nps_automatic_landlord_3_meses", "checksum": {"name": "sha256", "checksum": "b4c337aaa5b6f61eaee7820736a2e6852c985c35d69e95b38ba8a85539055fcf"}, "tags": ["dw", "staging", "gspread", "nps_new"], "refs": [], "sources": [["airbyte_gspread", "new_nps_automatic_landlord_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp_new/stg_new_nps_automatic_landlord_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps_new"]}, "created_at": 1675970038.052613, "compiled_code": "SELECT\n    name,\n    role AS survey_type,\n    phone,\n    country,\n    \"timestamp\",\n    to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ AS created_at,\n    (to_timestamp(\"timestamp\", 'YYYY-MM-DDThh:MI:SSZ')::TIMESTAMPTZ)::DATE AS created_date,\n    property_id::INT,\n    subscription_id,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" AS recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" AS comments,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    _airbyte_normalized_at,\n    _airbyte_new_nps_automatic_landlord_3_meses_hashid\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_landlord_3_meses\""}, "model.houm.stg_activies": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_activies"], "unique_id": "model.houm.stg_activies", "raw_code": "Select \n   *\nFROM {{ source('pipedrive', 'activities') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_activies.sql", "original_file_path": "models/staging/pipedrive/stg_activies.sql", "name": "stg_activies", "alias": "stg_activies", "checksum": {"name": "sha256", "checksum": "84f77faba98102b36104f7038ae31980086ca81309380d7f14f0078b17c653c3"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "activities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_activies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.0543418, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"activities\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_activies\""}, "model.houm.stg_pipelines": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.pipelines"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_pipelines"], "unique_id": "model.houm.stg_pipelines", "raw_code": "Select \n    *\nFROM {{ source('pipedrive', 'pipelines') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_pipelines.sql", "original_file_path": "models/staging/pipedrive/stg_pipelines.sql", "name": "stg_pipelines", "alias": "stg_pipelines", "checksum": {"name": "sha256", "checksum": "a8a9d201a0c0660ebbeeb41cdf435c18ca6d82be86d9e2198c32381bb81a07bb"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "pipelines"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_pipelines.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.0560598, "compiled_code": "Select \n    *\nFROM \"houmdw_prod\".\"pipedrive\".\"pipelines\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_pipelines\""}, "model.houm.stg_bi_persons": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_persons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_persons"], "unique_id": "model.houm.stg_bi_persons", "raw_code": "Select \n   *\nFROM {{ source('pipedrive', 'bi_persons') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_persons.sql", "original_file_path": "models/staging/pipedrive/stg_bi_persons.sql", "name": "stg_bi_persons", "alias": "stg_bi_persons", "checksum": {"name": "sha256", "checksum": "84d1fbd469222ae9048eec7ad790124b627f742888b188357833a350e6f89782"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_persons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.0578, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_persons\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\""}, "model.houm.stg_stages": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_stages"], "unique_id": "model.houm.stg_stages", "raw_code": "Select \n\t*\nFROM {{ source('pipedrive', 'stages') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_stages.sql", "original_file_path": "models/staging/pipedrive/stg_stages.sql", "name": "stg_stages", "alias": "stg_stages", "checksum": {"name": "sha256", "checksum": "29fd945fd34245f4e024415dae4e5d0433dcc601260d6a36ac0bbaf68f81c28f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "stages"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.059361, "compiled_code": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"stages\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_stages\""}, "model.houm.stg_bi_deals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_deals"], "unique_id": "model.houm.stg_bi_deals", "raw_code": "Select \n   *\nFROM {{ source('pipedrive', 'bi_deals') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_deals.sql", "original_file_path": "models/staging/pipedrive/stg_bi_deals.sql", "name": "stg_bi_deals", "alias": "stg_bi_deals", "checksum": {"name": "sha256", "checksum": "b05c981d452590fb16c724dfafa3afa88f0ae267837efcfeaca8b5da7585bc89"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_deals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.060927, "compiled_code": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\""}, "model.houm.stg_deals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_deals"], "unique_id": "model.houm.stg_deals", "raw_code": "Select \n\t*\nFROM {{ source('pipedrive', 'deals') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_deals.sql", "original_file_path": "models/staging/pipedrive/stg_deals.sql", "name": "stg_deals", "alias": "stg_deals", "checksum": {"name": "sha256", "checksum": "d7bb7297679a2ec699bb9510f888e6b7c33899a31790a3218f4ab87bf60fe36f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "deals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1675970038.062479, "compiled_code": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_deals\""}, "model.houm.stg_scheduler_appraiserworkingmacrozone": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiserworkingmacrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiserworkingmacrozone"], "unique_id": "model.houm.stg_scheduler_appraiserworkingmacrozone", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiserworkingmacrozone') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "name": "stg_scheduler_appraiserworkingmacrozone", "alias": "stg_scheduler_appraiserworkingmacrozone", "checksum": {"name": "sha256", "checksum": "d2b124cbe05d48e077aeda85575752677c18b70089366c66d367c885d4d3db1e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiserworkingmacrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.064327, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserworkingmacrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserworkingmacrozone\""}, "model.houm.stg_subscription_subscription": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscription"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscription"], "unique_id": "model.houm.stg_subscription_subscription", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscription') }}\r\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscription.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscription.sql", "name": "stg_subscription_subscription", "alias": "stg_subscription_subscription", "checksum": {"name": "sha256", "checksum": "b4ec74218084638aaa898e3644649e4f6e38f43d84f00b4f21c9fc74cd310a33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscription"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscription.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.065898, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\""}, "model.houm.stg_demand_calls": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_calls"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_calls"], "unique_id": "model.houm.stg_demand_calls", "raw_code": "select * \nfrom {{ source('raw_stage', 'demand_calls') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_calls.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_calls.sql", "name": "stg_demand_calls", "alias": "stg_demand_calls", "checksum": {"name": "sha256", "checksum": "687be626f9267c22a244fd36991b3af707600f28bd4eba102c25b7c7601e6d08"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_calls"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_calls.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.067461, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_calls\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_calls\""}, "model.houm.stg_demand_portalhoum": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalhoum"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalhoum"], "unique_id": "model.houm.stg_demand_portalhoum", "raw_code": "select * \nfrom {{ source('raw_stage', 'demand_portalhoum') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalhoum.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "name": "stg_demand_portalhoum", "alias": "stg_demand_portalhoum", "checksum": {"name": "sha256", "checksum": "29a8f75ae683f3f6d067875a0ce4e026575d969e2973de156b9e7705db80a62a"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalhoum"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.069045, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\""}, "model.houm.stg_scheduler_cancelreasontypes": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_cancelreasontypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_cancelreasontypes"], "unique_id": "model.houm.stg_scheduler_cancelreasontypes", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_cancelreasontypes') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "name": "stg_scheduler_cancelreasontypes", "alias": "stg_scheduler_cancelreasontypes", "checksum": {"name": "sha256", "checksum": "03f732cd907440b6c128c5db041ef5ccfbdb28757f3bf6f3bee15e32ee5334e4"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_cancelreasontypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.070768, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasontypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\""}, "model.houm.stg_billing_adjustment": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.billing_adjustment"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_billing_adjustment"], "unique_id": "model.houm.stg_billing_adjustment", "raw_code": "select * \nfrom {{ source('raw_stage', 'billing_adjustment') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_billing_adjustment.sql", "original_file_path": "models/staging/arriendoasegurado/stg_billing_adjustment.sql", "name": "stg_billing_adjustment", "alias": "stg_billing_adjustment", "checksum": {"name": "sha256", "checksum": "cbd8bb8ded2be16924e356f38ccf58e05dfd4482ac48135de6935c05c03e5ab9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "billing_adjustment"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_billing_adjustment.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.072334, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"billing_adjustment\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_billing_adjustment\""}, "model.houm.stg_payment_orders": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.payment_orders"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_payment_orders"], "unique_id": "model.houm.stg_payment_orders", "raw_code": "select * \nfrom {{ source('raw_stage', 'payment_orders') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_payment_orders.sql", "original_file_path": "models/staging/arriendoasegurado/stg_payment_orders.sql", "name": "stg_payment_orders", "alias": "stg_payment_orders", "checksum": {"name": "sha256", "checksum": "f5ed70b7ece5369ef8a63fea635a2a230213bf84325b928ac2091a7f3da77923"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "payment_orders"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_payment_orders.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.073897, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"payment_orders\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payment_orders\""}, "model.houm.stg_properties_associationamenities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_associationamenities"], "unique_id": "model.houm.stg_properties_associationamenities", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'properties_associationamenities') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_associationamenities.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_associationamenities.sql", "name": "stg_properties_associationamenities", "alias": "stg_properties_associationamenities", "checksum": {"name": "sha256", "checksum": "9c08363feb80a1e7c3b0be8d00ebe60d5e12d8ba0743827f3835dce8b897455e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_associationamenities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_associationamenities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.075459, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"properties_associationamenities\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\""}, "model.houm.stg_scheduler_appraiseravailability": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiseravailability"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiseravailability"], "unique_id": "model.houm.stg_scheduler_appraiseravailability", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiseravailability') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "name": "stg_scheduler_appraiseravailability", "alias": "stg_scheduler_appraiseravailability", "checksum": {"name": "sha256", "checksum": "8d0f3530d5eee38749c3ea5b1912cebdad7033267ceb8c60dfb52afad6c442a0"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiseravailability"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.077156, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiseravailability\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiseravailability\""}, "model.houm.stg_external_portal_integrations_publicationurl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publicationurl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publicationurl"], "unique_id": "model.houm.stg_external_portal_integrations_publicationurl", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publicationurl') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "name": "stg_external_portal_integrations_publicationurl", "alias": "stg_external_portal_integrations_publicationurl", "checksum": {"name": "sha256", "checksum": "dde101521a4d4d55d3e343df44120b73cc84a8aa8618152af03b1118d728f0a6"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publicationurl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.078719, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationurl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationurl\""}, "model.houm.stg_contracts_scd": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts_scd"], "unique_id": "model.houm.stg_contracts_scd", "raw_code": "select * \nfrom {{ source('historical', 'historical_contracts') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts_scd.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts_scd.sql", "name": "stg_contracts_scd", "alias": "stg_contracts_scd", "checksum": {"name": "sha256", "checksum": "b1a875368c9961ead2572ad99a27084e1b4d618f8d81afcb0c024115b969712a"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_contracts"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.080277, "compiled_code": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts_scd\""}, "model.houm.stg_contracts": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts"], "unique_id": "model.houm.stg_contracts", "raw_code": "select * \nfrom {{ source('raw_stage', 'contracts') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts.sql", "name": "stg_contracts", "alias": "stg_contracts", "checksum": {"name": "sha256", "checksum": "895d6489daf1f8172b97fc9896577acd8d2f81083bdfef2cb2ef35640dd04ea5"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "contracts"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.081832, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts\""}, "model.houm.stg_arriendoasegurado_rentfeedback": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_rentfeedback"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_rentfeedback"], "unique_id": "model.houm.stg_arriendoasegurado_rentfeedback", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'arriendoasegurado_rentfeedback') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "name": "stg_arriendoasegurado_rentfeedback", "alias": "stg_arriendoasegurado_rentfeedback", "checksum": {"name": "sha256", "checksum": "b8cb351faa9c204a877a4da20530aeb1eab0d64fa65ccf87044214ee017a04eb"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_rentfeedback"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.08353, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_rentfeedback\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_rentfeedback\""}, "model.houm.stg_demand_marketingapplicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_marketingapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_marketingapplicant"], "unique_id": "model.houm.stg_demand_marketingapplicant", "raw_code": "select * \nfrom {{ source('raw_stage', 'demand_marketingapplicant') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "name": "stg_demand_marketingapplicant", "alias": "stg_demand_marketingapplicant", "checksum": {"name": "sha256", "checksum": "b7597b03e3de953cca51b9cae6b2ef4435100276ccf1b4f4fb7927985ecca7ec"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_marketingapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.085112, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_marketingapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_marketingapplicant\""}, "model.houm.stg_external_portal_integrations_publication": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publication"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publication"], "unique_id": "model.houm.stg_external_portal_integrations_publication", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publication') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "name": "stg_external_portal_integrations_publication", "alias": "stg_external_portal_integrations_publication", "checksum": {"name": "sha256", "checksum": "e8855d8e139594e32dc2083e4df70972ba2be8018bf87e0bb203f45aa46bcc9f"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publication"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.086693, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publication\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication\""}, "model.houm.stg_arriendoasegurado_applicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_applicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_applicant"], "unique_id": "model.houm.stg_arriendoasegurado_applicant", "raw_code": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_applicant') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "name": "stg_arriendoasegurado_applicant", "alias": "stg_arriendoasegurado_applicant", "checksum": {"name": "sha256", "checksum": "c4743fee425275f7488f74faaccd3ff7eabb81896f3ed4f82aaa7417a60e2199"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_applicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.088493, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\""}, "model.houm.stg_scheduler_schedules": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedules"], "unique_id": "model.houm.stg_scheduler_schedules", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_schedules') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedules.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "name": "stg_scheduler_schedules", "alias": "stg_scheduler_schedules", "checksum": {"name": "sha256", "checksum": "84801759fe3fa4ac9f7ad271fa8e6515255fe5ae978a5dde5e5858736bc9aa33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedules"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.090215, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\""}, "model.houm.stg_external_portal_integrations_externalportals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_externalportals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_externalportals"], "unique_id": "model.houm.stg_external_portal_integrations_externalportals", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_externalportals') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "name": "stg_external_portal_integrations_externalportals", "alias": "stg_external_portal_integrations_externalportals", "checksum": {"name": "sha256", "checksum": "9a4d279c17d74abee24845cded85c9bbf1ecf61b6a8176ee1d6e24c7ae0ca453"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_externalportals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.091785, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_externalportals\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\""}, "model.houm.stg_demand_portalapplicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalapplicant"], "unique_id": "model.houm.stg_demand_portalapplicant", "raw_code": "select * \nfrom {{ source('raw_stage', 'demand_portalapplicant') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "name": "stg_demand_portalapplicant", "alias": "stg_demand_portalapplicant", "checksum": {"name": "sha256", "checksum": "ecc536601011cb9cac142757c01e2330ce37691d79b178ef75a5655f25ab9c55"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.093515, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\""}, "model.houm.stg_external_portal_integrations_loadstatus": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_loadstatus"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_loadstatus"], "unique_id": "model.houm.stg_external_portal_integrations_loadstatus", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_loadstatus') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "name": "stg_external_portal_integrations_loadstatus", "alias": "stg_external_portal_integrations_loadstatus", "checksum": {"name": "sha256", "checksum": "c490a86649253e534301a16d14c4f4859b9b4020e9ded7cb93737a2204182961"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_loadstatus"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.095087, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_loadstatus\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\""}, "model.houm.stg_subscription_subscriptionevent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscriptionevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscriptionevent"], "unique_id": "model.houm.stg_subscription_subscriptionevent", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscriptionevent') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "name": "stg_subscription_subscriptionevent", "alias": "stg_subscription_subscriptionevent", "checksum": {"name": "sha256", "checksum": "372fa7870b8b28c48e1f4ccc8a17d0c301f760c235e5368f1b4b41b071a829ba"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscriptionevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.09696, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscriptionevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscriptionevent\""}, "model.houm.stg_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_users"], "unique_id": "model.houm.stg_users", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'users') }}\r\n--where audit_end_dt is null and audit_action != 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_users.sql", "original_file_path": "models/staging/arriendoasegurado/stg_users.sql", "name": "stg_users", "alias": "stg_users", "checksum": {"name": "sha256", "checksum": "92c0a358410b0ad7689347ed0513fc34ec94232fde85c260648e8b1d0db89b80"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "users"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.098523, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"users\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_users\""}, "model.houm.stg_external_portal_integrations_country": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_country"], "unique_id": "model.houm.stg_external_portal_integrations_country", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_country') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "name": "stg_external_portal_integrations_country", "alias": "stg_external_portal_integrations_country", "checksum": {"name": "sha256", "checksum": "031ff7bcb50446b1e403938d7116b942d80d8d457c9f7e87fc9b19a8c9e97539"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_country"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.100095, "compiled_code": "\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_country\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\""}, "model.houm.stg_real_estate_developments_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_units"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_units"], "unique_id": "model.houm.stg_real_estate_developments_units", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_units') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_units.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_units.sql", "name": "stg_real_estate_developments_units", "alias": "stg_real_estate_developments_units", "checksum": {"name": "sha256", "checksum": "3633e40e39ec69af03e4c8b880fe7863364254a1216f3394a5997ad65932d933"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_units"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.101822, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_units\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\""}, "model.houm.stg_real_estate_developments_developmentdetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_developmentdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_developmentdetails"], "unique_id": "model.houm.stg_real_estate_developments_developmentdetails", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_developmentdetails') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "name": "stg_real_estate_developments_developmentdetails", "alias": "stg_real_estate_developments_developmentdetails", "checksum": {"name": "sha256", "checksum": "4baacee2d80ba45360e0cc8fee41b7f729343b8a9630deb24d9bdd8d3c44d52c"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_developmentdetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.103543, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developmentdetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developmentdetails\""}, "model.houm.stg_scheduler_scheduletypes": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_scheduletypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_scheduletypes"], "unique_id": "model.houm.stg_scheduler_scheduletypes", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_scheduletypes') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "name": "stg_scheduler_scheduletypes", "alias": "stg_scheduler_scheduletypes", "checksum": {"name": "sha256", "checksum": "52fd20f1fe32e75e08e4ca0c0d00082630ac35c6f4849d71d7d2574f0ad26b5c"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_scheduletypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1051068, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\""}, "model.houm.stg_properties_location": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_location"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_location"], "unique_id": "model.houm.stg_properties_location", "raw_code": "select * \nfrom {{ source('raw_stage', 'properties_location') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_location.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_location.sql", "name": "stg_properties_location", "alias": "stg_properties_location", "checksum": {"name": "sha256", "checksum": "1b58c502f46fae77c60c3ffd3e7b1288013befa7caf12bb7a7ee7da409ee3b40"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_location"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.106666, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_location\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\""}, "model.houm.stg_scheduler_schedulehasapplicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedulehasapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedulehasapplicant"], "unique_id": "model.houm.stg_scheduler_schedulehasapplicant", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_schedulehasapplicant') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "name": "stg_scheduler_schedulehasapplicant", "alias": "stg_scheduler_schedulehasapplicant", "checksum": {"name": "sha256", "checksum": "3602c96936bd833c4196b85d8c5b67df01c08fd790e0b5a06af957afc0b8aa68"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedulehasapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.108215, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\""}, "model.houm.stg_scheduler_macrozone": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_macrozone"], "unique_id": "model.houm.stg_scheduler_macrozone", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_macrozone') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_macrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_macrozone.sql", "name": "stg_scheduler_macrozone", "alias": "stg_scheduler_macrozone", "checksum": {"name": "sha256", "checksum": "c3ab97302f65575ad0ca47a3d4d1f6c4e5a4d69bae50555ad27a7b861f8c53e2"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_macrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1099038, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\""}, "model.houm.stg_external_portal_integrations_macrozoneportalplan": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_macrozoneportalplan"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_macrozoneportalplan"], "unique_id": "model.houm.stg_external_portal_integrations_macrozoneportalplan", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_macrozoneportalplan') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "name": "stg_external_portal_integrations_macrozoneportalplan", "alias": "stg_external_portal_integrations_macrozoneportalplan", "checksum": {"name": "sha256", "checksum": "4513013b510413429e2e2fa9cf2cd4923ff1b6098c2c6fa113fb213538112f35"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_macrozoneportalplan"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.111476, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_macrozoneportalplan\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_macrozoneportalplan\""}, "model.houm.stg_subscription_subscriptiondiscount": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscriptiondiscount"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscriptiondiscount"], "unique_id": "model.houm.stg_subscription_subscriptiondiscount", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscriptiondiscount') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "name": "stg_subscription_subscriptiondiscount", "alias": "stg_subscription_subscriptiondiscount", "checksum": {"name": "sha256", "checksum": "a1d4de54e38a41dc793c9da34b20a65d6c3428e3324ab9e6dc9478a9e2f53aea"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscriptiondiscount"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.113306, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscriptiondiscount\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscriptiondiscount\""}, "model.houm.stg_demand_eventleadprofile": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_eventleadprofile"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_eventleadprofile"], "unique_id": "model.houm.stg_demand_eventleadprofile", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'demand_eventleadprofile') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "name": "stg_demand_eventleadprofile", "alias": "stg_demand_eventleadprofile", "checksum": {"name": "sha256", "checksum": "cc7146b0c9108249aecdb90a5635566daa4e07cbe9823a496d79d32c2ae8d764"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_eventleadprofile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.114924, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_eventleadprofile\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_eventleadprofile\""}, "model.houm.stg_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties"], "unique_id": "model.houm.stg_properties", "raw_code": "select * \nfrom {{ source('raw_stage', 'properties') }}\n--where audit_end_dt is null  and audit_action != 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties.sql", "name": "stg_properties", "alias": "stg_properties", "checksum": {"name": "sha256", "checksum": "836609a5c877f6d12f094d49a2c4820bfb3e94dd5f6379107b9d5069b94e31cc"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the properties at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.74194, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties\""}, "model.houm.stg_demand_leadhasappraiser": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_leadhasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_leadhasappraiser"], "unique_id": "model.houm.stg_demand_leadhasappraiser", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'demand_leadhasappraiser') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "name": "stg_demand_leadhasappraiser", "alias": "stg_demand_leadhasappraiser", "checksum": {"name": "sha256", "checksum": "fbd953e0442b3e769181d57523bd641bbd7eb10953ee64103069a2529f5787e3"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_leadhasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1181939, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_leadhasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_leadhasappraiser\""}, "model.houm.stg_plans_cities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.plans_cities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_plans_cities"], "unique_id": "model.houm.stg_plans_cities", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'plans_cities') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_plans_cities.sql", "original_file_path": "models/staging/arriendoasegurado/stg_plans_cities.sql", "name": "stg_plans_cities", "alias": "stg_plans_cities", "checksum": {"name": "sha256", "checksum": "a62abe1031f22ee25d8d2b9c44441c49c71a30b1747e923dc36a2ba5dd7d3304"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "plans_cities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_plans_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.119749, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"plans_cities\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_plans_cities\""}, "model.houm.stg_real_estate_developments_unittypes": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_unittypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_unittypes"], "unique_id": "model.houm.stg_real_estate_developments_unittypes", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_unittypes') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "name": "stg_real_estate_developments_unittypes", "alias": "stg_real_estate_developments_unittypes", "checksum": {"name": "sha256", "checksum": "59029937721976eb2cba335f45cfbffb28d0f83474c19e3ad9b2f2d9def79d14"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_unittypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.121292, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_unittypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\""}, "model.houm.stg_external_portal_integrations_publication_scd": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_external_portal_integrations_publication"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publication_scd"], "unique_id": "model.houm.stg_external_portal_integrations_publication_scd", "raw_code": "{{\r\n  config(\r\n    materialized = \"table\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('historical', 'historical_external_portal_integrations_publication') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "name": "stg_external_portal_integrations_publication_scd", "alias": "stg_external_portal_integrations_publication_scd", "checksum": {"name": "sha256", "checksum": "8b418c7c036d147b93780f6b9426069049fd53fef76956c7ad1b2e6deda005e3"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["historical", "historical_external_portal_integrations_publication"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "table"}, "created_at": 1675970038.123018, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"historical\".\"historical_external_portal_integrations_publication\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\""}, "model.houm.stg_scheduler_scheduleevent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_scheduleevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_scheduleevent"], "unique_id": "model.houm.stg_scheduler_scheduleevent", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_scheduleevent') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "name": "stg_scheduler_scheduleevent", "alias": "stg_scheduler_scheduleevent", "checksum": {"name": "sha256", "checksum": "51ae8acc7ed3e88b545cf8c12912f0423ca4f89ec34c80e0e8d29910f232fb4e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_scheduleevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.124807, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_scheduleevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\""}, "model.houm.stg_demand_lead": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_lead"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_lead"], "unique_id": "model.houm.stg_demand_lead", "raw_code": "select *\nfrom {{ source('raw_stage', 'demand_lead') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_lead.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_lead.sql", "name": "stg_demand_lead", "alias": "stg_demand_lead", "checksum": {"name": "sha256", "checksum": "223c057a04b62545e2a2a133429bb0d807ef9e9c479f18c0ab9c2ec55fc26044"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_lead"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_lead.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1263921, "compiled_code": "select *\nfrom \"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\""}, "model.houm.stg_scheduler_applicanthasappraiser": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_applicanthasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_applicanthasappraiser"], "unique_id": "model.houm.stg_scheduler_applicanthasappraiser", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_applicanthasappraiser') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "name": "stg_scheduler_applicanthasappraiser", "alias": "stg_scheduler_applicanthasappraiser", "checksum": {"name": "sha256", "checksum": "f5020693ab91a7f5ce6bb22db6316f0f344640835ed77cd67e5c3ec7994117f3"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_applicanthasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.127954, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_applicanthasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_applicanthasappraiser\""}, "model.houm.stg_external_portal_integrations_publicationtype": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publicationtype"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publicationtype"], "unique_id": "model.houm.stg_external_portal_integrations_publicationtype", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publicationtype') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "name": "stg_external_portal_integrations_publicationtype", "alias": "stg_external_portal_integrations_publicationtype", "checksum": {"name": "sha256", "checksum": "8b13afff7b516703c17ff06aeca12eef7bdaf6844de59fc8201da56138f4b737"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publicationtype"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.129657, "compiled_code": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationtype\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\""}, "model.houm.stg_demand_eventleadhasappraiser": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_eventleadhasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_eventleadhasappraiser"], "unique_id": "model.houm.stg_demand_eventleadhasappraiser", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'demand_eventleadhasappraiser') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "name": "stg_demand_eventleadhasappraiser", "alias": "stg_demand_eventleadhasappraiser", "checksum": {"name": "sha256", "checksum": "2135cbaca55cc74c4873d849b6c6acf7aba945dd2cb57dffb60f982ada37bf71"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_eventleadhasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.131408, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_eventleadhasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_eventleadhasappraiser\""}, "model.houm.stg_arriendoasegurado_contractperson": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_contractperson"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_contractperson"], "unique_id": "model.houm.stg_arriendoasegurado_contractperson", "raw_code": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_contractperson') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "name": "stg_arriendoasegurado_contractperson", "alias": "stg_arriendoasegurado_contractperson", "checksum": {"name": "sha256", "checksum": "b9fb859886d953c4fe60055282404e5e7ea929b4223eb9c2b45356f7d633892f"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_contractperson"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.132971, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_contractperson\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_contractperson\""}, "model.houm.stg_external_portal_integrations_portalplan": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_portalplan"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_portalplan"], "unique_id": "model.houm.stg_external_portal_integrations_portalplan", "raw_code": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_portalplan') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "name": "stg_external_portal_integrations_portalplan", "alias": "stg_external_portal_integrations_portalplan", "checksum": {"name": "sha256", "checksum": "fcbc41f8db97b07edb068925a418a0fce10f3bd6ca0a5ef5d8fe6950ef2429f5"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_portalplan"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1675970038.134519, "compiled_code": "\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_portalplan\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\""}, "model.houm.stg_contracts_codebtors": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.contracts_codebtors"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts_codebtors"], "unique_id": "model.houm.stg_contracts_codebtors", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'contracts_codebtors') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts_codebtors.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts_codebtors.sql", "name": "stg_contracts_codebtors", "alias": "stg_contracts_codebtors", "checksum": {"name": "sha256", "checksum": "3acc536c05227a5985144a32cbfaab9b6df1a10dceb16adbf70a71c1950df351"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "contracts_codebtors"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts_codebtors.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.136391, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"contracts_codebtors\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts_codebtors\""}, "model.houm.stg_property_salesdetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_property_salesdetails"], "unique_id": "model.houm.stg_property_salesdetails", "raw_code": "select * \nfrom {{ source('raw_stage', 'properties_salesdetails') }}\n--where audit_end_dt is null  and audit_action != 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_property_salesdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_property_salesdetails.sql", "name": "stg_property_salesdetails", "alias": "stg_property_salesdetails", "checksum": {"name": "sha256", "checksum": "854815a0f2f90b20a9829ea35ae100cc42aa2b082c8c3f297c4c2085ecf61b89"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_salesdetails"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.743084, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\""}, "model.houm.stg_homecheckerdetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_homecheckerdetails"], "unique_id": "model.houm.stg_homecheckerdetails", "raw_code": "select * \nfrom {{ source('historical', 'historical_arriendoasegurado_homecheckerdetails') }}\nwhere audit_end_dt is null  and audit_action != 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_homecheckerdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "name": "stg_homecheckerdetails", "alias": "stg_homecheckerdetails", "checksum": {"name": "sha256", "checksum": "a26fb651c6570e56778aff4db76eb3549b642d287227ceb3119a9631859128b5"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_arriendoasegurado_homecheckerdetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.13952, "compiled_code": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"\nwhere audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\""}, "model.houm.stg_arriendoasegurado_city": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_city"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_city"], "unique_id": "model.houm.stg_arriendoasegurado_city", "raw_code": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_city') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "name": "stg_arriendoasegurado_city", "alias": "stg_arriendoasegurado_city", "checksum": {"name": "sha256", "checksum": "ae4b8267212409e60bb942049456be330c872c7e76bb944d5afd8ce95bc1653f"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_city"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.141071, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_city\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_city\""}, "model.houm.stg_arriendoasegurado_planmonth": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_planmonth"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_planmonth"], "unique_id": "model.houm.stg_arriendoasegurado_planmonth", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'arriendoasegurado_planmonth') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "name": "stg_arriendoasegurado_planmonth", "alias": "stg_arriendoasegurado_planmonth", "checksum": {"name": "sha256", "checksum": "440a974dfe2984c53399650529e03659f71eb6614d966cc8e28fdfaabe8a2f8e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_planmonth"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.142913, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_planmonth\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_planmonth\""}, "model.houm.stg_scheduler_appraiserevent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiserevent"], "unique_id": "model.houm.stg_scheduler_appraiserevent", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiserevent') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "name": "stg_scheduler_appraiserevent", "alias": "stg_scheduler_appraiserevent", "checksum": {"name": "sha256", "checksum": "8fb109f8fa0fc253a5181cbb7431cdde5ce7e0d6d93a0722195069e4715938cf"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiserevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.144469, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\""}, "model.houm.stg_macrozone": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_macrozone"], "unique_id": "model.houm.stg_macrozone", "raw_code": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM {{ source('raw_stage', 'scheduler_macrozone') }} a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_macrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_macrozone.sql", "name": "stg_macrozone", "alias": "stg_macrozone", "checksum": {"name": "sha256", "checksum": "0d2395fc0ecd1dd13af37d3b345d7097ea132877ab13059884bba897057b19d1"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_macrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.146028, "compiled_code": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM \"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\" a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_macrozone\""}, "model.houm.stg_real_estate_developments_developments": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_developments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_developments"], "unique_id": "model.houm.stg_real_estate_developments_developments", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_developments') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "name": "stg_real_estate_developments_developments", "alias": "stg_real_estate_developments_developments", "checksum": {"name": "sha256", "checksum": "6a417e744a67c81d7c9a21a77d58a3c0af30779ee11bce085328d80cb4918725"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_developments"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.147585, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developments\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\""}, "model.houm.stg_scheduler_cancelreasons": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_cancelreasons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_cancelreasons"], "unique_id": "model.houm.stg_scheduler_cancelreasons", "raw_code": "select * \nfrom {{ source('raw_stage', 'scheduler_cancelreasons') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "name": "stg_scheduler_cancelreasons", "alias": "stg_scheduler_cancelreasons", "checksum": {"name": "sha256", "checksum": "e1c3e58ccbaa504416da6cf5c9fba151d10b2d0ac31e87c9a0f130aa05249fe7"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_cancelreasons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.149289, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasons\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\""}, "model.houm.stg_properties_inspectionreport": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_inspectionreport"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_inspectionreport"], "unique_id": "model.houm.stg_properties_inspectionreport", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'properties_inspectionreport') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_inspectionreport.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_inspectionreport.sql", "name": "stg_properties_inspectionreport", "alias": "stg_properties_inspectionreport", "checksum": {"name": "sha256", "checksum": "0c8f4ea767ffa5e1be3b1c2c87c3619bbe8b06d04dbf9b4870eb4dec06b3797d"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_inspectionreport"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_inspectionreport.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1508522, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_inspectionreport\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_inspectionreport\""}, "model.houm.stg_plans": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_plans"], "unique_id": "model.houm.stg_plans", "raw_code": "select * \nfrom {{ source('raw_stage', 'plans') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_plans.sql", "original_file_path": "models/staging/arriendoasegurado/stg_plans.sql", "name": "stg_plans", "alias": "stg_plans", "checksum": {"name": "sha256", "checksum": "bf42699793438401edf890786c5dbf3d4a7cda317c510bc3b94d85df9842d42d"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "plans"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.152405, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"plans\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_plans\""}, "model.houm.stg_demand_whatsapp": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_whatsapp"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_whatsapp"], "unique_id": "model.houm.stg_demand_whatsapp", "raw_code": "select * \nfrom {{ source('raw_stage', 'demand_whatsapp') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_whatsapp.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_whatsapp.sql", "name": "stg_demand_whatsapp", "alias": "stg_demand_whatsapp", "checksum": {"name": "sha256", "checksum": "72996e75ff15d6644d94c56cfb63365baa8bbf56c68a765f376d5df24d91a3b4"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_whatsapp"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.1539562, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_whatsapp\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_whatsapp\""}, "model.houm.stg_properties_basicservice": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_basicservice"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_basicservice"], "unique_id": "model.houm.stg_properties_basicservice", "raw_code": "select * \r\nfrom {{ source('raw_stage', 'properties_basicservice') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_basicservice.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_basicservice.sql", "name": "stg_properties_basicservice", "alias": "stg_properties_basicservice", "checksum": {"name": "sha256", "checksum": "bdf98dfb0d3fe622ffdb4ab62a2278b51d3cbaf1b5e6f62d2d0d6d3fa325c6e9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_basicservice"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_basicservice.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.15566, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_basicservice\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_basicservice\""}, "model.houm.stg_scheduler_appraisers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraisers"], "unique_id": "model.houm.stg_scheduler_appraisers", "raw_code": "SELECT * \nFROM {{ source('raw_stage', 'scheduler_appraisers') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraisers.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraisers.sql", "name": "stg_scheduler_appraisers", "alias": "stg_scheduler_appraisers", "checksum": {"name": "sha256", "checksum": "a384dd45bc997a801133e7f00ef1939d2f0f2a80ab73b2efebd7571ec95b8da9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraisers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraisers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.157221, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"scheduler_appraisers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\""}, "model.houm.stg_arriendoasegurado_propertydetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_propertydetails"], "unique_id": "model.houm.stg_arriendoasegurado_propertydetails", "raw_code": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_propertydetails') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "name": "stg_arriendoasegurado_propertydetails", "alias": "stg_arriendoasegurado_propertydetails", "checksum": {"name": "sha256", "checksum": "fc794115ada86ea823bf0425e8a98c946ce85defb549ac0c6f4425536ee4fd06"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.158776, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_propertydetails\""}, "model.houm.stg_propertydetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_propertydetails"], "unique_id": "model.houm.stg_propertydetails", "raw_code": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_propertydetails') }}\n--where audit_end_dt is null and audit_action != 'D'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_propertydetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_propertydetails.sql", "name": "stg_propertydetails", "alias": "stg_propertydetails", "checksum": {"name": "sha256", "checksum": "625926357afc2e4655d69a27e1aadc6c2f27479e1cb56867a737f591af48fdbe"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties details at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1675970038.742521, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\""}, "model.houm.stg_paid_media_google_campaign_keys": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_gg"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaign_keys"], "unique_id": "model.houm.stg_paid_media_google_campaign_keys", "raw_code": "SELECT \n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_gg_hashid\nFROM \n    {{ source('airbyte_gspread', 'campaign_keys_gg') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "name": "stg_paid_media_google_campaign_keys", "alias": "stg_paid_media_google_campaign_keys", "checksum": {"name": "sha256", "checksum": "dfa7ee7f79215ffb5a489aeebefac486210babdb200416c596a70f89df647dd8"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_gg"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.1620219, "compiled_code": "SELECT \n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_gg_hashid\nFROM \n    \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaign_keys\""}, "model.houm.stg_tmp_marketing_pipedrive_data": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_tmp_marketing_pipedrive_data"], "unique_id": "model.houm.stg_tmp_marketing_pipedrive_data", "raw_code": "select * \nfrom {{ source('airbyte_gspread', 'data') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "original_file_path": "models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "name": "stg_tmp_marketing_pipedrive_data", "alias": "stg_tmp_marketing_pipedrive_data", "checksum": {"name": "sha256", "checksum": "7900d159fc2daa338db88294137a473736f15f2057a0c56814ff6e1c03dd8c58"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "data"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.163591, "compiled_code": "select * \nfrom \"houmdw_prod\".\"airbyte_gspread\".\"data\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_tmp_marketing_pipedrive_data\""}, "model.houm.stg_paid_media_facebook_campaigns": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.bb_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaigns"], "unique_id": "model.houm.stg_paid_media_facebook_campaigns", "raw_code": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name , \n    to_date(date, 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMPTZ AS executed_at ,\n    'USD' AS currency ,\n    replace(cost, ',', '.')::FLOAT AS day_cost ,\n    \"link clicks\"::INT AS day_clicks , \n    impressions::VARCHAR AS day_impressions ,\n    \"ad set lifetime budget\" AS ad_set_lifetime_budget ,\n    \"ad set daily budget\" AS ad_set_daily_buget ,\n    \"ad set start time\"  AS ad_set_start_time ,\n    \"ad set end time\" AS ad_set_end_time ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at , \n    _airbyte_normalized_at ,\n    _airbyte_bb_fb_hashid \nFROM\n    {{ source('airbyte_gspread','bb_fb')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaigns.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "name": "stg_paid_media_facebook_campaigns", "alias": "stg_paid_media_facebook_campaigns", "checksum": {"name": "sha256", "checksum": "6f05c03c571321937ae05a2fc325d7eb49a3df1939db403b8d29a329f5e6e332"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "bb_fb"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.165154, "compiled_code": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name , \n    to_date(date, 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMPTZ AS executed_at ,\n    'USD' AS currency ,\n    replace(cost, ',', '.')::FLOAT AS day_cost ,\n    \"link clicks\"::INT AS day_clicks , \n    impressions::VARCHAR AS day_impressions ,\n    \"ad set lifetime budget\" AS ad_set_lifetime_budget ,\n    \"ad set daily budget\" AS ad_set_daily_buget ,\n    \"ad set start time\"  AS ad_set_start_time ,\n    \"ad set end time\" AS ad_set_end_time ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at , \n    _airbyte_normalized_at ,\n    _airbyte_bb_fb_hashid \nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaigns\""}, "model.houm.stg_paid_media_google_campaigns_co_mx": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_mxco"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_co_mx"], "unique_id": "model.houm.stg_paid_media_google_campaigns_co_mx", "raw_code": "SELECT \n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD' AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '') ::numeric AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_mxco_hashid\nFROM\n    {{ source('airbyte_gspread','gg_mxco')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "name": "stg_paid_media_google_campaigns_co_mx", "alias": "stg_paid_media_google_campaigns_co_mx", "checksum": {"name": "sha256", "checksum": "02989956fcb325dd42115181ff20ec34bab64a49151916593579fbf6c17ad965"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_mxco"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.166719, "compiled_code": "SELECT \n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD' AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '') ::numeric AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_mxco_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_co_mx\""}, "model.houm.stg_paid_media_ad_groups": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.anuncios"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_ad_groups"], "unique_id": "model.houm.stg_paid_media_ad_groups", "raw_code": "select\n    *\nfrom\n    {{ source('airbyte_gspread','anuncios')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_ad_groups.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_ad_groups.sql", "name": "stg_paid_media_ad_groups", "alias": "stg_paid_media_ad_groups", "checksum": {"name": "sha256", "checksum": "ebb26cf0dddec05b20b47ea665af59403c48660352fd34d87a255bedc6c3d1be"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "anuncios"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_ad_groups.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.168433, "compiled_code": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_ad_groups\""}, "model.houm.stg_paid_media_facebook_campaign_keys": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaign_keys"], "unique_id": "model.houm.stg_paid_media_facebook_campaign_keys", "raw_code": "SELECT\n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_fb_hashid\nFROM\n    {{ source('airbyte_gspread', 'campaign_keys_fb') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "name": "stg_paid_media_facebook_campaign_keys", "alias": "stg_paid_media_facebook_campaign_keys", "checksum": {"name": "sha256", "checksum": "37399f8dbc461f499e21f9a756053443e4df99855b11b5b0e941767031ee20a7"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_fb"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.1699991, "compiled_code": "SELECT\n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_fb_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaign_keys\""}, "model.houm.stg_paid_media_google_campaigns_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_cl"], "unique_id": "model.houm.stg_paid_media_google_campaigns_cl", "raw_code": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::TIMESTAMPTZ AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::FLOAT AS day_cost ,\n    replace(clicks, '.', '') ::INT AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '')::INT AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_cl_hashid \nFROM\n    {{ source('airbyte_gspread','gg_cl')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "name": "stg_paid_media_google_campaigns_cl", "alias": "stg_paid_media_google_campaigns_cl", "checksum": {"name": "sha256", "checksum": "c5f8ef1f408614708a117aa116c9cda4f2a03bff00d85321e3b2e2dee7e94450"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1675970038.1715672, "compiled_code": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::TIMESTAMPTZ AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::FLOAT AS day_cost ,\n    replace(clicks, '.', '') ::INT AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '')::INT AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_cl_hashid \nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_cl\""}, "model.houm.stg_external_properties_sales_colombia": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_sales_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "sale", "stg_external_properties_sales_colombia"], "unique_id": "model.houm.stg_external_properties_sales_colombia", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_sales_colombia') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/sale/stg_external_properties_sales_colombia.sql", "original_file_path": "models/staging/external_properties/sale/stg_external_properties_sales_colombia.sql", "name": "stg_external_properties_sales_colombia", "alias": "stg_external_properties_sales_colombia", "checksum": {"name": "sha256", "checksum": "240a0f3cc016720e0a84e653175b2125775c5d8b653b048da0d2d344ccdf0a44"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_sales_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/sale/stg_external_properties_sales_colombia.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.1731389, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_sales_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_colombia\""}, "model.houm.stg_external_properties_sales_chile": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_sales_chile"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "sale", "stg_external_properties_sales_chile"], "unique_id": "model.houm.stg_external_properties_sales_chile", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_sales_chile') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/sale/stg_external_properties_sales_chile.sql", "original_file_path": "models/staging/external_properties/sale/stg_external_properties_sales_chile.sql", "name": "stg_external_properties_sales_chile", "alias": "stg_external_properties_sales_chile", "checksum": {"name": "sha256", "checksum": "cf79727bc40f5374c258c01e39e9f9b2befd76705cd2c0bdd6afd846afe5fbb5"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_sales_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/sale/stg_external_properties_sales_chile.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.174855, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_sales_chile\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_chile\""}, "model.houm.stg_external_properties_sales_mexico": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_sales_mexico"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "sale", "stg_external_properties_sales_mexico"], "unique_id": "model.houm.stg_external_properties_sales_mexico", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_sales_mexico') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/sale/stg_external_properties_sales_mexico.sql", "original_file_path": "models/staging/external_properties/sale/stg_external_properties_sales_mexico.sql", "name": "stg_external_properties_sales_mexico", "alias": "stg_external_properties_sales_mexico", "checksum": {"name": "sha256", "checksum": "ac6c55903b08d9ac56276226a255c8cd3255baa777828f369521250e0a4c6980"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_sales_mexico"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/sale/stg_external_properties_sales_mexico.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.17643, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_sales_mexico\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_mexico\""}, "model.houm.stg_external_properties_rent_colombia": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_rent_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "rent", "stg_external_properties_rent_colombia"], "unique_id": "model.houm.stg_external_properties_rent_colombia", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_rent_colombia') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/rent/stg_external_properties_rent_colombia.sql", "original_file_path": "models/staging/external_properties/rent/stg_external_properties_rent_colombia.sql", "name": "stg_external_properties_rent_colombia", "alias": "stg_external_properties_rent_colombia", "checksum": {"name": "sha256", "checksum": "2ef27bd9f618abde22391649886fb30325536f3ed11d41ce7ee403fb19d565f1"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_rent_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/rent/stg_external_properties_rent_colombia.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.177996, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_rent_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_colombia\""}, "model.houm.stg_external_properties_rent_chile": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_rent_chile"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "rent", "stg_external_properties_rent_chile"], "unique_id": "model.houm.stg_external_properties_rent_chile", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_rent_chile') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/rent/stg_external_properties_rent_chile.sql", "original_file_path": "models/staging/external_properties/rent/stg_external_properties_rent_chile.sql", "name": "stg_external_properties_rent_chile", "alias": "stg_external_properties_rent_chile", "checksum": {"name": "sha256", "checksum": "8f5510471a618f52e4a0fc8aa1796688977ec5df5c4b9237c52a9eed24846fbf"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_rent_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/rent/stg_external_properties_rent_chile.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.179559, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_rent_chile\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_chile\""}, "model.houm.stg_external_properties_rent_mexico": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_properties_rent_mexico"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["external_properties", "recommender", "staging", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "external_properties", "rent", "stg_external_properties_rent_mexico"], "unique_id": "model.houm.stg_external_properties_rent_mexico", "raw_code": "SELECT \n    * \nFROM {{ source('raw_stage', 'external_properties_rent_mexico') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/external_properties/rent/stg_external_properties_rent_mexico.sql", "original_file_path": "models/staging/external_properties/rent/stg_external_properties_rent_mexico.sql", "name": "stg_external_properties_rent_mexico", "alias": "stg_external_properties_rent_mexico", "checksum": {"name": "sha256", "checksum": "2bc77fd5af1a56a88c858812b529f1399bf691b1721a39ca42216f26b9770b87"}, "tags": ["external_properties", "recommender", "staging", "dw"], "refs": [], "sources": [["raw_stage", "external_properties_rent_mexico"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/external_properties/rent/stg_external_properties_rent_mexico.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["external_properties", "recommender", "staging", "dw"]}, "created_at": 1675970038.18126, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"raw_stage\".\"external_properties_rent_mexico\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_mexico\""}, "model.houm.stg_rev_kpi_rented_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_kpi_rented_properties"], "unique_id": "model.houm.stg_rev_kpi_rented_properties", "raw_code": "SELECT\n        property_id,\n        created_at ,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code   \n    FROM\n        {{ source('raw_stage',\n        'arriendoasegurado_propertydetails') }}  \n    WHERE\n        status = 'rented'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_kpi_rented_properties.sql", "original_file_path": "models/staging/rev/stg_rev_kpi_rented_properties.sql", "name": "stg_rev_kpi_rented_properties", "alias": "stg_rev_kpi_rented_properties", "checksum": {"name": "sha256", "checksum": "d50529f550ca45c8bc358095df8ef2d0f677e0925ced089f715c2ab7400fa777"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_kpi_rented_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1675970038.18283, "compiled_code": "SELECT\n        property_id,\n        created_at ,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code   \n    FROM\n        \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"  \n    WHERE\n        status = 'rented'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_kpi_rented_properties\""}, "model.houm.stg_rev_houm_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.rev_houm_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_houm_properties"], "unique_id": "model.houm.stg_rev_houm_properties", "raw_code": "SELECT \n    * \nFROM {{ source('public', 'rev_houm_properties') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_houm_properties.sql", "original_file_path": "models/staging/rev/stg_rev_houm_properties.sql", "name": "stg_rev_houm_properties", "alias": "stg_rev_houm_properties", "checksum": {"name": "sha256", "checksum": "ce4ce9219f8d55c2b1ca5ff739d1ddee2328a48775b557396396ecc90ca276fc"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["public", "rev_houm_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_houm_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1675970038.184404, "compiled_code": "SELECT \n    * \nFROM \"houmdw_prod\".\"public\".\"rev_houm_properties\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\""}, "model.houm.stg_rev_kpi_published_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_kpi_published_properties"], "unique_id": "model.houm.stg_rev_kpi_published_properties", "raw_code": "SELECT\n        property_id,\n        created_at,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code  \n    FROM\n        {{ source('raw_stage',\n        'arriendoasegurado_propertydetails') }}  \n    WHERE\n        status = 'published'    \n        or status = 'republished'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_kpi_published_properties.sql", "original_file_path": "models/staging/rev/stg_rev_kpi_published_properties.sql", "name": "stg_rev_kpi_published_properties", "alias": "stg_rev_kpi_published_properties", "checksum": {"name": "sha256", "checksum": "b3b72db1269a1e73b555984674b3ac675568aacd434d3b3a9e231beff8dcde86"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_kpi_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1675970038.185963, "compiled_code": "SELECT\n        property_id,\n        created_at,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code  \n    FROM\n        \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"  \n    WHERE\n        status = 'published'    \n        or status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_kpi_published_properties\""}, "model.houm.stg_kustomer_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "stg_kustomer_users"], "unique_id": "model.houm.stg_kustomer_users", "raw_code": "SELECT \n    users.id,\n    users.created_at,\n    users.updated_at,\n    users.deleted_at,\n    users.display_name,\n    users.email,\n    users.mobile,\n    users.name,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(users.links)), 'self', TRUE) as self_link,\n    users.type,\n    users.user_type\nFROM {{ source('kustomer', 'users') }} users", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/stg_kustomer_users.sql", "original_file_path": "models/staging/kustomer/stg_kustomer_users.sql", "name": "stg_kustomer_users", "alias": "stg_kustomer_users", "checksum": {"name": "sha256", "checksum": "7adfdc58d085e46d194736eddd89bf257d9e539502c884838e8a9539f8dcca6e"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "users"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/stg_kustomer_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.18769, "compiled_code": "SELECT \n    users.id,\n    users.created_at,\n    users.updated_at,\n    users.deleted_at,\n    users.display_name,\n    users.email,\n    users.mobile,\n    users.name,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(users.links)), 'self', TRUE) as self_link,\n    users.type,\n    users.user_type\nFROM \"houmdw_prod\".\"kustomer\".\"users\" users", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_users\""}, "model.houm.stg_kustomer_messages": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.messages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "stg_kustomer_messages"], "unique_id": "model.houm.stg_kustomer_messages", "raw_code": "SELECT \n    id,\n    CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customer)), 'id', TRUE) ELSE NULL END AS customer_id,\n    CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link,\n    created_at,\n    type,\n    updated_at\nFROM {{ source('kustomer', 'messages') }} messages", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/stg_kustomer_messages.sql", "original_file_path": "models/staging/kustomer/stg_kustomer_messages.sql", "name": "stg_kustomer_messages", "alias": "stg_kustomer_messages", "checksum": {"name": "sha256", "checksum": "16bd2c5396f1f6ebeb5590c961125cdb158052bd5bd90bdbbe33e00a443e2751"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "messages"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/stg_kustomer_messages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.189258, "compiled_code": "SELECT \n    id,\n    CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customer)), 'id', TRUE) ELSE NULL END AS customer_id,\n    CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link,\n    created_at,\n    type,\n    updated_at\nFROM \"houmdw_prod\".\"kustomer\".\"messages\" messages", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_messages\""}, "model.houm.stg_kustomer_queues": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.queues"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "stg_kustomer_queues"], "unique_id": "model.houm.stg_kustomer_queues", "raw_code": "SELECT\n    id\n    ,type\n    ,CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link\n    ,name\n    ,displayname\n    ,priority\n    ,itemsize AS item_size\n    ,restricttransfersbyusers AS restrict_transfers_by_users\n    ,\"system\"\n    ,description\n    ,updatedat AS updated_at\n    ,createdat AS created_at\n    ,deleted\n    ,\"settings.overrideassignment\" AS override_assignment\n    ,\"settings.putbackitemsonoffline\" AS put_back_items_on_offline\n    ,key\n    ,settings\nFROM {{ source('kustomer', 'queues') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/stg_kustomer_queues.sql", "original_file_path": "models/staging/kustomer/stg_kustomer_queues.sql", "name": "stg_kustomer_queues", "alias": "stg_kustomer_queues", "checksum": {"name": "sha256", "checksum": "9b3bd47ab321f3dfcb9227f0b37b0b9e25c62a0b5f03270306761e7bf1cca4ac"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "queues"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/stg_kustomer_queues.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.19083, "compiled_code": "SELECT\n    id\n    ,type\n    ,CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link\n    ,name\n    ,displayname\n    ,priority\n    ,itemsize AS item_size\n    ,restricttransfersbyusers AS restrict_transfers_by_users\n    ,\"system\"\n    ,description\n    ,updatedat AS updated_at\n    ,createdat AS created_at\n    ,deleted\n    ,\"settings.overrideassignment\" AS override_assignment\n    ,\"settings.putbackitemsonoffline\" AS put_back_items_on_offline\n    ,key\n    ,settings\nFROM \"houmdw_prod\".\"kustomer\".\"queues\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_queues\""}, "model.houm.stg_kustomer_tags": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.tags"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "stg_kustomer_tags"], "unique_id": "model.houm.stg_kustomer_tags", "raw_code": "SELECT\nid,\nname\nFROM {{ source('kustomer', 'tags') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/stg_kustomer_tags.sql", "original_file_path": "models/staging/kustomer/stg_kustomer_tags.sql", "name": "stg_kustomer_tags", "alias": "stg_kustomer_tags", "checksum": {"name": "sha256", "checksum": "fdb0dc16671e92867097bbecffd8050b729d32b07a6df96288c6219fd0ad7961"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "tags"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/stg_kustomer_tags.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.192394, "compiled_code": "SELECT\nid,\nname\nFROM \"houmdw_prod\".\"kustomer\".\"tags\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_tags\""}, "model.houm.stg_kustomer_customers_active_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.customers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "customers", "stg_kustomer_customers_active_users"], "unique_id": "model.houm.stg_kustomer_customers_active_users", "raw_code": "WITH processed_active_users AS (\n        SELECT JSON_PARSE(TRANSLATE(active_users,'''','\"')) as active_user,\n            id\n        FROM {{ source('kustomer', 'customers') }}\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS customer_id\nFROM\nprocessed_active_users pau,\npau.active_user AS au", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/customers/stg_kustomer_customers_active_users.sql", "original_file_path": "models/staging/kustomer/customers/stg_kustomer_customers_active_users.sql", "name": "stg_kustomer_customers_active_users", "alias": "stg_kustomer_customers_active_users", "checksum": {"name": "sha256", "checksum": "e40c8a9225a5bee0c08703a715a9cd25131cc22678dc38f27a3fdaed93c072ae"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/customers/stg_kustomer_customers_active_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.1941051, "compiled_code": "WITH processed_active_users AS (\n        SELECT JSON_PARSE(TRANSLATE(active_users,'''','\"')) as active_user,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"customers\"\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS customer_id\nFROM\nprocessed_active_users pau,\npau.active_user AS au", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_active_users\""}, "model.houm.stg_kustomer_customers_emails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.customers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "customers", "stg_kustomer_customers_emails"], "unique_id": "model.houm.stg_kustomer_customers_emails", "raw_code": "WITH email_arr AS (\n        SELECT JSON_PARSE(emails) as email,\n            id\n        FROM {{ source('kustomer', 'customers') }} c\n        ),\nemails AS (\n\t\tSELECT JSON_SERIALIZE(em) AS email,\n\t\t        ea.id AS customer_id\n\t\tFROM\n\t\temail_arr ea,\n\t\tea.email AS em\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'verified', TRUE) AS verified,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'email', TRUE) AS email\nFROM emails", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/customers/stg_kustomer_customers_emails.sql", "original_file_path": "models/staging/kustomer/customers/stg_kustomer_customers_emails.sql", "name": "stg_kustomer_customers_emails", "alias": "stg_kustomer_customers_emails", "checksum": {"name": "sha256", "checksum": "daf64a89afeb6f955248dabc2c55cf2a13eb95f788a78be8320c123c92fa5d74"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/customers/stg_kustomer_customers_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.195678, "compiled_code": "WITH email_arr AS (\n        SELECT JSON_PARSE(emails) as email,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"customers\" c\n        ),\nemails AS (\n\t\tSELECT JSON_SERIALIZE(em) AS email,\n\t\t        ea.id AS customer_id\n\t\tFROM\n\t\temail_arr ea,\n\t\tea.email AS em\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'verified', TRUE) AS verified,\n\t\tJSON_EXTRACT_PATH_TEXT(email, 'email', TRUE) AS email\nFROM emails", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_emails\""}, "model.houm.stg_kustomer_customers_phones": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.customers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "customers", "stg_kustomer_customers_phones"], "unique_id": "model.houm.stg_kustomer_customers_phones", "raw_code": "WITH json_arr AS (\n        SELECT JSON_PARSE(phones) as phones,\n            id\n        FROM {{ source('kustomer', 'customers') }} c\n        ),\nunpivoted_cols AS (\n\t\tSELECT JSON_SERIALIZE(jac) AS phone,\n\t\t        ja.id AS customer_id\n\t\tFROM\n\t\tjson_arr ja,\n\t\tja.phones AS jac\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'verified', TRUE) AS verified,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'phone', TRUE) AS email\nFROM unpivoted_cols", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/customers/stg_kustomer_customers_phones.sql", "original_file_path": "models/staging/kustomer/customers/stg_kustomer_customers_phones.sql", "name": "stg_kustomer_customers_phones", "alias": "stg_kustomer_customers_phones", "checksum": {"name": "sha256", "checksum": "a7bcaa3e8a9e1948be72afd15681ac24565d9a2de9b1b33803508c591d60dcb5"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/customers/stg_kustomer_customers_phones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.197255, "compiled_code": "WITH json_arr AS (\n        SELECT JSON_PARSE(phones) as phones,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"customers\" c\n        ),\nunpivoted_cols AS (\n\t\tSELECT JSON_SERIALIZE(jac) AS phone,\n\t\t        ja.id AS customer_id\n\t\tFROM\n\t\tjson_arr ja,\n\t\tja.phones AS jac\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'verified', TRUE) AS verified,\n\t\tJSON_EXTRACT_PATH_TEXT(phone, 'phone', TRUE) AS email\nFROM unpivoted_cols", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_phones\""}, "model.houm.stg_kustomer_customers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.customers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "customers", "stg_kustomer_customers"], "unique_id": "model.houm.stg_kustomer_customers", "raw_code": "SELECT\n    customers.id,\n    customers.gender,\n    customers.locale,\n    customers.name,\n    customers.last_activity_at,\n    customers.deleted,\n    customers.first_name,\n    customers.last_name,\n    customers.verified,\n    CASE WHEN CAN_JSON_PARSE(sentiment) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(sentiment)), 'polarity') ELSE NULL END AS sentiment_polarity,\n    CASE WHEN CAN_JSON_PARSE(sentiment) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(sentiment)), 'confidence') ELSE NULL END AS sentiment_confidence,\n    customers.birthday_at,\n    customers.created_at,\n    CASE WHEN CAN_JSON_PARSE(customers.links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.links)), 'self', TRUE) ELSE NULL END AS self_link,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'rol_usuario_str', TRUE) as rol_usuario,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'pais_str', TRUE) as pais,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'tipo_documento_str', TRUE) as tipo_documento,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'numero_documento_str', TRUE) as numero_documento,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'vista_propietario_url', TRUE) as vista_propietario\nFROM {{ source('kustomer', 'customers') }} customers", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/customers/stg_kustomer_customers.sql", "original_file_path": "models/staging/kustomer/customers/stg_kustomer_customers.sql", "name": "stg_kustomer_customers", "alias": "stg_kustomer_customers", "checksum": {"name": "sha256", "checksum": "7e5e68940cfcdfd793191fbb21aa045bd073441e9477f8ae82c13fd4af1ecbca"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/customers/stg_kustomer_customers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.1988218, "compiled_code": "SELECT\n    customers.id,\n    customers.gender,\n    customers.locale,\n    customers.name,\n    customers.last_activity_at,\n    customers.deleted,\n    customers.first_name,\n    customers.last_name,\n    customers.verified,\n    CASE WHEN CAN_JSON_PARSE(sentiment) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(sentiment)), 'polarity') ELSE NULL END AS sentiment_polarity,\n    CASE WHEN CAN_JSON_PARSE(sentiment) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(sentiment)), 'confidence') ELSE NULL END AS sentiment_confidence,\n    customers.birthday_at,\n    customers.created_at,\n    CASE WHEN CAN_JSON_PARSE(customers.links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.links)), 'self', TRUE) ELSE NULL END AS self_link,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'rol_usuario_str', TRUE) as rol_usuario,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'pais_str', TRUE) as pais,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'tipo_documento_str', TRUE) as tipo_documento,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'numero_documento_str', TRUE) as numero_documento,\n    JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(customers.custom)), 'vista_propietario_url', TRUE) as vista_propietario\nFROM \"houmdw_prod\".\"kustomer\".\"customers\" customers", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers\""}, "model.houm.stg_kustomer_customers_locations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.customers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "customers", "stg_kustomer_customers_locations"], "unique_id": "model.houm.stg_kustomer_customers_locations", "raw_code": "WITH location_arr AS (\n        SELECT JSON_PARSE(TRANSLATE(locations,'''','\"')) as location,\n            id\n        FROM {{ source('kustomer', 'customers') }} c\n        ),\nlocations AS (\n\t\tSELECT JSON_SERIALIZE(loc) AS location,\n\t\t        la.id AS customer_id\n\t\tFROM\n\t\tlocation_arr la,\n\t\tla.location AS loc\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'address', TRUE) AS address,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'address2', TRUE) AS address2,\n        JSON_EXTRACT_PATH_TEXT(location, 'address3', TRUE) AS address3,\n        JSON_EXTRACT_PATH_TEXT(location, 'area_code', TRUE) AS area_code,\n        JSON_EXTRACT_PATH_TEXT(location, 'city_name', TRUE) AS city_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'country_name', TRUE) AS country_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'latitude', TRUE) AS latitude,\n        JSON_EXTRACT_PATH_TEXT(location, 'longitude', TRUE) AS longitude,\n        JSON_EXTRACT_PATH_TEXT(location, 'name', TRUE) AS name,\n        JSON_EXTRACT_PATH_TEXT(location, 'region_code', TRUE) AS region_code,\n        JSON_EXTRACT_PATH_TEXT(location, 'region_name', TRUE) AS region_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'zip_code', TRUE) AS zip_code\nFROM locations", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/customers/stg_kustomer_customers_locations.sql", "original_file_path": "models/staging/kustomer/customers/stg_kustomer_customers_locations.sql", "name": "stg_kustomer_customers_locations", "alias": "stg_kustomer_customers_locations", "checksum": {"name": "sha256", "checksum": "879700b4360d0b02ebbb8ee632703d1177da0de28914a1782d5a0903fc5607a3"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/customers/stg_kustomer_customers_locations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.200545, "compiled_code": "WITH location_arr AS (\n        SELECT JSON_PARSE(TRANSLATE(locations,'''','\"')) as location,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"customers\" c\n        ),\nlocations AS (\n\t\tSELECT JSON_SERIALIZE(loc) AS location,\n\t\t        la.id AS customer_id\n\t\tFROM\n\t\tlocation_arr la,\n\t\tla.location AS loc\n)\nSELECT  \n\t\tcustomer_id,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'type', TRUE) AS type,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'address', TRUE) AS address,\n\t\tJSON_EXTRACT_PATH_TEXT(location, 'address2', TRUE) AS address2,\n        JSON_EXTRACT_PATH_TEXT(location, 'address3', TRUE) AS address3,\n        JSON_EXTRACT_PATH_TEXT(location, 'area_code', TRUE) AS area_code,\n        JSON_EXTRACT_PATH_TEXT(location, 'city_name', TRUE) AS city_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'country_name', TRUE) AS country_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'latitude', TRUE) AS latitude,\n        JSON_EXTRACT_PATH_TEXT(location, 'longitude', TRUE) AS longitude,\n        JSON_EXTRACT_PATH_TEXT(location, 'name', TRUE) AS name,\n        JSON_EXTRACT_PATH_TEXT(location, 'region_code', TRUE) AS region_code,\n        JSON_EXTRACT_PATH_TEXT(location, 'region_name', TRUE) AS region_name,\n        JSON_EXTRACT_PATH_TEXT(location, 'zip_code', TRUE) AS zip_code\nFROM locations", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_locations\""}, "model.houm.stg_kustomer_teams_members": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.teams"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "teams", "stg_kustomer_teams_members"], "unique_id": "model.houm.stg_kustomer_teams_members", "raw_code": "WITH processed_teams_users AS (\n        SELECT JSON_PARSE(TRANSLATE(members,'''','\"')) as member,\n            id\n        FROM {{ source('kustomer', 'teams') }} teams_users\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS team_id\nFROM\nprocessed_teams_users pau,\npau.member AS au", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/teams/stg_kustomer_teams_members.sql", "original_file_path": "models/staging/kustomer/teams/stg_kustomer_teams_members.sql", "name": "stg_kustomer_teams_members", "alias": "stg_kustomer_teams_members", "checksum": {"name": "sha256", "checksum": "022ec7172536edf3c4f9d75e09c8b9d8498f0acd96037d7e270a30a892e39880"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "teams"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/teams/stg_kustomer_teams_members.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.202135, "compiled_code": "WITH processed_teams_users AS (\n        SELECT JSON_PARSE(TRANSLATE(members,'''','\"')) as member,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"teams\" teams_users\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS team_id\nFROM\nprocessed_teams_users pau,\npau.member AS au", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_teams_members\""}, "model.houm.stg_kustomer_teams_routing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.teams_routing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "teams", "stg_kustomer_teams_routing"], "unique_id": "model.houm.stg_kustomer_teams_routing", "raw_code": "SELECT \n    id\n    ,type\n    ,CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link\n    ,updatedat AS updated_at\n    ,createdat AS created_at\n    ,enabled\n    ,workitemcapacity AS work_item_capacity\n    ,externalqueues AS external_queues\n    ,\"team.data.type\" as team_data\n    ,\"team.data.id\" as team_data_id\n    ,\"team.links.self\" as team_link\nFROM {{ source('kustomer', 'teams_routing') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/teams/stg_kustomer_teams_routing.sql", "original_file_path": "models/staging/kustomer/teams/stg_kustomer_teams_routing.sql", "name": "stg_kustomer_teams_routing", "alias": "stg_kustomer_teams_routing", "checksum": {"name": "sha256", "checksum": "64899bff0eb064e555ab6904ef68f69ddd08ecffe4f0541e062b90c2d426fc23"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "teams_routing"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/teams/stg_kustomer_teams_routing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.203712, "compiled_code": "SELECT \n    id\n    ,type\n    ,CASE WHEN CAN_JSON_PARSE(links) THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(links)), 'self', TRUE) ELSE NULL END AS self_link\n    ,updatedat AS updated_at\n    ,createdat AS created_at\n    ,enabled\n    ,workitemcapacity AS work_item_capacity\n    ,externalqueues AS external_queues\n    ,\"team.data.type\" as team_data\n    ,\"team.data.id\" as team_data_id\n    ,\"team.links.self\" as team_link\nFROM \"houmdw_prod\".\"kustomer\".\"teams_routing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_teams_routing\""}, "model.houm.stg_kustomer_teams_routing_queues": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.teams_routing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "teams", "stg_kustomer_teams_routing_queues"], "unique_id": "model.houm.stg_kustomer_teams_routing_queues", "raw_code": "WITH q_arr AS (\n        SELECT CASE WHEN CAN_JSON_PARSE(TRANSLATE(\"queues.data\",'''','\"')) THEN JSON_PARSE(TRANSLATE(\"queues.data\",'''','\"')) ELSE NULL END as queue,\n            id\n        FROM {{ source('kustomer', 'teams_routing') }} c\n        ),\nqs AS (\n\t\tSELECT JSON_SERIALIZE(em) AS queue,\n\t\t        ea.id AS team_id\n\t\tFROM\n\t\tq_arr ea,\n\t\tea.queue AS em\n)\nSELECT  \n\t\tteam_id,\n\t\tJSON_EXTRACT_PATH_TEXT(queue, 'id', TRUE) AS queue_id\nFROM qs", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/teams/stg_kustomer_teams_routing_queues.sql", "original_file_path": "models/staging/kustomer/teams/stg_kustomer_teams_routing_queues.sql", "name": "stg_kustomer_teams_routing_queues", "alias": "stg_kustomer_teams_routing_queues", "checksum": {"name": "sha256", "checksum": "9963a54b10a4e08b3948a046afbcd5c023876bc93fb3c2e01c0b31b3545b3d05"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "teams_routing"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/teams/stg_kustomer_teams_routing_queues.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.205277, "compiled_code": "WITH q_arr AS (\n        SELECT CASE WHEN CAN_JSON_PARSE(TRANSLATE(\"queues.data\",'''','\"')) THEN JSON_PARSE(TRANSLATE(\"queues.data\",'''','\"')) ELSE NULL END as queue,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"teams_routing\" c\n        ),\nqs AS (\n\t\tSELECT JSON_SERIALIZE(em) AS queue,\n\t\t        ea.id AS team_id\n\t\tFROM\n\t\tq_arr ea,\n\t\tea.queue AS em\n)\nSELECT  \n\t\tteam_id,\n\t\tJSON_EXTRACT_PATH_TEXT(queue, 'id', TRUE) AS queue_id\nFROM qs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_teams_routing_queues\""}, "model.houm.stg_kustomer_teams": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.teams"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "teams", "stg_kustomer_teams"], "unique_id": "model.houm.stg_kustomer_teams", "raw_code": "SELECT \n    id,\n    created_at,\n    deleted_at,\n    display_name,\n    name,\n    role_groups,\n    type,\n    updated_at\nFROM {{ source('kustomer', 'teams') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/teams/stg_kustomer_teams.sql", "original_file_path": "models/staging/kustomer/teams/stg_kustomer_teams.sql", "name": "stg_kustomer_teams", "alias": "stg_kustomer_teams", "checksum": {"name": "sha256", "checksum": "48dcee93b31e4539641acee8bb7761d25b49397cbf370f3edbb3438d40a81720"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "teams"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/teams/stg_kustomer_teams.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.206992, "compiled_code": "SELECT \n    id,\n    created_at,\n    deleted_at,\n    display_name,\n    name,\n    role_groups,\n    type,\n    updated_at\nFROM \"houmdw_prod\".\"kustomer\".\"teams\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_teams\""}, "model.houm.stg_kustomer_conversations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.conversations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "conversation", "stg_kustomer_conversations"], "unique_id": "model.houm.stg_kustomer_conversations", "raw_code": "SELECT\n  conversations.id,\n  conversations.created_at,\n  CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(customer)\n    ),\n    'type'\n  ) ELSE NULL END AS customer_type,\n  CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(customer)\n    ),\n    'id'\n  ) ELSE NULL END AS customer_id,\n  CASE WHEN CAN_JSON_PARSE(conversations.channels) THEN JSON_SERIALIZE(\n    JSON_PARSE(conversations.channels)\n  ) ELSE NULL END AS channels,\n  CASE WHEN CAN_JSON_PARSE(created_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(created_by)\n    ),\n    'type'\n  ) ELSE NULL END AS created_by_type,\n  CASE WHEN CAN_JSON_PARSE(created_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(created_by)\n    ),\n    'id'\n  ) ELSE NULL END AS created_by_id,\n  conversations.ended,\n  CASE WHEN CAN_JSON_PARSE(ended_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(ended_by)\n    ),\n    'type'\n  ) ELSE NULL END AS ended_by_type,\n  CASE WHEN CAN_JSON_PARSE(ended_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(ended_by)\n    ),\n    'id'\n  ) ELSE NULL END AS ended_by_id,\n  conversations.ended_at,\n  conversations.ended_reason,\n  conversations.name,\n  conversations.preview,\n  conversations.direction,\n  conversations.done_count,\n  conversations.message_count,\n  conversations.outbound_message_count,\n  conversations.priority,\n  CASE WHEN CAN_JSON_PARSE(conversations.queue) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(conversations.queue)\n    ),\n    'id'\n  ) ELSE NULL END AS queue_id,\n  conversations.status,\n  conversations.type,\n  conversations.last_activity_at,\n  CASE WHEN CAN_JSON_PARSE(last_done) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(last_done)\n    ),\n    'created_at',\n    TRUE\n  ) ELSE NULL END AS last_done_at,\n  CASE WHEN CAN_JSON_PARSE(first_response) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(first_response)\n    ),\n    'created_at',\n    TRUE\n  ) ELSE NULL END AS first_response_at,\n  conversations.updated_at,\n  conversations.tags,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'asistente_conversacional_str',\n    TRUE\n  ) ELSE NULL END AS asistente_conversacional_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'clasification_del_asistente_str',\n    TRUE\n  ) ELSE NULL END AS clasification_del_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'sub_clasificacion_del_asistente_str',\n    TRUE\n  ) ELSE NULL END AS sub_clasificacion_del_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'conversational_assistant_results_str',\n    TRUE\n  ) ELSE NULL END AS conversational_assistant_results_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'respuesta_asistente_str',\n    TRUE\n  ) ELSE NULL END AS respuesta_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'conversational_assistant_date_at',\n    TRUE\n  ) ELSE NULL END AS conversational_assistant_date_at,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'tipo_atencion_solo_property_str',\n    TRUE\n  ) ELSE NULL END AS tipo_atencion_solo_property_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'cobranza_tipificacion_de_caso_str',\n    TRUE\n  ) ELSE NULL END AS cobranza_tipificacion_de_caso_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'tipo_solicitud_solo_sac_str',\n    TRUE\n  ) ELSE NULL END AS tipo_solicitud_solo_sac_str\nFROM\n  {{ source('kustomer', 'conversations') }} conversations", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/conversation/stg_kustomer_conversations.sql", "original_file_path": "models/staging/kustomer/conversation/stg_kustomer_conversations.sql", "name": "stg_kustomer_conversations", "alias": "stg_kustomer_conversations", "checksum": {"name": "sha256", "checksum": "77b3a32e4572bb7afeb11d72df2849d3fdd65f896937fda59c6f0cfee62888bd"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "conversations"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/conversation/stg_kustomer_conversations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.208556, "compiled_code": "SELECT\n  conversations.id,\n  conversations.created_at,\n  CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(customer)\n    ),\n    'type'\n  ) ELSE NULL END AS customer_type,\n  CASE WHEN CAN_JSON_PARSE(customer) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(customer)\n    ),\n    'id'\n  ) ELSE NULL END AS customer_id,\n  CASE WHEN CAN_JSON_PARSE(conversations.channels) THEN JSON_SERIALIZE(\n    JSON_PARSE(conversations.channels)\n  ) ELSE NULL END AS channels,\n  CASE WHEN CAN_JSON_PARSE(created_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(created_by)\n    ),\n    'type'\n  ) ELSE NULL END AS created_by_type,\n  CASE WHEN CAN_JSON_PARSE(created_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(created_by)\n    ),\n    'id'\n  ) ELSE NULL END AS created_by_id,\n  conversations.ended,\n  CASE WHEN CAN_JSON_PARSE(ended_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(ended_by)\n    ),\n    'type'\n  ) ELSE NULL END AS ended_by_type,\n  CASE WHEN CAN_JSON_PARSE(ended_by) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(ended_by)\n    ),\n    'id'\n  ) ELSE NULL END AS ended_by_id,\n  conversations.ended_at,\n  conversations.ended_reason,\n  conversations.name,\n  conversations.preview,\n  conversations.direction,\n  conversations.done_count,\n  conversations.message_count,\n  conversations.outbound_message_count,\n  conversations.priority,\n  CASE WHEN CAN_JSON_PARSE(conversations.queue) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(conversations.queue)\n    ),\n    'id'\n  ) ELSE NULL END AS queue_id,\n  conversations.status,\n  conversations.type,\n  conversations.last_activity_at,\n  CASE WHEN CAN_JSON_PARSE(last_done) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(last_done)\n    ),\n    'created_at',\n    TRUE\n  ) ELSE NULL END AS last_done_at,\n  CASE WHEN CAN_JSON_PARSE(first_response) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(first_response)\n    ),\n    'created_at',\n    TRUE\n  ) ELSE NULL END AS first_response_at,\n  conversations.updated_at,\n  conversations.tags,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'asistente_conversacional_str',\n    TRUE\n  ) ELSE NULL END AS asistente_conversacional_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'clasification_del_asistente_str',\n    TRUE\n  ) ELSE NULL END AS clasification_del_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'sub_clasificacion_del_asistente_str',\n    TRUE\n  ) ELSE NULL END AS sub_clasificacion_del_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'conversational_assistant_results_str',\n    TRUE\n  ) ELSE NULL END AS conversational_assistant_results_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'respuesta_asistente_str',\n    TRUE\n  ) ELSE NULL END AS respuesta_asistente_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'conversational_assistant_date_at',\n    TRUE\n  ) ELSE NULL END AS conversational_assistant_date_at,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'tipo_atencion_solo_property_str',\n    TRUE\n  ) ELSE NULL END AS tipo_atencion_solo_property_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'cobranza_tipificacion_de_caso_str',\n    TRUE\n  ) ELSE NULL END AS cobranza_tipificacion_de_caso_str,\n  CASE WHEN CAN_JSON_PARSE(custom) THEN JSON_EXTRACT_PATH_TEXT(\n    JSON_SERIALIZE(\n      JSON_PARSE(custom)\n    ),\n    'tipo_solicitud_solo_sac_str',\n    TRUE\n  ) ELSE NULL END AS tipo_solicitud_solo_sac_str\nFROM\n  \"houmdw_prod\".\"kustomer\".\"conversations\" conversations", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_conversations\""}, "model.houm.stg_kustomer_conversations_assigned_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.conversations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "conversation", "stg_kustomer_conversations_assigned_users"], "unique_id": "model.houm.stg_kustomer_conversations_assigned_users", "raw_code": "WITH processed_assigned_users AS (\n        SELECT JSON_PARSE(assigned_users) as assigned_user,\n            id\n        FROM {{ source('kustomer', 'conversations') }}\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS conversation_id\nFROM\nprocessed_assigned_users pau,\npau.assigned_user AS au", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/conversation/stg_kustomer_conversations_assigned_users.sql", "original_file_path": "models/staging/kustomer/conversation/stg_kustomer_conversations_assigned_users.sql", "name": "stg_kustomer_conversations_assigned_users", "alias": "stg_kustomer_conversations_assigned_users", "checksum": {"name": "sha256", "checksum": "aad969568afdb5ae3806c4e194c7b9fe9fb7ee1604b70876263c0a3d06a0fe20"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "conversations"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/conversation/stg_kustomer_conversations_assigned_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.210173, "compiled_code": "WITH processed_assigned_users AS (\n        SELECT JSON_PARSE(assigned_users) as assigned_user,\n            id\n        FROM \"houmdw_prod\".\"kustomer\".\"conversations\"\n        )\nSELECT au::varchar(1000) AS user_id,\n        pau.id AS conversation_id\nFROM\nprocessed_assigned_users pau,\npau.assigned_user AS au", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_conversations_assigned_users\""}, "model.houm.stg_kustomer_conversations_tags": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.kustomer.conversations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["kustomer", "staging", "meltano", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "kustomer", "conversation", "stg_kustomer_conversations_tags"], "unique_id": "model.houm.stg_kustomer_conversations_tags", "raw_code": "WITH processed_tags AS (\n        SELECT JSON_PARSE(c.tags) AS single_tag,\n            c.id\n        FROM {{ source('kustomer', 'conversations') }} c\n        )\nSELECT au::varchar(1000) AS tag_id,\n        pau.id AS conversation_id\nFROM\nprocessed_tags pau,\npau.single_tag AS au", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/kustomer/conversation/stg_kustomer_conversations_tags.sql", "original_file_path": "models/staging/kustomer/conversation/stg_kustomer_conversations_tags.sql", "name": "stg_kustomer_conversations_tags", "alias": "stg_kustomer_conversations_tags", "checksum": {"name": "sha256", "checksum": "fd3eea09113df7ddb6393f5820950fdd6835fa82888ebfe068068e31934d3354"}, "tags": ["kustomer", "staging", "meltano", "dw"], "refs": [], "sources": [["kustomer", "conversations"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/kustomer/conversation/stg_kustomer_conversations_tags.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["kustomer", "staging", "meltano", "dw"]}, "created_at": 1675970038.211738, "compiled_code": "WITH processed_tags AS (\n        SELECT JSON_PARSE(c.tags) AS single_tag,\n            c.id\n        FROM \"houmdw_prod\".\"kustomer\".\"conversations\" c\n        )\nSELECT au::varchar(1000) AS tag_id,\n        pau.id AS conversation_id\nFROM\nprocessed_tags pau,\npau.single_tag AS au", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_conversations_tags\""}, "model.houm.stg_zendesk_metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_metrics"], "unique_id": "model.houm.stg_zendesk_metrics", "raw_code": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    {{ source('airbyte_zendesk','ticket_metrics') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_metrics.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_metrics.sql", "name": "stg_zendesk_metrics", "alias": "stg_zendesk_metrics", "checksum": {"name": "sha256", "checksum": "9e756438ef0de00239e906f66afb1cfae117bc45d1a535a39f233783118f3393"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_metrics"]], "metrics": [], "description": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.750494, "compiled_code": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_metrics\""}, "model.houm.stg_zendesk_tickets_audits_events": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits_events", "source.houm.airbyte_zendesk.ticket_audits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_events"], "unique_id": "model.houm.stg_zendesk_tickets_audits_events", "raw_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_events') }} tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_events.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "name": "stg_zendesk_tickets_audits_events", "alias": "stg_zendesk_tickets_audits_events", "checksum": {"name": "sha256", "checksum": "2b05986aea49d16042749d5bcee905ece998d5608050fb94ffe14cd54dc1882e"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits_events"], ["airbyte_zendesk", "ticket_audits"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.214998, "compiled_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\" tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_events\""}, "model.houm.stg_zendesk_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_users"], "unique_id": "model.houm.stg_zendesk_users", "raw_code": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom {{ source('airbyte_zendesk','users') }} a\norder by updated_at  desc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_users.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_users.sql", "name": "stg_zendesk_users", "alias": "stg_zendesk_users", "checksum": {"name": "sha256", "checksum": "d3943e109d855792cb41b06904d02f5906cdbb741a6978f863308a0af8d2f940"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "users"]], "metrics": [], "description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "This is contact email of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "This is the name of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "phone": {"name": "phone", "description": "This is contact phone of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "This the timezone setted in zendesk for the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "default_group_id": {"name": "default_group_id", "description": "this a identifier of the group the user is a member of", "meta": {}, "data_type": null, "quote": null, "tags": []}, "role": {"name": "role", "description": "This a identifier role of the user in me.houm, matches the user in the users houm tables", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Flag to know if it is active or not", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "Array of the selected tags in the form ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_de_propiedad": {"name": "user_fields_id_de_propiedad", "description": "This is a custom field identify property_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_tipo_de_usuario": {"name": "user_fields_tipo_de_usuario", "description": "This is a custom field identify role of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_whatsapp": {"name": "user_fields_whatsapp", "description": "This is a custom field identify contact phone", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_suscripcin": {"name": "user_fields_id_suscripcin", "description": "This is a custom field identify suscription_id of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_nombre": {"name": "user_fields_nombre", "description": "This is a custom field identify name + property id", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.7474718, "compiled_code": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"users\" a\norder by updated_at  desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\""}, "model.houm.stg_zendesk_tickets_audits_via": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits_via_source_to", "source.houm.airbyte_zendesk.ticket_audits_via", "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via_source"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_via"], "unique_id": "model.houm.stg_zendesk_tickets_audits_via", "raw_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via') }} tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source') }} tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_to') }} tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_from') }} tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_via.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "name": "stg_zendesk_tickets_audits_via", "alias": "stg_zendesk_tickets_audits_via", "checksum": {"name": "sha256", "checksum": "e95922e4131b90ce9dcab6132a061001be9d70e8566d66bb9de2d3b360f43725"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits_via_source_to"], ["airbyte_zendesk", "ticket_audits_via"], ["airbyte_zendesk", "ticket_audits_via_source_from"], ["airbyte_zendesk", "ticket_audits"], ["airbyte_zendesk", "ticket_audits_via_source"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.2182999, "compiled_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\" tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\" tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\" tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\" tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_via\""}, "model.houm.stg_zendesk_tickets_comments": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_comments"], "unique_id": "model.houm.stg_zendesk_tickets_comments", "raw_code": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom {{ source('airbyte_zendesk','ticket_comments') }} a", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_comments.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_comments.sql", "name": "stg_zendesk_tickets_comments", "alias": "stg_zendesk_tickets_comments", "checksum": {"name": "sha256", "checksum": "07707f363459ef13fca4167dfc441f1623a18ecc5d4212e7672c945666a74a2a"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_comments"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.220358, "compiled_code": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\""}, "model.houm.stg_zendesk_tickets_audits": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits"], "unique_id": "model.houm.stg_zendesk_tickets_audits", "raw_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits.sql", "name": "stg_zendesk_tickets_audits", "alias": "stg_zendesk_tickets_audits", "checksum": {"name": "sha256", "checksum": "a7ce1ebcf629ee50696edab50e4a4dd1a7c4da7cd13c5df764c71bbc152b7d73"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits"]], "metrics": [], "description": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.750228, "compiled_code": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits\""}, "model.houm.stg_zendesk_tickets": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets"], "unique_id": "model.houm.stg_zendesk_tickets", "raw_code": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    {{ source('airbyte_zendesk','tickets') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets.sql", "name": "stg_zendesk_tickets", "alias": "stg_zendesk_tickets", "checksum": {"name": "sha256", "checksum": "ce1bc662afb9c5ff7dc956b16f825b0d58c0b3ad848b2427ea5a1c6534119598"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "tickets"]], "metrics": [], "description": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket.", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the tickets", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "This is a represent of the state of the tickets, can be [solved,open,closed,deleted,pending,new]. All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "prority": {"name": "prority", "description": "This is the priority ticket, can be urgent,normal,high,low. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "This is type of the ticket is, can be null, problem, task, incident, question. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "This is an array of the tags of the tickets. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "This is description of the initial comment of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "This is the customer id, The user who requested this ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "submitter_id": {"name": "submitter_id", "description": "This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1675970038.749957, "compiled_code": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\""}, "model.houm.stg_property__rent_recommended_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__rent_recommended_properties"], "unique_id": "model.houm.stg_property__rent_recommended_properties", "raw_code": "with table_base as (\nselect a.*\nfrom raw_stage_analytics.property__rent_recommended_properties a\nwhere geo_distance_km > 0.05\n)\n, table_similarity_by_price as (\nselect a.*\n        ,round(((b.normalized_rentals_price - c.normalized_rentals_price) / nullif(b.normalized_rentals_price,0)),2) as similarity_by_price\nfrom raw_stage_analytics.property__rent_recommended_properties a\nleft join dbt_analytics.property__published_properties b on a.property_1 = b.property_id \nleft join dbt_analytics.property__published_properties c on a.property_2 = c.property_id \n)\nselect * \nfrom table_similarity_by_price\nwhere abs(similarity_by_price) < 0.2", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__rent_recommended_properties.sql", "original_file_path": "models/staging/ml/stg_property__rent_recommended_properties.sql", "name": "stg_property__rent_recommended_properties", "alias": "stg_property__rent_recommended_properties", "checksum": {"name": "sha256", "checksum": "5d6772eeb8b9290dd67c556bea7503e0fa5ea0d886b55a9fba4362678d466a6b"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__rent_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1675970038.22504, "compiled_code": "with table_base as (\nselect a.*\nfrom raw_stage_analytics.property__rent_recommended_properties a\nwhere geo_distance_km > 0.05\n)\n, table_similarity_by_price as (\nselect a.*\n        ,round(((b.normalized_rentals_price - c.normalized_rentals_price) / nullif(b.normalized_rentals_price,0)),2) as similarity_by_price\nfrom raw_stage_analytics.property__rent_recommended_properties a\nleft join dbt_analytics.property__published_properties b on a.property_1 = b.property_id \nleft join dbt_analytics.property__published_properties c on a.property_2 = c.property_id \n)\nselect * \nfrom table_similarity_by_price\nwhere abs(similarity_by_price) < 0.2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__rent_recommended_properties\""}, "model.houm.stg_property__sale_recommended_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__sale_recommended_properties"], "unique_id": "model.houm.stg_property__sale_recommended_properties", "raw_code": "with table_base as (\nselect a.*\nfrom raw_stage_analytics.property__sale_recommended_properties a\nwhere geo_distance_km > 0.05\n)\n, table_similarity_by_price as (\nselect a.*\n\t\t,round(((b.normalized_sales_price - c.normalized_sales_price) / nullif(b.normalized_sales_price,0)),2) as similarity_by_price\nfrom raw_stage_analytics.property__sale_recommended_properties a\nleft join dbt_analytics.property__published_properties b on a.property_1 = b.property_id \nleft join dbt_analytics.property__published_properties c on a.property_2 = c.property_id \n)\nselect * \nfrom table_similarity_by_price\nwhere abs(similarity_by_price) < 0.2", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__sale_recommended_properties.sql", "original_file_path": "models/staging/ml/stg_property__sale_recommended_properties.sql", "name": "stg_property__sale_recommended_properties", "alias": "stg_property__sale_recommended_properties", "checksum": {"name": "sha256", "checksum": "6c002550213705de74eba3f164015b586ddca4e00edc32a4513936d6dadfaec5"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__sale_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1675970038.2267368, "compiled_code": "with table_base as (\nselect a.*\nfrom raw_stage_analytics.property__sale_recommended_properties a\nwhere geo_distance_km > 0.05\n)\n, table_similarity_by_price as (\nselect a.*\n\t\t,round(((b.normalized_sales_price - c.normalized_sales_price) / nullif(b.normalized_sales_price,0)),2) as similarity_by_price\nfrom raw_stage_analytics.property__sale_recommended_properties a\nleft join dbt_analytics.property__published_properties b on a.property_1 = b.property_id \nleft join dbt_analytics.property__published_properties c on a.property_2 = c.property_id \n)\nselect * \nfrom table_similarity_by_price\nwhere abs(similarity_by_price) < 0.2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__sale_recommended_properties\""}, "model.houm.stg_property__recommended_new_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage_analytics.property__recommended_new_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__recommended_new_properties"], "unique_id": "model.houm.stg_property__recommended_new_properties", "raw_code": "select * \nfrom {{ source('raw_stage_analytics', 'property__recommended_new_properties') }}\nwhere geo_distance_km > 0.05", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__recommended_new_properties.sql", "original_file_path": "models/staging/ml/stg_property__recommended_new_properties.sql", "name": "stg_property__recommended_new_properties", "alias": "stg_property__recommended_new_properties", "checksum": {"name": "sha256", "checksum": "ac30ca1cd7f0bd26eaef10071b5d3a77a3e069673fa6ffd9682e71c1baa3f626"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [["raw_stage_analytics", "property__recommended_new_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__recommended_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1675970038.228284, "compiled_code": "select * \nfrom \"houmdw_prod\".\"raw_stage_analytics\".\"property__recommended_new_properties\"\nwhere geo_distance_km > 0.05", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__recommended_new_properties\""}, "model.houm.stg_evaluations_scd": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_evaluation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "evaluator"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ms_evaluator", "stg_evaluations_scd"], "unique_id": "model.houm.stg_evaluations_scd", "raw_code": "select * \nfrom {{ source('historical', 'historical_evaluation') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/ms_evaluator/stg_evaluations_scd.sql", "original_file_path": "models/staging/ms_evaluator/stg_evaluations_scd.sql", "name": "stg_evaluations_scd", "alias": "stg_evaluations_scd", "checksum": {"name": "sha256", "checksum": "f1d7fd20bc0021319650bd2007391979fd376d0f0e6798b3d696745063d44a76"}, "tags": ["dw", "staging", "evaluator"], "refs": [], "sources": [["historical", "historical_evaluation"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ms_evaluator/stg_evaluations_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "evaluator"]}, "created_at": 1675970038.229857, "compiled_code": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_evaluation\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_evaluations_scd\""}, "model.houm.stg_monthly_inflation_mx": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_mx"], "unique_id": "model.houm.stg_monthly_inflation_mx", "raw_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_mx') }}\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_mx.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "name": "stg_monthly_inflation_mx", "alias": "stg_monthly_inflation_mx", "checksum": {"name": "sha256", "checksum": "7b92c9bc31b62869da1574d8bcd7b9bfb158bb8dcc3161178a00f4d17c4c26ea"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_mx"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1675970038.231416, "compiled_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\""}, "model.houm.stg_monthly_inflation_co": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_co"], "unique_id": "model.houm.stg_monthly_inflation_co", "raw_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM {{ source('raw_stage', 'series_ipc_co') }}\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_co.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_co.sql", "name": "stg_monthly_inflation_co", "alias": "stg_monthly_inflation_co", "checksum": {"name": "sha256", "checksum": "10b7644b4f61f58c0a284f0a84d29acf2712a1c1dfdba24f1720d0e7ee0e0327"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_co"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1675970038.2331362, "compiled_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\""}, "model.houm.stg_monthly_inflation_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_cl"], "unique_id": "model.houm.stg_monthly_inflation_cl", "raw_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_cl') }}\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_cl.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "name": "stg_monthly_inflation_cl", "alias": "stg_monthly_inflation_cl", "checksum": {"name": "sha256", "checksum": "7f9d3de1d3a430d6f314e1993ed2bf84b9e1f47d86a8a77b38b60cd78eb7af3c"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1675970038.234711, "compiled_code": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\""}, "model.houm.stg_economic_indicator_uf": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.economic_indicator_uf"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_economic_indicator_uf"], "unique_id": "model.houm.stg_economic_indicator_uf", "raw_code": "SELECT * \nFROM {{ source('public', 'economic_indicator_uf') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_economic_indicator_uf.sql", "original_file_path": "models/staging/economic_indicators/stg_economic_indicator_uf.sql", "name": "stg_economic_indicator_uf", "alias": "stg_economic_indicator_uf", "checksum": {"name": "sha256", "checksum": "a41061d518691692003a69f2a5f87039cfdf333ebc6e03ad64b227528dcc1454"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["public", "economic_indicator_uf"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_economic_indicator_uf.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1675970038.236276, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"public\".\"economic_indicator_uf\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_economic_indicator_uf\""}, "model.houm.stg_kustomer_logs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.kustomer_logs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_kustomer_logs"], "unique_id": "model.houm.stg_kustomer_logs", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'kustomer_logs') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_kustomer_logs.sql", "original_file_path": "models/staging/data_communications/stg_kustomer_logs.sql", "name": "stg_kustomer_logs", "alias": "stg_kustomer_logs", "checksum": {"name": "sha256", "checksum": "1b60e78d03503681f1ac58bfcf7eafc1e9d9211bcd2a751d78471ac16fd52a49"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "kustomer_logs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_kustomer_logs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.237833, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"kustomer_logs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_logs\""}, "model.houm.stg_sendinblue_flow": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.sendinblue_flow"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_sendinblue_flow"], "unique_id": "model.houm.stg_sendinblue_flow", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'sendinblue_flow') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_sendinblue_flow.sql", "original_file_path": "models/staging/data_communications/stg_sendinblue_flow.sql", "name": "stg_sendinblue_flow", "alias": "stg_sendinblue_flow", "checksum": {"name": "sha256", "checksum": "6fc1462da0e419715f12d2f02a6dced589dfb42a3219bcb98a90ae8b132079aa"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "sendinblue_flow"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_sendinblue_flow.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.2395499, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"sendinblue_flow\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sendinblue_flow\""}, "model.houm.stg_messagebird_flow": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.messagebird_flow"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_messagebird_flow"], "unique_id": "model.houm.stg_messagebird_flow", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'messagebird_flow') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_messagebird_flow.sql", "original_file_path": "models/staging/data_communications/stg_messagebird_flow.sql", "name": "stg_messagebird_flow", "alias": "stg_messagebird_flow", "checksum": {"name": "sha256", "checksum": "afc1c9bd6fc2f3631a8b9f3b911934e74792986efe98a63386e7daf0f64b2317"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "messagebird_flow"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_messagebird_flow.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.241121, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_flow\""}, "model.houm.stg_messagebird_flow_response_schema": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.messagebird_flow_response_schema"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_messagebird_flow_response_schema"], "unique_id": "model.houm.stg_messagebird_flow_response_schema", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'messagebird_flow_response_schema') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_messagebird_flow_response_schema.sql", "original_file_path": "models/staging/data_communications/stg_messagebird_flow_response_schema.sql", "name": "stg_messagebird_flow_response_schema", "alias": "stg_messagebird_flow_response_schema", "checksum": {"name": "sha256", "checksum": "7a0da790b6bec7777618269cedbc80190c467a3820cb2e89aedc81d94c558a48"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "messagebird_flow_response_schema"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_messagebird_flow_response_schema.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.2426949, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow_response_schema\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_flow_response_schema\""}, "model.houm.stg_sendinblue_logs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.sendinblue_logs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_sendinblue_logs"], "unique_id": "model.houm.stg_sendinblue_logs", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'sendinblue_logs') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_sendinblue_logs.sql", "original_file_path": "models/staging/data_communications/stg_sendinblue_logs.sql", "name": "stg_sendinblue_logs", "alias": "stg_sendinblue_logs", "checksum": {"name": "sha256", "checksum": "b817b2e4c975169d71a4a969bddc5954a94667c4632e46d170ee2cd26fbe73fe"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "sendinblue_logs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_sendinblue_logs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.244261, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"sendinblue_logs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sendinblue_logs\""}, "model.houm.stg_messagebird_logs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.messagebird_logs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_messagebird_logs"], "unique_id": "model.houm.stg_messagebird_logs", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'messagebird_logs') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_messagebird_logs.sql", "original_file_path": "models/staging/data_communications/stg_messagebird_logs.sql", "name": "stg_messagebird_logs", "alias": "stg_messagebird_logs", "checksum": {"name": "sha256", "checksum": "d4b8c77fe4b5012b1afd07894aeadaa6186d31258a044ad312aeffa30f2bb456"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "messagebird_logs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_messagebird_logs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.245978, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"messagebird_logs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_logs\""}, "model.houm.stg_messagebird_flow_response_values": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.messagebird_flow_response_values"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_messagebird_flow_response_values"], "unique_id": "model.houm.stg_messagebird_flow_response_values", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'messagebird_flow_response_values') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_messagebird_flow_response_values.sql", "original_file_path": "models/staging/data_communications/stg_messagebird_flow_response_values.sql", "name": "stg_messagebird_flow_response_values", "alias": "stg_messagebird_flow_response_values", "checksum": {"name": "sha256", "checksum": "20a3fd55cbcf38ea2a24478572e0d03aea26307215a474635b1ac361d7a6948b"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "messagebird_flow_response_values"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_messagebird_flow_response_values.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.24755, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow_response_values\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_flow_response_values\""}, "model.houm.stg_messagebird_dlq_flow_response_values": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.comm_raw_stage.messagebird_dlq_flow_response_values"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "data_communications", "stg_messagebird_dlq_flow_response_values"], "unique_id": "model.houm.stg_messagebird_dlq_flow_response_values", "raw_code": "SELECT * \nFROM {{ source('comm_raw_stage', 'messagebird_dlq_flow_response_values') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/data_communications/stg_messagebird_dlq_flow_response_values.sql", "original_file_path": "models/staging/data_communications/stg_messagebird_dlq_flow_response_values.sql", "name": "stg_messagebird_dlq_flow_response_values", "alias": "stg_messagebird_dlq_flow_response_values", "checksum": {"name": "sha256", "checksum": "79b7d5732450890daa7bceed1920a304409ca621f8899bc348452983cb574eaa"}, "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"], "refs": [], "sources": [["comm_raw_stage", "messagebird_dlq_flow_response_values"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/data_communications/stg_messagebird_dlq_flow_response_values.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["messagebird", "sendinblue", "kustomer", "communications", "dw"]}, "created_at": 1675970038.24914, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"comm_raw_stage\".\"messagebird_dlq_flow_response_values\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_dlq_flow_response_values\""}, "model.houm.stg_payments_cl_db_movements": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_cl_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "payments", "stg_payments_cl_db_movements"], "unique_id": "model.houm.stg_payments_cl_db_movements", "raw_code": "SELECT * \nFROM {{ source('mongo_tables', 'payments_cl_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/payments/stg_payments_cl_db_movements.sql", "original_file_path": "models/staging/mongo_tables/payments/stg_payments_cl_db_movements.sql", "name": "stg_payments_cl_db_movements", "alias": "stg_payments_cl_db_movements", "checksum": {"name": "sha256", "checksum": "dcd30933f2d027d30b1c175e63b30dd5213e4e38346d67f481c6ba9f8d644ea6"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "payments_cl_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/payments/stg_payments_cl_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.250714, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\""}, "model.houm.stg_payments_mx_db_movements": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_mx_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "payments", "stg_payments_mx_db_movements"], "unique_id": "model.houm.stg_payments_mx_db_movements", "raw_code": "SELECT * \nFROM {{ source('mongo_tables', 'payments_mx_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/payments/stg_payments_mx_db_movements.sql", "original_file_path": "models/staging/mongo_tables/payments/stg_payments_mx_db_movements.sql", "name": "stg_payments_mx_db_movements", "alias": "stg_payments_mx_db_movements", "checksum": {"name": "sha256", "checksum": "60b8643b622ecdee9376c48fe5d965ff14d151f25913029a0b45c2c43aa44b04"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "payments_mx_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/payments/stg_payments_mx_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.252463, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\""}, "model.houm.stg_payments_co_db_movements": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_co_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "payments", "stg_payments_co_db_movements"], "unique_id": "model.houm.stg_payments_co_db_movements", "raw_code": "SELECT * \nFROM {{ source('mongo_tables', 'payments_co_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/payments/stg_payments_co_db_movements.sql", "original_file_path": "models/staging/mongo_tables/payments/stg_payments_co_db_movements.sql", "name": "stg_payments_co_db_movements", "alias": "stg_payments_co_db_movements", "checksum": {"name": "sha256", "checksum": "db8eefd5001026e1d7f876e25bf0895c25eaaa14ebd384fa2cab00f0d0bc3902"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "payments_co_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/payments/stg_payments_co_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.254045, "compiled_code": "SELECT * \nFROM \"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\""}, "model.houm.stg_propertyduty_company": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.propertyduty_company"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "propertyduty", "stg_propertyduty_company"], "unique_id": "model.houm.stg_propertyduty_company", "raw_code": "SELECT \tCASE WHEN CAN_JSON_PARSE(_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS id\n        ,created_at\n        ,updated_at\n        ,name AS company_name\n        ,type AS company_type\n        ,country\n        ,external_id_sub_sencillito_id\n        ,external_id_sub_servipag_id\n        ,active\n        ,is_manual\nFROM {{ source('mongo_tables', 'propertyduty_company') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/propertyduty/stg_propertyduty_company.sql", "original_file_path": "models/staging/mongo_tables/propertyduty/stg_propertyduty_company.sql", "name": "stg_propertyduty_company", "alias": "stg_propertyduty_company", "checksum": {"name": "sha256", "checksum": "20b1189df2aa8fd8b5fbd14db3bf5e35d72742d490c07c7ff9c8e9e3e18f34f4"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "propertyduty_company"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/propertyduty/stg_propertyduty_company.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.25562, "compiled_code": "SELECT \tCASE WHEN CAN_JSON_PARSE(_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS id\n        ,created_at\n        ,updated_at\n        ,name AS company_name\n        ,type AS company_type\n        ,country\n        ,external_id_sub_sencillito_id\n        ,external_id_sub_servipag_id\n        ,active\n        ,is_manual\nFROM \"houmdw_prod\".\"mongo_tables\".\"propertyduty_company\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertyduty_company\""}, "model.houm.stg_propertyduty_detail": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.propertyduty_detail"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "propertyduty", "stg_propertyduty_detail"], "unique_id": "model.houm.stg_propertyduty_detail", "raw_code": "SELECT \tCASE WHEN CAN_JSON_PARSE(_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS id\n\t\t,CASE WHEN CAN_JSON_PARSE(info_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(info_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS info_id\n\t\t,created_at\n        ,updated_at\n        --,client_bill_id --viene vacio y esta redundante dado que esta en el modelo propertyduty_info\n        ,status\n        ,current_debt\n        ,expired_debt\n        ,due_date\n        ,past_due_days\n        ,failure_reasons\n        ,is_manual\n        ,is_deleted\nFROM {{ source('mongo_tables', 'propertyduty_detail') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/propertyduty/stg_propertyduty_detail.sql", "original_file_path": "models/staging/mongo_tables/propertyduty/stg_propertyduty_detail.sql", "name": "stg_propertyduty_detail", "alias": "stg_propertyduty_detail", "checksum": {"name": "sha256", "checksum": "7fbf578656ad0ae4e0d0b43e42907ce92fd2a3ab5f9da85cda5e67b7b485416c"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "propertyduty_detail"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/propertyduty/stg_propertyduty_detail.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.257208, "compiled_code": "SELECT \tCASE WHEN CAN_JSON_PARSE(_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS id\n\t\t,CASE WHEN CAN_JSON_PARSE(info_id) \n\t\t\t\tTHEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(info_id)), '$oid', TRUE) \n\t\t\t\tELSE NULL \n\t\t\t\tEND AS info_id\n\t\t,created_at\n        ,updated_at\n        --,client_bill_id --viene vacio y esta redundante dado que esta en el modelo propertyduty_info\n        ,status\n        ,current_debt\n        ,expired_debt\n        ,due_date\n        ,past_due_days\n        ,failure_reasons\n        ,is_manual\n        ,is_deleted\nFROM \"houmdw_prod\".\"mongo_tables\".\"propertyduty_detail\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertyduty_detail\""}, "model.houm.stg_propertyduty_info": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.propertyduty_info"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "propertyduty", "stg_propertyduty_info"], "unique_id": "model.houm.stg_propertyduty_info", "raw_code": "SELECT \n\n    CASE WHEN CAN_JSON_PARSE(_id) \n\t\t        THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t        ELSE NULL \n\t\t\t\tEND AS id\n    ,created_at\n    ,updated_at\n    ,company\n    ,property_id\n    ,client_bill_id\n    ,is_active\n    ,is_deleted\nFROM {{ source('mongo_tables', 'propertyduty_info') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/propertyduty/stg_propertyduty_info.sql", "original_file_path": "models/staging/mongo_tables/propertyduty/stg_propertyduty_info.sql", "name": "stg_propertyduty_info", "alias": "stg_propertyduty_info", "checksum": {"name": "sha256", "checksum": "9efd6870ccc7e676fcb1824b38ca4d16679b5c325c5c8d123104546c29b0ee97"}, "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"], "refs": [], "sources": [["mongo_tables", "propertyduty_info"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/propertyduty/stg_propertyduty_info.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments", "ssbb", "ggcc"]}, "created_at": 1675970038.258954, "compiled_code": "SELECT \n\n    CASE WHEN CAN_JSON_PARSE(_id) \n\t\t        THEN JSON_EXTRACT_PATH_TEXT(JSON_SERIALIZE(JSON_PARSE(_id)), '$oid', TRUE) \n\t\t        ELSE NULL \n\t\t\t\tEND AS id\n    ,created_at\n    ,updated_at\n    ,company\n    ,property_id\n    ,client_bill_id\n    ,is_active\n    ,is_deleted\nFROM \"houmdw_prod\".\"mongo_tables\".\"propertyduty_info\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertyduty_info\""}, "model.houm.stg_departments": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.departments_colombia", "source.houm.staging_buk.departments_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_departments"], "unique_id": "model.houm.stg_departments", "raw_code": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_departments.sql", "original_file_path": "models/staging/buk/stg_departments.sql", "name": "stg_departments", "alias": "stg_departments", "checksum": {"name": "sha256", "checksum": "ff3be5bca1f7a8324d163d870b80455917e26511e788977971a955f85e39355c"}, "tags": [], "refs": [], "sources": [["staging_buk", "departments_colombia"], ["staging_buk", "departments_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_departments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.260496, "compiled_code": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_departments\""}, "model.houm.stg_payrolls": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_payrolls"], "unique_id": "model.houm.stg_payrolls", "raw_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_payrolls.sql", "original_file_path": "models/staging/buk/stg_payrolls.sql", "name": "stg_payrolls", "alias": "stg_payrolls", "checksum": {"name": "sha256", "checksum": "4991338cfd6d03f822862de6d9299e8060d86fed7151ca5ea5ec6af6fd0685b4"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_payrolls.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.262204, "compiled_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_payrolls\""}, "model.houm.stg_companies": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.companies_colombia", "source.houm.staging_buk.companies_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_companies"], "unique_id": "model.houm.stg_companies", "raw_code": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_companies.sql", "original_file_path": "models/staging/buk/stg_companies.sql", "name": "stg_companies", "alias": "stg_companies", "checksum": {"name": "sha256", "checksum": "2429f81e0c1eb864e08f3d5a893a92da047262124d9d0d25728029f9fe894183"}, "tags": [], "refs": [], "sources": [["staging_buk", "companies_colombia"], ["staging_buk", "companies_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_companies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.2638988, "compiled_code": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_companies\""}, "model.houm.stg_accounting": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_accounting"], "unique_id": "model.houm.stg_accounting", "raw_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_accounting.sql", "original_file_path": "models/staging/buk/stg_accounting.sql", "name": "stg_accounting", "alias": "stg_accounting", "checksum": {"name": "sha256", "checksum": "ae55e14999812b2ba673d5095554f725e2976f5086e005331b41980519d4d70b"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_accounting.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.265693, "compiled_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_accounting\""}, "model.houm.stg_jobs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.jobs_colombia", "source.houm.staging_buk.jobs_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_jobs"], "unique_id": "model.houm.stg_jobs", "raw_code": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_jobs.sql", "original_file_path": "models/staging/buk/stg_jobs.sql", "name": "stg_jobs", "alias": "stg_jobs", "checksum": {"name": "sha256", "checksum": "3aa78d1d9fda9877ae209a16a3ea6cf4a8b550fa4914c7182b05af373329fd59"}, "tags": [], "refs": [], "sources": [["staging_buk", "jobs_colombia"], ["staging_buk", "jobs_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_jobs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.2673228, "compiled_code": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_chile\"\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_jobs\""}, "model.houm.stg_areas": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.areas_chile", "source.houm.staging_buk.areas_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_areas"], "unique_id": "model.houm.stg_areas", "raw_code": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_areas.sql", "original_file_path": "models/staging/buk/stg_areas.sql", "name": "stg_areas", "alias": "stg_areas", "checksum": {"name": "sha256", "checksum": "954ee9ddb188c04944a9d9ba8221e74bc2d267d8dbbc79835c65a90ba9283e39"}, "tags": [], "refs": [], "sources": [["staging_buk", "areas_chile"], ["staging_buk", "areas_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_areas.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.268981, "compiled_code": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_areas\""}, "model.houm.stg_line_settlements": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_line_settlements"], "unique_id": "model.houm.stg_line_settlements", "raw_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_line_settlements.sql", "original_file_path": "models/staging/buk/stg_line_settlements.sql", "name": "stg_line_settlements", "alias": "stg_line_settlements", "checksum": {"name": "sha256", "checksum": "ecefd56e99357acad2c09b9b7d22431c474bc1f9c3ca9a44585ff68db117d6f1"}, "tags": [], "refs": [], "sources": [["staging_buk", "line_settlements_chile"], ["staging_buk", "line_settlements_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_line_settlements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.2706392, "compiled_code": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_line_settlements\""}, "model.houm.stg_employees": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_employees"], "unique_id": "model.houm.stg_employees", "raw_code": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_employees.sql", "original_file_path": "models/staging/buk/stg_employees.sql", "name": "stg_employees", "alias": "stg_employees", "checksum": {"name": "sha256", "checksum": "ceb501d6e299e9bb3392965a61e048b9074173deecc995fc91c347a2b1fc68f9"}, "tags": [], "refs": [], "sources": [["staging_buk", "employees_chile"], ["staging_buk", "employees_colombia"]], "metrics": [], "description": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link", "columns": {"dwh_person_id": {"name": "dwh_person_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_employees.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.7436202, "compiled_code": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_employees\""}, "model.houm.stg_roles": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.roles_colombia", "source.houm.staging_buk.roles_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_roles"], "unique_id": "model.houm.stg_roles", "raw_code": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_colombia'\n    ) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_roles.sql", "original_file_path": "models/staging/buk/stg_roles.sql", "name": "stg_roles", "alias": "stg_roles", "checksum": {"name": "sha256", "checksum": "4a2edbed91f7133000879ebb9db1e554f57bf765b00fa8c40b2202858a0b45a6"}, "tags": [], "refs": [], "sources": [["staging_buk", "roles_colombia"], ["staging_buk", "roles_chile"]], "metrics": [], "description": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_roles.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1675970038.743888, "compiled_code": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_roles\""}, "model.houm.proc_bid": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_negotiation", "model.houm.stg_sales_bid", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_bid"], "unique_id": "model.houm.proc_bid", "raw_code": "{{ config(materialized='table') }}\n\nSELECT \n    stg_bid.id,\n    negotiation_id,\n    amount,\n    stg_bid.status,\n    currency,\n    comment,\n    payment_method,\n    has_credit,\n    credit_status,\n    credit_counciling_requested,\n    stg_bid.created_at,\n    COALESCE((timezone(prop_mz.timezone, stg_bid.created_at)::timestamp with time zone),stg_bid.created_at) AS created_at_local,\n    stg_bid.updated_at,\n    COALESCE((timezone(prop_mz.timezone, stg_bid.updated_at)::timestamp with time zone),stg_bid.updated_at) AS updated_at_local,\n    deposit_amount,\n    houm_bidder_fee,\n    houm_owner_fee,\n    bidder_penalty_fee,\n    owner_penalty_fee,\n    proc_negotiation.geo_id,\n    proc_negotiation.property_id,\n    CASE \n        WHEN (proc_negotiation.status = 'Abierta' and stg_bid.status = 'Abierta')      THEN 'Pendiente de respuesta'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Cancelada') THEN 'Rechazada'\n        WHEN (proc_negotiation.status = 'Abierta' and stg_bid.status = 'Rechazada')    THEN 'Rechazada con contra-oferta'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Aceptada')  THEN 'Aceptada'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Rechazada') THEN 'Rechazada con contra-oferta'\n        ELSE 'Otro'\n    END status_bid_presented,\n    proc_negotiation.is_test\nFROM {{ ref('proc_negotiation') }} AS proc_negotiation\nLEFT JOIN {{ ref('stg_sales_bid') }} stg_bid\n    ON stg_bid.negotiation_id = proc_negotiation.id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = proc_negotiation.property_id \nWHERE TRUE\n    AND negotiation_id IS NOT NULL\nORDER BY stg_bid.created_at ASC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_bid.sql", "original_file_path": "models/processing/closure/proc_bid.sql", "name": "proc_bid", "alias": "proc_bid", "checksum": {"name": "sha256", "checksum": "47d51c354a49d4eac6e870f12a733a5cfde103bbc0174a57238ff941b02c6bad"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_negotiation"], ["stg_sales_bid"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_bid.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.275728, "compiled_code": "\n\nSELECT \n    stg_bid.id,\n    negotiation_id,\n    amount,\n    stg_bid.status,\n    currency,\n    comment,\n    payment_method,\n    has_credit,\n    credit_status,\n    credit_counciling_requested,\n    stg_bid.created_at,\n    COALESCE((timezone(prop_mz.timezone, stg_bid.created_at)::timestamp with time zone),stg_bid.created_at) AS created_at_local,\n    stg_bid.updated_at,\n    COALESCE((timezone(prop_mz.timezone, stg_bid.updated_at)::timestamp with time zone),stg_bid.updated_at) AS updated_at_local,\n    deposit_amount,\n    houm_bidder_fee,\n    houm_owner_fee,\n    bidder_penalty_fee,\n    owner_penalty_fee,\n    proc_negotiation.geo_id,\n    proc_negotiation.property_id,\n    CASE \n        WHEN (proc_negotiation.status = 'Abierta' and stg_bid.status = 'Abierta')      THEN 'Pendiente de respuesta'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Cancelada') THEN 'Rechazada'\n        WHEN (proc_negotiation.status = 'Abierta' and stg_bid.status = 'Rechazada')    THEN 'Rechazada con contra-oferta'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Aceptada')  THEN 'Aceptada'\n        WHEN (proc_negotiation.status = 'Finalizada' and stg_bid.status = 'Rechazada') THEN 'Rechazada con contra-oferta'\n        ELSE 'Otro'\n    END status_bid_presented,\n    proc_negotiation.is_test\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_negotiation\" AS proc_negotiation\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid\" stg_bid\n    ON stg_bid.negotiation_id = proc_negotiation.id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = proc_negotiation.property_id \nWHERE TRUE\n    AND negotiation_id IS NOT NULL\nORDER BY stg_bid.created_at ASC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_bid\""}, "model.houm.proc_closure_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_plans", "model.houm.proc_closure_contracts", "model.houm.stg_subscription_subscription", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_subs"], "unique_id": "model.houm.proc_closure_subs", "raw_code": "{{ config(materialized='table') }}\n\nWITH plans_clean AS (\nSELECT \n   plans.id,\n   plans.name,\n   plans.description, \n   plans.has_management, \n   plans.is_test \nFROM {{ ref('proc_closure_plans') }} AS plans\nWHERE TRUE \n)\n\n, contracts_clean AS (\nSELECT \n   contracts.id, \n   contracts.plan_id,\n   contracts.status,\n   contracts.first_payment_date,\n   contracts.management \nFROM {{ ref('proc_closure_contracts') }} AS contracts\n)\n\n, clouser_subs as (\nSELECT \n   -- Contracts Info\n    contracts.id AS contract_id,\n    contracts.status AS contract_status, \n    coalesce((timezone(prop_mz.timezone, contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS contract_first_payment_date_local, \n    (timezone( 'UTC', contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS contract_first_payment_date_utc , \n    plans.has_management AS contracts_has_management, \n    -- Subs Info\n    subscription.id AS sub_id,\n    coalesce((timezone(prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS sub_payment_date_local, \n    (timezone('UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS sub_payment_date_utc, \n    subscription.property_id, \n    prop_mz.geo_id, \n    subscription.init_reason AS sub_init_reason,\n    -- Plans info\n    plans.id AS plan_id,\n    plans.name AS plan_name, \n    plans.description AS plan_description, \n    plans.has_management  AS plan_has_management,\n    plans.is_test AS is_test,\n    --\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM {{ ref('stg_subscription_subscription') }} AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n)\n\nSELECT *\nFROM clouser_subs", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_subs.sql", "original_file_path": "models/processing/closure/proc_closure_subs.sql", "name": "proc_closure_subs", "alias": "proc_closure_subs", "checksum": {"name": "sha256", "checksum": "03375201fe594ac0c8f28bfbd08d679316b97b5638a5ae1447be34dcdfca803f"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_closure_plans"], ["proc_closure_contracts"], ["stg_subscription_subscription"], ["proc_properties_mz"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.2774882, "compiled_code": "\n\nWITH plans_clean AS (\nSELECT \n   plans.id,\n   plans.name,\n   plans.description, \n   plans.has_management, \n   plans.is_test \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\" AS plans\nWHERE TRUE \n)\n\n, contracts_clean AS (\nSELECT \n   contracts.id, \n   contracts.plan_id,\n   contracts.status,\n   contracts.first_payment_date,\n   contracts.management \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\" AS contracts\n)\n\n, clouser_subs as (\nSELECT \n   -- Contracts Info\n    contracts.id AS contract_id,\n    contracts.status AS contract_status, \n    coalesce((timezone(prop_mz.timezone, contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS contract_first_payment_date_local, \n    (timezone( 'UTC', contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS contract_first_payment_date_utc , \n    plans.has_management AS contracts_has_management, \n    -- Subs Info\n    subscription.id AS sub_id,\n    coalesce((timezone(prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS sub_payment_date_local, \n    (timezone('UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS sub_payment_date_utc, \n    subscription.property_id, \n    prop_mz.geo_id, \n    subscription.init_reason AS sub_init_reason,\n    -- Plans info\n    plans.id AS plan_id,\n    plans.name AS plan_name, \n    plans.description AS plan_description, \n    plans.has_management  AS plan_has_management,\n    plans.is_test AS is_test,\n    --\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\" AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n)\n\nSELECT *\nFROM clouser_subs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\""}, "model.houm.proc_finance_plans": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_finance_plans"], "unique_id": "model.houm.proc_finance_plans", "raw_code": "WITH plan_taxes AS (\nSELECT \n    plans.* , \n    plans_taxes_region.date_start  , \n    plans_taxes_region.date_end  , \n    plans_taxes_region.region ,\n    plans_taxes_region.taxes , \n    plans_taxes_region.perc_point_subject_to_iva \nFROM {{ ref('proc_closure_plans') }} AS plans\nLEFT JOIN {{ ref('proc_closure_plans_taxes_region') }} AS plans_taxes_region \n    ON plans.id = plans_taxes_region.plan_id  \n)\n, plan_iva_perct AS (\nSELECT \n    * , \n    taxes::float /100::float  AS iva_perc  \nFROM plan_taxes\nWHERE IS_test = FALSE \n)\n, plans_gross AS (\nSELECT \n    * , \n    admin_price_net*(1 + iva_perc) AS admin_price_gross  ,\n    COALESCE(perc_point_subject_to_iva,  admin_price_net*(1 + iva_perc) ) AS perc_point_subject_to_iva_2 \nFROM plan_iva_perct\n)\nSELECT \n    * ,\n    greatest( admin_price_gross - perc_point_subject_to_iva_2 , 0) AS iva_free , \n    perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc) AS iva_amount_perct ,\n    greatest(admin_price_gross -   perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc), 0) AS revenue_perct \nFROM plans_gross", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_finance_plans.sql", "original_file_path": "models/processing/closure/proc_finance_plans.sql", "name": "proc_finance_plans", "alias": "proc_finance_plans", "checksum": {"name": "sha256", "checksum": "962b5b7bd50e4e794e3d7e0eb864626a7b7ffd1391d925b5f4894a64b0af7377"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_closure_plans"], ["proc_closure_plans_taxes_region"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_finance_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1675970038.2794392, "compiled_code": "WITH plan_taxes AS (\nSELECT \n    plans.* , \n    plans_taxes_region.date_start  , \n    plans_taxes_region.date_end  , \n    plans_taxes_region.region ,\n    plans_taxes_region.taxes , \n    plans_taxes_region.perc_point_subject_to_iva \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\" AS plans\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans_taxes_region\" AS plans_taxes_region \n    ON plans.id = plans_taxes_region.plan_id  \n)\n, plan_iva_perct AS (\nSELECT \n    * , \n    taxes::float /100::float  AS iva_perc  \nFROM plan_taxes\nWHERE IS_test = FALSE \n)\n, plans_gross AS (\nSELECT \n    * , \n    admin_price_net*(1 + iva_perc) AS admin_price_gross  ,\n    COALESCE(perc_point_subject_to_iva,  admin_price_net*(1 + iva_perc) ) AS perc_point_subject_to_iva_2 \nFROM plan_iva_perct\n)\nSELECT \n    * ,\n    greatest( admin_price_gross - perc_point_subject_to_iva_2 , 0) AS iva_free , \n    perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc) AS iva_amount_perct ,\n    greatest(admin_price_gross -   perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc), 0) AS revenue_perct \nFROM plans_gross", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_finance_plans\""}, "model.houm.proc_negotiation": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_sales_negotiation", "seed.houm.seed_test_email", "model.houm.stg_sales_property", "model.houm.proc_properties_mz", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_negotiation"], "unique_id": "model.houm.proc_negotiation", "raw_code": "{{ config(materialized='table') }}\n\nSELECT \n    stg_negotiation.id,\n    status,\n    stg_negotiation.country,\n    start_date,\n    end_date,\n    houm_advisor_name,\n    houm_advisor_email,\n    houm_advisor_user_id,\n    houm_advisor_uuid,\n    visit_id,\n    unread,\n    stg_negotiation.created_at,\n    COALESCE((timezone(prop_mz.timezone, stg_negotiation.created_at)::timestamp with time zone),stg_negotiation.created_at) AS created_at_local,\n    stg_negotiation.updated_at,\n    COALESCE((timezone(prop_mz.timezone, stg_negotiation.updated_at)::timestamp with time zone),stg_negotiation.updated_at) AS updated_at_local,\n    property_uid,\n    stg_property.property_id,\n    prop_mz.geo_id,\n    COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM {{ ref('stg_sales_negotiation') }} stg_negotiation\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON stg_negotiation.houm_advisor_email = test_persons.email\nLEFT JOIN {{ ref('stg_sales_property') }} stg_property\n    ON stg_property.id = stg_negotiation.property_uid\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz\n    ON prop_mz.property_id = stg_property.property_id\nLEFT JOIN {{ ref('dim_macrozones') }} dim_mz\n    ON dim_mz.geo_id = prop_mz.geo_id\nWHERE TRUE\n    AND stg_negotiation.created_at >= '2022-07-15'::DATE\n    -- Fecha en la cual las ofertas online ya estan funcionando al 100%\nORDER BY stg_negotiation.created_at ASC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_negotiation.sql", "original_file_path": "models/processing/closure/proc_negotiation.sql", "name": "proc_negotiation", "alias": "proc_negotiation", "checksum": {"name": "sha256", "checksum": "8f71ea7c290bc6295103f7ee9cceedf7ed751cb2f5142d4b87f854fb8da89ca4"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_sales_negotiation"], ["seed_test_email"], ["stg_sales_property"], ["proc_properties_mz"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_negotiation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.281124, "compiled_code": "\n\nSELECT \n    stg_negotiation.id,\n    status,\n    stg_negotiation.country,\n    start_date,\n    end_date,\n    houm_advisor_name,\n    houm_advisor_email,\n    houm_advisor_user_id,\n    houm_advisor_uuid,\n    visit_id,\n    unread,\n    stg_negotiation.created_at,\n    COALESCE((timezone(prop_mz.timezone, stg_negotiation.created_at)::timestamp with time zone),stg_negotiation.created_at) AS created_at_local,\n    stg_negotiation.updated_at,\n    COALESCE((timezone(prop_mz.timezone, stg_negotiation.updated_at)::timestamp with time zone),stg_negotiation.updated_at) AS updated_at_local,\n    property_uid,\n    stg_property.property_id,\n    prop_mz.geo_id,\n    COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation\" stg_negotiation\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON stg_negotiation.houm_advisor_email = test_persons.email\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_property\" stg_property\n    ON stg_property.id = stg_negotiation.property_uid\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz\n    ON prop_mz.property_id = stg_property.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_mz\n    ON dim_mz.geo_id = prop_mz.geo_id\nWHERE TRUE\n    AND stg_negotiation.created_at >= '2022-07-15'::DATE\n    -- Fecha en la cual las ofertas online ya estan funcionando al 100%\nORDER BY stg_negotiation.created_at ASC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_negotiation\""}, "model.houm.proc_closure_evaluation_has_a_contract": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_evaluation_has_a_contract"], "unique_id": "model.houm.proc_closure_evaluation_has_a_contract", "raw_code": "{{ config(materialized='view') }}\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    replace(replace(stg_historical.contracts,'[',''),']','') AS contracts_clean \nFROM stg_historical\nWHERE true\n    AND stg_historical.contracts IS NOT NULL\n)\n/*\nEstamos sacando todos los contratos por evaluacion, historicamente la evaluacion que tenia mas contratos\nha sido 6, asi que hacemos la extracci\u00f3n de hasta 7 contratos para tener un poco de resiliencia en caso de \naumentos de contratos por id de evaluacion\n*/\n,contract_split AS (\nSELECT\n    evaluation_id ,\n    split_part(proc_demand_evaluations.contracts_clean,',',1) AS contract_1 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',2) AS contract_2 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',3) AS contract_3 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',4) AS contract_4 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',5) AS contract_5 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',6) AS contract_6 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',7) AS contract_7 \nFROM proc_demand_evaluations\n)\n\n, contract_1 AS (\nSELECT \n    evaluation_id ,\n    contract_1 AS contract\nFROM contract_split\nWHERE contract_1 IS NOT NULL\n    AND contract_1 != ''\n)\n\n, contract_2 AS (\nSELECT \n    evaluation_id ,\n    contract_2 AS contract\nFROM contract_split\nWHERE contract_2 IS NOT NULL\n    AND contract_2 != ''\n)\n\n, contract_3 AS (\nSELECT \n    evaluation_id ,\n    contract_3 AS contract\nFROM contract_split\nWHERE contract_3 IS NOT NULL \n    AND contract_3 != ''\n)\n\n, contract_4 AS (\nSELECT\n    evaluation_id ,\n    contract_4 AS contract\nFROM contract_split\nWHERE contract_4 IS NOT NULL\n    AND contract_4 != ''\n)\n\n, contract_5 AS (\nSELECT \n    evaluation_id ,\n    contract_5 AS contract\nFROM contract_split\nWHERE contract_5 IS NOT NULL\n    AND contract_5 != ''\n)\n\n, contract_6 AS (\nSELECT \n    evaluation_id ,\n    contract_6 AS contract\nFROM contract_split\nWHERE contract_6 IS NOT NULL\n    AND contract_6 != ''\n)\n\n, contract_7 AS (\nSELECT\n    evaluation_id ,\n    contract_7 AS contract\nFROM contract_split\nWHERE contract_7 IS NOT NULL\nAND contract_7 != ''\n)\n\n, contracts_union AS (\nSELECT * FROM contract_1\nUNION \nSELECT * FROM contract_2\nUNION\nSELECT * FROM contract_3\nUNION\nSELECT * FROM contract_4\nUNION\nSELECT * FROM contract_5\nUNION\nSELECT * FROM contract_6\nUNION\nSELECT * FROM contract_7\n)\n\nSELECT \n    * \nFROM contracts_union", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_evaluation_has_a_contract.sql", "original_file_path": "models/processing/closure/proc_closure_evaluation_has_a_contract.sql", "name": "proc_closure_evaluation_has_a_contract", "alias": "proc_closure_evaluation_has_a_contract", "checksum": {"name": "sha256", "checksum": "080e0f5757da5bcffa6d2788019819dc9d918655862a81675c86f2acea857895"}, "tags": ["dw", "processing", "closure"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_evaluation_has_a_contract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1675970038.282954, "compiled_code": "\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    replace(replace(stg_historical.contracts,'[',''),']','') AS contracts_clean \nFROM stg_historical\nWHERE true\n    AND stg_historical.contracts IS NOT NULL\n)\n/*\nEstamos sacando todos los contratos por evaluacion, historicamente la evaluacion que tenia mas contratos\nha sido 6, asi que hacemos la extracci\u00f3n de hasta 7 contratos para tener un poco de resiliencia en caso de \naumentos de contratos por id de evaluacion\n*/\n,contract_split AS (\nSELECT\n    evaluation_id ,\n    split_part(proc_demand_evaluations.contracts_clean,',',1) AS contract_1 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',2) AS contract_2 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',3) AS contract_3 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',4) AS contract_4 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',5) AS contract_5 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',6) AS contract_6 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',7) AS contract_7 \nFROM proc_demand_evaluations\n)\n\n, contract_1 AS (\nSELECT \n    evaluation_id ,\n    contract_1 AS contract\nFROM contract_split\nWHERE contract_1 IS NOT NULL\n    AND contract_1 != ''\n)\n\n, contract_2 AS (\nSELECT \n    evaluation_id ,\n    contract_2 AS contract\nFROM contract_split\nWHERE contract_2 IS NOT NULL\n    AND contract_2 != ''\n)\n\n, contract_3 AS (\nSELECT \n    evaluation_id ,\n    contract_3 AS contract\nFROM contract_split\nWHERE contract_3 IS NOT NULL \n    AND contract_3 != ''\n)\n\n, contract_4 AS (\nSELECT\n    evaluation_id ,\n    contract_4 AS contract\nFROM contract_split\nWHERE contract_4 IS NOT NULL\n    AND contract_4 != ''\n)\n\n, contract_5 AS (\nSELECT \n    evaluation_id ,\n    contract_5 AS contract\nFROM contract_split\nWHERE contract_5 IS NOT NULL\n    AND contract_5 != ''\n)\n\n, contract_6 AS (\nSELECT \n    evaluation_id ,\n    contract_6 AS contract\nFROM contract_split\nWHERE contract_6 IS NOT NULL\n    AND contract_6 != ''\n)\n\n, contract_7 AS (\nSELECT\n    evaluation_id ,\n    contract_7 AS contract\nFROM contract_split\nWHERE contract_7 IS NOT NULL\nAND contract_7 != ''\n)\n\n, contracts_union AS (\nSELECT * FROM contract_1\nUNION \nSELECT * FROM contract_2\nUNION\nSELECT * FROM contract_3\nUNION\nSELECT * FROM contract_4\nUNION\nSELECT * FROM contract_5\nUNION\nSELECT * FROM contract_6\nUNION\nSELECT * FROM contract_7\n)\n\nSELECT \n    * \nFROM contracts_union", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluation_has_a_contract\""}, "model.houm.proc_closure_plans_taxes_region": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_subscription_subscription", "model.houm.proc_properties", "model.houm.stg_plans", "seed.houm.seed_plan_legacy_taxes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_plans_taxes_region"], "unique_id": "model.houm.proc_closure_plans_taxes_region", "raw_code": "{{ config(materialized='view') }}\n \nWITH subs_country AS (\nSELECT  \n    subscription.id ,\n    subscription.plan_id ,\n    properties.country ,\n    CASE  \n        WHEN properties.country LIKE 'M_xico' AND properties.region = 'Jalisco' THEN properties.region\n        WHEN properties.country LIKE 'M_xico' THEN  'Other'\n        ELSE NULL\n    END AS region\nFROM {{ ref('stg_subscription_subscription') }} AS subscription\nLEFT JOIN {{ ref('proc_properties') }} AS properties\n    ON properties.id = subscription.property_id\n)\n \n, plan_country_subs AS (\nSELECT  \n    plans.id ,\n    plans.created_at ,\n    TRANSLATE(plans.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS country_plan ,\n    TRANSLATE(subs_country.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS  country_subs,\n    subs_country.region ,\n    CASE \n        WHEN plans.admin_commission IS NULL THEN FALSE \n        ELSE TRUE\n    END AS is_new ,\n    count(subs_country.country ) AS n_subs ,\n    count(*) OVER(PARTITION BY plans.id ) AS n_same_plan\nFROM {{ ref('stg_plans') }} AS plans \nLEFT JOIN subs_country\n    ON subs_country.plan_id = plans.id\nGROUP BY 1 , 2 , 3, 4 , 5 , 6\n)\n \n, plan_country_ranking AS (\nSELECT  \n    id AS plan_id ,\n    created_at ,\n    COALESCE( country_plan , country_subs ) AS country ,  \n    CASE\n        WHEN coalesce( country_plan , country_subs )  = 'Mexico' AND n_subs = 0 THEN 'Other'\n        ELSE coalesce( region, 'All')\n    END AS region  ,\n    n_subs ,\n    n_same_plan ,  \n    is_new ,\n    ROW_NUMBER() OVER(PARTITION BY COALESCE( country_plan , country_subs ) ,  id ORDER BY n_subs DESC ) AS ranking\nFROM plan_country_subs\nORDER BY ID\n)\n, plan_city_filtering AS (\nSELECT\n    *\nFROM plan_country_ranking\nWHERE TRUE\n    AND (\n          ( (n_same_plan >  1 ) AND country = 'Mexico' AND (region IN ('Other', 'Jalisco') )  )\n         OR n_same_plan = 1  )\nORDER BY plan_id ,  ranking\n)\n \n, plan_taxes AS (\nSELECT  \n    plan_id ,\n    created_at ,\n    country ,\n    region ,\n    CASE\n        WHEN country = 'Chile' THEN 19\n        WHEN country = 'Colombia' THEN 19\n        WHEN country = 'Mexico' AND region = 'Other' THEN 16\n        WHEN country = 'Mexico' AND region = 'Jalisco' THEN 8\n    END taxes ,\n    is_new\nFROM plan_city_filtering\n)\n \n, plans_perc_subject_to_iva AS (\nSELECT\n    *\nFROM {{ref ('seed_plan_legacy_taxes')}}  AS aux\n)\n \n, proc_taxes_region AS (\nSELECT  \n    plan_taxes.plan_id  ,\n    created_at ,\n    COALESCE(date_start , created_at) AS date_start ,\n    date_end  AS date_end ,\n    country ,\n    region ,\n    taxes ,\n    CASE \n        WHEN is_new AND country = 'Chile' THEN 1.19\n        ELSE perc_point_subject_to_iva\n    END AS perc_point_subject_to_iva\nFROM plan_taxes\nLEFT JOIN plans_perc_subject_to_iva\n    ON plans_perc_subject_to_iva.plan_id =  plan_taxes.plan_id\n)\n \nSELECT\n   *\nFROM proc_taxes_region", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_plans_taxes_region.sql", "original_file_path": "models/processing/closure/proc_closure_plans_taxes_region.sql", "name": "proc_closure_plans_taxes_region", "alias": "proc_closure_plans_taxes_region", "checksum": {"name": "sha256", "checksum": "e876ede7e4cd5273ebf23224e5d6e14f21ef17a4510fdfcbae99cc22c89aa23c"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_subscription_subscription"], ["proc_properties"], ["stg_plans"], ["seed_plan_legacy_taxes"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_plans_taxes_region.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1675970038.284605, "compiled_code": "\n \nWITH subs_country AS (\nSELECT  \n    subscription.id ,\n    subscription.plan_id ,\n    properties.country ,\n    CASE  \n        WHEN properties.country LIKE 'M_xico' AND properties.region = 'Jalisco' THEN properties.region\n        WHEN properties.country LIKE 'M_xico' THEN  'Other'\n        ELSE NULL\n    END AS region\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\" AS subscription\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\n    ON properties.id = subscription.property_id\n)\n \n, plan_country_subs AS (\nSELECT  \n    plans.id ,\n    plans.created_at ,\n    TRANSLATE(plans.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS country_plan ,\n    TRANSLATE(subs_country.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS  country_subs,\n    subs_country.region ,\n    CASE \n        WHEN plans.admin_commission IS NULL THEN FALSE \n        ELSE TRUE\n    END AS is_new ,\n    count(subs_country.country ) AS n_subs ,\n    count(*) OVER(PARTITION BY plans.id ) AS n_same_plan\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" AS plans \nLEFT JOIN subs_country\n    ON subs_country.plan_id = plans.id\nGROUP BY 1 , 2 , 3, 4 , 5 , 6\n)\n \n, plan_country_ranking AS (\nSELECT  \n    id AS plan_id ,\n    created_at ,\n    COALESCE( country_plan , country_subs ) AS country ,  \n    CASE\n        WHEN coalesce( country_plan , country_subs )  = 'Mexico' AND n_subs = 0 THEN 'Other'\n        ELSE coalesce( region, 'All')\n    END AS region  ,\n    n_subs ,\n    n_same_plan ,  \n    is_new ,\n    ROW_NUMBER() OVER(PARTITION BY COALESCE( country_plan , country_subs ) ,  id ORDER BY n_subs DESC ) AS ranking\nFROM plan_country_subs\nORDER BY ID\n)\n, plan_city_filtering AS (\nSELECT\n    *\nFROM plan_country_ranking\nWHERE TRUE\n    AND (\n          ( (n_same_plan >  1 ) AND country = 'Mexico' AND (region IN ('Other', 'Jalisco') )  )\n         OR n_same_plan = 1  )\nORDER BY plan_id ,  ranking\n)\n \n, plan_taxes AS (\nSELECT  \n    plan_id ,\n    created_at ,\n    country ,\n    region ,\n    CASE\n        WHEN country = 'Chile' THEN 19\n        WHEN country = 'Colombia' THEN 19\n        WHEN country = 'Mexico' AND region = 'Other' THEN 16\n        WHEN country = 'Mexico' AND region = 'Jalisco' THEN 8\n    END taxes ,\n    is_new\nFROM plan_city_filtering\n)\n \n, plans_perc_subject_to_iva AS (\nSELECT\n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_plan_legacy_taxes\"  AS aux\n)\n \n, proc_taxes_region AS (\nSELECT  \n    plan_taxes.plan_id  ,\n    created_at ,\n    COALESCE(date_start , created_at) AS date_start ,\n    date_end  AS date_end ,\n    country ,\n    region ,\n    taxes ,\n    CASE \n        WHEN is_new AND country = 'Chile' THEN 1.19\n        ELSE perc_point_subject_to_iva\n    END AS perc_point_subject_to_iva\nFROM plan_taxes\nLEFT JOIN plans_perc_subject_to_iva\n    ON plans_perc_subject_to_iva.plan_id =  plan_taxes.plan_id\n)\n \nSELECT\n   *\nFROM proc_taxes_region", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans_taxes_region\""}, "model.houm.proc_closure_plans": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_plans", "model.houm.stg_plans", "model.houm.stg_plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_plans"], "unique_id": "model.houm.proc_closure_plans", "raw_code": "{{ config(materialized='view') }}\n \n/*\nA la fecha tenemos 2 tipos de planes.\n    Los Planes Nuevos: Lo que tienen admin_commission\n    Los Planes Antiguos: Los que no tienen  admin_commission\nLos planes antiguos no tienen repoblado los campos nuevo. Aqui se intente repoblar los campos antiguos\ncon el fin de estandarizar el calculos de los reportes de revenue y finanzas.\n*/\n \nWith plans_type1 AS ( -- Planes Antiguos\nSELECT\n    *\nFROM {{ ref('stg_plans') }} plans\n    WHERE admin_commission IS NULL\n)\n , plans_type2 AS ( -- Planes Nuevos\nSELECT\n    *\nFROM {{ ref('stg_plans') }} plans\n    WHERE admin_commission IS NOT NULL\n)\n-- Traducci\u00f3n del los planes Antiguos a las variables nuevas  \n, plans_type1_backup as (\nSELECT *\nFROM (\n        SELECT 1,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 2,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 3,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 4,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 5,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 6,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 7,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 8,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 9,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 10,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 11,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 12,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 13,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 14,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 15,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 16,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 17,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 18,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 19,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 20,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 21,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 22,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 23,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 24,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 25,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 26,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 27,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 28,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 29,19,FALSE,NULL,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 30,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 31,19,FALSE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 32,19,FALSE,NULL,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 33,16,FALSE,NULL,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 34,16,TRUE,6,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 35,19,TRUE,4,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 36,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 37,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 38,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE\n    ) AS aux\n    (id , iva , has_management , payment_option_id , country,  lessee_brokerage, lessee_brokerage_closing, lessor_brokerage,  lessor_brokerage_closing, is_test)\n)\n \n, processing_plans_type_1 AS (\nSELECT  \n    plans_type1.id ,\n    plans_type1.created_at ,\n    plans_type1.updated_at ,\n    COALESCE(NULLIF(plans_type1.name,''), plans_type1.description ) AS name ,\n    plans_type1.description ,\n    plans_type1_backup.country ,                -- Se re poblo utilizando el country de las subs activas.  \n                                                -- Solo el plan 34 tiene m\u00e1s de 1 country, pero es solo 1 sub de CL siendo que el plan es de MX. Este caso de CL sera considerado como un error.\n    CASE\n        WHEN plans_type1.id = 28 THEN 0       --  Este era para el plan que era con corretaje gratis en CO Antiguamente.\n        WHEN plans_type1_backup.country LIKE 'M_xico' THEN  plans_type1.price::float/(1.08::float) \n        ELSE plans_type1.price::float/1.08::float\n    END AS admin_price_net ,                   \n    plans_type1.type ,\n    plans_type1_backup.has_management ,\n    plans_type1_backup.lessee_brokerage ,          -- tenant\n    plans_type1_backup.lessee_brokerage_closing ,  -- tenant\n    plans_type1_backup.lessor_brokerage ,          -- landlord\n    plans_type1_backup.lessor_brokerage_closing ,  -- landlord\n    COALESCE(plans_type1.months_duration, 12) AS months_duration , -- Se asume que su duraci\u00f3n es de 12 meses  \n    plans_type1.active ,\n    plans_type1.deleted_at ,\n    plans_type1_backup.is_test ,\n    plans_type1_backup.payment_option_id\nFROM plans_type1\nLEFT JOIN plans_type1_backup\n    ON plans_type1_backup.id = plans_type1.id\n)\n \n, processing_plans_type_2 AS (\nSELECT\n    plans_type2.id ,\n    plans_type2.created_at ,\n    plans_type2.updated_at ,\n    coalesce(NULLIF(plans_type2.name,''), plans_type2.description ) AS name ,\n    plans_type2.description ,\n    plans_type2.country ,\n    plans_type2.admin_commission AS admin_price_net ,\n    plans_type2.type  ,\n    plans_type2.has_management ,\n    plans_type2.lessee_brokerage ,          -- tenant\n    plans_type2.lessee_brokerage_closing ,  -- tenant\n    plans_type2.lessor_brokerage ,          -- landlord\n    plans_type2.lessor_brokerage_closing ,  -- landlord\n    plans_type2.months_duration ,\n    plans_type2.active ,\n    plans_type2.deleted_at ,\n    CASE\n        WHEN plans_type2.name = 'AAA' THEN TRUE\n        WHEN plans_type2.name like '%(test)%' THEN TRUE\n        WHEN plans_type2.description like '% test%' THEN TRUE\n        WHEN plans_type2.description like '% prueba%' THEN TRUE\n        WHEN plans_type2.name like 'Test%' THEN TRUE\n        ELSE FALSE\n    END AS is_test ,\n    plans_type2.payment_option_id\nFROM plans_type2\n)\n \n, proc_plans AS (\nSELECT\n    *\nFROM processing_plans_type_1\nUNION ALL\nSELECT\n    *\nFROM processing_plans_type_2\n)\n \nSELECT\n    *\nFROM proc_plans\n\n\n\n\n\n/*\nSELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\tELSE has_management END AS has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM {{ ref('stg_plans') }} plans\n*/", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_plans.sql", "original_file_path": "models/processing/closure/proc_closure_plans.sql", "name": "proc_closure_plans", "alias": "proc_closure_plans", "checksum": {"name": "sha256", "checksum": "b40583daf27a7a59c026636bdf3b409cef15a343916b9ba47d14551f0b6d9139"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_plans"], ["stg_plans"], ["stg_plans"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1675970038.28653, "compiled_code": "\n \n/*\nA la fecha tenemos 2 tipos de planes.\n    Los Planes Nuevos: Lo que tienen admin_commission\n    Los Planes Antiguos: Los que no tienen  admin_commission\nLos planes antiguos no tienen repoblado los campos nuevo. Aqui se intente repoblar los campos antiguos\ncon el fin de estandarizar el calculos de los reportes de revenue y finanzas.\n*/\n \nWith plans_type1 AS ( -- Planes Antiguos\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n    WHERE admin_commission IS NULL\n)\n , plans_type2 AS ( -- Planes Nuevos\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n    WHERE admin_commission IS NOT NULL\n)\n-- Traducci\u00f3n del los planes Antiguos a las variables nuevas  \n, plans_type1_backup as (\nSELECT *\nFROM (\n        SELECT 1,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 2,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 3,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 4,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 5,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 6,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 7,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 8,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 9,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 10,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 11,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 12,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 13,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 14,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 15,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 16,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 17,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 18,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 19,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 20,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 21,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 22,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 23,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 24,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 25,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 26,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 27,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 28,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 29,19,FALSE,NULL,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 30,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 31,19,FALSE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 32,19,FALSE,NULL,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 33,16,FALSE,NULL,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 34,16,TRUE,6,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 35,19,TRUE,4,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 36,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 37,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 38,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE\n    ) AS aux\n    (id , iva , has_management , payment_option_id , country,  lessee_brokerage, lessee_brokerage_closing, lessor_brokerage,  lessor_brokerage_closing, is_test)\n)\n \n, processing_plans_type_1 AS (\nSELECT  \n    plans_type1.id ,\n    plans_type1.created_at ,\n    plans_type1.updated_at ,\n    COALESCE(NULLIF(plans_type1.name,''), plans_type1.description ) AS name ,\n    plans_type1.description ,\n    plans_type1_backup.country ,                -- Se re poblo utilizando el country de las subs activas.  \n                                                -- Solo el plan 34 tiene m\u00e1s de 1 country, pero es solo 1 sub de CL siendo que el plan es de MX. Este caso de CL sera considerado como un error.\n    CASE\n        WHEN plans_type1.id = 28 THEN 0       --  Este era para el plan que era con corretaje gratis en CO Antiguamente.\n        WHEN plans_type1_backup.country LIKE 'M_xico' THEN  plans_type1.price::float/(1.08::float) \n        ELSE plans_type1.price::float/1.08::float\n    END AS admin_price_net ,                   \n    plans_type1.type ,\n    plans_type1_backup.has_management ,\n    plans_type1_backup.lessee_brokerage ,          -- tenant\n    plans_type1_backup.lessee_brokerage_closing ,  -- tenant\n    plans_type1_backup.lessor_brokerage ,          -- landlord\n    plans_type1_backup.lessor_brokerage_closing ,  -- landlord\n    COALESCE(plans_type1.months_duration, 12) AS months_duration , -- Se asume que su duraci\u00f3n es de 12 meses  \n    plans_type1.active ,\n    plans_type1.deleted_at ,\n    plans_type1_backup.is_test ,\n    plans_type1_backup.payment_option_id\nFROM plans_type1\nLEFT JOIN plans_type1_backup\n    ON plans_type1_backup.id = plans_type1.id\n)\n \n, processing_plans_type_2 AS (\nSELECT\n    plans_type2.id ,\n    plans_type2.created_at ,\n    plans_type2.updated_at ,\n    coalesce(NULLIF(plans_type2.name,''), plans_type2.description ) AS name ,\n    plans_type2.description ,\n    plans_type2.country ,\n    plans_type2.admin_commission AS admin_price_net ,\n    plans_type2.type  ,\n    plans_type2.has_management ,\n    plans_type2.lessee_brokerage ,          -- tenant\n    plans_type2.lessee_brokerage_closing ,  -- tenant\n    plans_type2.lessor_brokerage ,          -- landlord\n    plans_type2.lessor_brokerage_closing ,  -- landlord\n    plans_type2.months_duration ,\n    plans_type2.active ,\n    plans_type2.deleted_at ,\n    CASE\n        WHEN plans_type2.name = 'AAA' THEN TRUE\n        WHEN plans_type2.name like '%(test)%' THEN TRUE\n        WHEN plans_type2.description like '% test%' THEN TRUE\n        WHEN plans_type2.description like '% prueba%' THEN TRUE\n        WHEN plans_type2.name like 'Test%' THEN TRUE\n        ELSE FALSE\n    END AS is_test ,\n    plans_type2.payment_option_id\nFROM plans_type2\n)\n \n, proc_plans AS (\nSELECT\n    *\nFROM processing_plans_type_1\nUNION ALL\nSELECT\n    *\nFROM processing_plans_type_2\n)\n \nSELECT\n    *\nFROM proc_plans\n\n\n\n\n\n/*\nSELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\tELSE has_management END AS has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n*/", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\""}, "model.houm.proc_closure_evaluations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_evaluations_scd", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm", "model.houm.stg_users", "model.houm.stg_users", "model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_evaluations"], "unique_id": "model.houm.proc_closure_evaluations", "raw_code": "{{ config(materialized='table') }}\nWITH evaluation_data AS (\nSELECT\n    *\nFROM {{ ref('stg_evaluations_scd') }} AS evaluations\nWHERE TRUE\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n, proc_demand_evaluations AS (\nSELECT\n    evaluation_data.id AS evaluation_id,\n    audit_start_dt,\n    audit_start_dt::DATE AS add_date,\n    evaluation_data.created_at,\n    evaluation_data.updated_at,\n    timezone('UTC', evaluation_data.audit_start_dt)::TIMESTAMPTZ AS audit_time_utc,\n    timezone('UTC', evaluation_data.created_at)::TIMESTAMPTZ     AS created_at_utc,\n    timezone('UTC', evaluation_data.updated_at)::TIMESTAMPTZ     AS updated_at_utc,\n    codebtor_id,\n    main_applicant_id,\n    updated_by AS updated_by_id,\n    evaluation_data.property_id,\n    status AS evaluation_status,\n    CASE\n        WHEN status = 'Desistido' THEN 'Lost Evaluations'\n        WHEN status IN ('Por comenzar', 'Listo para evaluar', 'Nuevos documentos','Sin documentaci\u00f3n', 'Documentaci\u00f3n pendiente') THEN 'Ongoing Evaluations'\n        WHEN status = 'Rechazado' THEN 'Commercialy Rejected Evaluations'\n        WHEN status IN ('Aprobado comercialmente','Perfil aprobado') THEN 'Commercially Approved Evaluations'\n        WHEN status = '' THEN 'sin estatus'\n    END AS evaluation_status_grouped,\n    related_applicant_id,\n    evaluation_data.country,\n    prop_mz.geo_id,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    CASE\n        WHEN main_applicant_id IN (248367, 300636, 303819, 21194, 252734, 1) THEN TRUE\n        ELSE FALSE\n    END AS is_test\nFROM evaluation_data\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n    ON prop_mz.property_id = evaluation_data.property_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n)\n, proc_demand_evaluations_users AS (\nSELECT\n    proc_demand_evaluations.*,\n    main_user.name ||' '||main_user.last_name AS main_applicant_name,\n    codebtor_user.name ||' '||codebtor_user.last_name AS codebtor_name,\n    evaluator_user.name ||' '||evaluator_user.last_name AS evaluator_name\nFROM proc_demand_evaluations\nLEFT JOIN {{ref('stg_users')}} AS main_user\n    ON main_user.id = proc_demand_evaluations.main_applicant_id\nLEFT JOIN {{ref('stg_users')}} AS codebtor_user\n    ON codebtor_user.id = proc_demand_evaluations.codebtor_id\nLEFT JOIN {{ref('stg_users')}} AS evaluator_user\n    ON evaluator_user.id = proc_demand_evaluations.updated_by_id\nORDER BY related_applicant_id, created_at DESC\n)\n\nSELECT\n    *\nFROM proc_demand_evaluations_users", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_evaluations.sql", "original_file_path": "models/processing/closure/proc_closure_evaluations.sql", "name": "proc_closure_evaluations", "alias": "proc_closure_evaluations", "checksum": {"name": "sha256", "checksum": "cbd4229cc8d56a9b6c60907409282796cfa2f4bb94219fe371efa47d37a45e68"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_evaluations_scd"], ["proc_properties_mz"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"], ["stg_users"], ["stg_users"], ["stg_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_evaluations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.288398, "compiled_code": "\nWITH evaluation_data AS (\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_evaluations_scd\" AS evaluations\nWHERE TRUE\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n, proc_demand_evaluations AS (\nSELECT\n    evaluation_data.id AS evaluation_id,\n    audit_start_dt,\n    audit_start_dt::DATE AS add_date,\n    evaluation_data.created_at,\n    evaluation_data.updated_at,\n    timezone('UTC', evaluation_data.audit_start_dt)::TIMESTAMPTZ AS audit_time_utc,\n    timezone('UTC', evaluation_data.created_at)::TIMESTAMPTZ     AS created_at_utc,\n    timezone('UTC', evaluation_data.updated_at)::TIMESTAMPTZ     AS updated_at_utc,\n    codebtor_id,\n    main_applicant_id,\n    updated_by AS updated_by_id,\n    evaluation_data.property_id,\n    status AS evaluation_status,\n    CASE\n        WHEN status = 'Desistido' THEN 'Lost Evaluations'\n        WHEN status IN ('Por comenzar', 'Listo para evaluar', 'Nuevos documentos','Sin documentaci\u00f3n', 'Documentaci\u00f3n pendiente') THEN 'Ongoing Evaluations'\n        WHEN status = 'Rechazado' THEN 'Commercialy Rejected Evaluations'\n        WHEN status IN ('Aprobado comercialmente','Perfil aprobado') THEN 'Commercially Approved Evaluations'\n        WHEN status = '' THEN 'sin estatus'\n    END AS evaluation_status_grouped,\n    related_applicant_id,\n    evaluation_data.country,\n    prop_mz.geo_id,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    CASE\n        WHEN main_applicant_id IN (248367, 300636, 303819, 21194, 252734, 1) THEN TRUE\n        ELSE FALSE\n    END AS is_test\nFROM evaluation_data\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = evaluation_data.property_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n)\n, proc_demand_evaluations_users AS (\nSELECT\n    proc_demand_evaluations.*,\n    main_user.name ||' '||main_user.last_name AS main_applicant_name,\n    codebtor_user.name ||' '||codebtor_user.last_name AS codebtor_name,\n    evaluator_user.name ||' '||evaluator_user.last_name AS evaluator_name\nFROM proc_demand_evaluations\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS main_user\n    ON main_user.id = proc_demand_evaluations.main_applicant_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS codebtor_user\n    ON codebtor_user.id = proc_demand_evaluations.codebtor_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS evaluator_user\n    ON evaluator_user.id = proc_demand_evaluations.updated_by_id\nORDER BY related_applicant_id, created_at DESC\n)\n\nSELECT\n    *\nFROM proc_demand_evaluations_users", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\""}, "model.houm.proc_negotiation_buyers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_sales_negotiation_user", "model.houm.stg_sales_user", "model.houm.stg_sales_negotiation_user", "model.houm.stg_sales_user", "model.houm.proc_negotiation", "model.houm.proc_bid", "model.houm.stg_sales_bid_response", "model.houm.stg_sales_property", "model.houm.stg_property_salesdetails", "model.houm.proc_properties_mz", "model.houm.dim_macrozones", "model.houm.stg_scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_negotiation_buyers"], "unique_id": "model.houm.proc_negotiation_buyers", "raw_code": "{{ config(materialized='table') }}\n\nWITH owner_info AS ( --- info del propietario de la propiedad\nSELECT\n    negotiation_user.negotiation_id,\n    users.name||' '||users.last_name AS owner_name,\n    users.email AS owner_email,\n    users.phone AS owner_phone\nFROM {{ ref('stg_sales_negotiation_user') }} AS negotiation_user\nLEFT JOIN {{ ref('stg_sales_user') }} AS users\n    ON users.id = negotiation_user.user_id\nWHERE TRUE\nAND negotiation_user.user_role = 'main_owner'\n)\n\n, bidder_info AS ( --- info del cliente que realiz\u00f3 la visita\nSELECT \n    negotiation_user.negotiation_id,\n    users.name||' '||users.last_name AS bidder_name,\n    users.email AS bidder_email,\n    users.phone AS bidder_phone\nFROM {{ ref('stg_sales_negotiation_user') }} AS negotiation_user\nLEFT JOIN {{ ref('stg_sales_user') }} AS users\n    ON users.id = negotiation_user.user_id\nWHERE TRUE\nAND negotiation_user.user_role = 'main_bidder'\n)\n\n, negotiation_bid_info AS (\nSELECT \n    negotiation.id AS negotiation_id,\n    negotiation.created_at_local AS neg_created_at_local,\n    negotiation.unread AS negotiation_unread,\n    ROW_NUMBER() OVER(PARTITION BY negotiation.id ORDER BY bid_created_at_local ASC) AS n_bid,\n    negotiation.country,\n    negotiation.visit_id,\n    negotiation.property_id,\n    negotiation.houm_advisor_name,\n    negotiation.houm_advisor_email,\n    CASE WHEN scheduler_appraisers.contract_type = 'Hired' THEN 'Contratado' ELSE 'Freelance' END houm_advisor_type,\n    property.property_executive_user_id, ---- id de la tabla raw_stage.user\n    property.property_executive_name,\n    property.property_executive_email,\n    bid.id AS bid_id,\n    bid.created_at_local AS bid_created_at_local,\n    bid.updated_at_local AS bid_updated_at_local,\n    negotiation.status AS neg_status,\n    bid.status AS bid_status,\n    bid.status_bid_presented,\n    properties_salesdetails.price AS publication_value,\n    properties_salesdetails.currency AS publication_currency,\n    bid.amount AS bid_value,\n    bid.currency AS bid_currency,\n    bid_response.reason AS reason_rejection,\n    bid_response.last_amount AS seller_desired_value,\n    bid_response.currency AS seller_currency,\n    bid.comment AS bid_comment,\n    negotiation.is_test\nFROM {{ ref('proc_negotiation') }} negotiation\nLEFT JOIN {{ ref('proc_bid') }} bid\n    ON bid.negotiation_id = negotiation.id\nLEFT JOIN {{ ref('stg_sales_bid_response') }} bid_response\n    ON bid_response.bid_id = bid.id\nLEFT JOIN {{ ref('stg_sales_property') }} property\n    ON property.property_id = negotiation.property_id\nLEFT JOIN {{ ref('stg_property_salesdetails') }} properties_salesdetails\n    ON properties_salesdetails.property_id = negotiation.property_id\nLEFT JOIN {{ ref('proc_properties_mz') }} proc_properties_mz\n    ON proc_properties_mz.property_id = negotiation.property_id\nLEFT JOIN {{ ref('dim_macrozones') }} dim_macrozones\n    ON dim_macrozones.geo_id = proc_properties_mz.geo_id\nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers\n    ON negotiation.houm_advisor_uuid::VARCHAR = scheduler_appraisers.id::VARCHAR\nWHERE TRUE\n)\n\nSELECT \n    negotiation_bid_info.*,\n    owner_name AS seller_name,\n    owner_email AS seller_email,\n    owner_phone AS seller_phone,\n    bidder_name AS buyer_name,\n    bidder_email AS buyer_email,\n    bidder_phone AS buyer_phone\nFROM negotiation_bid_info\nLEFT JOIN owner_info\n    ON owner_info.negotiation_id = negotiation_bid_info.negotiation_id\nLEFT JOIN bidder_info\n    ON bidder_info.negotiation_id = negotiation_bid_info.negotiation_id\nWHERE TRUE\nORDER BY neg_created_at_local DESC, negotiation_id ASC, bid_created_at_local DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_negotiation_buyers.sql", "original_file_path": "models/processing/closure/proc_negotiation_buyers.sql", "name": "proc_negotiation_buyers", "alias": "proc_negotiation_buyers", "checksum": {"name": "sha256", "checksum": "93970b96a4ae21491d129b73dc4ccd8e9a5deb5e7a49d64470e1c7682194373b"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_sales_negotiation_user"], ["stg_sales_user"], ["stg_sales_negotiation_user"], ["stg_sales_user"], ["proc_negotiation"], ["proc_bid"], ["stg_sales_bid_response"], ["stg_sales_property"], ["stg_property_salesdetails"], ["proc_properties_mz"], ["dim_macrozones"], ["stg_scheduler_appraisers"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_negotiation_buyers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.29025, "compiled_code": "\n\nWITH owner_info AS ( --- info del propietario de la propiedad\nSELECT\n    negotiation_user.negotiation_id,\n    users.name||' '||users.last_name AS owner_name,\n    users.email AS owner_email,\n    users.phone AS owner_phone\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation_user\" AS negotiation_user\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_user\" AS users\n    ON users.id = negotiation_user.user_id\nWHERE TRUE\nAND negotiation_user.user_role = 'main_owner'\n)\n\n, bidder_info AS ( --- info del cliente que realiz\u00f3 la visita\nSELECT \n    negotiation_user.negotiation_id,\n    users.name||' '||users.last_name AS bidder_name,\n    users.email AS bidder_email,\n    users.phone AS bidder_phone\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation_user\" AS negotiation_user\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_user\" AS users\n    ON users.id = negotiation_user.user_id\nWHERE TRUE\nAND negotiation_user.user_role = 'main_bidder'\n)\n\n, negotiation_bid_info AS (\nSELECT \n    negotiation.id AS negotiation_id,\n    negotiation.created_at_local AS neg_created_at_local,\n    negotiation.unread AS negotiation_unread,\n    ROW_NUMBER() OVER(PARTITION BY negotiation.id ORDER BY bid_created_at_local ASC) AS n_bid,\n    negotiation.country,\n    negotiation.visit_id,\n    negotiation.property_id,\n    negotiation.houm_advisor_name,\n    negotiation.houm_advisor_email,\n    CASE WHEN scheduler_appraisers.contract_type = 'Hired' THEN 'Contratado' ELSE 'Freelance' END houm_advisor_type,\n    property.property_executive_user_id, ---- id de la tabla raw_stage.user\n    property.property_executive_name,\n    property.property_executive_email,\n    bid.id AS bid_id,\n    bid.created_at_local AS bid_created_at_local,\n    bid.updated_at_local AS bid_updated_at_local,\n    negotiation.status AS neg_status,\n    bid.status AS bid_status,\n    bid.status_bid_presented,\n    properties_salesdetails.price AS publication_value,\n    properties_salesdetails.currency AS publication_currency,\n    bid.amount AS bid_value,\n    bid.currency AS bid_currency,\n    bid_response.reason AS reason_rejection,\n    bid_response.last_amount AS seller_desired_value,\n    bid_response.currency AS seller_currency,\n    bid.comment AS bid_comment,\n    negotiation.is_test\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_negotiation\" negotiation\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_bid\" bid\n    ON bid.negotiation_id = negotiation.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid_response\" bid_response\n    ON bid_response.bid_id = bid.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_sales_property\" property\n    ON property.property_id = negotiation.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\" properties_salesdetails\n    ON properties_salesdetails.property_id = negotiation.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" proc_properties_mz\n    ON proc_properties_mz.property_id = negotiation.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_macrozones\n    ON dim_macrozones.geo_id = proc_properties_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers\n    ON negotiation.houm_advisor_uuid::VARCHAR = scheduler_appraisers.id::VARCHAR\nWHERE TRUE\n)\n\nSELECT \n    negotiation_bid_info.*,\n    owner_name AS seller_name,\n    owner_email AS seller_email,\n    owner_phone AS seller_phone,\n    bidder_name AS buyer_name,\n    bidder_email AS buyer_email,\n    bidder_phone AS buyer_phone\nFROM negotiation_bid_info\nLEFT JOIN owner_info\n    ON owner_info.negotiation_id = negotiation_bid_info.negotiation_id\nLEFT JOIN bidder_info\n    ON bidder_info.negotiation_id = negotiation_bid_info.negotiation_id\nWHERE TRUE\nORDER BY neg_created_at_local DESC, negotiation_id ASC, bid_created_at_local DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_negotiation_buyers\""}, "model.houm.proc_closure_contracts": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_contracts"], "unique_id": "model.houm.proc_closure_contracts", "raw_code": "{{ config(materialized='table') }}\n\nSELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM {{ ref('stg_contracts') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_contracts.sql", "original_file_path": "models/processing/closure/proc_closure_contracts.sql", "name": "proc_closure_contracts", "alias": "proc_closure_contracts", "checksum": {"name": "sha256", "checksum": "7aef3d52c886ff75a8a00d87c527645f83dd40d09ef281e5ea3945c637c43266"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_contracts"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1675970038.292136, "compiled_code": "\n\nSELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\""}, "model.houm.proc_evaluation": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_evaluations_scd", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_evaluation"], "unique_id": "model.houm.proc_evaluation", "raw_code": "WITH evaluation_stg AS (\nSELECT\n\t*\nFROM {{ ref('stg_evaluations_scd') }}  \n\n)\n, timezone_transformation AS (\nSELECT \n\tevaluation_stg.* ,\n\tCASE\n        WHEN status = 'Desistido' THEN 'Lost Evaluations'\n        WHEN status IN ('Por comenzar', 'Listo para evaluar', 'Nuevos documentos','Sin documentaci\u00f3n', 'Documentaci\u00f3n pendiente') then 'Ongoing Evaluations'\n        WHEN status = 'Rechazado' THEN 'Commercialy Rejected Evaluations'\n        WHEN status IN ('Aprobado comercialmente','Perfil aprobado') THEN 'Commercially Approved Evaluations'\n        WHEN status = '' THEN 'sin estatus'\n    END AS evaluation_status_grouped ,\n\tprop_mz.geo_id ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, TIMEZONE('UTC',audit_start_dt)) AS audit_start_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, TIMEZONE('UTC',audit_end_dt)) AS audit_end_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, evaluation_stg.created_at::TIMESTAMP) AS created_at_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, evaluation_stg.updated_at::TIMESTAMP) AS updated_at_local \nFROM evaluation_stg \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n\tON prop_mz.property_id = evaluation_stg.property_id\n)\n\nSELECT * FROM timezone_transformation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_evaluation.sql", "original_file_path": "models/processing/closure/proc_evaluation.sql", "name": "proc_evaluation", "alias": "proc_evaluation", "checksum": {"name": "sha256", "checksum": "21f0824f8c764cc24bfeb2108213ceb04b38ce7fcb64bcff0933d273475fa733"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_evaluations_scd"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_evaluation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1675970038.294004, "compiled_code": "WITH evaluation_stg AS (\nSELECT\n\t*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_evaluations_scd\"  \n\n)\n, timezone_transformation AS (\nSELECT \n\tevaluation_stg.* ,\n\tCASE\n        WHEN status = 'Desistido' THEN 'Lost Evaluations'\n        WHEN status IN ('Por comenzar', 'Listo para evaluar', 'Nuevos documentos','Sin documentaci\u00f3n', 'Documentaci\u00f3n pendiente') then 'Ongoing Evaluations'\n        WHEN status = 'Rechazado' THEN 'Commercialy Rejected Evaluations'\n        WHEN status IN ('Aprobado comercialmente','Perfil aprobado') THEN 'Commercially Approved Evaluations'\n        WHEN status = '' THEN 'sin estatus'\n    END AS evaluation_status_grouped ,\n\tprop_mz.geo_id ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, TIMEZONE('UTC',audit_start_dt)) AS audit_start_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, TIMEZONE('UTC',audit_end_dt)) AS audit_end_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, evaluation_stg.created_at::TIMESTAMP) AS created_at_local ,\n\tCONVERT_TIMEZONE(prop_mz.timezone, evaluation_stg.updated_at::TIMESTAMP) AS updated_at_local \nFROM evaluation_stg \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n\tON prop_mz.property_id = evaluation_stg.property_id\n)\n\nSELECT * FROM timezone_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_evaluation\""}, "model.houm.proc_closure_contract_historical_status": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_contract_historical_status"], "unique_id": "model.houm.proc_closure_contract_historical_status", "raw_code": "--  Crear la tabla basica \n{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_contracts'   , 'is_historical':'TRUE' , 'has_stg':'FALSE' },\n                              {'table_name':'stg_contracts'                     , 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [{'column_name':'status', 'is_boolean':'FALSE' },\n                       {'column_name':'online_process_status'  , 'is_boolean':'FALSE' }  ]  , \n            id_columns = 'id' ,  \n            needs_post_process = 'TRUE' ) }}\n\n-- Agregar traducciones post consolidadacion.\n, variables_tralation AS (\n    SELECT \n        id , \n        index_track AS status_index ,\n        CASE  \n            WHEN status IN ('Rechazado','Rechazado por Propietario','Desistido') THEN 'Perdido'\n            WHEN status = 'Pagado' THEN 'Pagado'\n            WHEN status IN ('Generar boton de pago','Boton de pago enviado') THEN 'Boton de pago'\n            WHEN status = 'Listo para redaccion' THEN 'Firmas'\n            WHEN status IN ('Aprobacion propietario', 'Perfil enviado' , 'Aprobado por propietario', 'Perfil aprobado') THEN 'Aprobaci\u00f3n Propietario'\n            ELSE 'Other'\n        END macro_status ,\n        status ,\n        online_process_status , \n        CASE online_process_status\n            WHEN 'Links sent lessor' THEN 'Contrato enviado propietario'\n            WHEN 'Links sent others' THEN 'Contrato enviado postulante'\n            WHEN 'Signatures completed' THEN 'Contrato firmado ambas partes'\n            ELSE online_process_status\n        END AS online_process_status_translation ,\n        audit_start_dt AS date_start ,\n        audit_end_dt AS date_end , \n         '{{ var(\"processed_time\") }}' AS processed_time\n    FROM group_period  \n)\n\nSELECT \n    *\nFROM variables_tralation", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_contract_historical_status.sql", "original_file_path": "models/processing/closure/proc_closure_contract_historical_status.sql", "name": "proc_closure_contract_historical_status", "alias": "proc_closure_contract_historical_status", "checksum": {"name": "sha256", "checksum": "559a8d257180a516d9fd65c124ebbac896e967e876d2324f673783c104d68537"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_contracts"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_contract_historical_status.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1675970038.295692, "compiled_code": "--  Crear la tabla basica \nWITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_contracts\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.status::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.status::TEXT \n        END AS status,\n        CASE \n            WHEN historical.online_process_status::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.online_process_status::TEXT \n        END AS online_process_status \n    FROM current_values\n        LEFT JOIN historical.historical_contracts AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        status||online_process_status \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        status  ,\n        online_process_status  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        status  ,\n        online_process_status  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,status,online_process_status \n)\n\n\n-- Agregar traducciones post consolidadacion.\n, variables_tralation AS (\n    SELECT \n        id , \n        index_track AS status_index ,\n        CASE  \n            WHEN status IN ('Rechazado','Rechazado por Propietario','Desistido') THEN 'Perdido'\n            WHEN status = 'Pagado' THEN 'Pagado'\n            WHEN status IN ('Generar boton de pago','Boton de pago enviado') THEN 'Boton de pago'\n            WHEN status = 'Listo para redaccion' THEN 'Firmas'\n            WHEN status IN ('Aprobacion propietario', 'Perfil enviado' , 'Aprobado por propietario', 'Perfil aprobado') THEN 'Aprobaci\u00f3n Propietario'\n            ELSE 'Other'\n        END macro_status ,\n        status ,\n        online_process_status , \n        CASE online_process_status\n            WHEN 'Links sent lessor' THEN 'Contrato enviado propietario'\n            WHEN 'Links sent others' THEN 'Contrato enviado postulante'\n            WHEN 'Signatures completed' THEN 'Contrato firmado ambas partes'\n            ELSE online_process_status\n        END AS online_process_status_translation ,\n        audit_start_dt AS date_start ,\n        audit_end_dt AS date_end , \n         '2023-02-09 16:13:54.685542-03:00' AS processed_time\n    FROM group_period  \n)\n\nSELECT \n    *\nFROM variables_tralation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_contract_historical_status\""}, "model.houm.proc_movements_originals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.split_movements"], "nodes": ["model.houm.proc_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements_originals"], "unique_id": "model.houm.proc_movements_originals", "raw_code": "{{ config(materialized='table') }}\n\nWITH original_amount AS (\nSELECT \n    _id,\n    country,\n    property_id,\n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown \nFROM {{ref('proc_movements')}}\nWHERE TRUE \n    AND (original_amount_breakdown IS NOT NULL)\n    AND original_amount_breakdown !=  '[]'\n)\n\n{{ split_movements( column_name = 'original_amount', breakdown_type = 'original' , N = 5 )  }}\n\n, orginals_json AS (\nSELECT \n    SUBSTRING(breakdown , 0 , CHARINDEX(', \"created_at\"', breakdown) ) || '}' AS breakdown_details, \n    '{' || SUBSTRING(breakdown , NULLIF(CHARINDEX('currency', breakdown) - 1 , -1) , GREATEST( CHARINDEX('}', breakdown) - CHARINDEX('currency', breakdown)  ,0) + 1 ) || '}' AS currency,\n    SUBSTRING(breakdown , CHARINDEX('datetime.datetime', breakdown) + 17, GREATEST( CHARINDEX(')', breakdown) - CHARINDEX('datetime.datetime', breakdown)- 16,0) ) AS created_at_details,\n    *\nFROM original_amount_union\n)\n\nSELECT\n    movement_id,\n    country,\n    property_id,\n    agreed_date,\n    breakdown_type, \n    to_timestamp( CASE WHEN len(created_at_details) > 10 THEN  created_at_details ELSE NULL END , '(YYYY,MM,DD,HH24,MI,SS,FF)' ) AS created_at, \n    CASE \n        WHEN breakdown_details LIKE '%\"_id\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_id', true ),'')\n        ELSE NULL \n    END AS _id,\n    CASE \n        WHEN breakdown_details LIKE '%\"_cls\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_cls', true ),'')\n        ELSE NULL \n    END AS _cls,\n    CASE \n        WHEN breakdown_details LIKE '%\"label\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'label', true ),'')\n        ELSE NULL \n    END AS label,\n    CASE \n        WHEN breakdown_details LIKE '%\"description\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'description', true ),'')\n        ELSE NULL \n    END AS description, \n    CASE \n        WHEN currency LIKE '%\"currency\":%' THEN \n        NULLIF(json_extract_path_text( currency , 'currency', true ),'')\n        ELSE NULL \n    END AS currency,\n    CASE \n        WHEN breakdown_details LIKE '%\"value\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'value', true ),'')\n        ELSE NULL\n    END AS value,\n    breakdown, \n    breakdowns\nFROM orginals_json", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements_originals.sql", "original_file_path": "models/processing/payments/proc_movements_originals.sql", "name": "proc_movements_originals", "alias": "proc_movements_originals", "checksum": {"name": "sha256", "checksum": "dda2a984b79ac6d352e8ac7c60d6d7c16ae9a09da1e54b5ef14ce5ef784763bf"}, "tags": ["dw", "processing", "payments"], "refs": [["proc_movements"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements_originals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"], "materialized": "table"}, "created_at": 1675970038.31088, "compiled_code": "\n\nWITH original_amount AS (\nSELECT \n    _id,\n    country,\n    property_id,\n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_movements\"\nWHERE TRUE \n    AND (original_amount_breakdown IS NOT NULL)\n    AND original_amount_breakdown !=  '[]'\n)\n\n\n, original_amount_breakdown_1 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(original_amount_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 1 ) AS breakdown\nFROM original_amount\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, original_amount_breakdown_2 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(original_amount_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 2 ) AS breakdown\nFROM original_amount\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, original_amount_breakdown_3 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(original_amount_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 3 ) AS breakdown\nFROM original_amount\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, original_amount_breakdown_4 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(original_amount_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 4 ) AS breakdown\nFROM original_amount\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, original_amount_breakdown_5 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'original' AS breakdown_type,\n    original_amount_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(original_amount_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 5 ) AS breakdown\nFROM original_amount\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, original_amount_union AS (\nSELECT \n    *\nFROM original_amount_breakdown_1\nUNION ALL  \nSELECT \n    *\nFROM original_amount_breakdown_2\nUNION ALL  \nSELECT \n    *\nFROM original_amount_breakdown_3\nUNION ALL  \nSELECT \n    *\nFROM original_amount_breakdown_4\nUNION ALL  \nSELECT \n    *\nFROM original_amount_breakdown_5\n \n) \n\n\n, orginals_json AS (\nSELECT \n    SUBSTRING(breakdown , 0 , CHARINDEX(', \"created_at\"', breakdown) ) || '}' AS breakdown_details, \n    '{' || SUBSTRING(breakdown , NULLIF(CHARINDEX('currency', breakdown) - 1 , -1) , GREATEST( CHARINDEX('}', breakdown) - CHARINDEX('currency', breakdown)  ,0) + 1 ) || '}' AS currency,\n    SUBSTRING(breakdown , CHARINDEX('datetime.datetime', breakdown) + 17, GREATEST( CHARINDEX(')', breakdown) - CHARINDEX('datetime.datetime', breakdown)- 16,0) ) AS created_at_details,\n    *\nFROM original_amount_union\n)\n\nSELECT\n    movement_id,\n    country,\n    property_id,\n    agreed_date,\n    breakdown_type, \n    to_timestamp( CASE WHEN len(created_at_details) > 10 THEN  created_at_details ELSE NULL END , '(YYYY,MM,DD,HH24,MI,SS,FF)' ) AS created_at, \n    CASE \n        WHEN breakdown_details LIKE '%\"_id\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_id', true ),'')\n        ELSE NULL \n    END AS _id,\n    CASE \n        WHEN breakdown_details LIKE '%\"_cls\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_cls', true ),'')\n        ELSE NULL \n    END AS _cls,\n    CASE \n        WHEN breakdown_details LIKE '%\"label\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'label', true ),'')\n        ELSE NULL \n    END AS label,\n    CASE \n        WHEN breakdown_details LIKE '%\"description\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'description', true ),'')\n        ELSE NULL \n    END AS description, \n    CASE \n        WHEN currency LIKE '%\"currency\":%' THEN \n        NULLIF(json_extract_path_text( currency , 'currency', true ),'')\n        ELSE NULL \n    END AS currency,\n    CASE \n        WHEN breakdown_details LIKE '%\"value\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'value', true ),'')\n        ELSE NULL\n    END AS value,\n    breakdown, \n    breakdowns\nFROM orginals_json", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements_originals\""}, "model.houm.proc_movements_mx": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_mx_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements_mx"], "unique_id": "model.houm.proc_movements_mx", "raw_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n\n\n\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    person_data_sub_document_type::VARCHAR,\n    NULL::VARCHAR AS person_data_sub_document, \n    currency,\n    method::VARCHAR,\n    type,\n    NULL::INT AS plan_type, \n    'banwire' AS request_type,\n    banwire_notification_ids AS  request_ids,\n    banwire_notification::VARCHAR AS request,\n    payment::VARCHAR,\n    date,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM {{ ref('stg_payments_mx_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements_mx.sql", "original_file_path": "models/processing/payments/proc_movements_mx.sql", "name": "proc_movements_mx", "alias": "proc_movements_mx", "checksum": {"name": "sha256", "checksum": "5da5dc79fce4991359bd6535fa8790d0cb4d2a601bf5d20a373babb2c3e22d25"}, "tags": ["dw", "processing", "payments"], "refs": [["stg_payments_mx_db_movements"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"]}, "created_at": 1675970038.317159, "compiled_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n\n\n\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    person_data_sub_document_type::VARCHAR,\n    NULL::VARCHAR AS person_data_sub_document, \n    currency,\n    method::VARCHAR,\n    type,\n    NULL::INT AS plan_type, \n    'banwire' AS request_type,\n    banwire_notification_ids AS  request_ids,\n    banwire_notification::VARCHAR AS request,\n    payment::VARCHAR,\n    date,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements_mx\""}, "model.houm.proc_movements_details": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.split_movements"], "nodes": ["model.houm.proc_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements_details"], "unique_id": "model.houm.proc_movements_details", "raw_code": "{{ config(materialized='table') }}\n\nWITH movements AS (\nSELECT \n    *\nFROM {{ ref('proc_movements') }}\n)\n\n, discounts AS (\nSELECT \n    *\nFROM movements\nWHERE TRUE \n    AND (discounts_breakdown IS NOT NULL OR discounts IS NOT NULL)\n    AND discounts_breakdown <> '[]'\n)\n{{ split_movements( column_name = 'discounts', breakdown_type = 'descuento' , N = 8 )  }}\n, additionals AS (\nSELECT \n    *\nFROM movements\nWHERE TRUE\n    AND (additionals_breakdown IS NOT NULL OR additionals IS NOT NULL )\n    AND additionals_breakdown <>  '[]'\n)\n{{ split_movements( column_name = 'additionals', breakdown_type = 'abono' , N = 9 )  }}\n, adjustments_breakdowns AS (\nSELECT \n    *\nFROM discounts_union\nUNION ALL\nSELECT \n    *\nFROM additionals_union\n)\n\n, adjustments_json AS (\nSELECT \n    SUBSTRING(breakdown , 0 , CHARINDEX(', \"created_at\"', breakdown) ) || '}' AS breakdown_details , \n    '{' || SUBSTRING(breakdown , NULLIF(CHARINDEX('currency', breakdown) - 1 , -1) , GREATEST( CHARINDEX('}', breakdown) - CHARINDEX('currency', breakdown)  ,0) + 1 ) || '}' AS currency,\n    SUBSTRING(breakdown , CHARINDEX('datetime.datetime', breakdown) + 17, GREATEST( CHARINDEX(')', breakdown) - CHARINDEX('datetime.datetime', breakdown)- 16,0)  ) AS created_at_details,\n    *\nFROM adjustments_breakdowns\n)\n\nSELECT\n    movement_id,\n    country,\n    property_id,\n    agreed_date,\n    breakdown_type, \n    to_timestamp( CASE WHEN len(created_at_details) > 10 THEN  created_at_details ELSE NULL END , '(YYYY,MM,DD,HH24,MI,SS,FF)' ) AS created_at, \n    CASE \n        WHEN breakdown_details LIKE '%\"_id\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_id', true ),'')\n        ELSE NULL \n    END AS _id,\n    CASE \n        WHEN breakdown_details LIKE '%\"_cls\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_cls', true ),'')\n        ELSE NULL \n    END AS _cls,\n    CASE \n        WHEN breakdown_details LIKE '%\"label\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'label', true ),'')\n        ELSE NULL \n    END AS label,\n    CASE \n        WHEN breakdown_details LIKE '%\"description\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'description', true ),'')\n        ELSE NULL \n    END AS description, \n    CASE \n        WHEN currency LIKE '%\"currency\":%' THEN \n        NULLIF(json_extract_path_text( currency , 'currency', true ),'')\n        ELSE NULL \n    END AS currency,\n    CASE \n        WHEN breakdown_details LIKE '%\"value\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'value', true ),'')\n        ELSE NULL\n    END AS value,\n    breakdown, \n    breakdowns\nFROM adjustments_json", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements_details.sql", "original_file_path": "models/processing/payments/proc_movements_details.sql", "name": "proc_movements_details", "alias": "proc_movements_details", "checksum": {"name": "sha256", "checksum": "bf46bcf451c3a7041c0b20f429d84d0c27b702f59986b34180a2183b8d406d52"}, "tags": ["dw", "processing", "payments"], "refs": [["proc_movements"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements_details.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"], "materialized": "table"}, "created_at": 1675970038.318909, "compiled_code": "\n\nWITH movements AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_movements\"\n)\n\n, discounts AS (\nSELECT \n    *\nFROM movements\nWHERE TRUE \n    AND (discounts_breakdown IS NOT NULL OR discounts IS NOT NULL)\n    AND discounts_breakdown <> '[]'\n)\n\n, discounts_breakdown_1 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 1 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_2 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 2 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_3 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 3 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_4 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 4 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_5 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 5 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_6 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 6 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_7 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 7 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_breakdown_8 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'descuento' AS breakdown_type,\n    discounts_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(discounts_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 8 ) AS breakdown\nFROM discounts\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, discounts_union AS (\nSELECT \n    *\nFROM discounts_breakdown_1\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_2\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_3\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_4\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_5\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_6\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_7\nUNION ALL  \nSELECT \n    *\nFROM discounts_breakdown_8\n \n) \n\n, additionals AS (\nSELECT \n    *\nFROM movements\nWHERE TRUE\n    AND (additionals_breakdown IS NOT NULL OR additionals IS NOT NULL )\n    AND additionals_breakdown <>  '[]'\n)\n\n, additionals_breakdown_1 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 1 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_2 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 2 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_3 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 3 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_4 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 4 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_5 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 5 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_6 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 6 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_7 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 7 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_8 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 8 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_breakdown_9 AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    'abono' AS breakdown_type,\n    additionals_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE(additionals_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , 9 ) AS breakdown\nFROM additionals\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n\n, additionals_union AS (\nSELECT \n    *\nFROM additionals_breakdown_1\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_2\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_3\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_4\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_5\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_6\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_7\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_8\nUNION ALL  \nSELECT \n    *\nFROM additionals_breakdown_9\n \n) \n\n, adjustments_breakdowns AS (\nSELECT \n    *\nFROM discounts_union\nUNION ALL\nSELECT \n    *\nFROM additionals_union\n)\n\n, adjustments_json AS (\nSELECT \n    SUBSTRING(breakdown , 0 , CHARINDEX(', \"created_at\"', breakdown) ) || '}' AS breakdown_details , \n    '{' || SUBSTRING(breakdown , NULLIF(CHARINDEX('currency', breakdown) - 1 , -1) , GREATEST( CHARINDEX('}', breakdown) - CHARINDEX('currency', breakdown)  ,0) + 1 ) || '}' AS currency,\n    SUBSTRING(breakdown , CHARINDEX('datetime.datetime', breakdown) + 17, GREATEST( CHARINDEX(')', breakdown) - CHARINDEX('datetime.datetime', breakdown)- 16,0)  ) AS created_at_details,\n    *\nFROM adjustments_breakdowns\n)\n\nSELECT\n    movement_id,\n    country,\n    property_id,\n    agreed_date,\n    breakdown_type, \n    to_timestamp( CASE WHEN len(created_at_details) > 10 THEN  created_at_details ELSE NULL END , '(YYYY,MM,DD,HH24,MI,SS,FF)' ) AS created_at, \n    CASE \n        WHEN breakdown_details LIKE '%\"_id\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_id', true ),'')\n        ELSE NULL \n    END AS _id,\n    CASE \n        WHEN breakdown_details LIKE '%\"_cls\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , '_cls', true ),'')\n        ELSE NULL \n    END AS _cls,\n    CASE \n        WHEN breakdown_details LIKE '%\"label\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'label', true ),'')\n        ELSE NULL \n    END AS label,\n    CASE \n        WHEN breakdown_details LIKE '%\"description\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'description', true ),'')\n        ELSE NULL \n    END AS description, \n    CASE \n        WHEN currency LIKE '%\"currency\":%' THEN \n        NULLIF(json_extract_path_text( currency , 'currency', true ),'')\n        ELSE NULL \n    END AS currency,\n    CASE \n        WHEN breakdown_details LIKE '%\"value\":%' THEN \n        NULLIF(json_extract_path_text( breakdown_details , 'value', true ),'')\n        ELSE NULL\n    END AS value,\n    breakdown, \n    breakdowns\nFROM adjustments_json", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements_details\""}, "model.houm.proc_movements_co": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_co_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements_co"], "unique_id": "model.houm.proc_movements_co", "raw_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n\n\n\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    person_data_sub_document_type::VARCHAR,\n    person_data_sub_document,\n    currency,\n    method::varchar,\n    type,\n    plan_type,\n    'placetopay' AS request_type,\n    placetopay_request_ids AS request_ids,\n    placetopay_request::VARCHAR AS request ,\n    payment::VARCHAR,\n    date,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM {{ ref('stg_payments_co_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements_co.sql", "original_file_path": "models/processing/payments/proc_movements_co.sql", "name": "proc_movements_co", "alias": "proc_movements_co", "checksum": {"name": "sha256", "checksum": "511af066ba445bda1bec8228e0f65b1783fd75c87c757808f9038ae4afe36ad5"}, "tags": ["dw", "processing", "payments"], "refs": [["stg_payments_co_db_movements"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"]}, "created_at": 1675970038.323284, "compiled_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n\n\n\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    person_data_sub_document_type::VARCHAR,\n    person_data_sub_document,\n    currency,\n    method::varchar,\n    type,\n    plan_type,\n    'placetopay' AS request_type,\n    placetopay_request_ids AS request_ids,\n    placetopay_request::VARCHAR AS request ,\n    payment::VARCHAR,\n    date,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements_co\""}, "model.houm.proc_movements_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_cl_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements_cl"], "unique_id": "model.houm.proc_movements_cl", "raw_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n--    legacy_id ,\n--    contract_amount ,\n--    servipag_uid ,\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    'RUT'::VARCHAR AS person_data_sub_document_type,\n    person_data_sub_document,\n    currency,\n    method::VARCHAR,\n    type,\n    plan_type,\n    'placetopay' AS request_type,\n    placetopay_request_ids AS request_ids,\n    placetopay_request::VARCHAR AS request,\n    payment::VARCHAR,\n    date::timestamptz,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM {{ ref('stg_payments_cl_db_movements') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements_cl.sql", "original_file_path": "models/processing/payments/proc_movements_cl.sql", "name": "proc_movements_cl", "alias": "proc_movements_cl", "checksum": {"name": "sha256", "checksum": "de07c1928a4bfd9cd07ed25b81c9fb571c652d2924a66f4ae5d37538db45a41b"}, "tags": ["dw", "processing", "payments"], "refs": [["stg_payments_cl_db_movements"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"]}, "created_at": 1675970038.324856, "compiled_code": "SELECT \n    _id,\n    _cls,\n    group_id,\n    property_id,\n    description,\n    status,\n    agreed_date,\n    original_amount::FLOAT,\n    discounts::FLOAT,\n    additionals::FLOAT,\n    total_amount::FLOAT,\n    original_amount_breakdown,\n    discounts_breakdown,\n    additionals_breakdown,\n    receipt_ids,\n    healthy,\n    errors,\n--    legacy_id ,\n--    contract_amount ,\n--    servipag_uid ,\n    created_at,\n    updated_at,\n    concept,\n\n    person_data_sub_person_id,\n    person_data_sub_full_name,\n    person_data_sub_email,\n    'RUT'::VARCHAR AS person_data_sub_document_type,\n    person_data_sub_document,\n    currency,\n    method::VARCHAR,\n    type,\n    plan_type,\n    'placetopay' AS request_type,\n    placetopay_request_ids AS request_ids,\n    placetopay_request::VARCHAR AS request,\n    payment::VARCHAR,\n    date::timestamptz,\n    subscription_id,\n    CASE \n        WHEN type =  'OUTFLOW' THEN 'LANDLORD'\n        WHEN type =  'INCOME' THEN 'TENANT'\n        ELSE NULL\n    END movement_to \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements_cl\""}, "model.houm.proc_movements": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_movements_cl", "model.houm.proc_movements_co", "model.houm.proc_movements_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "payments"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "payments", "proc_movements"], "unique_id": "model.houm.proc_movements", "raw_code": "{{ config(materialized='table') }}\n\nWITH movements AS ( \nSELECT \n    'Chile' AS country,\n    *\nFROM {{ ref('proc_movements_cl') }}\nUNION ALL\nSELECT \n    'Colombia' AS country,\n    *\nFROM {{ ref('proc_movements_co') }}\nUNION ALL\nSELECT \n    'Mexico' AS country,\n    *\nFROM {{ ref('proc_movements_mx') }}\n)\n\nSELECT \n    movements.*\nFROM movements", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/payments/proc_movements.sql", "original_file_path": "models/processing/payments/proc_movements.sql", "name": "proc_movements", "alias": "proc_movements", "checksum": {"name": "sha256", "checksum": "97936338c80a3c000c76764d60143acf1f00e2839301ae943bd887fd2e5f2d77"}, "tags": ["dw", "processing", "payments"], "refs": [["proc_movements_cl"], ["proc_movements_co"], ["proc_movements_mx"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/payments/proc_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "payments"], "materialized": "table"}, "created_at": 1675970038.326584, "compiled_code": "\n\nWITH movements AS ( \nSELECT \n    'Chile' AS country,\n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_movements_cl\"\nUNION ALL\nSELECT \n    'Colombia' AS country,\n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_movements_co\"\nUNION ALL\nSELECT \n    'Mexico' AS country,\n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_movements_mx\"\n)\n\nSELECT \n    movements.*\nFROM movements", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_movements\""}, "model.houm.proc_pipedrive_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_pipelines", "model.houm.proc_pipedrive_labels", "model.houm.proc_properties_mz", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_stages", "model.houm.proc_marketing_paid_media_campaign", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_leads"], "unique_id": "model.houm.proc_pipedrive_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH properties_translation AS (\nSELECT \n    id, \n    business_type,\n    CASE \n       WHEN business_type LIKE 'Sale%' THEN 'Sales'\n       WHEN business_type LIKE 'Rental' THEN business_type \n       ELSE NULL \n    END business_type_translation, \n    supply_source,\n    supply_relation, \n    CASE \n        WHEN supply_relation LIKE 'New Properties' THEN supply_relation\n        ELSE 'Second Hand'\n    END supply_relation_translation\nFROM {{ref('proc_properties')}} AS properties \n)\n\n, deals_translation AS (\nSELECT \n    *, \n    CASE \n       WHEN profile_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN profile_property_condition = 'Usada' THEN 'Second Hand' \n       ELSE NULL \n    END AS profile_property_condition_translation, \n    CASE\n       WHEN source_buyer_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN source_buyer_property_condition = 'Usada' THEN 'Second Hand' \n    END AS source_buyer_property_condition_translation\nFROM {{ref('proc_pipedrive_deals')}} AS deals \nWHERE  \n    deals.add_time > '2022-01-01'::DATE\n    OR deals.update_time > '2022-01-01'::DATE \n)\n\n, pipedrive_leads AS (\nSELECT  \n    --- Deal Basics ----------\n    deals.id AS deal_id,\n    deals.title, \n    deals.add_time, \n    deals.update_time, \n    timezone('UTC', deals.add_time)::timestamptz AS add_time_utc, \n    timezone('UTC', deals.update_time)::timestamptz AS update_time_utc,\n    partner_code, \n    --- Pipeline Info ---------\n    ---------------------------\n    pipeline.id AS pipeline_id, \n    pipeline.name AS pipeline_name, \n    pipeline.country AS pipeline_country, \n    pipeline.country_geo_id AS pipeline_geo_id,\n    pipeline.funnel AS funnel, \n    -- Person Details ---------\n    ---------------------------\n    persons.id   AS person_id,\n    persons.name AS person_name,\n    COALESCE(persons.email, deals.email) AS person_email,\n    COALESCE(persons.phone, deals.phone) AS person_phone,\n    --- Pipedrive Deals Info --\n    ---------------------------\n    deals.owner_name,\n    deals.owner_email,\n    deals.owner_id,\n    stages.id AS stage_id,\n    stages.name AS stage_name, \n    stages.unified_stage_name AS stage_unified_name,\n    stages.order AS stage_order,\n    deals.status, \n    deals.label_id,\n    deals.label,\n    deals.active,\n    CASE \n        WHEN pipeline.business = 'Rental/Sales' THEN COALESCE(labels.business, stages.business, pipeline.business)\n        WHEN pipeline.business = 'Sales' THEN stages.business\n        WHEN pipeline.business = 'Rental' THEN stages.business \n        ELSE COALESCE(labels.business, stages.business, deals.business_deal, properties.business_type_translation,'Rental/Sales') \n    END AS deal_business,\n    CASE \n        WHEN deals.profile_ap_buyers IS NOT NULL THEN TRUE\n        WHEN deals.source LIKE '%Autoperfilamiento%' THEN TRUE\n        WHEN deals.label LIKE 'Autogestionado' THEN TRUE \n        ELSE FALSE \n    END AS is_selfprofiling, \n    -- Before Negotiation/Source \n    ---------------------------\n    deals.marketing_id , \n    SPLIT_PART(deals.marketing_id, '_', 1) AS campaign_id,\n    SPLIT_PART(deals.marketing_id, '_', 2) AS ad_group_id, \n    SPLIT_PART(deals.marketing_id, '_', 3) AS ad_id,\n    paid_media.geo_id AS paid_media_geo_id,\n    deals.marketing_lead_id,\n    deals.utm_term,   \n    deals.source,\n    deals.unified_source,\n    deals.source_city, -- Add Cities from campaigns in the part of the model\n    source_cities.geo_id AS source_geo_id,\n    --- Demand ----------------\n    ---------------------------\n    deals.source_buyer_property_condition,  \n    --- After Negotiation -----\n    ---------------------------\n    deals.property_id,\n    properties.supply_source AS property_supply_source,\n    negotiation_cities.city AS negotiation_city, \n    COALESCE( prop_mz.geo_id, \n              negotiation_cities.geo_id, \n              source_cities.geo_id, \n              pipeline.country_geo_id,\n              paid_media.geo_id ) AS negotiation_geo_id,\n    -- Supply data  -----------\n    ---------------------------\n    CASE\n       WHEN deals.qualification IS NULL THEN NULL \n       ELSE deals.qualification_date::DATE \n    END AS supply_qualification_date, \n    deals.qualification AS supply_qualification, \n    -- Demand ----------------- \n    ---------------------------\n    CASE \n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE AND buyer_qualification IN (3,4,5) THEN COALESCE(deals.buyer_qualification_date::DATE, deals.qualification_date::DATE)\n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE THEN NULL \n         ELSE deals.buyer_qualification_date::DATE\n    END AS buyer_qualification_date,\n    deals.buyer_qualification, \n    COALESCE(\n            properties.supply_relation_translation, \n            profile_property_condition_translation,\n            source_buyer_property_condition_translation, \n            labels.property_condition) AS negotiation_property_condition, \n    -- Profile information\n    deals.profile_financial,\n    deals.profile_buying_interest,\n    deals.profile_timing_need,\n    deals.profile_income, \n    deals.profile_savings_initial_fee,\n    deals.profile_decision_maker,\n    deals.profile_property_type,  \n    deals.profile_property_condition_translation AS profile_property_condition,\n    deals.profile_geographic_interest, \n    deals.profile_rooms, \n    deals.profile_bathrooms, \n    deals.profile_parkings, \n    deals.profile_storage,   \n    deals.profile_source_of_income, \n    deals.profile_income_type,\n    deals.profile_profession, \n    deals.profile_income_supplement, \n    deals.profile_saving_capacity,\n    deals.profile_ap_buyers,\n    -- Deal Varibles for won o lost deal \n    won_time,\n    first_won_time,\n    deals.lost_reason,\n    deals.lost_time, \n    -- Auxliar Varibles to Defines processes in pipe \n    deals.deleted AS is_deleted,\n    CASE  \n        when persons.is_test THEN TRUE\n        WHEN lost_reason LIKE '%Test%' THEN TRUE\n        WHEN lost_reason = 'Pruebas' THEN TRUE\n        ELSE FALSE \n    END AS is_test,\n    CASE \n        WHEN lost_reason = 'Cotizaci\u00f3n Duplicada' THEN TRUE\n        ELSE FALSE \n    END AS is_merged\nFROM  deals_translation AS deals \nLEFT JOIN {{ref('proc_pipedrive_persons')}} AS persons \n    ON deals.person_id = persons.id\nLEFT JOIN {{ref('proc_pipedrive_pipelines')}} AS pipeline  \n    ON pipeline.id = deals.pipeline_id \nLEFT JOIN {{ref('proc_pipedrive_labels')}} AS labels  \n    ON labels.id = deals.label_id \nLEFT JOIN {{ref('proc_properties_mz')}} AS prop_mz\n    ON prop_mz.property_id = deals.property_id\nLEFT JOIN {{ref('proc_pipedrive_cities')}} AS source_cities \n    ON source_cities.city = deals.source_city\nLEFT JOIN {{ref('proc_pipedrive_cities')}} AS negotiation_cities \n    ON negotiation_cities.city = deals.negotiation_city\nLEFT JOIN properties_translation AS properties \n    ON properties.id = deals.property_id \nLEFT JOIN {{ref('proc_pipedrive_stages')}} as stages \n    ON stages.id = deals.stage_id\nLEFT JOIN {{ref('proc_marketing_paid_media_campaign')}} as paid_media\n    ON SPLIT_PART(deals.marketing_id, '_', 1 ) = paid_media.campaign_id\n)\n\nSELECT \n    pipedrive_leads.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city  \nFROM pipedrive_leads\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = pipedrive_leads.negotiation_geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_leads.sql", "original_file_path": "models/processing/tools/proc_pipedrive_leads.sql", "name": "proc_pipedrive_leads", "alias": "proc_pipedrive_leads", "checksum": {"name": "sha256", "checksum": "49b9b135a2420c7ffd56fd5c1c83a3e30df2d05e2775cfa245fdb2f02326ed05"}, "tags": ["dw", "processing", "tools"], "refs": [["proc_properties"], ["proc_pipedrive_deals"], ["proc_pipedrive_persons"], ["proc_pipedrive_pipelines"], ["proc_pipedrive_labels"], ["proc_properties_mz"], ["proc_pipedrive_cities"], ["proc_pipedrive_cities"], ["proc_pipedrive_stages"], ["proc_marketing_paid_media_campaign"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.3283331, "compiled_code": "\n\nWITH properties_translation AS (\nSELECT \n    id, \n    business_type,\n    CASE \n       WHEN business_type LIKE 'Sale%' THEN 'Sales'\n       WHEN business_type LIKE 'Rental' THEN business_type \n       ELSE NULL \n    END business_type_translation, \n    supply_source,\n    supply_relation, \n    CASE \n        WHEN supply_relation LIKE 'New Properties' THEN supply_relation\n        ELSE 'Second Hand'\n    END supply_relation_translation\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties \n)\n\n, deals_translation AS (\nSELECT \n    *, \n    CASE \n       WHEN profile_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN profile_property_condition = 'Usada' THEN 'Second Hand' \n       ELSE NULL \n    END AS profile_property_condition_translation, \n    CASE\n       WHEN source_buyer_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN source_buyer_property_condition = 'Usada' THEN 'Second Hand' \n    END AS source_buyer_property_condition_translation\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS deals \nWHERE  \n    deals.add_time > '2022-01-01'::DATE\n    OR deals.update_time > '2022-01-01'::DATE \n)\n\n, pipedrive_leads AS (\nSELECT  \n    --- Deal Basics ----------\n    deals.id AS deal_id,\n    deals.title, \n    deals.add_time, \n    deals.update_time, \n    timezone('UTC', deals.add_time)::timestamptz AS add_time_utc, \n    timezone('UTC', deals.update_time)::timestamptz AS update_time_utc,\n    partner_code, \n    --- Pipeline Info ---------\n    ---------------------------\n    pipeline.id AS pipeline_id, \n    pipeline.name AS pipeline_name, \n    pipeline.country AS pipeline_country, \n    pipeline.country_geo_id AS pipeline_geo_id,\n    pipeline.funnel AS funnel, \n    -- Person Details ---------\n    ---------------------------\n    persons.id   AS person_id,\n    persons.name AS person_name,\n    COALESCE(persons.email, deals.email) AS person_email,\n    COALESCE(persons.phone, deals.phone) AS person_phone,\n    --- Pipedrive Deals Info --\n    ---------------------------\n    deals.owner_name,\n    deals.owner_email,\n    deals.owner_id,\n    stages.id AS stage_id,\n    stages.name AS stage_name, \n    stages.unified_stage_name AS stage_unified_name,\n    stages.order AS stage_order,\n    deals.status, \n    deals.label_id,\n    deals.label,\n    deals.active,\n    CASE \n        WHEN pipeline.business = 'Rental/Sales' THEN COALESCE(labels.business, stages.business, pipeline.business)\n        WHEN pipeline.business = 'Sales' THEN stages.business\n        WHEN pipeline.business = 'Rental' THEN stages.business \n        ELSE COALESCE(labels.business, stages.business, deals.business_deal, properties.business_type_translation,'Rental/Sales') \n    END AS deal_business,\n    CASE \n        WHEN deals.profile_ap_buyers IS NOT NULL THEN TRUE\n        WHEN deals.source LIKE '%Autoperfilamiento%' THEN TRUE\n        WHEN deals.label LIKE 'Autogestionado' THEN TRUE \n        ELSE FALSE \n    END AS is_selfprofiling, \n    -- Before Negotiation/Source \n    ---------------------------\n    deals.marketing_id , \n    SPLIT_PART(deals.marketing_id, '_', 1) AS campaign_id,\n    SPLIT_PART(deals.marketing_id, '_', 2) AS ad_group_id, \n    SPLIT_PART(deals.marketing_id, '_', 3) AS ad_id,\n    paid_media.geo_id AS paid_media_geo_id,\n    deals.marketing_lead_id,\n    deals.utm_term,   \n    deals.source,\n    deals.unified_source,\n    deals.source_city, -- Add Cities from campaigns in the part of the model\n    source_cities.geo_id AS source_geo_id,\n    --- Demand ----------------\n    ---------------------------\n    deals.source_buyer_property_condition,  \n    --- After Negotiation -----\n    ---------------------------\n    deals.property_id,\n    properties.supply_source AS property_supply_source,\n    negotiation_cities.city AS negotiation_city, \n    COALESCE( prop_mz.geo_id, \n              negotiation_cities.geo_id, \n              source_cities.geo_id, \n              pipeline.country_geo_id,\n              paid_media.geo_id ) AS negotiation_geo_id,\n    -- Supply data  -----------\n    ---------------------------\n    CASE\n       WHEN deals.qualification IS NULL THEN NULL \n       ELSE deals.qualification_date::DATE \n    END AS supply_qualification_date, \n    deals.qualification AS supply_qualification, \n    -- Demand ----------------- \n    ---------------------------\n    CASE \n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE AND buyer_qualification IN (3,4,5) THEN COALESCE(deals.buyer_qualification_date::DATE, deals.qualification_date::DATE)\n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE THEN NULL \n         ELSE deals.buyer_qualification_date::DATE\n    END AS buyer_qualification_date,\n    deals.buyer_qualification, \n    COALESCE(\n            properties.supply_relation_translation, \n            profile_property_condition_translation,\n            source_buyer_property_condition_translation, \n            labels.property_condition) AS negotiation_property_condition, \n    -- Profile information\n    deals.profile_financial,\n    deals.profile_buying_interest,\n    deals.profile_timing_need,\n    deals.profile_income, \n    deals.profile_savings_initial_fee,\n    deals.profile_decision_maker,\n    deals.profile_property_type,  \n    deals.profile_property_condition_translation AS profile_property_condition,\n    deals.profile_geographic_interest, \n    deals.profile_rooms, \n    deals.profile_bathrooms, \n    deals.profile_parkings, \n    deals.profile_storage,   \n    deals.profile_source_of_income, \n    deals.profile_income_type,\n    deals.profile_profession, \n    deals.profile_income_supplement, \n    deals.profile_saving_capacity,\n    deals.profile_ap_buyers,\n    -- Deal Varibles for won o lost deal \n    won_time,\n    first_won_time,\n    deals.lost_reason,\n    deals.lost_time, \n    -- Auxliar Varibles to Defines processes in pipe \n    deals.deleted AS is_deleted,\n    CASE  \n        when persons.is_test THEN TRUE\n        WHEN lost_reason LIKE '%Test%' THEN TRUE\n        WHEN lost_reason = 'Pruebas' THEN TRUE\n        ELSE FALSE \n    END AS is_test,\n    CASE \n        WHEN lost_reason = 'Cotizaci\u00f3n Duplicada' THEN TRUE\n        ELSE FALSE \n    END AS is_merged\nFROM  deals_translation AS deals \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons\" AS persons \n    ON deals.person_id = persons.id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_pipelines\" AS pipeline  \n    ON pipeline.id = deals.pipeline_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_labels\" AS labels  \n    ON labels.id = deals.label_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = deals.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\" AS source_cities \n    ON source_cities.city = deals.source_city\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\" AS negotiation_cities \n    ON negotiation_cities.city = deals.negotiation_city\nLEFT JOIN properties_translation AS properties \n    ON properties.id = deals.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_stages\" as stages \n    ON stages.id = deals.stage_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" as paid_media\n    ON SPLIT_PART(deals.marketing_id, '_', 1 ) = paid_media.campaign_id\n)\n\nSELECT \n    pipedrive_leads.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city  \nFROM pipedrive_leads\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = pipedrive_leads.negotiation_geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\""}, "model.houm.proc_pipedrive_pipelines": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_pipelines"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_pipelines"], "unique_id": "model.houm.proc_pipedrive_pipelines", "raw_code": "{{ config(materialized='table') }}\n\nWITH pipelines as (\nSELECT \n    * , \n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 'Chile'\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 'Colombia'\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 'Mexico'\n       ELSE NULL \n    END AS country ,\n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 79::INT\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 14::INT\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 19::INT\n       ELSE NULL \n    END AS country_geo_id ,    \n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82, 80) THEN 'Supply'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78) THEN 'Demand'\n    END AS funnel ,\n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82, 80) THEN 'Rental/Sales'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78) THEN 'Sales'\n    END AS business  \nFROM {{ref('stg_pipelines')}} \n)\n\nSELECT \n    *\nFROM pipelines", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_pipelines.sql", "original_file_path": "models/processing/tools/proc_pipedrive_pipelines.sql", "name": "proc_pipedrive_pipelines", "alias": "proc_pipedrive_pipelines", "checksum": {"name": "sha256", "checksum": "0b2d1ccf42c0f94cb0282a7131da9770e769df8872e573a88d89df5fd386f8ff"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_pipelines"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_pipelines.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.330292, "compiled_code": "\n\nWITH pipelines as (\nSELECT \n    * , \n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 'Chile'\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 'Colombia'\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 'Mexico'\n       ELSE NULL \n    END AS country ,\n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 79::INT\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 14::INT\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 19::INT\n       ELSE NULL \n    END AS country_geo_id ,    \n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82, 80) THEN 'Supply'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78) THEN 'Demand'\n    END AS funnel ,\n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82, 80) THEN 'Rental/Sales'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78) THEN 'Sales'\n    END AS business  \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_pipelines\" \n)\n\nSELECT \n    *\nFROM pipelines", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_pipelines\""}, "model.houm.proc_kustomer_customers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_kustomer_customers", "model.houm.proc_kustomer_customers_phones", "model.houm.proc_kustomer_customers_emails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_kustomer_customers"], "unique_id": "model.houm.proc_kustomer_customers", "raw_code": "{{ config(materialized='table') }}\n\nSELECT \n    customers.id AS customer_id,\n    customers.created_at::TIMESTAMP,\n    customers.name,\n    customers.first_name,\n    customers.last_name,\n    customers.gender,\n    customers.locale,\n    customers.deleted,\n    phones.phone,\n    emails.email,\n    customers.verified,\n    customers.sentiment_polarity,\n    customers.sentiment_confidence,\n    customers.birthday_at,\n    customers.self_link,\n    customers.rol_usuario AS role,\n\n    CASE\n        WHEN INITCAP(customers.pais) IN ('Chile', 'Colombia', 'Mexico', 'M\u00e9xico')\n            THEN TRANSLATE(INITCAP(customers.pais), '\u00e9', 'e')\n        ELSE NULL \n    END AS customer_country,\n    phones.country AS phone_country, \n    COALESCE(customer_country, phones.country) AS country,\n\n    customers.tipo_documento AS document_type,\n    customers.numero_documento AS document_number,\n    customers.vista_propietario AS landlord_view, \n    customers.last_activity_at::timestamp \nFROM {{ ref('stg_kustomer_customers') }} AS customers\nLEFT JOIN {{ ref('proc_kustomer_customers_phones') }} AS phones \n    ON phones.customer_id = customers.id\nLEFT JOIN {{ ref('proc_kustomer_customers_emails') }} AS emails \n    ON emails.customer_id = customers.id\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_kustomer_customers.sql", "original_file_path": "models/processing/tools/proc_kustomer_customers.sql", "name": "proc_kustomer_customers", "alias": "proc_kustomer_customers", "checksum": {"name": "sha256", "checksum": "770eb9563be8a60bbb426be2711dd211e770b81e75a0097019a19e2f1fe1738e"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_kustomer_customers"], ["proc_kustomer_customers_phones"], ["proc_kustomer_customers_emails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_kustomer_customers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.3319738, "compiled_code": "\n\nSELECT \n    customers.id AS customer_id,\n    customers.created_at::TIMESTAMP,\n    customers.name,\n    customers.first_name,\n    customers.last_name,\n    customers.gender,\n    customers.locale,\n    customers.deleted,\n    phones.phone,\n    emails.email,\n    customers.verified,\n    customers.sentiment_polarity,\n    customers.sentiment_confidence,\n    customers.birthday_at,\n    customers.self_link,\n    customers.rol_usuario AS role,\n\n    CASE\n        WHEN INITCAP(customers.pais) IN ('Chile', 'Colombia', 'Mexico', 'M\u00e9xico')\n            THEN TRANSLATE(INITCAP(customers.pais), '\u00e9', 'e')\n        ELSE NULL \n    END AS customer_country,\n    phones.country AS phone_country, \n    COALESCE(customer_country, phones.country) AS country,\n\n    customers.tipo_documento AS document_type,\n    customers.numero_documento AS document_number,\n    customers.vista_propietario AS landlord_view, \n    customers.last_activity_at::timestamp \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers\" AS customers\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers_phones\" AS phones \n    ON phones.customer_id = customers.id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers_emails\" AS emails \n    ON emails.customer_id = customers.id\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers\""}, "model.houm.proc_pipedrive_persons": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_persons_phones", "model.houm.proc_pipedrive_persons_emails", "model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_persons"], "unique_id": "model.houm.proc_pipedrive_persons", "raw_code": "{{ config(materialized='table') }}\n\nWITH primary_phones AS (\n\tSELECT \n\t\t* \n\tFROM {{ref('proc_pipedrive_persons_phones')}}\n\tWHERE primary_phone IS TRUE\n) \n\n, primary_emails AS (\n\tSELECT * \n\tFROM {{ref('proc_pipedrive_persons_emails')}}\n\tWHERE primary_email IS TRUE \n)\n\n, persons_id as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::INTEGER AS id, \n\t\tREPLACE(deals.person_id.name::TEXT, '\"','') AS name, \n\t\tdeals.person_id.active_flag::BOOLEAN AS active_flag \n\tFROM {{ref('stg_deals')}} AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\n\n\n, persons AS (\nSELECT  \n\tpersons_id.* , \n\tprimary_emails.email , \n\tprimary_phones.phone , \n    CASE \n       WHEN name LIKE '%_ontesto%' THEN FALSE\n       WHEN name LIKE '%test%' THEN TRUE\n       WHEN name LIKE '%_ruebas%' THEN TRUE\n       WHEN email LIKE '%pruebas%' THEN TRUE\n       WHEN name LIKE '%_uan%_alut%' THEN TRUE \n       ELSE FALSE\n    END is_test\nFROM persons_id\nLEFT JOIN primary_emails \n\tON primary_emails.person_id = persons_id.id\nLEFT JOIN primary_phones \n\tON primary_phones.person_id = persons_id.id\nORDER BY 1 DESC\n)\n\nSELECT \n\t* \nFROM persons", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_persons.sql", "original_file_path": "models/processing/tools/proc_pipedrive_persons.sql", "name": "proc_pipedrive_persons", "alias": "proc_pipedrive_persons", "checksum": {"name": "sha256", "checksum": "7278d74d91616358da60834c2fa0f3f94dfbe4edaf6e97e88919816f1c64b25c"}, "tags": ["dw", "processing", "tools"], "refs": [["proc_pipedrive_persons_phones"], ["proc_pipedrive_persons_emails"], ["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.333864, "compiled_code": "\n\nWITH primary_phones AS (\n\tSELECT \n\t\t* \n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_phones\"\n\tWHERE primary_phone IS TRUE\n) \n\n, primary_emails AS (\n\tSELECT * \n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_emails\"\n\tWHERE primary_email IS TRUE \n)\n\n, persons_id as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::INTEGER AS id, \n\t\tREPLACE(deals.person_id.name::TEXT, '\"','') AS name, \n\t\tdeals.person_id.active_flag::BOOLEAN AS active_flag \n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\n\n\n, persons AS (\nSELECT  \n\tpersons_id.* , \n\tprimary_emails.email , \n\tprimary_phones.phone , \n    CASE \n       WHEN name LIKE '%_ontesto%' THEN FALSE\n       WHEN name LIKE '%test%' THEN TRUE\n       WHEN name LIKE '%_ruebas%' THEN TRUE\n       WHEN email LIKE '%pruebas%' THEN TRUE\n       WHEN name LIKE '%_uan%_alut%' THEN TRUE \n       ELSE FALSE\n    END is_test\nFROM persons_id\nLEFT JOIN primary_emails \n\tON primary_emails.person_id = persons_id.id\nLEFT JOIN primary_phones \n\tON primary_phones.person_id = persons_id.id\nORDER BY 1 DESC\n)\n\nSELECT \n\t* \nFROM persons", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons\""}, "model.houm.proc_pipedrive_cities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_cities"], "unique_id": "model.houm.proc_pipedrive_cities", "raw_code": "WITH pipedrive_cities AS (\nSELECT \n    source_city AS city\nFROM {{ ref('proc_pipedrive_deals') }} AS bi_deals\nUNION\nSELECT \n    negotiation_city AS city\nFROM {{ ref('proc_pipedrive_deals') }} AS bi_deals\n)\n\n, dim_pipedrive_cities AS (\nSELECT \n    city , \n    CASE\n        WHEN city LIKE '_ogot_%' THEN  14::INT\n        WHEN city LIKE '_onterrey' THEN  54::INT\n        WHEN city LIKE '_iudad de __xico' THEN  104::INT\n        WHEN city LIKE '_egi_n _etropolitana de _antiago' THEN 79::INT\n        WHEN city LIKE '_oncepci_n' THEN  8::INT\n        WHEN city LIKE '_uadalajara' THEN  30::INT\n        WHEN city LIKE '_edell_n' THEN  109::INT\n        WHEN city LIKE '_ntioqu_a' THEN  109::INT\n        WHEN city LIKE '%alpara_so' THEN  11::INT\n        WHEN city LIKE '%ijuana' THEN  67::INT\n        ELSE Null \n    END AS geo_id \nFROM pipedrive_cities\n)\n\nSELECT \n    *\nFROM dim_pipedrive_cities", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_cities.sql", "original_file_path": "models/processing/tools/proc_pipedrive_cities.sql", "name": "proc_pipedrive_cities", "alias": "proc_pipedrive_cities", "checksum": {"name": "sha256", "checksum": "4ff0b150899c4f5c15461e35ff7cc8c6dc40499c9cdead9b96ebc69a80b82302"}, "tags": ["dw", "processing", "tools"], "refs": [["proc_pipedrive_deals"], ["proc_pipedrive_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"]}, "created_at": 1675970038.3356512, "compiled_code": "WITH pipedrive_cities AS (\nSELECT \n    source_city AS city\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS bi_deals\nUNION\nSELECT \n    negotiation_city AS city\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS bi_deals\n)\n\n, dim_pipedrive_cities AS (\nSELECT \n    city , \n    CASE\n        WHEN city LIKE '_ogot_%' THEN  14::INT\n        WHEN city LIKE '_onterrey' THEN  54::INT\n        WHEN city LIKE '_iudad de __xico' THEN  104::INT\n        WHEN city LIKE '_egi_n _etropolitana de _antiago' THEN 79::INT\n        WHEN city LIKE '_oncepci_n' THEN  8::INT\n        WHEN city LIKE '_uadalajara' THEN  30::INT\n        WHEN city LIKE '_edell_n' THEN  109::INT\n        WHEN city LIKE '_ntioqu_a' THEN  109::INT\n        WHEN city LIKE '%alpara_so' THEN  11::INT\n        WHEN city LIKE '%ijuana' THEN  67::INT\n        ELSE Null \n    END AS geo_id \nFROM pipedrive_cities\n)\n\nSELECT \n    *\nFROM dim_pipedrive_cities", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\""}, "model.houm.proc_kustomer_queues": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_kustomer_queues", "seed.houm.seed_kustomer_queues"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_kustomer_queues"], "unique_id": "model.houm.proc_kustomer_queues", "raw_code": "{{ config(materialized='view') }}\n\nSELECT \n    queues.id AS queue_id,\n    queues.type,\n    queues.self_link,\n    queues.name,\n    \n    queues_details.country,\n    queues_details.method,\n    queues_details.area,\n    queues_details.is_vip,\n    queues_details.work_cell ,\n\n    queues.displayname,\n    queues.priority,\n    queues.item_size,\n    queues.restrict_transfers_by_users,\n    queues.\"system\",\n    queues.description,\n    queues.updated_at,\n    queues.created_at,\n    queues.deleted,\n    queues.override_assignment,\n    queues.put_back_items_on_offline,\n    queues.key,\n    queues.settings\nFROM {{ ref('stg_kustomer_queues') }} AS queues\nLEFT JOIN {{ ref('seed_kustomer_queues')}} AS queues_details\n    ON queues_details.id = queues.id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_kustomer_queues.sql", "original_file_path": "models/processing/tools/proc_kustomer_queues.sql", "name": "proc_kustomer_queues", "alias": "proc_kustomer_queues", "checksum": {"name": "sha256", "checksum": "66935cafe0bf4c3883a8ca847a88375bc8cfe06f2051b95ad579911a36e70edb"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_kustomer_queues"], ["seed_kustomer_queues"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_kustomer_queues.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "view"}, "created_at": 1675970038.337335, "compiled_code": "\n\nSELECT \n    queues.id AS queue_id,\n    queues.type,\n    queues.self_link,\n    queues.name,\n    \n    queues_details.country,\n    queues_details.method,\n    queues_details.area,\n    queues_details.is_vip,\n    queues_details.work_cell ,\n\n    queues.displayname,\n    queues.priority,\n    queues.item_size,\n    queues.restrict_transfers_by_users,\n    queues.\"system\",\n    queues.description,\n    queues.updated_at,\n    queues.created_at,\n    queues.deleted,\n    queues.override_assignment,\n    queues.put_back_items_on_offline,\n    queues.key,\n    queues.settings\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_queues\" AS queues\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_kustomer_queues\" AS queues_details\n    ON queues_details.id = queues.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_queues\""}, "model.houm.proc_kustomer_conversations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_kustomer_customers", "model.houm.proc_kustomer_queues", "model.houm.stg_kustomer_conversations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_kustomer_conversations"], "unique_id": "model.houm.proc_kustomer_conversations", "raw_code": "{{ config(materialized='table') }}\n\nWITH customers AS (\n    SELECT \n        * \n    FROM {{ ref('proc_kustomer_customers') }}\n)\n\n, queues AS (\n    SELECT \n        * \n    FROM {{ ref('proc_kustomer_queues') }}\n)\n\nSELECT \n    conversations.id AS conversation_id,\n    conversations.created_at::TIMESTAMP,\n    conversations.updated_at::TIMESTAMP,\n    conversations.customer_type,\n    conversations.customer_id,\n    --cutomer_data--\n    customers.name AS customer_name,\n    customers.phone AS customer_phone,\n    customers.email AS customer_email,\n    customers.role AS customer_role,\n    customers.customer_country,\n    ----------------\n    conversations.channels,\n    conversations.created_by_type,\n    conversations.created_by_id,\n    conversations.ended,\n    conversations.ended_by_type,\n    conversations.ended_by_id,\n    conversations.ended_at::TIMESTAMP,\n    conversations.ended_reason,\n    conversations.name,\n    conversations.preview,\n    conversations.direction,\n    conversations.done_count,\n    conversations.message_count,\n    conversations.outbound_message_count,\n    conversations.priority,\n    conversations.queue_id,\n    --queue_data--\n    queues.work_cell, \n    queues.name as queue_name,\n    queues.country AS queue_country,\n    --------------\n    conversations.status,\n    --country--\n    COALESCE(customers.country, queues.country ) AS conversation_country,\n    CASE conversation_country \n        WHEN  'Chile' THEN 79::INT\n        WHEN 'Colombia' THEN 14::INT\n        WHEN 'Mexico' THEN 104::INT\n        ELSE NULL \n    END AS geo_id_conv,  \n    -- validar luego geo_ids y dim_locations\n    -----------\n    conversations.type,\n    conversations.last_activity_at::TIMESTAMP,\n    NULLIF( conversations.last_done_at , '' )::TIMESTAMP AS last_done_at, \n    NULLIF( conversations.first_response_at , '' )::TIMESTAMP AS first_response_at,  --- corregir a response***\n    conversations.tags,\n    CASE \n        WHEN conversations.asistente_conversacional_str = 'Flujo PP CL V2' OR conversations.tags LIKE '%63c84f510b76edebfb2eafcc%' THEN 'Flujo PP CL V2' --se parcha este escenario porque el bot de autoayuda no siempre pobla bien el campo\n        WHEN conversations.asistente_conversacional_str = 'Flujo AA CL V2' OR conversations.tags LIKE '%63c86d530b51874f03903b23%' THEN 'Flujo AA CL V2' --se identifica o por el tag o por este campo\n        ELSE conversations.asistente_conversacional_str\n    END AS asistente_conversacional_str,\n    conversations.clasification_del_asistente_str,\n    conversations.sub_clasificacion_del_asistente_str,\n    conversations.conversational_assistant_results_str,\n    conversations.respuesta_asistente_str,\n    NULLIF( conversations.conversational_assistant_date_at , '' )::TIMESTAMP AS conversational_assistant_date_at, \n    conversations.tipo_atencion_solo_property_str,\n    conversations.cobranza_tipificacion_de_caso_str,\n    conversations.tipo_solicitud_solo_sac_str\nFROM {{ ref('stg_kustomer_conversations') }} AS conversations\nLEFT JOIN customers \n    ON conversations.customer_id = customers.customer_id\nLEFT JOIN queues \n    ON conversations.queue_id = queues.queue_id\nORDER BY conversations.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_kustomer_conversations.sql", "original_file_path": "models/processing/tools/proc_kustomer_conversations.sql", "name": "proc_kustomer_conversations", "alias": "proc_kustomer_conversations", "checksum": {"name": "sha256", "checksum": "c83177fb6cdbfb878052b3e626fd14ac7e2bfa312c4e984b266b5ccbe7e6fbf7"}, "tags": ["dw", "processing", "tools"], "refs": [["proc_kustomer_customers"], ["proc_kustomer_queues"], ["stg_kustomer_conversations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_kustomer_conversations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.33904, "compiled_code": "\n\nWITH customers AS (\n    SELECT \n        * \n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers\"\n)\n\n, queues AS (\n    SELECT \n        * \n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_queues\"\n)\n\nSELECT \n    conversations.id AS conversation_id,\n    conversations.created_at::TIMESTAMP,\n    conversations.updated_at::TIMESTAMP,\n    conversations.customer_type,\n    conversations.customer_id,\n    --cutomer_data--\n    customers.name AS customer_name,\n    customers.phone AS customer_phone,\n    customers.email AS customer_email,\n    customers.role AS customer_role,\n    customers.customer_country,\n    ----------------\n    conversations.channels,\n    conversations.created_by_type,\n    conversations.created_by_id,\n    conversations.ended,\n    conversations.ended_by_type,\n    conversations.ended_by_id,\n    conversations.ended_at::TIMESTAMP,\n    conversations.ended_reason,\n    conversations.name,\n    conversations.preview,\n    conversations.direction,\n    conversations.done_count,\n    conversations.message_count,\n    conversations.outbound_message_count,\n    conversations.priority,\n    conversations.queue_id,\n    --queue_data--\n    queues.work_cell, \n    queues.name as queue_name,\n    queues.country AS queue_country,\n    --------------\n    conversations.status,\n    --country--\n    COALESCE(customers.country, queues.country ) AS conversation_country,\n    CASE conversation_country \n        WHEN  'Chile' THEN 79::INT\n        WHEN 'Colombia' THEN 14::INT\n        WHEN 'Mexico' THEN 104::INT\n        ELSE NULL \n    END AS geo_id_conv,  \n    -- validar luego geo_ids y dim_locations\n    -----------\n    conversations.type,\n    conversations.last_activity_at::TIMESTAMP,\n    NULLIF( conversations.last_done_at , '' )::TIMESTAMP AS last_done_at, \n    NULLIF( conversations.first_response_at , '' )::TIMESTAMP AS first_response_at,  --- corregir a response***\n    conversations.tags,\n    CASE \n        WHEN conversations.asistente_conversacional_str = 'Flujo PP CL V2' OR conversations.tags LIKE '%63c84f510b76edebfb2eafcc%' THEN 'Flujo PP CL V2' --se parcha este escenario porque el bot de autoayuda no siempre pobla bien el campo\n        WHEN conversations.asistente_conversacional_str = 'Flujo AA CL V2' OR conversations.tags LIKE '%63c86d530b51874f03903b23%' THEN 'Flujo AA CL V2' --se identifica o por el tag o por este campo\n        ELSE conversations.asistente_conversacional_str\n    END AS asistente_conversacional_str,\n    conversations.clasification_del_asistente_str,\n    conversations.sub_clasificacion_del_asistente_str,\n    conversations.conversational_assistant_results_str,\n    conversations.respuesta_asistente_str,\n    NULLIF( conversations.conversational_assistant_date_at , '' )::TIMESTAMP AS conversational_assistant_date_at, \n    conversations.tipo_atencion_solo_property_str,\n    conversations.cobranza_tipificacion_de_caso_str,\n    conversations.tipo_solicitud_solo_sac_str\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_conversations\" AS conversations\nLEFT JOIN customers \n    ON conversations.customer_id = customers.customer_id\nLEFT JOIN queues \n    ON conversations.queue_id = queues.queue_id\nORDER BY conversations.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_conversations\""}, "model.houm.proc_pipedrive_persons_phones": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_persons_phones"], "unique_id": "model.houm.proc_pipedrive_persons_phones", "raw_code": "{{ config(materialized='table') }}\n\nWITH phones AS (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id , \n\te_phone.value::TEXT AS phone , \n\te_phone.primary::BOOLEAN AS primary_phone \nFROM \n\t{{ref('stg_deals')}} AS deals, \n\tdeals.person_id.phone AS e_phone \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id , \n\tphones.person_id AS person_id , \n\tCASE  \n\t\tWHEN LENGTH(phones.phone) < 1 THEN NULL \n\t\tELSE phones.phone \n\tEND AS phone , \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_persons_phones.sql", "original_file_path": "models/processing/tools/proc_pipedrive_persons_phones.sql", "name": "proc_pipedrive_persons_phones", "alias": "proc_pipedrive_persons_phones", "checksum": {"name": "sha256", "checksum": "2b58f32ba459b17fea8edfd0acafe6ed547def125eee52612dcd50e44b4b7b3a"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_persons_phones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.341053, "compiled_code": "\n\nWITH phones AS (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id , \n\te_phone.value::TEXT AS phone , \n\te_phone.primary::BOOLEAN AS primary_phone \nFROM \n\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\tdeals.person_id.phone AS e_phone \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id , \n\tphones.person_id AS person_id , \n\tCASE  \n\t\tWHEN LENGTH(phones.phone) < 1 THEN NULL \n\t\tELSE phones.phone \n\tEND AS phone , \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_phones\""}, "model.houm.proc_pipedrive_persons_emails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_persons_emails"], "unique_id": "model.houm.proc_pipedrive_persons_emails", "raw_code": "{{ config(materialized='table') }}\n\nWITH emails AS (\nSELECT \n\tDISTINCT deals.person_id.value::INTEGER AS person_id , \n\te_email.value::TEXT AS email , \n\te_email.primary::BOOLEAN AS primary_email \nFROM \n\t{{ref('stg_deals')}} AS deals, \n\tdeals.person_id.email AS e_email \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id , \n\temails.person_id AS person_id , \n\tCASE \n\t\tWHEN LENGTH(emails.email) < 1 THEN NULL \n\t\tELSE emails.email\n\tEND AS email , \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1 DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_persons_emails.sql", "original_file_path": "models/processing/tools/proc_pipedrive_persons_emails.sql", "name": "proc_pipedrive_persons_emails", "alias": "proc_pipedrive_persons_emails", "checksum": {"name": "sha256", "checksum": "4e39ab4d0b252965ba911d55b68d85bd3d37168336fe414aaa5674b576bf745b"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_persons_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "table"}, "created_at": 1675970038.3427289, "compiled_code": "\n\nWITH emails AS (\nSELECT \n\tDISTINCT deals.person_id.value::INTEGER AS person_id , \n\te_email.value::TEXT AS email , \n\te_email.primary::BOOLEAN AS primary_email \nFROM \n\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\tdeals.person_id.email AS e_email \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id , \n\temails.person_id AS person_id , \n\tCASE \n\t\tWHEN LENGTH(emails.email) < 1 THEN NULL \n\t\tELSE emails.email\n\tEND AS email , \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_emails\""}, "model.houm.proc_pipedrive_deals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_deals"], "unique_id": "model.houm.proc_pipedrive_deals", "raw_code": "WITH deals AS (\nSELECT \n    id ,\n    stage_id ,\n    title ,\n    value ,\n    currency ,\n    add_time ,\n    update_time ,\n    active ,\n    deleted ,\n    status ,\n    next_activity_date ,\n    next_activity_time ,\n    next_activity_id ,\n    last_activity_id ,\n    last_activity_date ,\n    lost_reason ,\n    pipeline_id ,\n    won_time ,\n    first_won_time ,\n    lost_time ,\n    email_messages_count ,\n    activities_count ,\n    done_activities_count ,\n    undone_activities_count ,\n    expected_close_date ,\n    label AS label_id , \n    CASE label\n        WHEN 96  THEN 'Lead Sales'\n        WHEN 552 THEN 'Sales'\n        WHEN 419 THEN 'Usados'\n        WHEN 347 THEN 'Campa\u00f1a MB'\n        WHEN 345 THEN 'New Properties'\n        WHEN 319 THEN 'Venta'\n        WHEN 309 THEN 'Autogestionado'\n        WHEN 240 THEN 'Inversionista'\n        WHEN 218 THEN 'Sales Hot Lead'\n        WHEN 206 THEN 'Sales/Rental'\n        WHEN 190 THEN 'GDL'\n        WHEN 189 THEN 'Marketing'\n        WHEN 181 THEN 'Seller'\n        WHEN 180 THEN 'Buyer'\n        WHEN 157 THEN 'Sales/Subsidio'\n        WHEN 156 THEN 'Rental'\n        WHEN 102 THEN 'Rental/Sales B2B'\n        WHEN 101 THEN 'Sales B2B'\n        WHEN 100 THEN 'Rental B2B'\n        WHEN 0 THEN  'Ninguna Etiqueta'\n        ELSE label \n    END AS label ,\n    person_name ,\n    org_name ,\n    owner_name ,\n    user_id.email::VARCHAR                     AS owner_email, \n    user_id.id::INT                            AS owner_id,\n    \"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link ,\n    \"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address ,\n    CASE \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\" \n         WHEN 81 THEN 0\n         WHEN 82 THEN 1\n         WHEN 83 THEN 2\n         WHEN 84 THEN 3\n         WHEN 85 THEN 4\n         WHEN 86 THEN 5\n         WHEN 147 THEN 6 \n         ELSE NULL \n    END AS qualification ,\n    \"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email ,\n    \"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone ,\n    \"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type ,\n    \"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source ,\n    CASE \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" \n        WHEN 279 THEN 'Alliances'   \n        WHEN 280 THEN 'Captadores' \n        WHEN 281 THEN 'Referral program'\n        WHEN 282 THEN 'Message Bird'     \n        WHEN 283 THEN 'Whatsapp'\n        WHEN 284 THEN 'Scrapers'\n        WHEN 285 THEN 'Offline'\n        WHEN 286 THEN 'Programmatic'\n        WHEN 578 THEN 'LinkedIn'\n        WHEN 596 THEN 'Facebook'\n        WHEN 597 THEN 'Google'\n        WHEN 598 THEN 'Organic & Direct'\n        WHEN 599 THEN 'Social Media'\n        WHEN 600 THEN 'Email Marketing\\tEmail Marketing'\n        WHEN 712 THEN 'Others' \n        ELSE \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\"         \n    END AS unified_source ,\n    \"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city ,\n    CASE \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n        WHEN 107 THEN 'Rental'\n        WHEN 108 THEN 'Rental'\n        WHEN 109 THEN 'Sales'\n        WHEN 110 THEN 'Sales' \n        ELSE NULL \n    END AS business_deal, \n    \"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id ,\n    \"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep ,  -- Campo nulo \n    \"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country , -- Campo practicamente nulo. Eliminar\n    CASE \"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n        WHEN 114 THEN 'Todo al contado'\n        WHEN 115 THEN 'Cr\u00e9dito aprobado'\n        WHEN 116 THEN 'Cr\u00e9dito pre-aprobado'\n        WHEN 117 THEN 'Sin financiamiento'\n        WHEN 149 THEN 'Fovisste'\n        WHEN 150 THEN 'Infonavit'\n        WHEN 193 THEN 'Subsidio habitacional'\n        WHEN 207 THEN 'No quiere detallar'\n        ELSE NULL \n    END AS profile_financial ,\n    \"69ea781634ab7eb7ee214c0c4a2fe3c38af1f0ec\" , -- Campo nulo\n    \"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country , -- Campo nulo\n    \"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\" AS qualification_date , -- Fecha, NO tiemstamps\n    CASE \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n        WHEN 119 THEN 'Vivienda'\n        WHEN 118 THEN  'Inversi\u00f3n' \n        WHEN '118,119' THEN 'Vivienda/Inversi\u00f3n'\n        WHEN '119,118' THEN 'Vivienda/Inversi\u00f3n'\n    END AS profile_buying_interest ,\n    \"5f4461694404306c423b907bc1b97fe57a90fc9b\" AS profile_ap_buyers , \n    CASE \"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n        WHEN '121'      THEN 'Entre 1 y 3 meses'\n        WHEN '121,122'  THEN 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '121,216'  THEN 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n        WHEN '122'      THEN 'M\u00e1s de 3 meses'\n        WHEN '122,215'  THEN 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n        WHEN '166'      THEN 'Menos de 1 mes'\n        WHEN '166,121'  THEN 'Menos de 1 mes/Entre 1 y 3 meses'\n        WHEN '166,121,122' THEN 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '166,122' THEN 'Menos de 1 mes/M\u00e1s de 3 meses'\n        WHEN '166,215' THEN 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n        WHEN '166,216' THEN 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n        WHEN '215'     THEN 'Entrega a 1 a\u00f1o'\n        WHEN '215,216' THEN 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n        WHEN '216'     THEN 'Entrega a 2 a\u00f1os'\n        ELSE NULL \n    END AS profile_timing_need, \n    \"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS profile_income , \n    \"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS profile_savings_initial_fee , \n    CASE SUBSTRING(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\", length(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\")-2, 3)\n        WHEN 212 THEN 'Yo solo'\n        WHEN 213 THEN 'En Pareja'\n        WHEN 214 THEN 'En Familia'      \n        ELSE NULL \n    END AS profile_decision_maker , \n    CASE \"678c6b4df5ea23b6181544bb2557b6007f79d64d\"\n        WHEN 194 THEN 'Departamento' \n        WHEN 195 THEN 'Casa' \n        ELSE NULL\n    END AS profile_property_type ,  \n    CASE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" \n        WHEN 198 THEN 'Usada/Nueva'\n        WHEN 196 THEN 'Usada'\n        WHEN 197 THEN 'Nueva'\n        ELSE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\"\n    END AS profile_property_condition ,\n    \"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS profile_geographic_interest ,\n    CASE SUBSTRING(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\", length(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\")-2, 3)\n        WHEN 126 THEN '1'\n        WHEN 127 THEN '2'\n        WHEN 128 THEN '3'\n        WHEN 129 THEN '4'\n        WHEN 130 THEN '+4'\n        ELSE NULL\n    END AS profile_rooms ,\n    CASE SUBSTRING(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\", length(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\")-2, 3)\n        WHEN 131 THEN '1'\n        WHEN 132 THEN '2' \n        WHEN 133 THEN '3'\n        WHEN 134 THEN '4'\n        WHEN 135 THEN '+4'\n        ELSE NULL\n    END AS profile_bathrooms ,\n    CASE SUBSTRING(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\", length(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\")-2, 3)\n       WHEN 136 THEN '0'\n       WHEN 137 THEN '1'\n       WHEN 138 THEN '2' \n       WHEN 139 THEN '3'\n       WHEN 140 THEN '+3'\n       ELSE NULL\n    END AS profile_parkings ,\n    CASE SUBSTRING(\"9007a9793366afdfd11d087c71d5732a41eca3d0\", length(\"9007a9793366afdfd11d087c71d5732a41eca3d0\")-2, 3)\n        WHEN 141 THEN '0'\n        WHEN 142 THEN '1'\n        WHEN 143 THEN '2'\n        WHEN 144 THEN '3'         \n    END AS profile_storage ,    \n    \"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS profile_area ,\n    \"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS profile_budget ,\n    CASE \"73be236be81871bee3d221f721a3b56efa1662cf\" \n        WHEN 342 THEN 'No quiere dar informaci\u00f3n' \n        WHEN 202 THEN 'Fija'\n        WHEN 209 THEN 'Variable'\n        WHEN '202,209' THEN 'Fija/Variable'\n    ELSE NULL     \n    END AS profile_source_of_income ,\n    \"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS profile_debt ,\n    CASE \"5824fac0f9df05b659fd70cc055349394eb678ca\"\n        WHEN 203 THEN 'Dependiente Contrato Fijo'\n        WHEN 204 THEN 'Dependiente Contrato Indefinido'\n        WHEN 205 THEN 'Independiente'\n        WHEN 343 THEN 'No quiere dar informaci\u00f3n'\n        WHEN '203,205' THEN 'Dependiente Contrato Fijo, Independiente'\n        WHEN '203,204' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido'\n        WHEN '204,205' THEN 'Dependiente Contrato Indefinido, Independiente'\n        WHEN '203,204,205' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido, Independiente'\n        WHEN '205,343' THEN 'Independiente,No quiere dar informaci\u00f3n'\n        ELSE NULL\n    END AS profile_income_type ,\n    \"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS profile_profession ,\n    \"07947a7736355ed261aec09b66aaf2b790be5489\" AS profile_income_supplement ,\n    \"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS profile_saving_capacity ,\n    CASE \n        WHEN \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" IN (0,1,2,3,4,5) THEN \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" \n        ELSE NULL \n    END AS buyer_qualification ,\n    \"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" AS scheduler ,\n    \"c00ff6487084ced65ae133b319de9d84dac6b4ba\" AS scheduled_by ,\n    user_id  ,\n    person_id AS person_json ,\n    person_id.value::INTEGER as person_id ,\n    \"957048bc161c4ad91d9da0c07b162bf18bc3acb9\" AS reservation_date ,\n    \"af1c7beca1a4b5538315280d5a25c6ba812c8f02\" AS one_sided_signatures_date ,\n    \"3b3401936f35bceddc0a70fbc8cb23fd52defec6\" AS both_sided_signatures_date ,\n    \"993757a99b12ef09c142c4a6baf40526405fe8ab\" AS new_properties_signatures_date ,\n    CASE \"4067d32849ff63f793285b7df808200864a27834\" \n        WHEN 241 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 242 THEN 'Valpara\u00edso'\n        WHEN 243 THEN 'Concepci\u00f3n'\n        WHEN 245 THEN 'Ciudad de M\u00e9xico'\n        WHEN 246 THEN 'Guadalajara'\n        WHEN 247 THEN 'Tijuana'\n        WHEN 248 THEN 'Monterrey'\n        WHEN 249 THEN 'Bogot\u00e1'\n        WHEN 250 THEN 'Medell\u00edn'\n        WHEN 262 THEN 'Otro'\n    ELSE NULL \n    END AS negotiation_city , \n    \"51efe5f94222655f4f9b470ecce4850b58c5d15c\" AS marketing_id ,\n    \"240c440cb58bd5f9286912aaeacd37b772747072\" AS marketing_lead_id ,\n    \"0d7c97b04cad1ff88142c357c8f25ef775a48304\" AS utm_term ,\n    CASE \"21eeff918978b8ce10d73a58f6ce61c8336d1ace\" \n        WHEN 401 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 402 THEN 'Valpara\u00edso'\n        WHEN 403 THEN 'Concepci\u00f3n'\n        WHEN 404 THEN 'Ciudad de M\u00e9xico'\n        WHEN 405 THEN 'Guadalajara'\n        WHEN 406 THEN 'Tijuana'\n        WHEN 407 THEN 'Monterrey'\n        WHEN 408 THEN 'Bogot\u00e1'\n        WHEN 409 THEN 'Medell\u00edn'\n        ELSE NULL\n    END AS source_city ,\n    CASE \"b219dc0405c6158733398c7c6cc4a75b1829298d\" \n        WHEN 399 THEN 'New Properties'\n        WHEN 400 THEN 'Usados'\n    END AS source_buyer_property_condition , \n    \"e12af2d33a53481c56d5edc6380fb4bdae6850b0\" AS buyer_qualification_date  , \n    \"e0cd6b5750abed2cbf2bcbcea3c07872deaf7b5f\" AS partner_code\nFROM {{ref('stg_deals')}}\n)\n\nSELECT \n\t*\nFROM deals \nORDER BY update_time DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_deals.sql", "original_file_path": "models/processing/tools/proc_pipedrive_deals.sql", "name": "proc_pipedrive_deals", "alias": "proc_pipedrive_deals", "checksum": {"name": "sha256", "checksum": "21bf4062ef3fac98270c7b553c837ee172d61fedbafa5d446d11f8af4e956917"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"]}, "created_at": 1675970038.34439, "compiled_code": "WITH deals AS (\nSELECT \n    id ,\n    stage_id ,\n    title ,\n    value ,\n    currency ,\n    add_time ,\n    update_time ,\n    active ,\n    deleted ,\n    status ,\n    next_activity_date ,\n    next_activity_time ,\n    next_activity_id ,\n    last_activity_id ,\n    last_activity_date ,\n    lost_reason ,\n    pipeline_id ,\n    won_time ,\n    first_won_time ,\n    lost_time ,\n    email_messages_count ,\n    activities_count ,\n    done_activities_count ,\n    undone_activities_count ,\n    expected_close_date ,\n    label AS label_id , \n    CASE label\n        WHEN 96  THEN 'Lead Sales'\n        WHEN 552 THEN 'Sales'\n        WHEN 419 THEN 'Usados'\n        WHEN 347 THEN 'Campa\u00f1a MB'\n        WHEN 345 THEN 'New Properties'\n        WHEN 319 THEN 'Venta'\n        WHEN 309 THEN 'Autogestionado'\n        WHEN 240 THEN 'Inversionista'\n        WHEN 218 THEN 'Sales Hot Lead'\n        WHEN 206 THEN 'Sales/Rental'\n        WHEN 190 THEN 'GDL'\n        WHEN 189 THEN 'Marketing'\n        WHEN 181 THEN 'Seller'\n        WHEN 180 THEN 'Buyer'\n        WHEN 157 THEN 'Sales/Subsidio'\n        WHEN 156 THEN 'Rental'\n        WHEN 102 THEN 'Rental/Sales B2B'\n        WHEN 101 THEN 'Sales B2B'\n        WHEN 100 THEN 'Rental B2B'\n        WHEN 0 THEN  'Ninguna Etiqueta'\n        ELSE label \n    END AS label ,\n    person_name ,\n    org_name ,\n    owner_name ,\n    user_id.email::VARCHAR                     AS owner_email, \n    user_id.id::INT                            AS owner_id,\n    \"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link ,\n    \"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address ,\n    CASE \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\" \n         WHEN 81 THEN 0\n         WHEN 82 THEN 1\n         WHEN 83 THEN 2\n         WHEN 84 THEN 3\n         WHEN 85 THEN 4\n         WHEN 86 THEN 5\n         WHEN 147 THEN 6 \n         ELSE NULL \n    END AS qualification ,\n    \"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email ,\n    \"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone ,\n    \"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type ,\n    \"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source ,\n    CASE \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" \n        WHEN 279 THEN 'Alliances'   \n        WHEN 280 THEN 'Captadores' \n        WHEN 281 THEN 'Referral program'\n        WHEN 282 THEN 'Message Bird'     \n        WHEN 283 THEN 'Whatsapp'\n        WHEN 284 THEN 'Scrapers'\n        WHEN 285 THEN 'Offline'\n        WHEN 286 THEN 'Programmatic'\n        WHEN 578 THEN 'LinkedIn'\n        WHEN 596 THEN 'Facebook'\n        WHEN 597 THEN 'Google'\n        WHEN 598 THEN 'Organic & Direct'\n        WHEN 599 THEN 'Social Media'\n        WHEN 600 THEN 'Email Marketing\\tEmail Marketing'\n        WHEN 712 THEN 'Others' \n        ELSE \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\"         \n    END AS unified_source ,\n    \"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city ,\n    CASE \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n        WHEN 107 THEN 'Rental'\n        WHEN 108 THEN 'Rental'\n        WHEN 109 THEN 'Sales'\n        WHEN 110 THEN 'Sales' \n        ELSE NULL \n    END AS business_deal, \n    \"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id ,\n    \"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep ,  -- Campo nulo \n    \"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country , -- Campo practicamente nulo. Eliminar\n    CASE \"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n        WHEN 114 THEN 'Todo al contado'\n        WHEN 115 THEN 'Cr\u00e9dito aprobado'\n        WHEN 116 THEN 'Cr\u00e9dito pre-aprobado'\n        WHEN 117 THEN 'Sin financiamiento'\n        WHEN 149 THEN 'Fovisste'\n        WHEN 150 THEN 'Infonavit'\n        WHEN 193 THEN 'Subsidio habitacional'\n        WHEN 207 THEN 'No quiere detallar'\n        ELSE NULL \n    END AS profile_financial ,\n    \"69ea781634ab7eb7ee214c0c4a2fe3c38af1f0ec\" , -- Campo nulo\n    \"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country , -- Campo nulo\n    \"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\" AS qualification_date , -- Fecha, NO tiemstamps\n    CASE \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n        WHEN 119 THEN 'Vivienda'\n        WHEN 118 THEN  'Inversi\u00f3n' \n        WHEN '118,119' THEN 'Vivienda/Inversi\u00f3n'\n        WHEN '119,118' THEN 'Vivienda/Inversi\u00f3n'\n    END AS profile_buying_interest ,\n    \"5f4461694404306c423b907bc1b97fe57a90fc9b\" AS profile_ap_buyers , \n    CASE \"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n        WHEN '121'      THEN 'Entre 1 y 3 meses'\n        WHEN '121,122'  THEN 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '121,216'  THEN 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n        WHEN '122'      THEN 'M\u00e1s de 3 meses'\n        WHEN '122,215'  THEN 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n        WHEN '166'      THEN 'Menos de 1 mes'\n        WHEN '166,121'  THEN 'Menos de 1 mes/Entre 1 y 3 meses'\n        WHEN '166,121,122' THEN 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '166,122' THEN 'Menos de 1 mes/M\u00e1s de 3 meses'\n        WHEN '166,215' THEN 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n        WHEN '166,216' THEN 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n        WHEN '215'     THEN 'Entrega a 1 a\u00f1o'\n        WHEN '215,216' THEN 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n        WHEN '216'     THEN 'Entrega a 2 a\u00f1os'\n        ELSE NULL \n    END AS profile_timing_need, \n    \"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS profile_income , \n    \"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS profile_savings_initial_fee , \n    CASE SUBSTRING(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\", length(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\")-2, 3)\n        WHEN 212 THEN 'Yo solo'\n        WHEN 213 THEN 'En Pareja'\n        WHEN 214 THEN 'En Familia'      \n        ELSE NULL \n    END AS profile_decision_maker , \n    CASE \"678c6b4df5ea23b6181544bb2557b6007f79d64d\"\n        WHEN 194 THEN 'Departamento' \n        WHEN 195 THEN 'Casa' \n        ELSE NULL\n    END AS profile_property_type ,  \n    CASE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" \n        WHEN 198 THEN 'Usada/Nueva'\n        WHEN 196 THEN 'Usada'\n        WHEN 197 THEN 'Nueva'\n        ELSE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\"\n    END AS profile_property_condition ,\n    \"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS profile_geographic_interest ,\n    CASE SUBSTRING(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\", length(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\")-2, 3)\n        WHEN 126 THEN '1'\n        WHEN 127 THEN '2'\n        WHEN 128 THEN '3'\n        WHEN 129 THEN '4'\n        WHEN 130 THEN '+4'\n        ELSE NULL\n    END AS profile_rooms ,\n    CASE SUBSTRING(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\", length(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\")-2, 3)\n        WHEN 131 THEN '1'\n        WHEN 132 THEN '2' \n        WHEN 133 THEN '3'\n        WHEN 134 THEN '4'\n        WHEN 135 THEN '+4'\n        ELSE NULL\n    END AS profile_bathrooms ,\n    CASE SUBSTRING(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\", length(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\")-2, 3)\n       WHEN 136 THEN '0'\n       WHEN 137 THEN '1'\n       WHEN 138 THEN '2' \n       WHEN 139 THEN '3'\n       WHEN 140 THEN '+3'\n       ELSE NULL\n    END AS profile_parkings ,\n    CASE SUBSTRING(\"9007a9793366afdfd11d087c71d5732a41eca3d0\", length(\"9007a9793366afdfd11d087c71d5732a41eca3d0\")-2, 3)\n        WHEN 141 THEN '0'\n        WHEN 142 THEN '1'\n        WHEN 143 THEN '2'\n        WHEN 144 THEN '3'         \n    END AS profile_storage ,    \n    \"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS profile_area ,\n    \"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS profile_budget ,\n    CASE \"73be236be81871bee3d221f721a3b56efa1662cf\" \n        WHEN 342 THEN 'No quiere dar informaci\u00f3n' \n        WHEN 202 THEN 'Fija'\n        WHEN 209 THEN 'Variable'\n        WHEN '202,209' THEN 'Fija/Variable'\n    ELSE NULL     \n    END AS profile_source_of_income ,\n    \"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS profile_debt ,\n    CASE \"5824fac0f9df05b659fd70cc055349394eb678ca\"\n        WHEN 203 THEN 'Dependiente Contrato Fijo'\n        WHEN 204 THEN 'Dependiente Contrato Indefinido'\n        WHEN 205 THEN 'Independiente'\n        WHEN 343 THEN 'No quiere dar informaci\u00f3n'\n        WHEN '203,205' THEN 'Dependiente Contrato Fijo, Independiente'\n        WHEN '203,204' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido'\n        WHEN '204,205' THEN 'Dependiente Contrato Indefinido, Independiente'\n        WHEN '203,204,205' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido, Independiente'\n        WHEN '205,343' THEN 'Independiente,No quiere dar informaci\u00f3n'\n        ELSE NULL\n    END AS profile_income_type ,\n    \"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS profile_profession ,\n    \"07947a7736355ed261aec09b66aaf2b790be5489\" AS profile_income_supplement ,\n    \"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS profile_saving_capacity ,\n    CASE \n        WHEN \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" IN (0,1,2,3,4,5) THEN \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" \n        ELSE NULL \n    END AS buyer_qualification ,\n    \"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" AS scheduler ,\n    \"c00ff6487084ced65ae133b319de9d84dac6b4ba\" AS scheduled_by ,\n    user_id  ,\n    person_id AS person_json ,\n    person_id.value::INTEGER as person_id ,\n    \"957048bc161c4ad91d9da0c07b162bf18bc3acb9\" AS reservation_date ,\n    \"af1c7beca1a4b5538315280d5a25c6ba812c8f02\" AS one_sided_signatures_date ,\n    \"3b3401936f35bceddc0a70fbc8cb23fd52defec6\" AS both_sided_signatures_date ,\n    \"993757a99b12ef09c142c4a6baf40526405fe8ab\" AS new_properties_signatures_date ,\n    CASE \"4067d32849ff63f793285b7df808200864a27834\" \n        WHEN 241 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 242 THEN 'Valpara\u00edso'\n        WHEN 243 THEN 'Concepci\u00f3n'\n        WHEN 245 THEN 'Ciudad de M\u00e9xico'\n        WHEN 246 THEN 'Guadalajara'\n        WHEN 247 THEN 'Tijuana'\n        WHEN 248 THEN 'Monterrey'\n        WHEN 249 THEN 'Bogot\u00e1'\n        WHEN 250 THEN 'Medell\u00edn'\n        WHEN 262 THEN 'Otro'\n    ELSE NULL \n    END AS negotiation_city , \n    \"51efe5f94222655f4f9b470ecce4850b58c5d15c\" AS marketing_id ,\n    \"240c440cb58bd5f9286912aaeacd37b772747072\" AS marketing_lead_id ,\n    \"0d7c97b04cad1ff88142c357c8f25ef775a48304\" AS utm_term ,\n    CASE \"21eeff918978b8ce10d73a58f6ce61c8336d1ace\" \n        WHEN 401 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 402 THEN 'Valpara\u00edso'\n        WHEN 403 THEN 'Concepci\u00f3n'\n        WHEN 404 THEN 'Ciudad de M\u00e9xico'\n        WHEN 405 THEN 'Guadalajara'\n        WHEN 406 THEN 'Tijuana'\n        WHEN 407 THEN 'Monterrey'\n        WHEN 408 THEN 'Bogot\u00e1'\n        WHEN 409 THEN 'Medell\u00edn'\n        ELSE NULL\n    END AS source_city ,\n    CASE \"b219dc0405c6158733398c7c6cc4a75b1829298d\" \n        WHEN 399 THEN 'New Properties'\n        WHEN 400 THEN 'Usados'\n    END AS source_buyer_property_condition , \n    \"e12af2d33a53481c56d5edc6380fb4bdae6850b0\" AS buyer_qualification_date  , \n    \"e0cd6b5750abed2cbf2bcbcea3c07872deaf7b5f\" AS partner_code\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\"\n)\n\nSELECT \n\t*\nFROM deals \nORDER BY update_time DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\""}, "model.houm.proc_pipedrive_labels": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_labels"], "unique_id": "model.houm.proc_pipedrive_labels", "raw_code": "WITH labels AS (\nSELECT \n    deals.label_id AS id , \n    deals.label , \n    CASE \n      WHEN deals.label IN ('Buyer','Campa\u00f1a MB' , 'Inversionista', 'Lead Sales', 'New Properties', 'Sale', 'Sales B2B', 'Sales Hot Lead', 'Seller', 'Usados', 'Venta' ) THEN 'Sales'\n      WHEN deals.label IN ('Rental', 'Rental B2B')  THEN 'Rental'\n      ELSE 'Rental/Sales' -- Labels that do not have business: GDL , Marketing, Ninguna Etiqueta, Rental/Sales B2B , 'Autogestionado'\n    END AS business , \n    CASE \n      WHEN deals.label = 'New Properties' THEN 'New Properties' \n      WHEN deals.label = 'Usados' THEN 'Second Hand'\n    END property_condition \nFROM {{ref('proc_pipedrive_deals')}} AS deals\nGROUP BY  1 , 2 \n)\n\nSELECT \n  * \nFROM labels", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_labels.sql", "original_file_path": "models/processing/tools/proc_pipedrive_labels.sql", "name": "proc_pipedrive_labels", "alias": "proc_pipedrive_labels", "checksum": {"name": "sha256", "checksum": "66dab099e27e0b4b5c323312fa4f68b17130697a3eb2767a6105998a76c27b77"}, "tags": ["dw", "processing", "tools"], "refs": [["proc_pipedrive_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_labels.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"]}, "created_at": 1675970038.346096, "compiled_code": "WITH labels AS (\nSELECT \n    deals.label_id AS id , \n    deals.label , \n    CASE \n      WHEN deals.label IN ('Buyer','Campa\u00f1a MB' , 'Inversionista', 'Lead Sales', 'New Properties', 'Sale', 'Sales B2B', 'Sales Hot Lead', 'Seller', 'Usados', 'Venta' ) THEN 'Sales'\n      WHEN deals.label IN ('Rental', 'Rental B2B')  THEN 'Rental'\n      ELSE 'Rental/Sales' -- Labels that do not have business: GDL , Marketing, Ninguna Etiqueta, Rental/Sales B2B , 'Autogestionado'\n    END AS business , \n    CASE \n      WHEN deals.label = 'New Properties' THEN 'New Properties' \n      WHEN deals.label = 'Usados' THEN 'Second Hand'\n    END property_condition \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS deals\nGROUP BY  1 , 2 \n)\n\nSELECT \n  * \nFROM labels", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_labels\""}, "model.houm.proc_kustomer_customers_emails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_kustomer_customers_emails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_kustomer_customers_emails"], "unique_id": "model.houm.proc_kustomer_customers_emails", "raw_code": "{{ config(materialized='view') }}\n\n\nWITH emails_core AS (\n    /*\n    Pendiete: limpiar casos de emails listados que contengan \",/ -\" (espacios.. etc) \n    y administraci\u00f3n@houm o cobranza@houm\n    */\n    SELECT \n       * , \n        CASE \n            WHEN verified = 'true' \n            THEN 1 ELSE 2 \n        END AS relevance,\n        ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY relevance ASC) AS ranking\n    FROM {{ ref('stg_kustomer_customers_emails') }} \n    ORDER BY ranking\n)\n\nSELECT \n    customer_id,\n    LISTAGG(email, ', ')::VARCHAR AS emails_array,\n    SPLIT_PART(emails_array, ', ', 1) AS email\nFROM emails_core\nGROUP BY 1", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_kustomer_customers_emails.sql", "original_file_path": "models/processing/tools/proc_kustomer_customers_emails.sql", "name": "proc_kustomer_customers_emails", "alias": "proc_kustomer_customers_emails", "checksum": {"name": "sha256", "checksum": "c50cb1368087e8959c165eaa014ca83abb6407b06c2ecd0281c1137ce44a3e86"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_kustomer_customers_emails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_kustomer_customers_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "view"}, "created_at": 1675970038.347809, "compiled_code": "\n\n\nWITH emails_core AS (\n    /*\n    Pendiete: limpiar casos de emails listados que contengan \",/ -\" (espacios.. etc) \n    y administraci\u00f3n@houm o cobranza@houm\n    */\n    SELECT \n       * , \n        CASE \n            WHEN verified = 'true' \n            THEN 1 ELSE 2 \n        END AS relevance,\n        ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY relevance ASC) AS ranking\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_emails\" \n    ORDER BY ranking\n)\n\nSELECT \n    customer_id,\n    LISTAGG(email, ', ')::VARCHAR AS emails_array,\n    SPLIT_PART(emails_array, ', ', 1) AS email\nFROM emails_core\nGROUP BY 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers_emails\""}, "model.houm.proc_pipedrive_stages": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_stages", "seed.houm.seed_unified_stages_pipedrive"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_pipedrive_stages"], "unique_id": "model.houm.proc_pipedrive_stages", "raw_code": "SELECT \n    stg_stages.id , \n    add_time ,\n    update_time , \n    name ,\n    pipeline_id ,\n    stage_unified.unified_stage_name ,\n    stage_unified.business,\n    stage_unified.order \nFROM {{ref('stg_stages')}} stg_stages\nLEFT JOIN {{ref('seed_unified_stages_pipedrive')}} stage_unified\n    ON stage_unified.id = stg_stages.id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_pipedrive_stages.sql", "original_file_path": "models/processing/tools/proc_pipedrive_stages.sql", "name": "proc_pipedrive_stages", "alias": "proc_pipedrive_stages", "checksum": {"name": "sha256", "checksum": "a37454cd1c46519ab08278f558b72b887a0d673f49b21ec6773ca47427a9cbe6"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_stages"], ["seed_unified_stages_pipedrive"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_pipedrive_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"]}, "created_at": 1675970038.349504, "compiled_code": "SELECT \n    stg_stages.id , \n    add_time ,\n    update_time , \n    name ,\n    pipeline_id ,\n    stage_unified.unified_stage_name ,\n    stage_unified.business,\n    stage_unified.order \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_stages\" stg_stages\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_unified_stages_pipedrive\" stage_unified\n    ON stage_unified.id = stg_stages.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_stages\""}, "model.houm.proc_kustomer_customers_phones": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_kustomer_customers_phones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "tools"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "tools", "proc_kustomer_customers_phones"], "unique_id": "model.houm.proc_kustomer_customers_phones", "raw_code": "{{ config(materialized='view') }}\n\nWITH phones_core AS (\n    SELECT \n        customer_id,\n        type,\n        verified,\n        REGEXP_REPLACE(email, '[^0-9]', '')::VARCHAR AS phone,  \n        --validaci\u00f3n de que cumpla con el formato de pais y est\u00e9 completo\n        CASE\n            WHEN phone LIKE '57%' AND LENGTH(phone) = 13 THEN 'Colombia'\n            WHEN phone LIKE '56%' AND LENGTH(phone) = 12 THEN 'Chile'\n            WHEN phone LIKE '52%' AND LENGTH(phone) = 13 THEN 'Mexico'\n            ELSE NULL \n        END AS country,\n        CASE\n            WHEN country IS NOT NULL THEN TRUE\n            ELSE FALSE \n        END AS is_valid_phone, \n        CASE \n            WHEN verified = 'true' THEN 1 \n            WHEN is_valid_phone THEN 2 \n            ELSE 3 \n        END AS relevance, \n        ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY relevance ASC) AS ranking\n    FROM {{ ref('stg_kustomer_customers_phones') }} \n    ORDER BY ranking \n)\n\nSELECT \n    customer_id,\n    LISTAGG(phone, ', ')::VARCHAR AS phones_breakdown,\n    LISTAGG(country, ', ')::VARCHAR AS countries_breakdown,\n    SPLIT_PART(phones_breakdown, ', ', 1) AS phone,\n    SPLIT_PART(countries_breakdown, ', ', 1) AS country\nFROM phones_core\nGROUP BY 1", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/tools/proc_kustomer_customers_phones.sql", "original_file_path": "models/processing/tools/proc_kustomer_customers_phones.sql", "name": "proc_kustomer_customers_phones", "alias": "proc_kustomer_customers_phones", "checksum": {"name": "sha256", "checksum": "39afcd9778174361f619107d36e8f5a68a06b91131adcea78ead325ece63f286"}, "tags": ["dw", "processing", "tools"], "refs": [["stg_kustomer_customers_phones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/tools/proc_kustomer_customers_phones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "tools"], "materialized": "view"}, "created_at": 1675970038.351167, "compiled_code": "\n\nWITH phones_core AS (\n    SELECT \n        customer_id,\n        type,\n        verified,\n        REGEXP_REPLACE(email, '[^0-9]', '')::VARCHAR AS phone,  \n        --validaci\u00f3n de que cumpla con el formato de pais y est\u00e9 completo\n        CASE\n            WHEN phone LIKE '57%' AND LENGTH(phone) = 13 THEN 'Colombia'\n            WHEN phone LIKE '56%' AND LENGTH(phone) = 12 THEN 'Chile'\n            WHEN phone LIKE '52%' AND LENGTH(phone) = 13 THEN 'Mexico'\n            ELSE NULL \n        END AS country,\n        CASE\n            WHEN country IS NOT NULL THEN TRUE\n            ELSE FALSE \n        END AS is_valid_phone, \n        CASE \n            WHEN verified = 'true' THEN 1 \n            WHEN is_valid_phone THEN 2 \n            ELSE 3 \n        END AS relevance, \n        ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY relevance ASC) AS ranking\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_kustomer_customers_phones\" \n    ORDER BY ranking \n)\n\nSELECT \n    customer_id,\n    LISTAGG(phone, ', ')::VARCHAR AS phones_breakdown,\n    LISTAGG(country, ', ')::VARCHAR AS countries_breakdown,\n    SPLIT_PART(phones_breakdown, ', ', 1) AS phone,\n    SPLIT_PART(countries_breakdown, ', ', 1) AS country\nFROM phones_core\nGROUP BY 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_kustomer_customers_phones\""}, "model.houm.proc_core_cancelations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations", "model.houm.proc_first_cancelation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_cancelations"], "unique_id": "model.houm.proc_core_cancelations", "raw_code": "WITH union_cancelations AS (\nSELECT \n    *\nFROM {{ ref('proc_app_cancelations') }}\nUNION ALL\nSELECT \n    *\nFROM {{ ref('proc_others_cancelations') }}   \n)\n\n, first_cancelation AS (\nSELECT \n    *\nFROM {{ ref('proc_first_cancelation') }}   \n)\n\nSELECT \n    union_cancelations.cancelation_id,\n    union_cancelations.schedule_id,\n    first_cancelation.cancelled_at,\n    union_cancelations.cancel_type,\n    union_cancelations.cancel_reason,\n    union_cancelations.roles, \n    union_cancelations.cancel_reason_text,\n    union_cancelations.comment AS cancel_comment,\n    union_cancelations.latitude_appraiser AS cancel_latitude_appraiser,\n    union_cancelations.longitude_appraiser AS cancel_longitude_appraiser,\n    union_cancelations.appraiser_id, \n    union_cancelations.name_appraiser,\n    union_cancelations.email_appraiser,\n    union_cancelations.cancel_timing,\n    first_cancelation.origin AS first_cancelation_origin,\n    first_cancelation.user_id AS first_cancel_user_id\nFROM first_cancelation\nLEFT JOIN union_cancelations\n    ON first_cancelation.schedule_id = union_cancelations.schedule_id\n        AND first_cancelation.cancelled_at = union_cancelations.cancelled_at\nWHERE union_cancelations.schedule_id IS NOT NULL", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_cancelations.sql", "original_file_path": "models/processing/core/proc_core_cancelations.sql", "name": "proc_core_cancelations", "alias": "proc_core_cancelations", "checksum": {"name": "sha256", "checksum": "c80d10e2f0dc6a61de0963fdd06338bbe2337cbb25f1d8e433cb0a67ab2c31d5"}, "tags": ["dw", "processing"], "refs": [["proc_app_cancelations"], ["proc_others_cancelations"], ["proc_first_cancelation"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.352855, "compiled_code": "WITH union_cancelations AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_app_cancelations\"\nUNION ALL\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_others_cancelations\"   \n)\n\n, first_cancelation AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_first_cancelation\"   \n)\n\nSELECT \n    union_cancelations.cancelation_id,\n    union_cancelations.schedule_id,\n    first_cancelation.cancelled_at,\n    union_cancelations.cancel_type,\n    union_cancelations.cancel_reason,\n    union_cancelations.roles, \n    union_cancelations.cancel_reason_text,\n    union_cancelations.comment AS cancel_comment,\n    union_cancelations.latitude_appraiser AS cancel_latitude_appraiser,\n    union_cancelations.longitude_appraiser AS cancel_longitude_appraiser,\n    union_cancelations.appraiser_id, \n    union_cancelations.name_appraiser,\n    union_cancelations.email_appraiser,\n    union_cancelations.cancel_timing,\n    first_cancelation.origin AS first_cancelation_origin,\n    first_cancelation.user_id AS first_cancel_user_id\nFROM first_cancelation\nLEFT JOIN union_cancelations\n    ON first_cancelation.schedule_id = union_cancelations.schedule_id\n        AND first_cancelation.cancelled_at = union_cancelations.cancelled_at\nWHERE union_cancelations.schedule_id IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_cancelations\""}, "model.houm.proc_core_scheduler_schedules": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm", "model.houm.stg_scheduler_scheduleevent", "model.houm.stg_arriendoasegurado_applicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_scheduler_schedules"], "unique_id": "model.houm.proc_core_scheduler_schedules", "raw_code": "{{ config(materialized='table') }}\n\nWITH schedules AS (\nSELECT \n    scheduler_schedules.id AS schedule_id ,\n    scheduler_schedules.begin_date ,\n    scheduler_schedules.end_date ,\n    scheduler_schedules.updated_at ,\n    scheduler_schedules.prop_id AS property_id ,\n    prop_mz.geo_id ,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    scheduler_schedules.status ,\n    scheduler_scheduletypes.name AS visit_type ,\n    scheduler_schedulehasapplicant.applicant_id,\n    scheduler_schedules.appraiser_id ,\n    scheduler_appraisers.email AS appraiser_email\nFROM {{ ref('stg_scheduler_schedules') }} AS scheduler_schedules\nLEFT JOIN {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes\n    ON scheduler_schedules.schedule_type_id = scheduler_scheduletypes.id \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n    ON prop_mz.property_id = scheduler_schedules.prop_id \nLEFT JOIN {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id = scheduler_schedules.id \nLEFT JOIN  {{ ref('stg_scheduler_appraisers') }}   scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name in ('Visit','SalesVisit')\n)\n, rescheduled AS (\nSELECT \n    id ,\n    schedule_id ,\n    created_at\nFROM {{ ref('stg_scheduler_scheduleevent') }} AS scheduler_scheduleevent\nWHERE action IN  ('Reschedule', 'Rescheduled')\n)\n, rescheduled_max AS (\nSELECT\n    a.*\nFROM rescheduled AS a\nINNER JOIN (\n    SELECT\n        schedule_id ,\n        MAX(created_at) AS created_at\n    FROM rescheduled\n    GROUP BY schedule_id\n) AS b\n     ON a.created_at = b.created_at AND a.schedule_id = b.schedule_id\n)\n, schedules_has_rescheduled AS (\nSELECT\n    schedules.* ,\n    rescheduled_max.created_at AS rescheduled_at ,\n    CASE\n        WHEN rescheduled_max.id IS NOT NULL THEN true\n        ELSE false\n    END AS is_reschedule\nFROM schedules\nLEFT JOIN rescheduled_max\n    ON schedules.schedule_id = rescheduled_max.schedule_id\n)\n\n, schedules_has_applicant AS (\nSELECT \n   schedules_has_rescheduled.*,\n   stg_arriendoasegurado_applicant.email AS applicant_email\nFROM schedules_has_rescheduled   \nLEFT JOIN {{ ref('stg_arriendoasegurado_applicant') }} AS stg_arriendoasegurado_applicant\n   ON stg_arriendoasegurado_applicant.id = schedules_has_rescheduled.applicant_id\n)\n\n, schedules_visits_by_applicant AS (\nSELECT\n    schedules_has_applicant.* ,\n    DENSE_RANK() OVER (PARTITION BY applicant_email ORDER BY begin_date ASC ) visit_number\nFROM schedules_has_applicant\n)\n\n, schedules_visits_done_by_applicant AS (\nSELECT\n    schedules_has_applicant.* ,\n    DENSE_RANK() OVER (PARTITION BY applicant_email ORDER BY begin_date ASC ) visit_done_number\nFROM schedules_has_applicant\nWHERE status = 'Done'\n)\n\nSELECT \n    schedules_visits_by_applicant.schedule_id ,\n    schedules_visits_by_applicant.begin_date ,\n    schedules_visits_by_applicant.end_date ,\n    schedules_visits_by_applicant.updated_at ,\n    schedules_visits_by_applicant.property_id ,\n    schedules_visits_by_applicant.geo_id ,\n    schedules_visits_by_applicant.mz_country ,\n    schedules_visits_by_applicant.mz_city ,\n    schedules_visits_by_applicant.location_id ,\n    schedules_visits_by_applicant.loc_country ,\n    schedules_visits_by_applicant.loc_region ,\n    schedules_visits_by_applicant.loc_city ,\n    schedules_visits_by_applicant.status ,\n    schedules_visits_by_applicant.visit_type ,\n    schedules_visits_by_applicant.applicant_id ,\n    schedules_visits_by_applicant.appraiser_id ,\n    schedules_visits_by_applicant.rescheduled_at ,\n    schedules_visits_by_applicant.is_reschedule ,\n    schedules_visits_by_applicant.applicant_email ,\n    schedules_visits_by_applicant.appraiser_email ,\n    schedules_visits_by_applicant.visit_number ,\n    CASE WHEN schedules_visits_done_by_applicant.visit_done_number IS NULL THEN 0 \n         ELSE visit_done_number \n         END AS visit_done_number,\n    CASE WHEN schedules_visits_by_applicant.applicant_id IS NULL THEN 'Sin Applicant' \n         WHEN schedules_visits_by_applicant.visit_number = 1 THEN '1ra Agenda'\n         WHEN schedules_visits_by_applicant.visit_number = 2 THEN '2da Agenda'\n         WHEN schedules_visits_by_applicant.visit_number > 2 THEN '3ra+ Agenda'\n         ELSE NULL \n         END AS client_visit,\n    CASE WHEN schedules_visits_done_by_applicant.visit_done_number IS NULL THEN 'Sin Agenda Done'\n         WHEN schedules_visits_by_applicant.applicant_id IS NULL AND schedules_visits_done_by_applicant.visit_done_number IS NOT NULL THEN 'Agenda Done sin Applicant'\n         WHEN schedules_visits_done_by_applicant.visit_done_number = 1 THEN '1ra Agenda Done'\n         WHEN schedules_visits_done_by_applicant.visit_done_number = 2 THEN '2da Agenda Done'\n         WHEN schedules_visits_done_by_applicant.visit_done_number > 2 THEN '3ra+ Agenda Done'\n         ELSE NULL \n         END AS client_done_visit   \nFROM schedules_visits_by_applicant\nLEFT JOIN schedules_visits_done_by_applicant\n  ON schedules_visits_by_applicant.schedule_id = schedules_visits_done_by_applicant.schedule_id\nORDER BY schedules_visits_by_applicant.begin_date DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_scheduler_schedules.sql", "original_file_path": "models/processing/core/proc_core_scheduler_schedules.sql", "name": "proc_core_scheduler_schedules", "alias": "proc_core_scheduler_schedules", "checksum": {"name": "sha256", "checksum": "bcb9b52157c3aa5653d2deee3890e5ffa92ff05b3fc32da4dc0f3dba6d0a6367"}, "tags": ["dw", "processing"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["proc_properties_mz"], ["stg_scheduler_schedulehasapplicant"], ["stg_scheduler_appraisers"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"], ["stg_scheduler_scheduleevent"], ["stg_arriendoasegurado_applicant"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_scheduler_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"], "materialized": "table"}, "created_at": 1675970038.3546681, "compiled_code": "\n\nWITH schedules AS (\nSELECT \n    scheduler_schedules.id AS schedule_id ,\n    scheduler_schedules.begin_date ,\n    scheduler_schedules.end_date ,\n    scheduler_schedules.updated_at ,\n    scheduler_schedules.prop_id AS property_id ,\n    prop_mz.geo_id ,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    scheduler_schedules.status ,\n    scheduler_scheduletypes.name AS visit_type ,\n    scheduler_schedulehasapplicant.applicant_id,\n    scheduler_schedules.appraiser_id ,\n    scheduler_appraisers.email AS appraiser_email\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS scheduler_schedules\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes\n    ON scheduler_schedules.schedule_type_id = scheduler_scheduletypes.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = scheduler_schedules.prop_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id = scheduler_schedules.id \nLEFT JOIN  \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\"   scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name in ('Visit','SalesVisit')\n)\n, rescheduled AS (\nSELECT \n    id ,\n    schedule_id ,\n    created_at\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\" AS scheduler_scheduleevent\nWHERE action IN  ('Reschedule', 'Rescheduled')\n)\n, rescheduled_max AS (\nSELECT\n    a.*\nFROM rescheduled AS a\nINNER JOIN (\n    SELECT\n        schedule_id ,\n        MAX(created_at) AS created_at\n    FROM rescheduled\n    GROUP BY schedule_id\n) AS b\n     ON a.created_at = b.created_at AND a.schedule_id = b.schedule_id\n)\n, schedules_has_rescheduled AS (\nSELECT\n    schedules.* ,\n    rescheduled_max.created_at AS rescheduled_at ,\n    CASE\n        WHEN rescheduled_max.id IS NOT NULL THEN true\n        ELSE false\n    END AS is_reschedule\nFROM schedules\nLEFT JOIN rescheduled_max\n    ON schedules.schedule_id = rescheduled_max.schedule_id\n)\n\n, schedules_has_applicant AS (\nSELECT \n   schedules_has_rescheduled.*,\n   stg_arriendoasegurado_applicant.email AS applicant_email\nFROM schedules_has_rescheduled   \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS stg_arriendoasegurado_applicant\n   ON stg_arriendoasegurado_applicant.id = schedules_has_rescheduled.applicant_id\n)\n\n, schedules_visits_by_applicant AS (\nSELECT\n    schedules_has_applicant.* ,\n    DENSE_RANK() OVER (PARTITION BY applicant_email ORDER BY begin_date ASC ) visit_number\nFROM schedules_has_applicant\n)\n\n, schedules_visits_done_by_applicant AS (\nSELECT\n    schedules_has_applicant.* ,\n    DENSE_RANK() OVER (PARTITION BY applicant_email ORDER BY begin_date ASC ) visit_done_number\nFROM schedules_has_applicant\nWHERE status = 'Done'\n)\n\nSELECT \n    schedules_visits_by_applicant.schedule_id ,\n    schedules_visits_by_applicant.begin_date ,\n    schedules_visits_by_applicant.end_date ,\n    schedules_visits_by_applicant.updated_at ,\n    schedules_visits_by_applicant.property_id ,\n    schedules_visits_by_applicant.geo_id ,\n    schedules_visits_by_applicant.mz_country ,\n    schedules_visits_by_applicant.mz_city ,\n    schedules_visits_by_applicant.location_id ,\n    schedules_visits_by_applicant.loc_country ,\n    schedules_visits_by_applicant.loc_region ,\n    schedules_visits_by_applicant.loc_city ,\n    schedules_visits_by_applicant.status ,\n    schedules_visits_by_applicant.visit_type ,\n    schedules_visits_by_applicant.applicant_id ,\n    schedules_visits_by_applicant.appraiser_id ,\n    schedules_visits_by_applicant.rescheduled_at ,\n    schedules_visits_by_applicant.is_reschedule ,\n    schedules_visits_by_applicant.applicant_email ,\n    schedules_visits_by_applicant.appraiser_email ,\n    schedules_visits_by_applicant.visit_number ,\n    CASE WHEN schedules_visits_done_by_applicant.visit_done_number IS NULL THEN 0 \n         ELSE visit_done_number \n         END AS visit_done_number,\n    CASE WHEN schedules_visits_by_applicant.applicant_id IS NULL THEN 'Sin Applicant' \n         WHEN schedules_visits_by_applicant.visit_number = 1 THEN '1ra Agenda'\n         WHEN schedules_visits_by_applicant.visit_number = 2 THEN '2da Agenda'\n         WHEN schedules_visits_by_applicant.visit_number > 2 THEN '3ra+ Agenda'\n         ELSE NULL \n         END AS client_visit,\n    CASE WHEN schedules_visits_done_by_applicant.visit_done_number IS NULL THEN 'Sin Agenda Done'\n         WHEN schedules_visits_by_applicant.applicant_id IS NULL AND schedules_visits_done_by_applicant.visit_done_number IS NOT NULL THEN 'Agenda Done sin Applicant'\n         WHEN schedules_visits_done_by_applicant.visit_done_number = 1 THEN '1ra Agenda Done'\n         WHEN schedules_visits_done_by_applicant.visit_done_number = 2 THEN '2da Agenda Done'\n         WHEN schedules_visits_done_by_applicant.visit_done_number > 2 THEN '3ra+ Agenda Done'\n         ELSE NULL \n         END AS client_done_visit   \nFROM schedules_visits_by_applicant\nLEFT JOIN schedules_visits_done_by_applicant\n  ON schedules_visits_by_applicant.schedule_id = schedules_visits_done_by_applicant.schedule_id\nORDER BY schedules_visits_by_applicant.begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\""}, "model.houm.proc_core_appraisers": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_appraisers", "seed.houm.seed_test_email"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_appraisers"], "unique_id": "model.houm.proc_core_appraisers", "raw_code": "SELECT \n    appraisers.id, \n    appraisers.created_at,\n    appraisers.updated_at,\n    appraisers.country, \n    appraisers.name, \n    appraisers.phone, \n    appraisers.email,\n    appraisers.active, \n    appraisers.roles,\n    CASE \n        WHEN roles::TEXT LIKE '%Dummy%' THEN TRUE \n        ELSE FALSE \n    END AS is_dummy,\n    COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM {{ ref('stg_scheduler_appraisers') }} AS appraisers\nLEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n    ON appraisers.email = test_persons.email", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_appraisers.sql", "original_file_path": "models/processing/core/proc_core_appraisers.sql", "name": "proc_core_appraisers", "alias": "proc_core_appraisers", "checksum": {"name": "sha256", "checksum": "cb73b78c2671c8cda7c3904974103c42ab17e0b3793c0a2bcfde03a09123dd88"}, "tags": ["dw", "processing"], "refs": [["stg_scheduler_appraisers"], ["seed_test_email"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_appraisers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.356578, "compiled_code": "SELECT \n    appraisers.id, \n    appraisers.created_at,\n    appraisers.updated_at,\n    appraisers.country, \n    appraisers.name, \n    appraisers.phone, \n    appraisers.email,\n    appraisers.active, \n    appraisers.roles,\n    CASE \n        WHEN roles::TEXT LIKE '%Dummy%' THEN TRUE \n        ELSE FALSE \n    END AS is_dummy,\n    COALESCE(test_persons.is_test, FALSE) AS is_test\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" AS appraisers\nLEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n    ON appraisers.email = test_persons.email", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_appraisers\""}, "model.houm.proc_core_users": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_users"], "unique_id": "model.houm.proc_core_users", "raw_code": "SELECT\n    *\nFROM {{ ref('stg_users') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_users.sql", "original_file_path": "models/processing/core/proc_core_users.sql", "name": "proc_core_users", "alias": "proc_core_users", "checksum": {"name": "sha256", "checksum": "31f5ded076ecb43469ead0a511f876664692e88cfa3e0eb1bc024f6fce3fa6b4"}, "tags": ["dw", "processing"], "refs": [["stg_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.358248, "compiled_code": "SELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_users\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_users\""}, "model.houm.proc_app_cancelations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_app_cancelations"], "unique_id": "model.houm.proc_app_cancelations", "raw_code": "SELECT \n    scheduler_schedules.id schedule_id,\n    cancelreasons.id cancelation_id,\n    scheduler_cancelreasontypes.cancel_type,\n    scheduler_cancelreasontypes.cancel_reason,\n    scheduler_cancelreasontypes.roles,\n    scheduler_cancelreasontypes.text cancel_reason_text,\n    cancelreasons.comment,\n    scheduler_appraiserevent.created_at AS cancelled_at,\n    scheduler_appraiserevent.latitude AS latitude_appraiser,\n    scheduler_appraiserevent.longitude AS longitude_appraiser,\n    scheduler_appraisers.id AS appraiser_id,\n    scheduler_appraisers.name AS name_appraiser,\n    scheduler_appraisers.email AS email_appraiser,\n    CASE \n        WHEN scheduler_schedules.begin_date >= scheduler_appraiserevent.created_at THEN 'Pre-Visit'::TEXT\n        WHEN scheduler_schedules.begin_date < scheduler_appraiserevent.created_at THEN 'Post-Visit'::TEXT\n        ELSE NULL::TEXT\n    END AS cancel_timing\nFROM {{ ref('stg_scheduler_cancelreasons') }} AS cancelreasons        \nLEFT JOIN {{ ref('stg_scheduler_schedules') }} AS scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = cancelreasons.id \nLEFT JOIN {{ ref('stg_scheduler_cancelreasontypes') }} AS scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = cancelreasons.type_id \nLEFT JOIN {{ ref('stg_scheduler_appraiserevent') }} AS scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} AS scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nWHERE scheduler_appraiserevent.action = 'Cancelled'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_app_cancelations.sql", "original_file_path": "models/processing/core/proc_app_cancelations.sql", "name": "proc_app_cancelations", "alias": "proc_app_cancelations", "checksum": {"name": "sha256", "checksum": "6607ab4db8167ed0ea83c0d6aafb8df968b6a61e4af9d29016f92b77be91dde8"}, "tags": ["dw", "processing"], "refs": [["stg_scheduler_cancelreasons"], ["stg_scheduler_schedules"], ["stg_scheduler_cancelreasontypes"], ["stg_scheduler_appraiserevent"], ["stg_scheduler_appraisers"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_app_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.359803, "compiled_code": "SELECT \n    scheduler_schedules.id schedule_id,\n    cancelreasons.id cancelation_id,\n    scheduler_cancelreasontypes.cancel_type,\n    scheduler_cancelreasontypes.cancel_reason,\n    scheduler_cancelreasontypes.roles,\n    scheduler_cancelreasontypes.text cancel_reason_text,\n    cancelreasons.comment,\n    scheduler_appraiserevent.created_at AS cancelled_at,\n    scheduler_appraiserevent.latitude AS latitude_appraiser,\n    scheduler_appraiserevent.longitude AS longitude_appraiser,\n    scheduler_appraisers.id AS appraiser_id,\n    scheduler_appraisers.name AS name_appraiser,\n    scheduler_appraisers.email AS email_appraiser,\n    CASE \n        WHEN scheduler_schedules.begin_date >= scheduler_appraiserevent.created_at THEN 'Pre-Visit'::TEXT\n        WHEN scheduler_schedules.begin_date < scheduler_appraiserevent.created_at THEN 'Post-Visit'::TEXT\n        ELSE NULL::TEXT\n    END AS cancel_timing\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\" AS cancelreasons        \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = cancelreasons.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\" AS scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = cancelreasons.type_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" AS scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" AS scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nWHERE scheduler_appraiserevent.action = 'Cancelled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_app_cancelations\""}, "model.houm.proc_core_applicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_core_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_applicant"], "unique_id": "model.houm.proc_core_applicant", "raw_code": "SELECT\n    applicant.id, \n    applicant.created_at,\n    applicant.updated_at,\n    COALESCE(applicant.country, users.country) AS country,\n    COALESCE(applicant.email, users.email) AS email,\n    COALESCE(applicant.phone, users.phone) AS phone\nFROM {{ ref('stg_arriendoasegurado_applicant') }} AS applicant\nLEFT JOIN  {{ ref('proc_core_users') }} AS users\n    ON applicant.user_id = users.id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_applicant.sql", "original_file_path": "models/processing/core/proc_core_applicant.sql", "name": "proc_core_applicant", "alias": "proc_core_applicant", "checksum": {"name": "sha256", "checksum": "52f0c959f7669c8c924e30d0a4ec6c7c4cdad936547e865b6965976cde5fb2c5"}, "tags": ["dw", "processing"], "refs": [["stg_arriendoasegurado_applicant"], ["proc_core_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_applicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.361691, "compiled_code": "SELECT\n    applicant.id, \n    applicant.created_at,\n    applicant.updated_at,\n    COALESCE(applicant.country, users.country) AS country,\n    COALESCE(applicant.email, users.email) AS email,\n    COALESCE(applicant.phone, users.phone) AS phone\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant\nLEFT JOIN  \"houmdw_prod\".\"dbt_processing\".\"proc_core_users\" AS users\n    ON applicant.user_id = users.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_applicant\""}, "model.houm.proc_core_schedules": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_core_properties", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_schedules"], "unique_id": "model.houm.proc_core_schedules", "raw_code": "SELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n\t(timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE AS created_at_loc,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE AS begin_date_loc,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE AS begin_date_tz,\n\tschedules.prop_id AS property_id,\n    schedules.appraiser_id , \n\tproperties.supply_source,\n    properties.supply_relation,\n\tschedules.status,\n    scheduler_scheduletypes.id AS type_id,\n\tscheduler_scheduletypes.name AS type ,\n    applicant.id AS applicant_id, \n\tapplicant.email\nFROM {{ ref('stg_scheduler_schedules') }} AS schedules\nLEFT JOIN {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes \n    ON scheduler_scheduletypes.id = schedules.schedule_type_id\nLEFT JOIN {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  \n    ON scheduler_schedulehasapplicant.schedule_id = schedules.id \nLEFT JOIN {{ ref('stg_arriendoasegurado_applicant') }} AS applicant \n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = schedules.prop_id \nLEFT JOIN {{ ref('proc_core_properties') }} AS properties \n    ON properties.property_id = schedules.prop_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country \n\t\tAND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country \n        AND locations_houm.region = translation.location_region\n        AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_schedules.sql", "original_file_path": "models/processing/core/proc_core_schedules.sql", "name": "proc_core_schedules", "alias": "proc_core_schedules", "checksum": {"name": "sha256", "checksum": "3c2becb5927a49e1067b016f4a2c5d5b535a573a9eaccbfb1e2ce6e0fa8b96e7"}, "tags": ["dw", "processing"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_core_properties"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"]}, "created_at": 1675970038.363369, "compiled_code": "SELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n\t(timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE AS created_at_loc,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE AS begin_date_loc,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE AS begin_date_tz,\n\tschedules.prop_id AS property_id,\n    schedules.appraiser_id , \n\tproperties.supply_source,\n    properties.supply_relation,\n\tschedules.status,\n    scheduler_scheduletypes.id AS type_id,\n\tscheduler_scheduletypes.name AS type ,\n    applicant.id AS applicant_id, \n\tapplicant.email\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes \n    ON scheduler_scheduletypes.id = schedules.schedule_type_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  \n    ON scheduler_schedulehasapplicant.schedule_id = schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant \n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = schedules.prop_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_core_properties\" AS properties \n    ON properties.property_id = schedules.prop_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country \n\t\tAND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country \n        AND locations_houm.region = translation.location_region\n        AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_schedules\""}, "model.houm.proc_core_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties_business", "model.houm.proc_properties_characteristics", "model.houm.proc_properties_amenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "core", "proc_core_properties"], "unique_id": "model.houm.proc_core_properties", "raw_code": "{{ config(materialized='table') }}\n\nWITH prop_business AS (\nSELECT \n\t*\nFROM {{ ref('proc_properties_business') }} \n)\n\n, prop_characteristics AS (\nSELECT \n\t*\nFROM {{ ref('proc_properties_characteristics') }} \n)\n\n, prop_amenities AS (\nSELECT \t\n\t*\nFROM {{ ref('proc_properties_amenities') }} \n)\n\nSELECT \n\tprop_business.*,\n\t--  prop_characteristics\n\tgeo_id,\n\tcountry,\n\tcity,\n\tregion,\n\tcommune, \t\n\tneighborhood,\n\tmacrozone_country, \n\tmacrozone_region,\n\tmacrozone_city,\n\taddress,\n\tapartment_number,\n\tapartment_floor,\n\tyear_built,  \n   \tantiquity,\n\tlatitude,\n\tlongitude,\n\tbuilt_area,\n\ttotal_area,\n\thas_balcony,\n\tbalcony_area,\n\thas_loggia,\n\tloggia_area,\n\tis_furnished,\n\tfurnished,\n\ttype,\n\tapartment_type,\n\ttipology,\n\tbedrooms,\n\tbathrooms,\n\thas_parking,\n\tparking_spots,\n\tparking_numbers,\n\thas_warehouse_unit,\n\twarehouse_number,\n\tbuilding_floors,\n\torientation,\n\torientation_esp,\n\tcloset,\n\thot_water_service,\n\thas_heating,\n\tcurtain_hanger,\n\tenvironments,\n\thas_air_conditioning,\n\thas_clothing_area,\n\thas_laundry_room,\n\thouse_extension,\n\tkitchen_is_furnished,\n\thas_privite_roof_garden,\n\thas_laundry_capacity,\n\tis_renewed,\n    -- proc_properties_amenities\t\n\t-- property_id\n\tis_condominium,\n\thas_swimming_pool,\n\thas_gym,\n\thas_bike_rack,\n\thas_bbq_area,\n\thas_laundry,\n\thas_elevator,\n\thas_cinema,\n\thas_roof_garden,\n\thas_gourmet_space,\n\thas_all_day_vigilance,\n\thas_sauna,\n\thas_steam_room,\n\thas_patio,\n\thas_concierge,\n\thas_party_room,\n\thas_playroom,\n\tguest_parking_spaces\nFROM prop_business \nLEFT JOIN prop_characteristics\n\tON prop_business.property_id = prop_characteristics.property_id\nLEFT JOIN  prop_amenities \n\tON prop_business.property_id = prop_amenities.property_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/core/proc_core_properties.sql", "original_file_path": "models/processing/core/proc_core_properties.sql", "name": "proc_core_properties", "alias": "proc_core_properties", "checksum": {"name": "sha256", "checksum": "b4e091e5e4a36482fe636f78bebf49ea2bba4f61902e350351967c43d062a8f0"}, "tags": ["dw", "processing"], "refs": [["proc_properties_business"], ["proc_properties_characteristics"], ["proc_properties_amenities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/core/proc_core_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing"], "materialized": "table"}, "created_at": 1675970038.365175, "compiled_code": "\n\nWITH prop_business AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties_business\" \n)\n\n, prop_characteristics AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties_characteristics\" \n)\n\n, prop_amenities AS (\nSELECT \t\n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties_amenities\" \n)\n\nSELECT \n\tprop_business.*,\n\t--  prop_characteristics\n\tgeo_id,\n\tcountry,\n\tcity,\n\tregion,\n\tcommune, \t\n\tneighborhood,\n\tmacrozone_country, \n\tmacrozone_region,\n\tmacrozone_city,\n\taddress,\n\tapartment_number,\n\tapartment_floor,\n\tyear_built,  \n   \tantiquity,\n\tlatitude,\n\tlongitude,\n\tbuilt_area,\n\ttotal_area,\n\thas_balcony,\n\tbalcony_area,\n\thas_loggia,\n\tloggia_area,\n\tis_furnished,\n\tfurnished,\n\ttype,\n\tapartment_type,\n\ttipology,\n\tbedrooms,\n\tbathrooms,\n\thas_parking,\n\tparking_spots,\n\tparking_numbers,\n\thas_warehouse_unit,\n\twarehouse_number,\n\tbuilding_floors,\n\torientation,\n\torientation_esp,\n\tcloset,\n\thot_water_service,\n\thas_heating,\n\tcurtain_hanger,\n\tenvironments,\n\thas_air_conditioning,\n\thas_clothing_area,\n\thas_laundry_room,\n\thouse_extension,\n\tkitchen_is_furnished,\n\thas_privite_roof_garden,\n\thas_laundry_capacity,\n\tis_renewed,\n    -- proc_properties_amenities\t\n\t-- property_id\n\tis_condominium,\n\thas_swimming_pool,\n\thas_gym,\n\thas_bike_rack,\n\thas_bbq_area,\n\thas_laundry,\n\thas_elevator,\n\thas_cinema,\n\thas_roof_garden,\n\thas_gourmet_space,\n\thas_all_day_vigilance,\n\thas_sauna,\n\thas_steam_room,\n\thas_patio,\n\thas_concierge,\n\thas_party_room,\n\thas_playroom,\n\tguest_parking_spaces\nFROM prop_business \nLEFT JOIN prop_characteristics\n\tON prop_business.property_id = prop_characteristics.property_id\nLEFT JOIN  prop_amenities \n\tON prop_business.property_id = prop_amenities.property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_properties\""}, "model.houm.proc_cx_zendesk_clean_comments": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_zendesk_tickets_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["async_zendesk"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_clean_comments", "raw_code": "{{ config(materialized='table') }}\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('stg_zendesk_tickets_comments')}}\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_clean_comments.sql", "name": "proc_cx_zendesk_clean_comments", "alias": "proc_cx_zendesk_clean_comments", "checksum": {"name": "sha256", "checksum": "c72904a48e606daedc9fc1b061dfc50e48d692d0b9e4dc235ae329956c9bc9b1"}, "tags": ["async_zendesk"], "refs": [["stg_zendesk_tickets_comments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": "async_zendesk", "materialized": "table"}, "created_at": 1675970038.366873, "compiled_code": "\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\"\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\""}, "model.houm.proc_cx_zendesk_first_clean_comments": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_cx_zendesk_clean_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["async_zendesk"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_first_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_first_clean_comments", "raw_code": "{{ config(materialized='table') }}\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('proc_cx_zendesk_clean_comments')}}\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_first_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "name": "proc_cx_zendesk_first_clean_comments", "alias": "proc_cx_zendesk_first_clean_comments", "checksum": {"name": "sha256", "checksum": "9f41c0bc588030b224e050964b9e5c40b1df63c7252c6f02d2fbe660f93f1f97"}, "tags": ["async_zendesk"], "refs": [["proc_cx_zendesk_clean_comments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": "async_zendesk", "materialized": "table"}, "created_at": 1675970038.3686981, "compiled_code": "\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\"\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_first_clean_comments\""}, "model.houm.properties_hist_rentals_price": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "properties_hist_rentals_price"], "unique_id": "model.houm.properties_hist_rentals_price", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_arriendoasegurado_propertydetails', 'is_historical':'TRUE', 'has_stg':'FALSE' },\n                              {'table_name':'stg_arriendoasegurado_propertydetails' , 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [ {'column_name':'property_id', 'is_boolean':'FALSE' } ,\n                        {'column_name':'tipo_moneda', 'is_boolean':'FALSE' } ,\n                        {'column_name':'valor', 'is_boolean':'FALSE' }  ] , \n            id_columns = 'id' , \n            needs_post_process = 'TRUE' ) }} \n\n, results AS (\nSELECT \n    id, \n    property_id,\n    CASE tipo_moneda\n        WHEN 'NonValue' THEN NULL\n        ELSE tipo_moneda\n    END tipo_moneda, \n    CASE valor\n        WHEN 'NonValue' THEN NULL::FLOAT\n        ELSE valor::FLOAT \n    END valor,\n    audit_start_dt,\n    audit_end_dt\nFROM group_period\n\n)\n\nSELECT \n    *\nFROM results", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/properties_hist_rentals_price.sql", "original_file_path": "models/processing/supply/properties_hist_rentals_price.sql", "name": "properties_hist_rentals_price", "alias": "properties_hist_rentals_price", "checksum": {"name": "sha256", "checksum": "e4618425ca5ef8649293200a2364c863d9116063fc2dbd889ea31a296dc2ed96"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_arriendoasegurado_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/properties_hist_rentals_price.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.370383, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_propertydetails\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.property_id::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.property_id::TEXT \n        END AS property_id,\n        CASE \n            WHEN historical.tipo_moneda::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.tipo_moneda::TEXT \n        END AS tipo_moneda,\n        CASE \n            WHEN historical.valor::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.valor::TEXT \n        END AS valor \n    FROM current_values\n        LEFT JOIN historical.historical_arriendoasegurado_propertydetails AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        property_id||tipo_moneda||valor \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        property_id  ,\n        tipo_moneda  ,\n        valor  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        property_id  ,\n        tipo_moneda  ,\n        valor  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,property_id,tipo_moneda,valor \n)\n \n\n, results AS (\nSELECT \n    id, \n    property_id,\n    CASE tipo_moneda\n        WHEN 'NonValue' THEN NULL\n        ELSE tipo_moneda\n    END tipo_moneda, \n    CASE valor\n        WHEN 'NonValue' THEN NULL::FLOAT\n        ELSE valor::FLOAT \n    END valor,\n    audit_start_dt,\n    audit_end_dt\nFROM group_period\n\n)\n\nSELECT \n    *\nFROM results", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"properties_hist_rentals_price\""}, "model.houm.proc_properties_amenities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails", "model.houm.stg_homecheckerdetails", "model.houm.stg_properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_amenities"], "unique_id": "model.houm.proc_properties_amenities", "raw_code": "SELECT \n   propdetails.property_id,\n   COALESCE( (propdetails.piscina OR amenities.has_swimming_pool ), FALSE) AS has_swimming_pool,\n   propdetails.condominio AS is_condominium,\n   propdetails.gym AS has_gym,\n   COALESCE(homecheckerdetails.bike_rack, FALSE) AS has_bike_rack,\n   COALESCE((homecheckerdetails.quincho OR amenities.has_bbq_area), FALSE) AS has_bbq_area,\n   COALESCE((homecheckerdetails.laundry OR amenities.has_laundry), FALSE) AS has_laundry,\n   COALESCE((homecheckerdetails.elevator OR amenities.has_elevator ), FALSE) AS has_elevator ,\n   COALESCE(amenities.has_cinema,FALSE) AS has_cinema,\n   COALESCE(amenities.has_roof_garden, FALSE) AS has_roof_garden,\n   COALESCE(amenities.has_gourmet_space, FALSE) AS has_gourmet_space,\n   COALESCE(amenities.has_all_day_vigilance, FALSE) AS has_all_day_vigilance,\n   COALESCE(amenities.has_sauna, FALSE) AS has_sauna,\n   COALESCE(amenities.has_steam_room, FALSE) AS has_steam_room,\n   COALESCE(amenities.has_patio, FALSE) AS has_patio,\n   COALESCE(amenities.has_concierge, FALSE) AS has_concierge,\n   COALESCE((homecheckerdetails.party_room OR amenities.has_party_rooM ), FALSE) AS has_party_room, \n   COALESCE(( homecheckerdetails.play_room OR amenities.has_playroom), FALSE) AS has_playroom, \n   COALESCE(amenities.guest_parking_spaces,0) AS guest_parking_spaces \nFROM {{ ref('stg_propertydetails') }} AS propdetails\nLEFT JOIN {{ ref('stg_homecheckerdetails') }} AS homecheckerdetails\n   ON propdetails.property_id = homecheckerdetails.property_id \nLEFT JOIN {{ref('stg_properties_associationamenities')}} AS amenities\n   ON propdetails.property_id = amenities.property_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_amenities.sql", "original_file_path": "models/processing/supply/proc_properties_amenities.sql", "name": "proc_properties_amenities", "alias": "proc_properties_amenities", "checksum": {"name": "sha256", "checksum": "1d6bf491a169bc52ff8b1fc44c82ff8b6789f3dc3001078c1c3c7a8a87d9850c"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_propertydetails"], ["stg_homecheckerdetails"], ["stg_properties_associationamenities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_amenities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.3771148, "compiled_code": "SELECT \n   propdetails.property_id,\n   COALESCE( (propdetails.piscina OR amenities.has_swimming_pool ), FALSE) AS has_swimming_pool,\n   propdetails.condominio AS is_condominium,\n   propdetails.gym AS has_gym,\n   COALESCE(homecheckerdetails.bike_rack, FALSE) AS has_bike_rack,\n   COALESCE((homecheckerdetails.quincho OR amenities.has_bbq_area), FALSE) AS has_bbq_area,\n   COALESCE((homecheckerdetails.laundry OR amenities.has_laundry), FALSE) AS has_laundry,\n   COALESCE((homecheckerdetails.elevator OR amenities.has_elevator ), FALSE) AS has_elevator ,\n   COALESCE(amenities.has_cinema,FALSE) AS has_cinema,\n   COALESCE(amenities.has_roof_garden, FALSE) AS has_roof_garden,\n   COALESCE(amenities.has_gourmet_space, FALSE) AS has_gourmet_space,\n   COALESCE(amenities.has_all_day_vigilance, FALSE) AS has_all_day_vigilance,\n   COALESCE(amenities.has_sauna, FALSE) AS has_sauna,\n   COALESCE(amenities.has_steam_room, FALSE) AS has_steam_room,\n   COALESCE(amenities.has_patio, FALSE) AS has_patio,\n   COALESCE(amenities.has_concierge, FALSE) AS has_concierge,\n   COALESCE((homecheckerdetails.party_room OR amenities.has_party_rooM ), FALSE) AS has_party_room, \n   COALESCE(( homecheckerdetails.play_room OR amenities.has_playroom), FALSE) AS has_playroom, \n   COALESCE(amenities.guest_parking_spaces,0) AS guest_parking_spaces \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS propdetails\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\" AS homecheckerdetails\n   ON propdetails.property_id = homecheckerdetails.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\" AS amenities\n   ON propdetails.property_id = amenities.property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_amenities\""}, "model.houm.proc_supply_seller_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_seller_leads"], "unique_id": "model.houm.proc_supply_seller_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    partner_code ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    ------\n    stage_id ,\n    stage_name , \n    stage_unified_name ,\n    stage_order ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    paid_media_geo_id ,\n    marketing_lead_id ,\n    utm_term ,\n    source ,\n    unified_source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_seller_leads.sql", "original_file_path": "models/processing/supply/proc_supply_seller_leads.sql", "name": "proc_supply_seller_leads", "alias": "proc_supply_seller_leads", "checksum": {"name": "sha256", "checksum": "24d21e5d58ec0404c6b7bc2d36064edeba1fa869f3a32190eb9462d5f0fd41da"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_seller_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.3789089, "compiled_code": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    partner_code ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    ------\n    stage_id ,\n    stage_name , \n    stage_unified_name ,\n    stage_order ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    paid_media_geo_id ,\n    marketing_lead_id ,\n    utm_term ,\n    source ,\n    unified_source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\""}, "model.houm.proc_property_salesdetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_property_salesdetails"], "unique_id": "model.houm.proc_property_salesdetails", "raw_code": "SELECT\r\n\t*\r\nFROM {{ ref('stg_property_salesdetails') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_property_salesdetails.sql", "original_file_path": "models/processing/supply/proc_property_salesdetails.sql", "name": "proc_property_salesdetails", "alias": "proc_property_salesdetails", "checksum": {"name": "sha256", "checksum": "e18aff8a1387eea3e4d9217c30ddc0b2f8e32a540a5219bc9651ef80cb4c2d86"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.380588, "compiled_code": "SELECT\n\t*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\""}, "model.houm.proc_supply_unittypes": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_projects", "model.houm.stg_real_estate_developments_unittypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_unittypes"], "unique_id": "model.houm.proc_supply_unittypes", "raw_code": "WITH projects AS (\nSELECT \n    *\nFROM {{ ref('proc_supply_projects') }} AS projects\n)\n\n, unittypes AS (\nSELECT \n    projects.* ,\n    unittypes.id AS unit_type_id ,\n    unittypes.created_at AS unittype_created_at \nFROM projects \nLEFT JOIN {{ ref('stg_real_estate_developments_unittypes') }} AS unittypes \n    ON projects.development_id = unittypes.development_id      \n)\n\nSELECT \n    *\nFROM unittypes", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_unittypes.sql", "original_file_path": "models/processing/supply/proc_supply_unittypes.sql", "name": "proc_supply_unittypes", "alias": "proc_supply_unittypes", "checksum": {"name": "sha256", "checksum": "c9df8be7f4d4b17b05d2513ff49ccb97ba52996e54551b40a8e251a3677eb045"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_supply_projects"], ["stg_real_estate_developments_unittypes"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_unittypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.382143, "compiled_code": "WITH projects AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\" AS projects\n)\n\n, unittypes AS (\nSELECT \n    projects.* ,\n    unittypes.id AS unit_type_id ,\n    unittypes.created_at AS unittype_created_at \nFROM projects \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\" AS unittypes \n    ON projects.development_id = unittypes.development_id      \n)\n\nSELECT \n    *\nFROM unittypes", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\""}, "model.houm.proc_hist_prop_sales_status": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_prop_sales_status"], "unique_id": "model.houm.proc_hist_prop_sales_status", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_properties_salesdetails', 'is_historical':'TRUE', 'has_stg':'FALSE' },\n                              {'table_name':'stg_property_salesdetails', 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [{'column_name':'status', 'is_boolean':'FALSE'} ], \n            id_columns = 'property_id',  \n            needs_post_process = 'FALSE' \n            ) \n}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_prop_sales_status.sql", "original_file_path": "models/processing/supply/proc_hist_prop_sales_status.sql", "name": "proc_hist_prop_sales_status", "alias": "proc_hist_prop_sales_status", "checksum": {"name": "sha256", "checksum": "aef4f217dfd7b315a0c223f797a0959b8184ffc4700403600484e6b9ee31d8ec"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_prop_sales_status.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.3839622, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.property_id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.status::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.status::TEXT \n        END AS status \n    FROM current_values\n        LEFT JOIN historical.historical_properties_salesdetails AS historical\n        ON current_values.property_id = historical.property_id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        status \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY property_id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        property_id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        status  , \n        SUM(key_track_count) OVER (PARTITION BY property_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        property_id , \n        index_track , \n        key_track ,\n        status  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY property_id, index_track, key_track,status \n)\n \nSELECT \n    *\nFROM group_period", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_sales_status\""}, "model.houm.proc_properties_mz": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_mz"], "unique_id": "model.houm.proc_properties_mz", "raw_code": "SELECT \n    property.property_id, \n    min(dim_geo.geo_id) AS geo_id, \n    max(timezone) AS timezone\nFROM {{ ref('stg_propertydetails') }} AS property\nLEFT JOIN {{ ref('proc_macrozone') }} AS dim_geo\n    ON (ST_CONTAINS(dim_geo.polygon,ST_SETSRID(ST_POINT(property.longitud, property.latitud), 4326)) = TRUE)\nGROUP BY property_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_mz.sql", "original_file_path": "models/processing/supply/proc_properties_mz.sql", "name": "proc_properties_mz", "alias": "proc_properties_mz", "checksum": {"name": "sha256", "checksum": "6a07dc48bfae1ae79cdb052e468c7ab16a534fe7183bf9c6cced4febe87eaedc"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_propertydetails"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_mz.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.3896298, "compiled_code": "SELECT \n    property.property_id, \n    min(dim_geo.geo_id) AS geo_id, \n    max(timezone) AS timezone\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS property\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" AS dim_geo\n    ON (ST_CONTAINS(dim_geo.polygon,ST_SETSRID(ST_POINT(property.longitud, property.latitud), 4326)) = TRUE)\nGROUP BY property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\""}, "model.houm.proc_hist_prop_business_rentals": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_prop_business_rentals"], "unique_id": "model.houm.proc_hist_prop_business_rentals", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_properties'   , 'is_historical':'TRUE' , 'has_stg':'FALSE' },\n                              {'table_name':'stg_properties'                     , 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [{'column_name':'for_rental', 'is_boolean':'TRUE' } , \n                       {'column_name':'is_deleted', 'is_boolean':'TRUE' } ] , \n            id_columns = 'id' ,  \n            needs_post_process = 'TRUE' ) }}\n\nSELECT  \n    id, \n    index_track, \n    key_track,\n    CASE \n        WHEN for_rental = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS for_rental,\n    CASE \n        WHEN is_deleted = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS is_deleted,\n    audit_start_dt, \n    audit_end_dt \nFROM group_period", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_prop_business_rentals.sql", "original_file_path": "models/processing/supply/proc_hist_prop_business_rentals.sql", "name": "proc_hist_prop_business_rentals", "alias": "proc_hist_prop_business_rentals", "checksum": {"name": "sha256", "checksum": "3ffe77bdfdf3266782d7ac0f727d6880ffd7f8a9534b3120bef8433505d70d72"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_prop_business_rentals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.3913448, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.for_rental THEN 'TRUE' \n            ELSE 'FALSE' \n        END AS for_rental,\n        CASE \n            WHEN historical.is_deleted THEN 'TRUE' \n            ELSE 'FALSE' \n        END AS is_deleted \n    FROM current_values\n        LEFT JOIN historical.historical_properties AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        for_rental||is_deleted \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        for_rental  ,\n        is_deleted  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        for_rental  ,\n        is_deleted  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,for_rental,is_deleted \n)\n\n\nSELECT  \n    id, \n    index_track, \n    key_track,\n    CASE \n        WHEN for_rental = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS for_rental,\n    CASE \n        WHEN is_deleted = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS is_deleted,\n    audit_start_dt, \n    audit_end_dt \nFROM group_period", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_business_rentals\""}, "model.houm.proc_supply_schedules": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_schedules"], "unique_id": "model.houm.proc_supply_schedules", "raw_code": "{{ config(materialized='table') }}\n\nSELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    (timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE created_at,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE begin_date,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE begin_date_tz,\n    schedules.prop_id AS property_id,\n    properties.supply_source,\n    properties.supply_relation,\n    schedules.status,\n    scheduler_scheduletypes.name AS schedule_type_name,\n    applicant.email,\n    applicant.id AS applicant_id \nFROM {{ ref('stg_scheduler_schedules') }} AS schedules\nLEFT JOIN {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes \n    ON scheduler_scheduletypes.id  = schedules.schedule_type_id\nLEFT JOIN {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  \n    ON scheduler_schedulehasapplicant.schedule_id     = schedules.id \nLEFT JOIN {{ ref('stg_arriendoasegurado_applicant') }} AS applicant \n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = schedules.prop_id \nLEFT JOIN {{ ref('proc_properties') }} AS properties \n    ON properties.id = schedules.prop_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name IN ('Photo','SalesPhoto')", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_schedules.sql", "original_file_path": "models/processing/supply/proc_supply_schedules.sql", "name": "proc_supply_schedules", "alias": "proc_supply_schedules", "checksum": {"name": "sha256", "checksum": "a111e172102dcb0d4709cac2b8659004d8bd6824baa9da47f59b08d8159801b4"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.397357, "compiled_code": "\n\nSELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    (timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE created_at,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE begin_date,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE begin_date_tz,\n    schedules.prop_id AS property_id,\n    properties.supply_source,\n    properties.supply_relation,\n    schedules.status,\n    scheduler_scheduletypes.name AS schedule_type_name,\n    applicant.email,\n    applicant.id AS applicant_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes \n    ON scheduler_scheduletypes.id  = schedules.schedule_type_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  \n    ON scheduler_schedulehasapplicant.schedule_id     = schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant \n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = schedules.prop_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties \n    ON properties.id = schedules.prop_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name IN ('Photo','SalesPhoto')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\""}, "model.houm.proc_hist_properties_rentals_published": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_hist_prop_business_rentals", "model.houm.proc_hist_prop_rentals_status"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_properties_rentals_published"], "unique_id": "model.houm.proc_hist_properties_rentals_published", "raw_code": "WITH prop_business AS (\nSELECT \n    id, \n    index_track, \n    for_rental,\n    is_deleted, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '{{ var(\"processed_time\") }}') AS audit_end_dt\nFROM {{ref('proc_hist_prop_business_rentals')}}\n)\n\n, prop_status AS (\nSELECT \n    id, \n    index_track, \n    property_id, \n    status, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '{{ var(\"processed_time\") }}') AS audit_end_dt\nFROM {{ref('proc_hist_prop_rentals_status')}}\n)\n\n, union_tables AS (\nSELECT \n    prop_business.id AS property_id,\n    prop_business.index_track AS index_t1,\n    prop_business.for_rental,  \n    prop_business.is_deleted, \n    prop_business.audit_start_dt AS audit_start_dt_t1, \n    prop_business.audit_end_dt AS audit_end_dt_t1, \n    prop_status.index_track AS index_t2, \n    prop_status.status, \n    prop_status.audit_start_dt AS audit_start_dt_t2, \n    prop_status.audit_end_dt AS audit_end_dt_t2  \nFROM prop_business\nLEFT JOIN prop_status\n    ON prop_status.property_id = prop_business.id\n    AND \n    (  \n        ( \n        ( prop_status.audit_start_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        AND (prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        )\n        OR \n        ( prop_status.audit_start_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_end_dt >= prop_business.audit_end_dt )\n        OR \n        ( prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_start_dt >= prop_business.audit_end_dt )\n        ---\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        AND (prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n        OR \n        ( prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n    )\n)\n\n, clean_periods AS (\nSELECT\n    property_id, \n    for_rental,\n    is_deleted,\n    status, \n    ROW_NUMBER() OVER(PARTITION BY property_id ORDER BY audit_start_dt) AS index, \n    LEAST( GREATEST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1, audit_end_dt_t2) ) AS audit_start_dt,\n    NULLIF( GREATEST( LEAST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1, audit_end_dt_t2) ) , GETDATE() ) AS audit_end_dt\nFROM union_tables  \nORDER BY property_id, audit_start_dt ASC \n)\n\n, published_periods AS (\nSELECT \n    *\nFROM clean_periods\nWHERE TRUE \n    AND for_rental    \n    AND is_deleted = FALSE \n    AND status in ('published', 'republished') \n)\n\nSELECT \n    *\nFROM published_periods", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_properties_rentals_published.sql", "original_file_path": "models/processing/supply/proc_hist_properties_rentals_published.sql", "name": "proc_hist_properties_rentals_published", "alias": "proc_hist_properties_rentals_published", "checksum": {"name": "sha256", "checksum": "a046a3faa1f602bccbd874b6ebfb643a8355a7b180f0a22f2f077dbc71d7ead9"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_hist_prop_business_rentals"], ["proc_hist_prop_rentals_status"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_properties_rentals_published.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.399151, "compiled_code": "WITH prop_business AS (\nSELECT \n    id, \n    index_track, \n    for_rental,\n    is_deleted, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '2023-02-09 16:13:54.685542-03:00') AS audit_end_dt\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_business_rentals\"\n)\n\n, prop_status AS (\nSELECT \n    id, \n    index_track, \n    property_id, \n    status, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '2023-02-09 16:13:54.685542-03:00') AS audit_end_dt\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_rentals_status\"\n)\n\n, union_tables AS (\nSELECT \n    prop_business.id AS property_id,\n    prop_business.index_track AS index_t1,\n    prop_business.for_rental,  \n    prop_business.is_deleted, \n    prop_business.audit_start_dt AS audit_start_dt_t1, \n    prop_business.audit_end_dt AS audit_end_dt_t1, \n    prop_status.index_track AS index_t2, \n    prop_status.status, \n    prop_status.audit_start_dt AS audit_start_dt_t2, \n    prop_status.audit_end_dt AS audit_end_dt_t2  \nFROM prop_business\nLEFT JOIN prop_status\n    ON prop_status.property_id = prop_business.id\n    AND \n    (  \n        ( \n        ( prop_status.audit_start_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        AND (prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        )\n        OR \n        ( prop_status.audit_start_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_end_dt >= prop_business.audit_end_dt )\n        OR \n        ( prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_start_dt >= prop_business.audit_end_dt )\n        ---\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        AND (prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n        OR \n        ( prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n    )\n)\n\n, clean_periods AS (\nSELECT\n    property_id, \n    for_rental,\n    is_deleted,\n    status, \n    ROW_NUMBER() OVER(PARTITION BY property_id ORDER BY audit_start_dt) AS index, \n    LEAST( GREATEST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1, audit_end_dt_t2) ) AS audit_start_dt,\n    NULLIF( GREATEST( LEAST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1, audit_end_dt_t2) ) , GETDATE() ) AS audit_end_dt\nFROM union_tables  \nORDER BY property_id, audit_start_dt ASC \n)\n\n, published_periods AS (\nSELECT \n    *\nFROM clean_periods\nWHERE TRUE \n    AND for_rental    \n    AND is_deleted = FALSE \n    AND status in ('published', 'republished') \n)\n\nSELECT \n    *\nFROM published_periods", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_properties_rentals_published\""}, "model.houm.properties_rentals_prices_change": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.properties_hist_rentals_price", "model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "properties_rentals_prices_change"], "unique_id": "model.houm.properties_rentals_prices_change", "raw_code": "WITH price_change AS (\nSELECT \n    *  \nFROM {{ ref('properties_hist_rentals_price') }}\n)\n\n, changes AS (\nSELECT \n    price_change.id,\n    price_change.property_id,\n    price_change.audit_start_dt, \n    price_change.audit_end_dt, \n    price_change.tipo_moneda AS current_currency,\n    price_change.valor AS current_price,\n    price_change_lag.tipo_moneda AS previus_currency, \n    price_change_lag.valor AS previus_price,\n    price_change_lag.audit_start_dt AS previus_audit_start_dt, \n    price_change_lag.audit_end_dt AS previus_audit_end_dt,  \n    (price_change_lag.valor - price_change.valor)::FLOAT / NULLIF(price_change_lag.valor::FLOAT,0) AS price_delta, \n    (extract( EPOCH FROM (price_change_lag.audit_end_dt - price_change_lag.audit_start_dt) )/(3600*24))::INT AS previus_period_days\nFROM price_change AS price_change\nLEFT JOIN price_change AS price_change_lag\n    ON price_change.audit_start_dt = price_change_lag.audit_end_dt \n    AND price_change.id = price_change_lag.id\nWHERE TRUE\n    AND price_change.audit_end_dt IS NULL\n    AND price_change_lag.audit_end_dt IS NOT NULL\n)\n\n, business_filter AS (\nSELECT \n    *\nFROM changes \nWHERE TRUE\n    -- Que sea la misma moneda \n    AND current_currency = previus_currency\n    -- % de variaci\u00f3n \n    AND price_delta > 0.015\n    AND price_delta < 0.50    \n    -- Que el precio anterior durara minimo 3 d\u00edas\n    AND previus_period_days > 3\n)\n\n, rentals_prop AS (\nSELECT \n    *\nFROM {{ ref('properties_published') }} AS published_props\nWHERE is_rental_published = TRUE \n)\n\nSELECT \n    business_filter.* , \n    '{{ var(\"processed_time\") }}' AS processed_time \nFROM business_filter\nLEFT JOIN rentals_prop\n    ON rentals_prop.property_id = business_filter.property_id\nWHERE TRUE\n    AND rentals_prop.property_id IS NOT NULL", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/properties_rentals_prices_change.sql", "original_file_path": "models/processing/supply/properties_rentals_prices_change.sql", "name": "properties_rentals_prices_change", "alias": "properties_rentals_prices_change", "checksum": {"name": "sha256", "checksum": "45e0edf6ced57c5df855821e54c2157c36b4144cf77f0862c2c2c7437686968d"}, "tags": ["dw", "processing", "supply"], "refs": [["properties_hist_rentals_price"], ["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/properties_rentals_prices_change.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.4047208, "compiled_code": "WITH price_change AS (\nSELECT \n    *  \nFROM \"houmdw_prod\".\"dbt_processing\".\"properties_hist_rentals_price\"\n)\n\n, changes AS (\nSELECT \n    price_change.id,\n    price_change.property_id,\n    price_change.audit_start_dt, \n    price_change.audit_end_dt, \n    price_change.tipo_moneda AS current_currency,\n    price_change.valor AS current_price,\n    price_change_lag.tipo_moneda AS previus_currency, \n    price_change_lag.valor AS previus_price,\n    price_change_lag.audit_start_dt AS previus_audit_start_dt, \n    price_change_lag.audit_end_dt AS previus_audit_end_dt,  \n    (price_change_lag.valor - price_change.valor)::FLOAT / NULLIF(price_change_lag.valor::FLOAT,0) AS price_delta, \n    (extract( EPOCH FROM (price_change_lag.audit_end_dt - price_change_lag.audit_start_dt) )/(3600*24))::INT AS previus_period_days\nFROM price_change AS price_change\nLEFT JOIN price_change AS price_change_lag\n    ON price_change.audit_start_dt = price_change_lag.audit_end_dt \n    AND price_change.id = price_change_lag.id\nWHERE TRUE\n    AND price_change.audit_end_dt IS NULL\n    AND price_change_lag.audit_end_dt IS NOT NULL\n)\n\n, business_filter AS (\nSELECT \n    *\nFROM changes \nWHERE TRUE\n    -- Que sea la misma moneda \n    AND current_currency = previus_currency\n    -- % de variaci\u00f3n \n    AND price_delta > 0.015\n    AND price_delta < 0.50    \n    -- Que el precio anterior durara minimo 3 d\u00edas\n    AND previus_period_days > 3\n)\n\n, rentals_prop AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"properties_published\" AS published_props\nWHERE is_rental_published = TRUE \n)\n\nSELECT \n    business_filter.* , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time \nFROM business_filter\nLEFT JOIN rentals_prop\n    ON rentals_prop.property_id = business_filter.property_id\nWHERE TRUE\n    AND rentals_prop.property_id IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"properties_rentals_prices_change\""}, "model.houm.proc_supply_landlord_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_landlord_leads"], "unique_id": "model.houm.proc_supply_landlord_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Rental', 'Rental/Sales')\n)\n\nSELECT \n    deal_id,\n    title,\n    add_time,\n    update_time,\n    add_time_utc,\n    update_time_utc,\n    partner_code,\n    ------\n    pipeline_id,\n    pipeline_name,\n    pipeline_country,\n    pipeline_geo_id,\n    funnel,\n    ------\n    person_id,\n    person_name,\n    person_email,\n    person_phone,\n    ------\n    owner_name,\n    owner_email,\n    owner_id,\n    ------\n    stage_id,\n    stage_name, \n    stage_unified_name,\n    stage_order,\n    status,\n    label_id,\n    label,\n    active,\n    deal_business,\n    is_selfprofiling,\n    ------\n    marketing_id,\n    campaign_id,\n    ad_group_id,\n    ad_id,\n    paid_media_geo_id,\n    marketing_lead_id,\n    utm_term,\n    source,\n    unified_source,\n    source_city,\n    source_geo_id,\n    ------\n    -- source_buyer_property_condition,\n    property_id,\n    property_supply_source,\n    negotiation_city,\n    negotiation_geo_id,\n    supply_qualification_date,\n    supply_qualification,\n    -- buyer_qualification_date,\n    -- buyer_qualification,\n    negotiation_property_condition,\n    ------\n    won_time,\n    first_won_time,\n    lost_reason,\n    lost_time,\n    ------\n    is_deleted,\n    is_test,\n    is_merged,\n    location_id,\n    loc_country,\n    loc_region,\n    loc_city  \nFROM demand_lead", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_landlord_leads.sql", "original_file_path": "models/processing/supply/proc_supply_landlord_leads.sql", "name": "proc_supply_landlord_leads", "alias": "proc_supply_landlord_leads", "checksum": {"name": "sha256", "checksum": "ef0ef8045f03877137657963b9615054e7e77286d16a68d34b0b1988b2ab0e59"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_landlord_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.409183, "compiled_code": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Rental', 'Rental/Sales')\n)\n\nSELECT \n    deal_id,\n    title,\n    add_time,\n    update_time,\n    add_time_utc,\n    update_time_utc,\n    partner_code,\n    ------\n    pipeline_id,\n    pipeline_name,\n    pipeline_country,\n    pipeline_geo_id,\n    funnel,\n    ------\n    person_id,\n    person_name,\n    person_email,\n    person_phone,\n    ------\n    owner_name,\n    owner_email,\n    owner_id,\n    ------\n    stage_id,\n    stage_name, \n    stage_unified_name,\n    stage_order,\n    status,\n    label_id,\n    label,\n    active,\n    deal_business,\n    is_selfprofiling,\n    ------\n    marketing_id,\n    campaign_id,\n    ad_group_id,\n    ad_id,\n    paid_media_geo_id,\n    marketing_lead_id,\n    utm_term,\n    source,\n    unified_source,\n    source_city,\n    source_geo_id,\n    ------\n    -- source_buyer_property_condition,\n    property_id,\n    property_supply_source,\n    negotiation_city,\n    negotiation_geo_id,\n    supply_qualification_date,\n    supply_qualification,\n    -- buyer_qualification_date,\n    -- buyer_qualification,\n    negotiation_property_condition,\n    ------\n    won_time,\n    first_won_time,\n    lost_reason,\n    lost_time,\n    ------\n    is_deleted,\n    is_test,\n    is_merged,\n    location_id,\n    loc_country,\n    loc_region,\n    loc_city  \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\""}, "model.houm.proc_supply_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_unittypes", "model.houm.stg_real_estate_developments_units"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_units"], "unique_id": "model.houm.proc_supply_units", "raw_code": "WITH unittypes AS (\nSELECT \n    *\nFROM {{ ref('proc_supply_unittypes') }} AS unittypes\n)\n\n, units AS (\nSELECT \n    unittypes.*,\n    units.id AS unit_id,\n    units.created_at AS unit_created_at \nFROM unittypes \nLEFT JOIN {{ ref('stg_real_estate_developments_units') }} AS units\n    ON unittypes.unit_type_id = units.unit_type_id \n)\n\nSELECT \n    *\nFROM units", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_units.sql", "original_file_path": "models/processing/supply/proc_supply_units.sql", "name": "proc_supply_units", "alias": "proc_supply_units", "checksum": {"name": "sha256", "checksum": "787b4b1ec0c6f39c4653961f744a79c6c3f46d7b00913456d9f842fba51f4a3a"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_supply_unittypes"], ["stg_real_estate_developments_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.411125, "compiled_code": "WITH unittypes AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\" AS unittypes\n)\n\n, units AS (\nSELECT \n    unittypes.*,\n    units.id AS unit_id,\n    units.created_at AS unit_created_at \nFROM unittypes \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\" AS units\n    ON unittypes.unit_type_id = units.unit_type_id \n)\n\nSELECT \n    *\nFROM units", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_units\""}, "model.houm.proc_hist_prop_business_sales": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_prop_business_sales"], "unique_id": "model.houm.proc_hist_prop_business_sales", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_properties'   , 'is_historical':'TRUE' , 'has_stg':'FALSE' },\n                              {'table_name':'stg_properties'                     , 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [{'column_name':'for_sale', 'is_boolean':'TRUE' } , \n                       {'column_name':'is_deleted', 'is_boolean':'TRUE' } ] , \n            id_columns = 'id' ,  \n            needs_post_process = 'TRUE' ) }}\n\nSELECT  \n    id, \n    index_track, \n    key_track,\n    CASE \n        WHEN for_sale = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS for_sale,\n    CASE \n        WHEN is_deleted = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS is_deleted,\n    audit_start_dt, \n    audit_end_dt \nFROM group_period", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_prop_business_sales.sql", "original_file_path": "models/processing/supply/proc_hist_prop_business_sales.sql", "name": "proc_hist_prop_business_sales", "alias": "proc_hist_prop_business_sales", "checksum": {"name": "sha256", "checksum": "738ebb16eacfbb58e3cb3ee559dddd9af9f7eaf9213952f650d50b644f1122bf"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_prop_business_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.412838, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.for_sale THEN 'TRUE' \n            ELSE 'FALSE' \n        END AS for_sale,\n        CASE \n            WHEN historical.is_deleted THEN 'TRUE' \n            ELSE 'FALSE' \n        END AS is_deleted \n    FROM current_values\n        LEFT JOIN historical.historical_properties AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        for_sale||is_deleted \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        for_sale  ,\n        is_deleted  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        for_sale  ,\n        is_deleted  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,for_sale,is_deleted \n)\n\n\nSELECT  \n    id, \n    index_track, \n    key_track,\n    CASE \n        WHEN for_sale = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS for_sale,\n    CASE \n        WHEN is_deleted = 'TRUE' THEN TRUE \n        ELSE FALSE\n    END AS is_deleted,\n    audit_start_dt, \n    audit_end_dt \nFROM group_period", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_business_sales\""}, "model.houm.proc_propertydetails": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_propertydetails"], "unique_id": "model.houm.proc_propertydetails", "raw_code": "SELECT \r\n\t* \r\nFROM {{ ref('stg_propertydetails') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_propertydetails.sql", "original_file_path": "models/processing/supply/proc_propertydetails.sql", "name": "proc_propertydetails", "alias": "proc_propertydetails", "checksum": {"name": "sha256", "checksum": "75fbb3e598c9ec77c37ab7e016491d85a0cfd1fed15928902ee5cfebcda28f2b"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.418754, "compiled_code": "SELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\""}, "model.houm.proc_new_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_new_properties"], "unique_id": "model.houm.proc_new_properties", "raw_code": "WITH new_properties AS (\nSELECT \n    * \nFROM {{ref('proc_properties')}} \nWHERE supply_relation = 'New Properties'\n)\n\nSELECT  \n    * \nFROM new_properties", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_new_properties.sql", "original_file_path": "models/processing/supply/proc_new_properties.sql", "name": "proc_new_properties", "alias": "proc_new_properties", "checksum": {"name": "sha256", "checksum": "485257f2e5e98f3da08181d813aba122028e1b964291325d6f32bffa08e40832"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.420459, "compiled_code": "WITH new_properties AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE supply_relation = 'New Properties'\n)\n\nSELECT  \n    * \nFROM new_properties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_new_properties\""}, "model.houm.proc_hist_properties_sales_published": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_hist_prop_business_sales", "model.houm.proc_hist_prop_sales_status"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_properties_sales_published"], "unique_id": "model.houm.proc_hist_properties_sales_published", "raw_code": "WITH prop_business AS (\nSELECT \n    id, \n    index_track, \n    for_sale,\n    is_deleted, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '{{ var(\"processed_time\") }}') AS audit_end_dt\nFROM {{ref('proc_hist_prop_business_sales')}}\n)\n\n, prop_status AS (\nSELECT \n    property_id, \n    index_track, \n    status, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '{{ var(\"processed_time\") }}') AS audit_end_dt\nFROM {{ref('proc_hist_prop_sales_status')}}\n)\n\n, union_tables AS (\nSELECT \n    prop_business.id AS property_id,\n    prop_business.index_track AS index_t1,\n    prop_business.for_sale,  \n    prop_business.is_deleted, \n    prop_business.audit_start_dt AS audit_start_dt_t1, \n    prop_business.audit_end_dt AS audit_end_dt_t1, \n    prop_status.index_track AS index_t2, \n    prop_status.status, \n    prop_status.audit_start_dt AS audit_start_dt_t2, \n    prop_status.audit_end_dt AS audit_end_dt_t2  \nFROM prop_business\nLEFT JOIN prop_status\n    ON prop_status.property_id = prop_business.id\n    AND \n    (  \n        ( \n        ( prop_status.audit_start_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        AND (prop_status.audit_end_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        )\n        OR \n        ( prop_status.audit_start_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_end_dt >= prop_business.audit_end_dt )\n        OR \n        ( prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_start_dt >= prop_business.audit_end_dt )\n        ---\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        AND (prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n        OR \n        ( prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n    )\n)\n\n, clean_periods AS (\nSELECT\n    property_id , \n    for_sale ,\n    is_deleted ,\n    status , \n    ROW_NUMBER() OVER(PARTITION BY property_id ORDER BY audit_start_dt) AS index, \n    LEAST( GREATEST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1 ,audit_end_dt_t2 ) ) AS audit_start_dt ,\n    NULLIF( GREATEST( LEAST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1 ,audit_end_dt_t2 ) ) , GETDATE() ) AS audit_end_dt\nFROM union_tables  \nORDER BY property_id, audit_start_dt ASC \n)\n\n, published_periods AS (\nSELECT \n    *\nFROM clean_periods\nWHERE TRUE \n    AND for_sale    \n    AND is_deleted = FALSE \n    AND status IN ('published', 'republished') \n)\n\nSELECT \n    *\nFROM published_periods", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_properties_sales_published.sql", "original_file_path": "models/processing/supply/proc_hist_properties_sales_published.sql", "name": "proc_hist_properties_sales_published", "alias": "proc_hist_properties_sales_published", "checksum": {"name": "sha256", "checksum": "6bb46b7538edbcd46df0e6bbd105dce12fcfe65952babbaba64862448f8b3c67"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_hist_prop_business_sales"], ["proc_hist_prop_sales_status"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_properties_sales_published.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.422037, "compiled_code": "WITH prop_business AS (\nSELECT \n    id, \n    index_track, \n    for_sale,\n    is_deleted, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '2023-02-09 16:13:54.685542-03:00') AS audit_end_dt\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_business_sales\"\n)\n\n, prop_status AS (\nSELECT \n    property_id, \n    index_track, \n    status, \n    audit_start_dt,\n    COALESCE(audit_end_dt, '2023-02-09 16:13:54.685542-03:00') AS audit_end_dt\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_sales_status\"\n)\n\n, union_tables AS (\nSELECT \n    prop_business.id AS property_id,\n    prop_business.index_track AS index_t1,\n    prop_business.for_sale,  \n    prop_business.is_deleted, \n    prop_business.audit_start_dt AS audit_start_dt_t1, \n    prop_business.audit_end_dt AS audit_end_dt_t1, \n    prop_status.index_track AS index_t2, \n    prop_status.status, \n    prop_status.audit_start_dt AS audit_start_dt_t2, \n    prop_status.audit_end_dt AS audit_end_dt_t2  \nFROM prop_business\nLEFT JOIN prop_status\n    ON prop_status.property_id = prop_business.id\n    AND \n    (  \n        ( \n        ( prop_status.audit_start_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        AND (prop_status.audit_end_dt BETWEEN prop_business.audit_start_dt AND prop_business.audit_end_dt)\n        )\n        OR \n        ( prop_status.audit_start_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_end_dt >= prop_business.audit_end_dt )\n        OR \n        ( prop_status.audit_end_dt BETWEEN  prop_business.audit_start_dt AND prop_business.audit_end_dt\n        AND prop_status.audit_start_dt >= prop_business.audit_end_dt )\n        ---\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        AND (prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt)\n        OR \n        ( prop_business.audit_start_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n        OR \n        ( prop_business.audit_end_dt BETWEEN prop_status.audit_start_dt AND prop_status.audit_end_dt\n        AND prop_business.audit_end_dt >= prop_status.audit_end_dt )\n    )\n)\n\n, clean_periods AS (\nSELECT\n    property_id , \n    for_sale ,\n    is_deleted ,\n    status , \n    ROW_NUMBER() OVER(PARTITION BY property_id ORDER BY audit_start_dt) AS index, \n    LEAST( GREATEST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1 ,audit_end_dt_t2 ) ) AS audit_start_dt ,\n    NULLIF( GREATEST( LEAST(audit_start_dt_t1 ,audit_start_dt_t2 ), LEAST(audit_end_dt_t1 ,audit_end_dt_t2 ) ) , GETDATE() ) AS audit_end_dt\nFROM union_tables  \nORDER BY property_id, audit_start_dt ASC \n)\n\n, published_periods AS (\nSELECT \n    *\nFROM clean_periods\nWHERE TRUE \n    AND for_sale    \n    AND is_deleted = FALSE \n    AND status IN ('published', 'republished') \n)\n\nSELECT \n    *\nFROM published_periods", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_properties_sales_published\""}, "model.houm.proc_hist_prop_rentals_status": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_hist_prop_rentals_status"], "unique_id": "model.houm.proc_hist_prop_rentals_status", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_arriendoasegurado_propertydetails', 'is_historical':'TRUE' , 'has_stg':'FALSE' },\n                              {'table_name':'stg_arriendoasegurado_propertydetails', 'is_historical':'FALSE', 'has_stg':'TRUE' }  ],\n            columns = [ {'column_name':'property_id', 'is_boolean':'FALSE' },\n                        {'column_name':'status', 'is_boolean':'FALSE' } ], \n            id_columns = 'id', \n            needs_post_process = 'FALSE' \n            ) \n}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_hist_prop_rentals_status.sql", "original_file_path": "models/processing/supply/proc_hist_prop_rentals_status.sql", "name": "proc_hist_prop_rentals_status", "alias": "proc_hist_prop_rentals_status", "checksum": {"name": "sha256", "checksum": "e27c112e1a073628001b4ec8cbebbf58725d3c344638c93f822ec0990a9589fa"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_arriendoasegurado_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_hist_prop_rentals_status.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.428103, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_propertydetails\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.property_id::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.property_id::TEXT \n        END AS property_id,\n        CASE \n            WHEN historical.status::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.status::TEXT \n        END AS status \n    FROM current_values\n        LEFT JOIN historical.historical_arriendoasegurado_propertydetails AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        property_id||status \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        property_id  ,\n        status  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        property_id  ,\n        status  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,property_id,status \n)\n \nSELECT \n    *\nFROM group_period", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_hist_prop_rentals_status\""}, "model.houm.proc_macrozone": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_macrozone", "model.houm.stg_arriendoasegurado_city"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_macrozone"], "unique_id": "model.houm.proc_macrozone", "raw_code": "SELECT\n    macrozone.id AS geo_id, \n\tmacrozone.created_at,\n\tmacrozone.updated_at,\n\tmacrozone.name,\n\tmacrozone.description,\n\tCASE \t\n\t\tWHEN macrozone.id = 115 THEN 'Chile'\n\t\tWHEN macrozone.id = 116 THEN 'Colombia'\n\t\tWHEN macrozone.id = 117 THEN 'Chile'\n\t\tELSE macrozone.country\n\tEND AS country, \n\tmacrozone.city,\n\tmacrozone.city_marketplace_id,\n\tmarketplace.name AS city_marketplace,\n    macrozone.polygon,\n    macrozone.timezone,\n    CASE  \n\t\tWHEN macrozone.country = 'Chile' OR macrozone.id = 115 THEN 'CL' \n\t\tWHEN macrozone.country = 'Colombia' OR macrozone.id = 116 THEN 'CO' \n\t\tWHEN macrozone.country IN ('Mexico', 'M\u00e9xico') OR macrozone.id = 117 THEN 'MX'\n        ELSE 'NA' \n    END AS country_sufix, \n    --, city\n    CASE \n    \tWHEN macrozone.city IN ('Santiago','Buin','Calera de Tango','Chicureo','Paine','El Monte') THEN 'Regi\u00f3n Metropolitana'\n    \tWHEN macrozone.city IN ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9') THEN 'V Regi\u00f3n'\n    \tWHEN macrozone.city = 'Concepci\u00f3n' THEN 'Regi\u00f3n B\u00edo B\u00edo'\n    \tWHEN macrozone.city IN ('Bogot\u00e1','Cundinamarca') THEN 'Bogot\u00e1, D.C & Cundinamarca' \n    \tWHEN macrozone.city = 'Antioquia' THEN 'Antioquia'\n    \tWHEN macrozone.city = 'Ciudad de M\u00e9xico' OR macrozone.description LIKE '%CDMX%'\tTHEN 'Ciudad de M\u00e9xico'\n    \tWHEN macrozone.city = 'Guadalajara' THEN 'Guadalajara'\n    \tWHEN macrozone.city = 'Monterrey' THEN 'Monterrey'\n    \tWHEN macrozone.city = 'Tijuana' THEN 'Tijuana'\n    \tELSE 'Null'\n\tEND region_houm,\n    CASE \n\t\tWHEN macrozone.city = 'Santiago' THEN 'Santiago'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t\tWHEN macrozone.city IN ('Santiago', 'Regi\u00f3n Metropolitana', 'RM') THEN 'Santiago'\n\t\tWHEN macrozone.city IN ('Buin','Calera de Tango','Chicureo','Paine','El Monte')   THEN 'Santiago Periferia'\n\t\tWHEN macrozone.city IN ('Valpara\u00edso','Vi\u00f1a del Mar') THEN 'V Regi\u00f3n Costa'\n\t\tWHEN macrozone.city IN ('Limache','Quilpu\u00e9') THEN 'V Regi\u00f3n Interior'\n\t\tWHEN macrozone.city = 'Concepci\u00f3n' THEN 'Regi\u00f3n B\u00edo B\u00edo'\n\t\tWHEN macrozone.id IN (14,15,16,17,18,114) THEN 'Bogot\u00e1'\n\t\tWHEN macrozone.id IN (24,25,61,62,63,64,65,66,90) THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN (macrozone.city LIKE '%_ntioqu_a%' AND macrozone.id <> 113) THEN 'Medell\u00edn'\n\t\tWHEN macrozone.id = 113 THEN 'Medell\u00edn Oriente'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t\tWHEN LOWER(macrozone.city) LIKE '%bogot_%' THEN 'Bogot\u00e1'\n\t\tWHEN LOWER(macrozone.city) LIKE '%cundinamarca%' THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN LOWER(macrozone.city) IN ('Cota','Chia','Ch\u00eda','Cajic\u00e1','Cajica','Madrid','Funza','Mosquera','La Calera','Tenjo','Tabio','Zipaquir\u00e1','Tocancip\u00e1','Sop\u00f3') THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN LOWER(macrozone.city) LIKE 'antioqu_a%' THEN 'Medell\u00edn'\n\t\tWHEN LOWER(macrozone.city) IN ('Medell\u00edn', 'Medellin', 'Medell\u00edn Oriente','MedellIN Oriente') THEN 'Antioquoa'\n\t\t---     \n\t\tWHEN  macrozone.city = 'Ciudad de M\u00e9xico' OR macrozone.description LIKE '%CDMX%' THEN 'Ciudad de M\u00e9xico'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t    WHEN  LOWER(macrozone.city) IN ('Ciudad de M\u00e9xico', 'Ciudad de Mexico', 'CDMX') THEN 'Ciudad de M\u00e9xico'\n\t\t---\n\t\tWHEN macrozone.city = 'Guadalajara' THEN 'Guadalajara'\n\t\tWHEN macrozone.city = 'Monterrey' THEN 'Monterrey'\n\t\tWHEN macrozone.city = 'Tijuana' THEN 'Tijuana'\n\t\tELSE 'Null' \n\tEND AS city_houm , \n\tCASE \n\t\tWHEN macrozone.country IN ('Chile', 'Mexico', 'Colombia') OR macrozone.id IN (115,116,117) THEN FALSE\n\t\tELSE TRUE\n\tEND is_test\nFROM {{ ref('stg_scheduler_macrozone') }} AS macrozone\nLEFT JOIN {{ ref('stg_arriendoasegurado_city') }} AS marketplace  \n\tON macrozone.city_marketplace_id = marketplace.id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_macrozone.sql", "original_file_path": "models/processing/supply/proc_macrozone.sql", "name": "proc_macrozone", "alias": "proc_macrozone", "checksum": {"name": "sha256", "checksum": "96c8643664a82f40d4a6acca36c2ebed011ad720e31358c1d95d69a2a25d7bf5"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_scheduler_macrozone"], ["stg_arriendoasegurado_city"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.433985, "compiled_code": "SELECT\n    macrozone.id AS geo_id, \n\tmacrozone.created_at,\n\tmacrozone.updated_at,\n\tmacrozone.name,\n\tmacrozone.description,\n\tCASE \t\n\t\tWHEN macrozone.id = 115 THEN 'Chile'\n\t\tWHEN macrozone.id = 116 THEN 'Colombia'\n\t\tWHEN macrozone.id = 117 THEN 'Chile'\n\t\tELSE macrozone.country\n\tEND AS country, \n\tmacrozone.city,\n\tmacrozone.city_marketplace_id,\n\tmarketplace.name AS city_marketplace,\n    macrozone.polygon,\n    macrozone.timezone,\n    CASE  \n\t\tWHEN macrozone.country = 'Chile' OR macrozone.id = 115 THEN 'CL' \n\t\tWHEN macrozone.country = 'Colombia' OR macrozone.id = 116 THEN 'CO' \n\t\tWHEN macrozone.country IN ('Mexico', 'M\u00e9xico') OR macrozone.id = 117 THEN 'MX'\n        ELSE 'NA' \n    END AS country_sufix, \n    --, city\n    CASE \n    \tWHEN macrozone.city IN ('Santiago','Buin','Calera de Tango','Chicureo','Paine','El Monte') THEN 'Regi\u00f3n Metropolitana'\n    \tWHEN macrozone.city IN ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9') THEN 'V Regi\u00f3n'\n    \tWHEN macrozone.city = 'Concepci\u00f3n' THEN 'Regi\u00f3n B\u00edo B\u00edo'\n    \tWHEN macrozone.city IN ('Bogot\u00e1','Cundinamarca') THEN 'Bogot\u00e1, D.C & Cundinamarca' \n    \tWHEN macrozone.city = 'Antioquia' THEN 'Antioquia'\n    \tWHEN macrozone.city = 'Ciudad de M\u00e9xico' OR macrozone.description LIKE '%CDMX%'\tTHEN 'Ciudad de M\u00e9xico'\n    \tWHEN macrozone.city = 'Guadalajara' THEN 'Guadalajara'\n    \tWHEN macrozone.city = 'Monterrey' THEN 'Monterrey'\n    \tWHEN macrozone.city = 'Tijuana' THEN 'Tijuana'\n    \tELSE 'Null'\n\tEND region_houm,\n    CASE \n\t\tWHEN macrozone.city = 'Santiago' THEN 'Santiago'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t\tWHEN macrozone.city IN ('Santiago', 'Regi\u00f3n Metropolitana', 'RM') THEN 'Santiago'\n\t\tWHEN macrozone.city IN ('Buin','Calera de Tango','Chicureo','Paine','El Monte')   THEN 'Santiago Periferia'\n\t\tWHEN macrozone.city IN ('Valpara\u00edso','Vi\u00f1a del Mar') THEN 'V Regi\u00f3n Costa'\n\t\tWHEN macrozone.city IN ('Limache','Quilpu\u00e9') THEN 'V Regi\u00f3n Interior'\n\t\tWHEN macrozone.city = 'Concepci\u00f3n' THEN 'Regi\u00f3n B\u00edo B\u00edo'\n\t\tWHEN macrozone.id IN (14,15,16,17,18,114) THEN 'Bogot\u00e1'\n\t\tWHEN macrozone.id IN (24,25,61,62,63,64,65,66,90) THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN (macrozone.city LIKE '%_ntioqu_a%' AND macrozone.id <> 113) THEN 'Medell\u00edn'\n\t\tWHEN macrozone.id = 113 THEN 'Medell\u00edn Oriente'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t\tWHEN LOWER(macrozone.city) LIKE '%bogot_%' THEN 'Bogot\u00e1'\n\t\tWHEN LOWER(macrozone.city) LIKE '%cundinamarca%' THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN LOWER(macrozone.city) IN ('Cota','Chia','Ch\u00eda','Cajic\u00e1','Cajica','Madrid','Funza','Mosquera','La Calera','Tenjo','Tabio','Zipaquir\u00e1','Tocancip\u00e1','Sop\u00f3') THEN 'Bogot\u00e1 Periferia'\n\t\tWHEN LOWER(macrozone.city) LIKE 'antioqu_a%' THEN 'Medell\u00edn'\n\t\tWHEN LOWER(macrozone.city) IN ('Medell\u00edn', 'Medellin', 'Medell\u00edn Oriente','MedellIN Oriente') THEN 'Antioquoa'\n\t\t---     \n\t\tWHEN  macrozone.city = 'Ciudad de M\u00e9xico' OR macrozone.description LIKE '%CDMX%' THEN 'Ciudad de M\u00e9xico'\n\t\t--- para hacer match con trans_macrozone_to_location\n\t    WHEN  LOWER(macrozone.city) IN ('Ciudad de M\u00e9xico', 'Ciudad de Mexico', 'CDMX') THEN 'Ciudad de M\u00e9xico'\n\t\t---\n\t\tWHEN macrozone.city = 'Guadalajara' THEN 'Guadalajara'\n\t\tWHEN macrozone.city = 'Monterrey' THEN 'Monterrey'\n\t\tWHEN macrozone.city = 'Tijuana' THEN 'Tijuana'\n\t\tELSE 'Null' \n\tEND AS city_houm , \n\tCASE \n\t\tWHEN macrozone.country IN ('Chile', 'Mexico', 'Colombia') OR macrozone.id IN (115,116,117) THEN FALSE\n\t\tELSE TRUE\n\tEND is_test\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_city\" AS marketplace  \n\tON macrozone.city_marketplace_id = marketplace.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\""}, "model.houm.proc_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_properties", "model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties"], "unique_id": "model.houm.proc_properties", "raw_code": "SELECT \r\n\tprop.id, \r\n\tprop.uid, \r\n\tprop.created_at,\r\n\tprop.updated_at, \r\n\tprop.first_publication_date,\r\n\tprop.last_publication_date,\r\n\tCASE\r\n\t\tWHEN for_rental = TRUE AND  for_sale = TRUE THEN 'Rental & Sale'\r\n\t\tWHEN for_rental = TRUE AND for_sale = FALSE THEN 'Rental'\r\n\t\tWHEN for_rental = TRUE AND for_sale = FALSE THEN 'Rental'\r\n\t\tWHEN for_rental = FALSE AND for_sale = TRUE THEN 'Sale'\r\n\t\tELSE 'Rental & Sale'\r\n\tEND AS business_type,\r\n\tCASE\r\n\t\tWHEN users.role::text in ('property_broker','real_estate_developer') or users.id = 60441 THEN 'B2B'\r\n\t\t-- EL ID 60441 es de un ejecutivo el cual no siguio de manera correcta la forma de carga \r\n\t\t-- de las propiedades, dejando todos sus negocios B2B a el como propietario. \r\n\t\t-- No fue posible recuperar las corredoras originales duenas de dichas prop.\r\n\t\tELSE 'B2C'\r\n\tEND AS supply_source,\r\n\tCASE\r\n\t\tWHEN users.role = 'property_broker' or users.id = 60441 THEN 'Brokers'\r\n\t\tWHEN users.role = 'real_estate_developer' then 'New Properties'\r\n\t\tWHEN length( users.referral_id) = 5 then 'Partners'\r\n\t\tELSE 'Landlord'\r\n\tEND AS supply_relation,\r\n\tprop.neighborhood_id,\r\n\tLOWER(prop.address) AS address, \r\n\tLOWER(prop.second_line_address) AS second_line_address,\r\n\tprop.numero_depto,\r\n\tprop.apartment_floor,\r\n\tprop.street_number,\r\n\tLOWER(replace(prop.comuna,',',' ')) AS comuna,\r\n\tprop.region,\r\n\tprop.state,\r\n\tprop.city,\r\n\tprop.country,\r\n\tprop.user_id,\r\n\tprop.type,\r\n\tprop.stratus,\r\n\tprop.lessor_id,\r\n\tprop.is_deleted,\r\n\tprop.keys_info,\r\n\tprop.lost,\r\n\tprop.lost_reason,\r\n\tprop.property_relation,\r\n\tprop.available_from,\r\n\tprop.pipedrive_owner_id,\r\n\tprop.antiquity,\r\n\tprop.year_built,\r\n\tprop.for_rental,\r\n\tprop.for_sale,\r\n\tprop.lessor_brokerage_commission,\r\n\tprop.vitruvio_suggest,\r\n\tprop.vitruvio_max,\r\n\tprop.vitruvio_min,\r\n\tprop.video360_url,\r\n\tprop.video_url \r\nFROM {{ ref('stg_properties') }} AS prop\r\nLEFT JOIN {{ ref('stg_users') }} AS users \r\n\tON prop.user_id = users.id  \r\nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties.sql", "original_file_path": "models/processing/supply/proc_properties.sql", "name": "proc_properties", "alias": "proc_properties", "checksum": {"name": "sha256", "checksum": "8b594c6b7c7ec3ff6989877bc047a5a99c6bec63d4eed45f192e9f25eff2e64a"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties"], ["stg_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.435783, "compiled_code": "SELECT \n\tprop.id, \n\tprop.uid, \n\tprop.created_at,\n\tprop.updated_at, \n\tprop.first_publication_date,\n\tprop.last_publication_date,\n\tCASE\n\t\tWHEN for_rental = TRUE AND  for_sale = TRUE THEN 'Rental & Sale'\n\t\tWHEN for_rental = TRUE AND for_sale = FALSE THEN 'Rental'\n\t\tWHEN for_rental = TRUE AND for_sale = FALSE THEN 'Rental'\n\t\tWHEN for_rental = FALSE AND for_sale = TRUE THEN 'Sale'\n\t\tELSE 'Rental & Sale'\n\tEND AS business_type,\n\tCASE\n\t\tWHEN users.role::text in ('property_broker','real_estate_developer') or users.id = 60441 THEN 'B2B'\n\t\t-- EL ID 60441 es de un ejecutivo el cual no siguio de manera correcta la forma de carga \n\t\t-- de las propiedades, dejando todos sus negocios B2B a el como propietario. \n\t\t-- No fue posible recuperar las corredoras originales duenas de dichas prop.\n\t\tELSE 'B2C'\n\tEND AS supply_source,\n\tCASE\n\t\tWHEN users.role = 'property_broker' or users.id = 60441 THEN 'Brokers'\n\t\tWHEN users.role = 'real_estate_developer' then 'New Properties'\n\t\tWHEN length( users.referral_id) = 5 then 'Partners'\n\t\tELSE 'Landlord'\n\tEND AS supply_relation,\n\tprop.neighborhood_id,\n\tLOWER(prop.address) AS address, \n\tLOWER(prop.second_line_address) AS second_line_address,\n\tprop.numero_depto,\n\tprop.apartment_floor,\n\tprop.street_number,\n\tLOWER(replace(prop.comuna,',',' ')) AS comuna,\n\tprop.region,\n\tprop.state,\n\tprop.city,\n\tprop.country,\n\tprop.user_id,\n\tprop.type,\n\tprop.stratus,\n\tprop.lessor_id,\n\tprop.is_deleted,\n\tprop.keys_info,\n\tprop.lost,\n\tprop.lost_reason,\n\tprop.property_relation,\n\tprop.available_from,\n\tprop.pipedrive_owner_id,\n\tprop.antiquity,\n\tprop.year_built,\n\tprop.for_rental,\n\tprop.for_sale,\n\tprop.lessor_brokerage_commission,\n\tprop.vitruvio_suggest,\n\tprop.vitruvio_max,\n\tprop.vitruvio_min,\n\tprop.video360_url,\n\tprop.video_url \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" AS prop\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS users \n\tON prop.user_id = users.id  \nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties\""}, "model.houm.properties_hist_sales_price": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_track_historical_changes"], "nodes": ["model.houm.stg_arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "properties_hist_sales_price"], "unique_id": "model.houm.properties_hist_sales_price", "raw_code": "{{ create_track_historical_changes( \n            table_to_track = [{'table_name':'historical.historical_arriendoasegurado_propertydetails'   , 'is_historical':'TRUE' , 'has_stg':'FALSE' },\n                              {'table_name':'stg_arriendoasegurado_propertydetails'                     , 'is_historical':'FALSE', 'has_stg':'TRUE' }  ]  ,\n            columns = [ {'column_name':'property_id', 'is_boolean':'FALSE' } ,\n                        {'column_name':'tipo_moneda_venta', 'is_boolean':'FALSE' } ,  \n                        {'column_name':'valor_venta', 'is_boolean':'FALSE' }  ] , \n            id_columns = 'id' , \n            needs_post_process = 'TRUE' ) }} \n\n, results AS (\nSELECT \n    id, \n    property_id, \n    CASE tipo_moneda_venta\n        WHEN 'NonValue' THEN NULL\n        ELSE tipo_moneda_venta\n    END tipo_moneda_venta, \n    CASE valor_venta\n        WHEN 'NonValue' THEN NULL::float\n        ELSE valor_venta::FLOAT \n    END valor_venta,\n    audit_start_dt,\n    audit_end_dt\nFROM group_period\n\n)\n\nSELECT \n    *\nFROM results", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/properties_hist_sales_price.sql", "original_file_path": "models/processing/supply/properties_hist_sales_price.sql", "name": "properties_hist_sales_price", "alias": "properties_hist_sales_price", "checksum": {"name": "sha256", "checksum": "e2a7a6ac54acc3559c661f2d593afee9c7cc7d60a45d069d2eb77969556bee10"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_arriendoasegurado_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/properties_hist_sales_price.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.4376519, "compiled_code": "WITH current_values AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_propertydetails\" AS table_temp\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.id ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        CASE \n            WHEN historical.property_id::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.property_id::TEXT \n        END AS property_id,\n        CASE \n            WHEN historical.tipo_moneda_venta::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.tipo_moneda_venta::TEXT \n        END AS tipo_moneda_venta,\n        CASE \n            WHEN historical.valor_venta::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.valor_venta::TEXT \n        END AS valor_venta \n    FROM current_values\n        LEFT JOIN historical.historical_arriendoasegurado_propertydetails AS historical\n        ON current_values.id = historical.id\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        property_id||tipo_moneda_venta||valor_venta \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY id  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        id , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt , \n        key_track ,\n        property_id  ,\n        tipo_moneda_venta  ,\n        valor_venta  , \n        SUM(key_track_count) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        id , \n        index_track , \n        key_track ,\n        property_id  ,\n        tipo_moneda_venta  ,\n        valor_venta  , \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '2023-02-09 16:13:54.685542-03:00' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY id, index_track, key_track,property_id,tipo_moneda_venta,valor_venta \n)\n \n\n, results AS (\nSELECT \n    id, \n    property_id, \n    CASE tipo_moneda_venta\n        WHEN 'NonValue' THEN NULL\n        ELSE tipo_moneda_venta\n    END tipo_moneda_venta, \n    CASE valor_venta\n        WHEN 'NonValue' THEN NULL::float\n        ELSE valor_venta::FLOAT \n    END valor_venta,\n    audit_start_dt,\n    audit_end_dt\nFROM group_period\n\n)\n\nSELECT \n    *\nFROM results", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"properties_hist_sales_price\""}, "model.houm.properties_sales_prices_change": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.properties_hist_sales_price", "model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "properties_sales_prices_change"], "unique_id": "model.houm.properties_sales_prices_change", "raw_code": "WITH price_change AS (\nSELECT \n    *  \nFROM {{ ref('properties_hist_sales_price') }}\n)\n\n, changes AS (\nSELECT \n    price_change.id,\n    price_change.property_id,\n    price_change.audit_start_dt, \n    price_change.audit_end_dt, \n    price_change.tipo_moneda_venta AS current_currency,\n    price_change.valor_venta AS current_price,\n    price_change_lag.tipo_moneda_venta AS previus_currency, \n    price_change_lag.valor_venta AS previus_price,\n    price_change_lag.audit_start_dt AS previus_audit_start_dt, \n    price_change_lag.audit_end_dt AS previus_audit_end_dt,  \n    (price_change_lag.valor_venta - price_change.valor_venta)::FLOAT / NULLIF(price_change_lag.valor_venta::FLOAT,0) AS price_delta, \n    (extract( EPOCH FROM (price_change_lag.audit_end_dt - price_change_lag.audit_start_dt) )/(3600*24))::INT previus_period_days\nFROM price_change AS price_change\nLEFT JOIN price_change AS price_change_lag\n    ON price_change.audit_start_dt = price_change_lag.audit_end_dt \n    AND price_change.id = price_change_lag.id\nWHERE TRUE\n    AND price_change.audit_end_dt IS NULL\n    AND price_change_lag.audit_end_dt IS NOT NULL\n)\n\n, business_filter AS (\nSELECT \n    *\nFROM changes \nWHERE TRUE\n    -- Que sea la misma moneda \n    AND current_currency = previus_currency\n    -- % de variaci\u00f3n \n    AND price_delta > 0.015\n    AND price_delta < 0.50\n    -- Que el precio anterior durara minimo 3 d\u00edas\n    AND previus_period_days > 3 \n)\n\n, sales_prop AS (\nSELECT \n    *\nFROM {{ ref('properties_published') }} AS published_props\nWHERE is_sales_published = TRUE \n)\n\nSELECT \n    business_filter.* , \n    '{{ var(\"processed_time\") }}' AS processed_time \nFROM business_filter\nLEFT JOIN sales_prop\n    ON sales_prop.property_id = business_filter.property_id\nWHERE TRUE\n    AND sales_prop.property_id IS NOT NULL", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/properties_sales_prices_change.sql", "original_file_path": "models/processing/supply/properties_sales_prices_change.sql", "name": "properties_sales_prices_change", "alias": "properties_sales_prices_change", "checksum": {"name": "sha256", "checksum": "525125fea9a1ac84ac4686464f3c748c11241927b796943fcab3f08d172f03ba"}, "tags": ["dw", "processing", "supply"], "refs": [["properties_hist_sales_price"], ["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/properties_sales_prices_change.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.443726, "compiled_code": "WITH price_change AS (\nSELECT \n    *  \nFROM \"houmdw_prod\".\"dbt_processing\".\"properties_hist_sales_price\"\n)\n\n, changes AS (\nSELECT \n    price_change.id,\n    price_change.property_id,\n    price_change.audit_start_dt, \n    price_change.audit_end_dt, \n    price_change.tipo_moneda_venta AS current_currency,\n    price_change.valor_venta AS current_price,\n    price_change_lag.tipo_moneda_venta AS previus_currency, \n    price_change_lag.valor_venta AS previus_price,\n    price_change_lag.audit_start_dt AS previus_audit_start_dt, \n    price_change_lag.audit_end_dt AS previus_audit_end_dt,  \n    (price_change_lag.valor_venta - price_change.valor_venta)::FLOAT / NULLIF(price_change_lag.valor_venta::FLOAT,0) AS price_delta, \n    (extract( EPOCH FROM (price_change_lag.audit_end_dt - price_change_lag.audit_start_dt) )/(3600*24))::INT previus_period_days\nFROM price_change AS price_change\nLEFT JOIN price_change AS price_change_lag\n    ON price_change.audit_start_dt = price_change_lag.audit_end_dt \n    AND price_change.id = price_change_lag.id\nWHERE TRUE\n    AND price_change.audit_end_dt IS NULL\n    AND price_change_lag.audit_end_dt IS NOT NULL\n)\n\n, business_filter AS (\nSELECT \n    *\nFROM changes \nWHERE TRUE\n    -- Que sea la misma moneda \n    AND current_currency = previus_currency\n    -- % de variaci\u00f3n \n    AND price_delta > 0.015\n    AND price_delta < 0.50\n    -- Que el precio anterior durara minimo 3 d\u00edas\n    AND previus_period_days > 3 \n)\n\n, sales_prop AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_marts\".\"properties_published\" AS published_props\nWHERE is_sales_published = TRUE \n)\n\nSELECT \n    business_filter.* , \n    '2023-02-09 16:13:54.685542-03:00' AS processed_time \nFROM business_filter\nLEFT JOIN sales_prop\n    ON sales_prop.property_id = business_filter.property_id\nWHERE TRUE\n    AND sales_prop.property_id IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"properties_sales_prices_change\""}, "model.houm.proc_properties_characteristics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.dim_locations", "model.houm.stg_propertydetails", "model.houm.stg_properties", "model.houm.proc_properties_mz", "model.houm.dim_macrozones", "model.houm.stg_propertydetails", "model.houm.stg_property_salesdetails", "model.houm.stg_homecheckerdetails", "model.houm.stg_properties_location", "model.houm.stg_properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_characteristics"], "unique_id": "model.houm.proc_properties_characteristics", "raw_code": "{{ config(materialized='view') }}\n\nWITH communes AS (\nSELECT \n   INITCAP(TRANSLATE(city, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS city, \n   INITCAP(TRANSLATE(region, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS region, \n   INITCAP(TRANSLATE(macrozone, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS commune ,\n   polygon \nFROM {{ ref('dim_locations') }} AS dim_locations\nWHERE TRUE\n  AND dim_locations.description IN ('Localidad', 'Comuna', 'Alcaldia') \n)\n\n, orientation_uniques AS (\nSELECT \n   DISTINCT \n   orientacion\nFROM {{ ref('stg_propertydetails') }} AS propdetails\n)\n\n, orientation_esp AS (\nSELECT \n   orientacion, \n   CASE orientacion\n      WHEN 'northeast' THEN 'NO' \n      WHEN 'northwest'THEN 'NP'\n      WHEN 'north' THEN 'N'\n      WHEN 'southwest' THEN 'SO' \n      WHEN 'south' THEN 'S'\n      WHEN 'southeast'THEN 'SP'\n      WHEN 'west' THEN 'P' \n      WHEN 'nan' THEN 'NA' \n      WHEN 'east' THEN 'O'\n      WHEN 'Oriente' THEN 'O'\n      WHEN 'Sur'THEN 'S'\n      WHEN 'Nororiente' THEN 'NO'\n      WHEN 'Norte' THEN 'N'\n      WHEN 'Norponiente' THEN 'NP'\n      WHEN 'Suroriente' THEN 'SO'\n      WHEN 'Poniente' THEN 'P'\n      ELSE ''\n   END AS orientation_esp\nFROM orientation_uniques \n)\n\nSELECT\n   prop.id AS property_id,\n   prop_mz.geo_id,\n   prop.country, \n   COALESCE( INITCAP(TRANSLATE(prop.city, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) , communes.city ) AS city, \t\n   COALESCE( communes.region , INITCAP(TRANSLATE(prop.region, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU'))) AS region,\n\tCOALESCE( communes.commune, INITCAP(TRANSLATE(prop.comuna, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) ) AS commune, \t\n   INITCAP(TRANSLATE(properties_location.neighborhood , '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS neighborhood,\n\tmacrozone.country AS macrozone_country, \n\tmacrozone.region_houm AS macrozone_region,\n   macrozone.city_houm AS macrozone_city,\n\n   prop.address, \n   COALESCE( prop.numero_depto, homecheckerdetails.apartment_number ) AS apartment_number ,\n   COALESCE( prop.apartment_floor, homecheckerdetails.apartment_floor) AS apartment_floor,\n   prop.year_built,\n   NULLIF( COALESCE(EXTRACT(year FROM '{{ var(\"processed_time\") }}'::DATE ) - prop.year_built, prop.antiquity), 0) AS antiquity,\n   propdetails.latitud AS latitude,\n   propdetails.longitud AS longitude,\n   propdetails.m_construidos AS built_area,\n   propdetails.m_terreno AS total_area, \n   CASE \n      WHEN propdetails.terraza = 1 THEN TRUE\n      WHEN propdetails.terrace_size >= 0 THEN TRUE\n      ELSE FALSE\n   END AS has_balcony,\n   propdetails.terrace_size AS balcony_area,\n   propdetails.loggia_size AS loggia_area,\n   CASE \n      WHEN loggia_size > 0 THEN TRUE \n      ELSE FALSE \n   END AS has_loggia,\n   CASE\n      WHEN amoblado = 1 THEN TRUE\n      WHEN propdetails.furnished in ('fully', 'partially') THEN TRUE\n      ELSE FALSE\n   END AS is_furnished,\n   propdetails.furnished, \n   CASE prop.type\n      WHEN 'departamento' then 'apartment'\n      ELSE 'house'\n   END AS type, \n   propdetails.apartment_type,\n\tCASE \n        WHEN dormitorios = 1 AND banos = 1 THEN '1D-1B'\n        WHEN dormitorios = 1 AND banos >= 2 THEN '1D+2B'\n        WHEN dormitorios = 2 AND banos = 1 THEN '2D-1B'\n        WHEN dormitorios = 2 AND banos >= 2 THEN '2D+2B'\n        WHEN dormitorios >= 3 AND banos = 1 THEN '+3D-1B'\n        WHEN dormitorios >= 3 AND banos >= 2 THEN '+3D-2B'\n        ELSE NULL \n    END AS tipology,\n   propdetails.dormitorios AS bedrooms,\n   propdetails.banos AS bathrooms,\n   CASE \n      WHEN estacionamientos >= 0 THEN TRUE\n      WHEN parking THEN TRUE \n      ELSE FALSE \n   END AS has_parking,\n   propdetails.estacionamientos AS parking_spots,\n   propdetails.parking_numbers,\n   propdetails.bodega AS has_warehouse_unit,\n   propdetails.warehouse_number,\n   amenities.floors AS building_floors, \n   propdetails.orientacion AS orientation,\n   orientation_esp.orientation_esp,\n   propdetails.closet, \n   homecheckerdetails.hot_water_service,\n   propdetails.calefaccion AS has_heating,\n   propdetails.curtain_hanger,\n   propdetails.environments, \n   propdetails.has_air_conditioning,\n   propdetails.has_clothing_area,\n   propdetails.has_laundry_room,\n   propdetails.house_extension,\n   propdetails.kitchen_is_furnished, \n   propdetails.has_roof_garden AS has_privite_roof_garden,\n   propdetails.laundry_capacity AS has_laundry_capacity, \n   propdetails.is_renewed\nFROM {{ ref('stg_properties') }} AS prop\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n   ON prop_mz.property_id = prop.id\nLEFT JOIN {{ ref('dim_macrozones')}} AS macrozone\n   ON macrozone.geo_id = prop_mz.geo_id \nLEFT JOIN {{ ref('stg_propertydetails') }} AS propdetails\n   ON propdetails.property_id = prop.id\nLEFT JOIN {{ ref('stg_property_salesdetails') }} AS salesdetails\n   ON salesdetails.property_id = prop.id\nLEFT JOIN {{ ref('stg_homecheckerdetails') }} AS homecheckerdetails\n   ON homecheckerdetails.property_id = prop.id \nLEFT JOIN {{ ref('stg_properties_location') }} AS properties_location\n   ON prop.neighborhood_id = properties_location.id\nLEFT JOIN {{ref('stg_properties_associationamenities')}} AS amenities\n   ON prop.id = amenities.property_id\nLEFT JOIN orientation_esp\n   ON orientation_esp.orientacion = propdetails.orientacion\nLEFT JOIN communes\n    ON (ST_CONTAINS(communes.polygon,ST_SETSRID(ST_POINT(propdetails.longitud, propdetails.latitud), 4326)) = TRUE)", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_characteristics.sql", "original_file_path": "models/processing/supply/proc_properties_characteristics.sql", "name": "proc_properties_characteristics", "alias": "proc_properties_characteristics", "checksum": {"name": "sha256", "checksum": "d28258fa9e82d061da82429751f03f8eaa349a5b00990cbed9a807f7b0a9fc29"}, "tags": ["dw", "processing", "supply"], "refs": [["dim_locations"], ["stg_propertydetails"], ["stg_properties"], ["proc_properties_mz"], ["dim_macrozones"], ["stg_propertydetails"], ["stg_property_salesdetails"], ["stg_homecheckerdetails"], ["stg_properties_location"], ["stg_properties_associationamenities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_characteristics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "view", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.448297, "compiled_code": "\n\nWITH communes AS (\nSELECT \n   INITCAP(TRANSLATE(city, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS city, \n   INITCAP(TRANSLATE(region, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS region, \n   INITCAP(TRANSLATE(macrozone, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS commune ,\n   polygon \nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_locations\" AS dim_locations\nWHERE TRUE\n  AND dim_locations.description IN ('Localidad', 'Comuna', 'Alcaldia') \n)\n\n, orientation_uniques AS (\nSELECT \n   DISTINCT \n   orientacion\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS propdetails\n)\n\n, orientation_esp AS (\nSELECT \n   orientacion, \n   CASE orientacion\n      WHEN 'northeast' THEN 'NO' \n      WHEN 'northwest'THEN 'NP'\n      WHEN 'north' THEN 'N'\n      WHEN 'southwest' THEN 'SO' \n      WHEN 'south' THEN 'S'\n      WHEN 'southeast'THEN 'SP'\n      WHEN 'west' THEN 'P' \n      WHEN 'nan' THEN 'NA' \n      WHEN 'east' THEN 'O'\n      WHEN 'Oriente' THEN 'O'\n      WHEN 'Sur'THEN 'S'\n      WHEN 'Nororiente' THEN 'NO'\n      WHEN 'Norte' THEN 'N'\n      WHEN 'Norponiente' THEN 'NP'\n      WHEN 'Suroriente' THEN 'SO'\n      WHEN 'Poniente' THEN 'P'\n      ELSE ''\n   END AS orientation_esp\nFROM orientation_uniques \n)\n\nSELECT\n   prop.id AS property_id,\n   prop_mz.geo_id,\n   prop.country, \n   COALESCE( INITCAP(TRANSLATE(prop.city, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) , communes.city ) AS city, \t\n   COALESCE( communes.region , INITCAP(TRANSLATE(prop.region, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU'))) AS region,\n\tCOALESCE( communes.commune, INITCAP(TRANSLATE(prop.comuna, '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) ) AS commune, \t\n   INITCAP(TRANSLATE(properties_location.neighborhood , '\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da', 'aeiouAEIOU')) AS neighborhood,\n\tmacrozone.country AS macrozone_country, \n\tmacrozone.region_houm AS macrozone_region,\n   macrozone.city_houm AS macrozone_city,\n\n   prop.address, \n   COALESCE( prop.numero_depto, homecheckerdetails.apartment_number ) AS apartment_number ,\n   COALESCE( prop.apartment_floor, homecheckerdetails.apartment_floor) AS apartment_floor,\n   prop.year_built,\n   NULLIF( COALESCE(EXTRACT(year FROM '2023-02-09 16:13:54.685542-03:00'::DATE ) - prop.year_built, prop.antiquity), 0) AS antiquity,\n   propdetails.latitud AS latitude,\n   propdetails.longitud AS longitude,\n   propdetails.m_construidos AS built_area,\n   propdetails.m_terreno AS total_area, \n   CASE \n      WHEN propdetails.terraza = 1 THEN TRUE\n      WHEN propdetails.terrace_size >= 0 THEN TRUE\n      ELSE FALSE\n   END AS has_balcony,\n   propdetails.terrace_size AS balcony_area,\n   propdetails.loggia_size AS loggia_area,\n   CASE \n      WHEN loggia_size > 0 THEN TRUE \n      ELSE FALSE \n   END AS has_loggia,\n   CASE\n      WHEN amoblado = 1 THEN TRUE\n      WHEN propdetails.furnished in ('fully', 'partially') THEN TRUE\n      ELSE FALSE\n   END AS is_furnished,\n   propdetails.furnished, \n   CASE prop.type\n      WHEN 'departamento' then 'apartment'\n      ELSE 'house'\n   END AS type, \n   propdetails.apartment_type,\n\tCASE \n        WHEN dormitorios = 1 AND banos = 1 THEN '1D-1B'\n        WHEN dormitorios = 1 AND banos >= 2 THEN '1D+2B'\n        WHEN dormitorios = 2 AND banos = 1 THEN '2D-1B'\n        WHEN dormitorios = 2 AND banos >= 2 THEN '2D+2B'\n        WHEN dormitorios >= 3 AND banos = 1 THEN '+3D-1B'\n        WHEN dormitorios >= 3 AND banos >= 2 THEN '+3D-2B'\n        ELSE NULL \n    END AS tipology,\n   propdetails.dormitorios AS bedrooms,\n   propdetails.banos AS bathrooms,\n   CASE \n      WHEN estacionamientos >= 0 THEN TRUE\n      WHEN parking THEN TRUE \n      ELSE FALSE \n   END AS has_parking,\n   propdetails.estacionamientos AS parking_spots,\n   propdetails.parking_numbers,\n   propdetails.bodega AS has_warehouse_unit,\n   propdetails.warehouse_number,\n   amenities.floors AS building_floors, \n   propdetails.orientacion AS orientation,\n   orientation_esp.orientation_esp,\n   propdetails.closet, \n   homecheckerdetails.hot_water_service,\n   propdetails.calefaccion AS has_heating,\n   propdetails.curtain_hanger,\n   propdetails.environments, \n   propdetails.has_air_conditioning,\n   propdetails.has_clothing_area,\n   propdetails.has_laundry_room,\n   propdetails.house_extension,\n   propdetails.kitchen_is_furnished, \n   propdetails.has_roof_garden AS has_privite_roof_garden,\n   propdetails.laundry_capacity AS has_laundry_capacity, \n   propdetails.is_renewed\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" AS prop\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n   ON prop_mz.property_id = prop.id\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS macrozone\n   ON macrozone.geo_id = prop_mz.geo_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS propdetails\n   ON propdetails.property_id = prop.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\" AS salesdetails\n   ON salesdetails.property_id = prop.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\" AS homecheckerdetails\n   ON homecheckerdetails.property_id = prop.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\" AS properties_location\n   ON prop.neighborhood_id = properties_location.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\" AS amenities\n   ON prop.id = amenities.property_id\nLEFT JOIN orientation_esp\n   ON orientation_esp.orientacion = propdetails.orientacion\nLEFT JOIN communes\n    ON (ST_CONTAINS(communes.polygon,ST_SETSRID(ST_POINT(propdetails.longitud, propdetails.latitud), 4326)) = TRUE)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_characteristics\""}, "model.houm.proc_marketplace_published_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_hist_properties_rentals_published", "model.houm.proc_hist_properties_sales_published", "model.houm.dim_dates", "model.houm.dim_dates", "model.houm.proc_core_properties", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_marketplace_published_properties"], "unique_id": "model.houm.proc_marketplace_published_properties", "raw_code": "{{ config(materialized='table') }}\n\nWITH rentals_published_periods AS (\nSELECT \n\t*\nFROM {{ ref('proc_hist_properties_rentals_published') }} AS hist_publis\n)\n\n, sales_published_periods AS (\nSELECT \n\t*\nFROM {{ ref('proc_hist_properties_sales_published') }} AS hist_publis\n)\n\n, rentals_published_properties AS (\nSELECT\n\tfull_date, \n    'Rentals' AS business_type,   \n\trentals_published_periods.property_id  \nFROM {{ref('dim_dates')}} AS dim_dates\nLEFT JOIN rentals_published_periods\n\tON dim_dates.full_date BETWEEN rentals_published_periods.audit_start_dt AND audit_end_dt\n)\n\n, sales_published_properties AS (\nSELECT\n\tfull_date,\n    'Sales' AS business_type, \n\tsales_published_periods.property_id \nFROM {{ref('dim_dates')}} AS dim_dates\nLEFT JOIN sales_published_periods\n\tON dim_dates.full_date BETWEEN sales_published_periods.audit_start_dt AND audit_end_dt\n)\n\n, union_tables AS (\nSELECT \n    *\nFROM rentals_published_properties\nUNION ALL \nSELECT \n    *\nFROM sales_published_properties\n)\n\n, add_country AS (\nSELECT \n    union_tables.*,\n    properties.country,\n    prop_mz.geo_id\nFROM union_tables \nLEFT JOIN  {{ref('proc_core_properties')}} AS properties \n    ON properties.property_id = union_tables.property_id \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = properties.property_id\n)\n\n, count_prop AS (\nSELECT \n\tfull_date, \n    country,\n    geo_id,\n    business_type, \n\tcount( property_id ) AS total\nFROM add_country \nWHERE TRUE \n    AND country IS NOT NULL \nGROUP BY 1, 2, 3, 4\nORDER BY full_date DESC\n)\n\nSELECT \n    count_prop.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM count_prop\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = count_prop.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country \n\t\tAND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country \n        AND locations_houm.region = translation.location_region\n        AND locations_houm.city = translation.location_city\nWHERE full_date > '2021-08-01'::DATE", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_marketplace_published_properties.sql", "original_file_path": "models/processing/supply/proc_marketplace_published_properties.sql", "name": "proc_marketplace_published_properties", "alias": "proc_marketplace_published_properties", "checksum": {"name": "sha256", "checksum": "da29771efede1b220d166c102c35ee7401e46b26f114024aff4691b9b373c9f4"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_hist_properties_rentals_published"], ["proc_hist_properties_sales_published"], ["dim_dates"], ["dim_dates"], ["proc_core_properties"], ["proc_properties_mz"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_marketplace_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.454452, "compiled_code": "\n\nWITH rentals_published_periods AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_properties_rentals_published\" AS hist_publis\n)\n\n, sales_published_periods AS (\nSELECT \n\t*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_hist_properties_sales_published\" AS hist_publis\n)\n\n, rentals_published_properties AS (\nSELECT\n\tfull_date, \n    'Rentals' AS business_type,   \n\trentals_published_periods.property_id  \nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_dates\" AS dim_dates\nLEFT JOIN rentals_published_periods\n\tON dim_dates.full_date BETWEEN rentals_published_periods.audit_start_dt AND audit_end_dt\n)\n\n, sales_published_properties AS (\nSELECT\n\tfull_date,\n    'Sales' AS business_type, \n\tsales_published_periods.property_id \nFROM \"houmdw_prod\".\"dbt_dims\".\"dim_dates\" AS dim_dates\nLEFT JOIN sales_published_periods\n\tON dim_dates.full_date BETWEEN sales_published_periods.audit_start_dt AND audit_end_dt\n)\n\n, union_tables AS (\nSELECT \n    *\nFROM rentals_published_properties\nUNION ALL \nSELECT \n    *\nFROM sales_published_properties\n)\n\n, add_country AS (\nSELECT \n    union_tables.*,\n    properties.country,\n    prop_mz.geo_id\nFROM union_tables \nLEFT JOIN  \"houmdw_prod\".\"dbt_processing\".\"proc_core_properties\" AS properties \n    ON properties.property_id = union_tables.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = properties.property_id\n)\n\n, count_prop AS (\nSELECT \n\tfull_date, \n    country,\n    geo_id,\n    business_type, \n\tcount( property_id ) AS total\nFROM add_country \nWHERE TRUE \n    AND country IS NOT NULL \nGROUP BY 1, 2, 3, 4\nORDER BY full_date DESC\n)\n\nSELECT \n    count_prop.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM count_prop\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = count_prop.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country \n\t\tAND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country \n        AND locations_houm.region = translation.location_region\n        AND locations_houm.city = translation.location_city\nWHERE full_date > '2021-08-01'::DATE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketplace_published_properties\""}, "model.houm.proc_supply_projects": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz", "model.houm.stg_real_estate_developments_developments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_projects"], "unique_id": "model.houm.proc_supply_projects", "raw_code": "WITH new_properties AS (\nSELECT\n  properties.id AS property_id,\n  properties.for_sale,\n  property_salesdetails.first_publication_date AS date_sales,\n  properties_mz.geo_id,\n  properties.is_deleted\nFROM {{ ref('proc_properties') }} AS properties\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS property_salesdetails\n  ON properties.id = property_salesdetails.property_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n  ON properties_mz.property_id = properties.id\nWHERE TRUE\n  AND properties.supply_relation = 'New Properties'\n)\n\n, projects AS (\nSELECT\n  new_properties.property_id ,\n  developments.id AS development_id ,\n  new_properties.geo_id ,\n  new_properties.date_sales ,\n  new_properties.is_deleted\nFROM new_properties\nLEFT JOIN {{ ref('stg_real_estate_developments_developments') }} AS developments\n  ON new_properties.property_id = developments.property_id\nWHERE developments.id IS NOT NULL\n)\n\nSELECT \n  *\nFROM projects", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_projects.sql", "original_file_path": "models/processing/supply/proc_supply_projects.sql", "name": "proc_supply_projects", "alias": "proc_supply_projects", "checksum": {"name": "sha256", "checksum": "a6eafa0fc90ddbe6c3ca06edd22b3a813d3fd57916fcc0ed88409649339704b9"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"], ["stg_real_estate_developments_developments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_projects.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.456447, "compiled_code": "WITH new_properties AS (\nSELECT\n  properties.id AS property_id,\n  properties.for_sale,\n  property_salesdetails.first_publication_date AS date_sales,\n  properties_mz.geo_id,\n  properties.is_deleted\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS property_salesdetails\n  ON properties.id = property_salesdetails.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n  ON properties_mz.property_id = properties.id\nWHERE TRUE\n  AND properties.supply_relation = 'New Properties'\n)\n\n, projects AS (\nSELECT\n  new_properties.property_id ,\n  developments.id AS development_id ,\n  new_properties.geo_id ,\n  new_properties.date_sales ,\n  new_properties.is_deleted\nFROM new_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\" AS developments\n  ON new_properties.property_id = developments.property_id\nWHERE developments.id IS NOT NULL\n)\n\nSELECT \n  *\nFROM projects", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\""}, "model.houm.proc_properties_business": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.dim_uf_cl", "model.houm.properties_published", "model.houm.stg_users", "model.houm.stg_users", "model.houm.stg_properties", "model.houm.proc_properties_mz", "model.houm.stg_propertydetails", "model.houm.stg_property_salesdetails", "model.houm.stg_homecheckerdetails", "model.houm.proc_properties_rev_suggested_prices"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_business"], "unique_id": "model.houm.proc_properties_business", "raw_code": "WITH uf_to_cl AS (\n   SELECT \n      last_value_uf_to_cl AS uf_to_cl\n   FROM {{ ref('dim_uf_cl') }} AS dim_uf_cl\n   LIMIT 1\n)\n\n, published_properties AS (\n   SELECT \n      property_id, \n      is_rental_published, \n      is_sales_published\n   FROM {{ ref('properties_published') }} \n   WHERE TRUE\n)\n\n, landlords AS (\n   SELECT \n      users.id , \n      users.name || ' ' || users.last_name AS name, \n      COALESCE( users.document,  users.rut) AS document, \n      users.phone AS phone, \n      users.referral_id,\t\n      CASE\n         WHEN users.role::text in ('property_broker','real_estate_developer') or users.id = 60441 THEN 'B2B'\n         -- EL ID 60441 es de un ejecutivo el cual no siguio de manera correcta la forma de carga \n         -- de las propiedades, dejando todos sus negocios B2B a el como propietario. \n         -- No fue posible recuperar las corredoras originales duenas de dichas prop.\n         ELSE 'B2C'\n      END AS supply_source,\n      CASE\n         WHEN users.role = 'property_broker' or users.id = 60441 THEN 'Brokers'\n         WHEN users.role = 'real_estate_developer' then 'New Properties'\n         WHEN length( users.referral_id) = 5 then 'Partners'\n         ELSE 'Landlord'\n      END AS supply_relation\n   FROM {{ ref('stg_users') }} AS users \n)\n\n, executives AS (\nSELECT \n   executive.id , \n   COALESCE(pipedri_seller.name, executive.name || executive.last_name) AS name,\n   COALESCE(pipedri_seller.email, executive.email) AS email,\n   COALESCE(pipedri_seller.role, 'Sin Role' ) AS pipedrive_role\nFROM {{ ref('stg_users') }} AS executive \nLEFT JOIN raw_stage.pipedrive_seller AS pipedri_seller\n   ON executive.id = pipedri_seller.user_id\n)\n\nSELECT\n   prop.id AS property_id,\n   prop.uid, \n   CASE\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = TRUE THEN 'Rental & Sale'\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = FALSE THEN 'Rental'\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = FALSE THEN 'Rental'\n\t\tWHEN prop.for_rental = FALSE AND prop.for_sale = TRUE THEN 'Sale'\n\t\tELSE 'Rental & Sale'\n\tEND AS business,\n\n   landlords.supply_source,\n   landlords.supply_relation,\n   landlords.name AS landlord_name, \n   landlords.document AS landlord_document, \n   landlords.phone AS landlord_phone, \n   landlords.referral_id,\n\n   prop.houm_owner_id AS executive_user_id,    \n   executives.name AS executive_name,\n   executives.email AS executive_email,\n   executives.pipedrive_role AS executive_pipedrive_role,\n\n   prop.is_deleted,\n   prop.for_rental AS is_for_rental,\n   prop.for_sale AS is_for_sales,\n\n   prop.keys_info,\n   homecheckerdetails.has_houm_box, \n   homecheckerdetails.houm_box_number,\n   homecheckerdetails.houm_box_password,\n   homecheckerdetails.third_party_coordination AS has_third_party_coordination,\n   homecheckerdetails.third_party_coordination_description,\n   homecheckerdetails.third_party_coordination_person,\n   homecheckerdetails.third_party_coordination_full_name,\n   homecheckerdetails.third_party_coordination_email,\n   homecheckerdetails.third_party_coordination_phone,\n   homecheckerdetails.third_party_coordination_verified_phone AS is_third_party_coordination_verified_phone,\n\n   propdetails.status AS rental_status,\n   salesdetails.status AS sales_status, \n   COALESCE(published_properties.is_rental_published,FALSE) AS is_rental_published,\n   COALESCE(published_properties.is_sales_published,FALSE) AS is_sales_published,\n\n   propdetails.mascotas AS is_pet_friendly,\n   propdetails.has_houm_cleaning,\n   prop.stratus, \n\n   prop.first_publication_date AS rental_first_publication_date,\n   COALESCE(prop.last_publication_date ,  prop.first_publication_date ) AS rental_last_publication_date,\n   propdetails.first_available_handover_date AS rental_handover_date,\n    \n   COALESCE(salesdetails.last_publication_date, salesdetails.first_publication_date ) AS sales_last_publication_date,\n   salesdetails.first_publication_date AS sales_first_publication_date,\n   salesdetails.first_available_handover_date AS sales_handover_date, \n   salesdetails.sold_date AS sales_sold_date,  \n\n   salesdetails.description AS sales_description,\n   salesdetails.external_description AS sales_external_description,\n\n   propdetails.gc AS common_expenses,\n\n   homecheckerdetails.inhabited_property AS is_inhabited, \n   homecheckerdetails.inhabited_property_description, \n\n   propdetails.tipo_moneda AS rental_currency,\n   propdetails.valor AS rental_price ,\n   CASE \n      WHEN propdetails.tipo_moneda = 'CLF' THEN '$\u27f2'\n      ELSE 'Pesos'\n   END AS rental_local_currency, \n   CASE \n      WHEN propdetails.tipo_moneda = 'U.F.' THEN propdetails.valor*uf_to_cl.uf_to_cl\n      ELSE propdetails.valor \n   END AS rental_local_price,\n\n   promotional_price AS rental_promotional_price,\n   promotion_months AS rental_promotion_months,\n\n   rev_prices.rental_suggested_currency,\n   rev_prices.rental_suggested_price,\n\n   propdetails.tipo_moneda_venta AS sales_currency,\n   propdetails.valor_venta AS sales_price,\n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  'U.F. \u27f2'\n      ELSE propdetails.tipo_moneda_venta\n   END AS sales_local_currency, \n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  propdetails.valor_venta::FLOAT/uf_to_cl.uf_to_cl::FLOAT\n      ELSE propdetails.valor_venta\n   END AS sales_local_price, \n\n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  'U.F. \u27f2'\n      ELSE propdetails.tipo_moneda_venta\n   END AS sales_currency_local, \n   rev_prices.sale_suggested_currency AS sales_currency_code, \n   CASE \n      WHEN rev_prices.sale_suggested_currency = 'CLF' THEN 'U.F.'\n      ELSE 'Pesos'\n   END AS sales_suggested_currency,\n   rev_prices.sale_suggested_price AS sales_suggested_price,\n\n   'https://admin.houm.com/admin/properties/' || prop.uid::text admin_url ,\n   'https://houm.com/' || \n      CASE prop.country\n         WHEN 'Chile' THEN 'cl'\n         WHEN 'Colombia' THEN 'co'\n         WHEN 'Mexico' THEN 'mx'\n         ELSE 'cl' \n      END \n      || '/propiedades/' || \n      prop.uid AS marketplace_url, \n   CASE \n      WHEN prop.video360_url LIKE 'https://my.matterport.com/%' THEN TRUE\n      ELSE FALSE\n   END AS has_video360,\n   video360_url, \n   CASE \n      WHEN prop.video_url LIKE '%youtube.com/%' THEN TRUE \n      ELSE FALSE\n   END AS has_video,\n   video_url \nFROM uf_to_cl , \n   {{ ref('stg_properties') }} AS prop \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n   ON prop_mz.property_id = prop.id \nLEFT JOIN {{ ref('stg_propertydetails') }} AS propdetails \n   ON propdetails.property_id = prop.id \nLEFT JOIN {{ ref('stg_property_salesdetails') }} AS salesdetails \n   ON salesdetails.property_id = prop.id\nLEFT JOIN {{ ref('stg_homecheckerdetails') }} AS homecheckerdetails \n   ON homecheckerdetails.property_id = prop.id \nLEFT JOIN landlords \n   ON landlords.id = prop.user_id\nLEFT JOIN {{ ref('proc_properties_rev_suggested_prices') }} AS rev_prices \n   ON rev_prices.property_id = prop.id \nLEFT JOIN published_properties\n   ON published_properties.property_id = prop.id \nLEFT JOIN executives \n   ON prop.houm_owner_id = executives.id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_business.sql", "original_file_path": "models/processing/supply/proc_properties_business.sql", "name": "proc_properties_business", "alias": "proc_properties_business", "checksum": {"name": "sha256", "checksum": "1b68d68c95bc7cff4129de246a76795771f14c958449c7dd749a88db63135bed"}, "tags": ["dw", "processing", "supply"], "refs": [["dim_uf_cl"], ["properties_published"], ["stg_users"], ["stg_users"], ["stg_properties"], ["proc_properties_mz"], ["stg_propertydetails"], ["stg_property_salesdetails"], ["stg_homecheckerdetails"], ["proc_properties_rev_suggested_prices"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_business.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.458167, "compiled_code": "WITH uf_to_cl AS (\n   SELECT \n      last_value_uf_to_cl AS uf_to_cl\n   FROM \"houmdw_prod\".\"dbt_dims\".\"dim_uf_cl\" AS dim_uf_cl\n   LIMIT 1\n)\n\n, published_properties AS (\n   SELECT \n      property_id, \n      is_rental_published, \n      is_sales_published\n   FROM \"houmdw_prod\".\"dbt_marts\".\"properties_published\" \n   WHERE TRUE\n)\n\n, landlords AS (\n   SELECT \n      users.id , \n      users.name || ' ' || users.last_name AS name, \n      COALESCE( users.document,  users.rut) AS document, \n      users.phone AS phone, \n      users.referral_id,\t\n      CASE\n         WHEN users.role::text in ('property_broker','real_estate_developer') or users.id = 60441 THEN 'B2B'\n         -- EL ID 60441 es de un ejecutivo el cual no siguio de manera correcta la forma de carga \n         -- de las propiedades, dejando todos sus negocios B2B a el como propietario. \n         -- No fue posible recuperar las corredoras originales duenas de dichas prop.\n         ELSE 'B2C'\n      END AS supply_source,\n      CASE\n         WHEN users.role = 'property_broker' or users.id = 60441 THEN 'Brokers'\n         WHEN users.role = 'real_estate_developer' then 'New Properties'\n         WHEN length( users.referral_id) = 5 then 'Partners'\n         ELSE 'Landlord'\n      END AS supply_relation\n   FROM \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS users \n)\n\n, executives AS (\nSELECT \n   executive.id , \n   COALESCE(pipedri_seller.name, executive.name || executive.last_name) AS name,\n   COALESCE(pipedri_seller.email, executive.email) AS email,\n   COALESCE(pipedri_seller.role, 'Sin Role' ) AS pipedrive_role\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS executive \nLEFT JOIN raw_stage.pipedrive_seller AS pipedri_seller\n   ON executive.id = pipedri_seller.user_id\n)\n\nSELECT\n   prop.id AS property_id,\n   prop.uid, \n   CASE\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = TRUE THEN 'Rental & Sale'\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = FALSE THEN 'Rental'\n\t\tWHEN prop.for_rental = TRUE AND prop.for_sale = FALSE THEN 'Rental'\n\t\tWHEN prop.for_rental = FALSE AND prop.for_sale = TRUE THEN 'Sale'\n\t\tELSE 'Rental & Sale'\n\tEND AS business,\n\n   landlords.supply_source,\n   landlords.supply_relation,\n   landlords.name AS landlord_name, \n   landlords.document AS landlord_document, \n   landlords.phone AS landlord_phone, \n   landlords.referral_id,\n\n   prop.houm_owner_id AS executive_user_id,    \n   executives.name AS executive_name,\n   executives.email AS executive_email,\n   executives.pipedrive_role AS executive_pipedrive_role,\n\n   prop.is_deleted,\n   prop.for_rental AS is_for_rental,\n   prop.for_sale AS is_for_sales,\n\n   prop.keys_info,\n   homecheckerdetails.has_houm_box, \n   homecheckerdetails.houm_box_number,\n   homecheckerdetails.houm_box_password,\n   homecheckerdetails.third_party_coordination AS has_third_party_coordination,\n   homecheckerdetails.third_party_coordination_description,\n   homecheckerdetails.third_party_coordination_person,\n   homecheckerdetails.third_party_coordination_full_name,\n   homecheckerdetails.third_party_coordination_email,\n   homecheckerdetails.third_party_coordination_phone,\n   homecheckerdetails.third_party_coordination_verified_phone AS is_third_party_coordination_verified_phone,\n\n   propdetails.status AS rental_status,\n   salesdetails.status AS sales_status, \n   COALESCE(published_properties.is_rental_published,FALSE) AS is_rental_published,\n   COALESCE(published_properties.is_sales_published,FALSE) AS is_sales_published,\n\n   propdetails.mascotas AS is_pet_friendly,\n   propdetails.has_houm_cleaning,\n   prop.stratus, \n\n   prop.first_publication_date AS rental_first_publication_date,\n   COALESCE(prop.last_publication_date ,  prop.first_publication_date ) AS rental_last_publication_date,\n   propdetails.first_available_handover_date AS rental_handover_date,\n    \n   COALESCE(salesdetails.last_publication_date, salesdetails.first_publication_date ) AS sales_last_publication_date,\n   salesdetails.first_publication_date AS sales_first_publication_date,\n   salesdetails.first_available_handover_date AS sales_handover_date, \n   salesdetails.sold_date AS sales_sold_date,  \n\n   salesdetails.description AS sales_description,\n   salesdetails.external_description AS sales_external_description,\n\n   propdetails.gc AS common_expenses,\n\n   homecheckerdetails.inhabited_property AS is_inhabited, \n   homecheckerdetails.inhabited_property_description, \n\n   propdetails.tipo_moneda AS rental_currency,\n   propdetails.valor AS rental_price ,\n   CASE \n      WHEN propdetails.tipo_moneda = 'CLF' THEN '$\u27f2'\n      ELSE 'Pesos'\n   END AS rental_local_currency, \n   CASE \n      WHEN propdetails.tipo_moneda = 'U.F.' THEN propdetails.valor*uf_to_cl.uf_to_cl\n      ELSE propdetails.valor \n   END AS rental_local_price,\n\n   promotional_price AS rental_promotional_price,\n   promotion_months AS rental_promotion_months,\n\n   rev_prices.rental_suggested_currency,\n   rev_prices.rental_suggested_price,\n\n   propdetails.tipo_moneda_venta AS sales_currency,\n   propdetails.valor_venta AS sales_price,\n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  'U.F. \u27f2'\n      ELSE propdetails.tipo_moneda_venta\n   END AS sales_local_currency, \n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  propdetails.valor_venta::FLOAT/uf_to_cl.uf_to_cl::FLOAT\n      ELSE propdetails.valor_venta\n   END AS sales_local_price, \n\n   CASE \n      WHEN propdetails.tipo_moneda_venta != 'U.F.' AND prop.country = 'Chile' THEN  'U.F. \u27f2'\n      ELSE propdetails.tipo_moneda_venta\n   END AS sales_currency_local, \n   rev_prices.sale_suggested_currency AS sales_currency_code, \n   CASE \n      WHEN rev_prices.sale_suggested_currency = 'CLF' THEN 'U.F.'\n      ELSE 'Pesos'\n   END AS sales_suggested_currency,\n   rev_prices.sale_suggested_price AS sales_suggested_price,\n\n   'https://admin.houm.com/admin/properties/' || prop.uid::text admin_url ,\n   'https://houm.com/' || \n      CASE prop.country\n         WHEN 'Chile' THEN 'cl'\n         WHEN 'Colombia' THEN 'co'\n         WHEN 'Mexico' THEN 'mx'\n         ELSE 'cl' \n      END \n      || '/propiedades/' || \n      prop.uid AS marketplace_url, \n   CASE \n      WHEN prop.video360_url LIKE 'https://my.matterport.com/%' THEN TRUE\n      ELSE FALSE\n   END AS has_video360,\n   video360_url, \n   CASE \n      WHEN prop.video_url LIKE '%youtube.com/%' THEN TRUE \n      ELSE FALSE\n   END AS has_video,\n   video_url \nFROM uf_to_cl , \n   \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" AS prop \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n   ON prop_mz.property_id = prop.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" AS propdetails \n   ON propdetails.property_id = prop.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\" AS salesdetails \n   ON salesdetails.property_id = prop.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\" AS homecheckerdetails \n   ON homecheckerdetails.property_id = prop.id \nLEFT JOIN landlords \n   ON landlords.id = prop.user_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_rev_suggested_prices\" AS rev_prices \n   ON rev_prices.property_id = prop.id \nLEFT JOIN published_properties\n   ON published_properties.property_id = prop.id \nLEFT JOIN executives \n   ON prop.houm_owner_id = executives.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_business\""}, "model.houm.proc_external_portal_historical_publications": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_external_portal_historical_publications"], "unique_id": "model.houm.proc_external_portal_historical_publications", "raw_code": "{{ config(materialized='table') }}                                          \n\nWITH hist_status_publications AS (\nSELECT \n    pub.audit_event_id,\n    pub.audit_start_dt,\n    pub.audit_end_dt,\n    CASE\n        WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n        ELSE audit_end_dt \n    END AS audit_end_dt_aux,\n    pub.audit_action,\n    pub.id AS publication_id,\n    pub.created_at,\n    pub.updated_at,\n    pub.property_id,\n    pub.portal_plan_id,\n    CASE \n        external_portal_integrations_portalplan.business_type\n        WHEN 'sale' THEN 'sales'\n        WHEN 'rental'THEN 'rentals' \n    END AS publication_business_type,\n    external_portal_integrations_portalplan.vigency AS portal_plan_vigency,\n    external_portal_integrations_portalplan.portal_id,\n    external_portal_integrations_portalplan.publication_type_id,\n    external_portal_integrations_publicationtype.publication_name,\n    external_portal_integrations_publicationtype.publication_pretty_name,\n    external_portal_integrations_publicationtype.type_priority,\n    external_portal_integrations_externalportals.name AS portal_name,\n    external_portal_integrations_externalportals.short_name AS portal_short_name,\n    external_portal_integrations_externalportals.country_id,\n    external_portal_integrations_country.full_name AS country_name,\n    external_portal_integrations_country.iso_name AS country_iso_name,\n    pub.failure_reasons,\n    pub.status_id,\n    external_portal_integrations_loadstatus.name  AS load_status,\n    CASE\n        WHEN load_status IN ('published', 'pending_update', 'integration_file_sent') THEN TRUE\n        ELSE FALSE \n    END AS is_published,\n    CASE\n        WHEN is_published IS TRUE THEN 'True'\n        ELSE 'False' \n    END AS is_published_aux,\n    external_portal_integrations_loadstatus.uses_slot,\n    CONCAT(is_published_aux,external_portal_integrations_publicationtype.publication_pretty_name) AS concat,\n    LAG(is_published_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt) AS previous_status,\n    LAG(external_portal_integrations_publicationtype.publication_pretty_name) OVER (PARTITION BY publication_id ORDER BY audit_start_dt) AS previous_pub_type,\n    CONCAT(previous_status::TEXT, previous_pub_type) AS previous_concat,\n    CASE\n        WHEN (previous_concat != concat OR previous_status IS NULL) THEN 1\n        ELSE 0 \n    END  AS publication_change_aux,\n    CASE\n        WHEN (previous_pub_type != publication_pretty_name OR previous_pub_type IS NULL) THEN 1\n        ELSE 0 \n    END AS publication_type_change_aux\nFROM {{ ref('stg_external_portal_integrations_publication_scd') }} AS pub\nLEFT JOIN {{ ref('stg_external_portal_integrations_loadstatus') }} AS external_portal_integrations_loadstatus  \n    ON external_portal_integrations_loadstatus.id = pub.status_id\nLEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }} AS external_portal_integrations_portalplan           \n    ON external_portal_integrations_portalplan.id = pub.portal_plan_id\nLEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }} AS external_portal_integrations_externalportals      \n    ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }} AS external_portal_integrations_publicationtype      \n    ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_country') }} AS external_portal_integrations_country              \n    ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\nWHERE TRUE\n    AND audit_action != 'D'\n    AND uses_slot IS TRUE\n)\n\n, periodos_status_aux AS (\nSELECT \n    hist_status_publications.publication_id,\n    hist_status_publications.country_name,\n    hist_status_publications.portal_name,\n    hist_status_publications.portal_plan_id,\n    hist_status_publications.publication_business_type,\n    hist_status_publications.property_id AS property_id_publication,\n    hist_status_publications.audit_start_dt,\n    hist_status_publications.audit_end_dt_aux,\n    hist_status_publications.publication_pretty_name AS publication_type,\n    hist_status_publications.is_published,\n    hist_status_publications.uses_slot,\n    SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_change_logs,\n    SUM(publication_type_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_type_change_logs\nFROM hist_status_publications\n)\n\n, periodos_status AS (\nSELECT \n    publication_id,\n    country_name,\n    portal_name,\n    portal_plan_id,\n    publication_business_type,\n    property_id_publication,\n    publication_change_logs,\n    publication_type_change_logs,\n    publication_type,\n    is_published,\n    uses_slot,\n    MIN(audit_start_dt) AS valid_from_aux,\n    MAX(audit_end_dt_aux) AS valid_to_aux,\n    (valid_to_aux - valid_from_aux) AS time_diff\nFROM periodos_status_aux\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n)\n\nSELECT \n    publication_id,\n    country_name,\n    portal_name,\n    portal_plan_id,\n    publication_business_type,\n    property_id_publication,\n    publication_type,\n    publication_type_change_logs,\n    MIN(valid_from_aux) AS valid_from,\n    MAX(valid_to_aux) AS valid_to,\n    EXTRACT(EPOCH FROM SUM(time_diff))/3600 AS total_time,\n    MIN(CASE WHEN is_published IS TRUE THEN valid_from_aux END) AS published_from,\n    MAX(CASE WHEN is_published IS TRUE THEN valid_to_aux END) AS published_to,\n    EXTRACT(EPOCH FROM SUM(CASE WHEN is_published IS TRUE THEN time_diff END))/3600 AS total_published_time,\n    total_published_time::DOUBLE PRECISION / total_time::DOUBLE PRECISION AS Perc_of_time_published\nFROM periodos_status\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8\nORDER BY publication_id,publication_type_change_logs ASC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_external_portal_historical_publications.sql", "original_file_path": "models/processing/supply/proc_external_portal_historical_publications.sql", "name": "proc_external_portal_historical_publications", "alias": "proc_external_portal_historical_publications", "checksum": {"name": "sha256", "checksum": "e2318f0ba425947027c18890e84e9bf68b7459c0e13d8d96fb89be23f837ad05"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_external_portal_integrations_publication_scd"], ["stg_external_portal_integrations_loadstatus"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_country"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_external_portal_historical_publications.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.460052, "compiled_code": "                                          \n\nWITH hist_status_publications AS (\nSELECT \n    pub.audit_event_id,\n    pub.audit_start_dt,\n    pub.audit_end_dt,\n    CASE\n        WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n        ELSE audit_end_dt \n    END AS audit_end_dt_aux,\n    pub.audit_action,\n    pub.id AS publication_id,\n    pub.created_at,\n    pub.updated_at,\n    pub.property_id,\n    pub.portal_plan_id,\n    CASE \n        external_portal_integrations_portalplan.business_type\n        WHEN 'sale' THEN 'sales'\n        WHEN 'rental'THEN 'rentals' \n    END AS publication_business_type,\n    external_portal_integrations_portalplan.vigency AS portal_plan_vigency,\n    external_portal_integrations_portalplan.portal_id,\n    external_portal_integrations_portalplan.publication_type_id,\n    external_portal_integrations_publicationtype.publication_name,\n    external_portal_integrations_publicationtype.publication_pretty_name,\n    external_portal_integrations_publicationtype.type_priority,\n    external_portal_integrations_externalportals.name AS portal_name,\n    external_portal_integrations_externalportals.short_name AS portal_short_name,\n    external_portal_integrations_externalportals.country_id,\n    external_portal_integrations_country.full_name AS country_name,\n    external_portal_integrations_country.iso_name AS country_iso_name,\n    pub.failure_reasons,\n    pub.status_id,\n    external_portal_integrations_loadstatus.name  AS load_status,\n    CASE\n        WHEN load_status IN ('published', 'pending_update', 'integration_file_sent') THEN TRUE\n        ELSE FALSE \n    END AS is_published,\n    CASE\n        WHEN is_published IS TRUE THEN 'True'\n        ELSE 'False' \n    END AS is_published_aux,\n    external_portal_integrations_loadstatus.uses_slot,\n    CONCAT(is_published_aux,external_portal_integrations_publicationtype.publication_pretty_name) AS concat,\n    LAG(is_published_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt) AS previous_status,\n    LAG(external_portal_integrations_publicationtype.publication_pretty_name) OVER (PARTITION BY publication_id ORDER BY audit_start_dt) AS previous_pub_type,\n    CONCAT(previous_status::TEXT, previous_pub_type) AS previous_concat,\n    CASE\n        WHEN (previous_concat != concat OR previous_status IS NULL) THEN 1\n        ELSE 0 \n    END  AS publication_change_aux,\n    CASE\n        WHEN (previous_pub_type != publication_pretty_name OR previous_pub_type IS NULL) THEN 1\n        ELSE 0 \n    END AS publication_type_change_aux\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\" AS pub\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\" AS external_portal_integrations_loadstatus  \n    ON external_portal_integrations_loadstatus.id = pub.status_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\" AS external_portal_integrations_portalplan           \n    ON external_portal_integrations_portalplan.id = pub.portal_plan_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\" AS external_portal_integrations_externalportals      \n    ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\" AS external_portal_integrations_publicationtype      \n    ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\" AS external_portal_integrations_country              \n    ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\nWHERE TRUE\n    AND audit_action != 'D'\n    AND uses_slot IS TRUE\n)\n\n, periodos_status_aux AS (\nSELECT \n    hist_status_publications.publication_id,\n    hist_status_publications.country_name,\n    hist_status_publications.portal_name,\n    hist_status_publications.portal_plan_id,\n    hist_status_publications.publication_business_type,\n    hist_status_publications.property_id AS property_id_publication,\n    hist_status_publications.audit_start_dt,\n    hist_status_publications.audit_end_dt_aux,\n    hist_status_publications.publication_pretty_name AS publication_type,\n    hist_status_publications.is_published,\n    hist_status_publications.uses_slot,\n    SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_change_logs,\n    SUM(publication_type_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_type_change_logs\nFROM hist_status_publications\n)\n\n, periodos_status AS (\nSELECT \n    publication_id,\n    country_name,\n    portal_name,\n    portal_plan_id,\n    publication_business_type,\n    property_id_publication,\n    publication_change_logs,\n    publication_type_change_logs,\n    publication_type,\n    is_published,\n    uses_slot,\n    MIN(audit_start_dt) AS valid_from_aux,\n    MAX(audit_end_dt_aux) AS valid_to_aux,\n    (valid_to_aux - valid_from_aux) AS time_diff\nFROM periodos_status_aux\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n)\n\nSELECT \n    publication_id,\n    country_name,\n    portal_name,\n    portal_plan_id,\n    publication_business_type,\n    property_id_publication,\n    publication_type,\n    publication_type_change_logs,\n    MIN(valid_from_aux) AS valid_from,\n    MAX(valid_to_aux) AS valid_to,\n    EXTRACT(EPOCH FROM SUM(time_diff))/3600 AS total_time,\n    MIN(CASE WHEN is_published IS TRUE THEN valid_from_aux END) AS published_from,\n    MAX(CASE WHEN is_published IS TRUE THEN valid_to_aux END) AS published_to,\n    EXTRACT(EPOCH FROM SUM(CASE WHEN is_published IS TRUE THEN time_diff END))/3600 AS total_published_time,\n    total_published_time::DOUBLE PRECISION / total_time::DOUBLE PRECISION AS Perc_of_time_published\nFROM periodos_status\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8\nORDER BY publication_id,publication_type_change_logs ASC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_portal_historical_publications\""}, "model.houm.proc_properties_location": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_properties_location"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_location"], "unique_id": "model.houm.proc_properties_location", "raw_code": "SELECT \r\n\tid,\r\n\tcode,\r\n\tneighborhood,\r\n\tcommune,\r\n\tregion,\r\n\tlongitude,\r\n\tlatitude,\r\n\tcoordinates,\r\n\toperative,\r\n\tcountry,\r\n\tcountry_code\r\nFROM {{ ref('stg_properties_location') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_location.sql", "original_file_path": "models/processing/supply/proc_properties_location.sql", "name": "proc_properties_location", "alias": "proc_properties_location", "checksum": {"name": "sha256", "checksum": "0926608622703675a0a5d505b8e5f9de21c79893b59b7fc33e42b95331635523"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties_location"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1675970038.4618728, "compiled_code": "SELECT \n\tid,\n\tcode,\n\tneighborhood,\n\tcommune,\n\tregion,\n\tlongitude,\n\tlatitude,\n\tcoordinates,\n\toperative,\n\tcountry,\n\tcountry_code\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\""}, "model.houm.proc_external_properties_rent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_properties_rent_chile", "model.houm.stg_economic_indicator_uf", "model.houm.stg_external_properties_rent_colombia", "model.houm.stg_external_properties_rent_mexico"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "recommendation", "external_properties"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "external_properties", "proc_external_properties_rent"], "unique_id": "model.houm.proc_external_properties_rent", "raw_code": "WITH rent_chile_normalized AS (\n    SELECT \n    ext.is_apartment\n    ,'chile' AS country\n    ,ext.description\n    ,ext.bedrooms\n    ,ext.bathrooms\n    ,ext.parking_spots\n    ,ext.total_surface\n    ,ext.built_surface\n    ,ext.latitude\n    ,ext.longitude\n    ,ext.commune AS level_2_area\n    ,ext.region AS level_1_area\n    ,ext.origin AS portal\n    ,ext.publisher\n    ,ext.link\n    ,ext.price_uf\n    ,ext.price_uf*uf.valor AS price_uf_in_clp\n    ,ext.local_price\n    , 0 AS administration_price\n    ,'CLP' AS currency\n    ,ext.scraped_at\n    ,ext.publication_date\n    ,ext.resolution_7\n    ,ext.resolution_8\n    ,ext.resolution_7_num\n    ,ext.resolution_8_num\n    FROM {{ ref('stg_external_properties_rent_chile') }} ext\n    LEFT JOIN {{ ref('stg_economic_indicator_uf') }} uf\n    ON ext.scraped_at = uf.fecha\n)\nSELECT\nis_apartment\n,country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,COALESCE(local_price, price_uf_in_clp) AS price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM rent_chile_normalized\nUNION ALL\nSELECT \nis_apartment\n,'colombia' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n, '' AS level_1_area\n,COALESCE(neighborhood,'') AS level_2_area\n,portal\n,publisher\n,link\n,local_price AS price\n,administration_price\n,'COP' AS currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('stg_external_properties_rent_colombia') }}\nUNION ALL\nSELECT \nis_apartment\n,'mexico' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,municipality AS level_1_area\n,area AS level_2_area\n,portal\n,publisher\n,link\n,price\n,0 AS administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('stg_external_properties_rent_mexico') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/external_properties/proc_external_properties_rent.sql", "original_file_path": "models/processing/external_properties/proc_external_properties_rent.sql", "name": "proc_external_properties_rent", "alias": "proc_external_properties_rent", "checksum": {"name": "sha256", "checksum": "7a8713f2f048712439ee5ad55ad0141e8fe534f1e2e2226ce5c71bd78b3750ef"}, "tags": ["dw", "processing", "recommendation", "external_properties"], "refs": [["stg_external_properties_rent_chile"], ["stg_economic_indicator_uf"], ["stg_external_properties_rent_colombia"], ["stg_external_properties_rent_mexico"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/external_properties/proc_external_properties_rent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "recommendation", "external_properties"]}, "created_at": 1675970038.463587, "compiled_code": "WITH rent_chile_normalized AS (\n    SELECT \n    ext.is_apartment\n    ,'chile' AS country\n    ,ext.description\n    ,ext.bedrooms\n    ,ext.bathrooms\n    ,ext.parking_spots\n    ,ext.total_surface\n    ,ext.built_surface\n    ,ext.latitude\n    ,ext.longitude\n    ,ext.commune AS level_2_area\n    ,ext.region AS level_1_area\n    ,ext.origin AS portal\n    ,ext.publisher\n    ,ext.link\n    ,ext.price_uf\n    ,ext.price_uf*uf.valor AS price_uf_in_clp\n    ,ext.local_price\n    , 0 AS administration_price\n    ,'CLP' AS currency\n    ,ext.scraped_at\n    ,ext.publication_date\n    ,ext.resolution_7\n    ,ext.resolution_8\n    ,ext.resolution_7_num\n    ,ext.resolution_8_num\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_chile\" ext\n    LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_economic_indicator_uf\" uf\n    ON ext.scraped_at = uf.fecha\n)\nSELECT\nis_apartment\n,country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,COALESCE(local_price, price_uf_in_clp) AS price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM rent_chile_normalized\nUNION ALL\nSELECT \nis_apartment\n,'colombia' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n, '' AS level_1_area\n,COALESCE(neighborhood,'') AS level_2_area\n,portal\n,publisher\n,link\n,local_price AS price\n,administration_price\n,'COP' AS currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_colombia\"\nUNION ALL\nSELECT \nis_apartment\n,'mexico' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,municipality AS level_1_area\n,area AS level_2_area\n,portal\n,publisher\n,link\n,price\n,0 AS administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_rent_mexico\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_properties_rent\""}, "model.houm.proc_external_properties_sales": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_properties_sales_chile", "model.houm.stg_economic_indicator_uf", "model.houm.stg_external_properties_sales_colombia", "model.houm.stg_external_properties_sales_mexico"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "recommendation", "external_properties"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "external_properties", "proc_external_properties_sales"], "unique_id": "model.houm.proc_external_properties_sales", "raw_code": "WITH sales_chile_normalized AS (\n    SELECT \n    ext.is_apartment\n    ,'chile' AS country\n    ,ext.description\n    ,ext.bedrooms\n    ,ext.bathrooms\n    ,ext.parking_spots\n    ,ext.total_surface\n    ,ext.built_surface\n    ,ext.latitude\n    ,ext.longitude\n    ,ext.commune AS level_2_area\n    ,ext.region AS level_1_area\n    ,ext.origin AS portal\n    ,ext.publisher\n    ,ext.link\n    ,ext.price_uf\n    ,ext.local_price/uf.valor AS price_clp_in_uf\n    ,ext.local_price\n    , 0 AS administration_price\n    ,'CLF' AS currency\n    ,ext.scraped_at\n    ,ext.publication_date\n    ,ext.resolution_7\n    ,ext.resolution_8\n    ,ext.resolution_7_num\n    ,ext.resolution_8_num\n    FROM {{ ref('stg_external_properties_sales_chile') }} ext\n    LEFT JOIN {{ ref('stg_economic_indicator_uf') }} uf\n    ON ext.scraped_at = uf.fecha\n)\nSELECT\nis_apartment\n,country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,COALESCE(price_uf, price_clp_in_uf) AS price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM sales_chile_normalized\nUNION ALL\nSELECT \nis_apartment\n,'colombia' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n, '' AS level_1_area\n,neighborhood AS level_2_area\n,portal\n,publisher\n,link\n,local_price AS price\n,administration_price\n,'COP' AS currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('stg_external_properties_sales_colombia') }}\nUNION ALL\nSELECT \nis_apartment\n,'mexico' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,municipality AS level_1_area\n,area AS level_2_area\n,portal\n,publisher\n,link\n,price\n,0 AS administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM {{ ref('stg_external_properties_sales_mexico') }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/external_properties/proc_external_properties_sales.sql", "original_file_path": "models/processing/external_properties/proc_external_properties_sales.sql", "name": "proc_external_properties_sales", "alias": "proc_external_properties_sales", "checksum": {"name": "sha256", "checksum": "99283ca345da26354af673433a5f52c6ad230891a9af9f36cfd9d5ba895a5c2c"}, "tags": ["dw", "processing", "recommendation", "external_properties"], "refs": [["stg_external_properties_sales_chile"], ["stg_economic_indicator_uf"], ["stg_external_properties_sales_colombia"], ["stg_external_properties_sales_mexico"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/external_properties/proc_external_properties_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "recommendation", "external_properties"]}, "created_at": 1675970038.46529, "compiled_code": "WITH sales_chile_normalized AS (\n    SELECT \n    ext.is_apartment\n    ,'chile' AS country\n    ,ext.description\n    ,ext.bedrooms\n    ,ext.bathrooms\n    ,ext.parking_spots\n    ,ext.total_surface\n    ,ext.built_surface\n    ,ext.latitude\n    ,ext.longitude\n    ,ext.commune AS level_2_area\n    ,ext.region AS level_1_area\n    ,ext.origin AS portal\n    ,ext.publisher\n    ,ext.link\n    ,ext.price_uf\n    ,ext.local_price/uf.valor AS price_clp_in_uf\n    ,ext.local_price\n    , 0 AS administration_price\n    ,'CLF' AS currency\n    ,ext.scraped_at\n    ,ext.publication_date\n    ,ext.resolution_7\n    ,ext.resolution_8\n    ,ext.resolution_7_num\n    ,ext.resolution_8_num\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_chile\" ext\n    LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_economic_indicator_uf\" uf\n    ON ext.scraped_at = uf.fecha\n)\nSELECT\nis_apartment\n,country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,level_2_area\n,level_1_area\n,portal\n,publisher\n,link\n,COALESCE(price_uf, price_clp_in_uf) AS price\n,administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM sales_chile_normalized\nUNION ALL\nSELECT \nis_apartment\n,'colombia' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n, '' AS level_1_area\n,neighborhood AS level_2_area\n,portal\n,publisher\n,link\n,local_price AS price\n,administration_price\n,'COP' AS currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_colombia\"\nUNION ALL\nSELECT \nis_apartment\n,'mexico' AS country\n,description\n,bedrooms\n,bathrooms\n,parking_spots\n,total_surface\n,built_surface\n,latitude\n,longitude\n,municipality AS level_1_area\n,area AS level_2_area\n,portal\n,publisher\n,link\n,price\n,0 AS administration_price\n,currency\n,scraped_at\n,publication_date\n,resolution_7\n,resolution_8\n,resolution_7_num\n,resolution_8_num\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_properties_sales_mexico\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_properties_sales\""}, "model.houm.proc_rev_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "proc_rev_properties"], "unique_id": "model.houm.proc_rev_properties", "raw_code": "SELECT\n        properties.id,\n        properties.for_rental,\n        properties.for_sale,\n        properties.vitruvio_suggest AS rental_recommended_price,\n        properties.vitruvio_min AS rental_min_recommended_price,\n        properties.vitruvio_max AS rental_max_recommended_price,\n        properties.first_publication_date AS rental_first_publication_date,\n        properties.last_publication_date AS rental_last_publication_date,\n        details.status AS rental_status,\n        details.valor AS rental_price,\n        details.currency_code AS rental_currency_code,\n        sales_details.status AS sale_status,\n        sales_details.price AS sale_price,\n        sales_details.recommended_price AS sale_recommended_price,\n        sales_details.recommended_price_min AS sale_min_recommended_price,\n        sales_details.recommended_price_max AS sale_max_recommended_price,\n        sales_details.currency_code AS sale_currency_code,\n        sales_details.first_publication_date AS sale_first_publication_date,\n        sales_details.last_publication_date AS sale_last_publication_date,\n        macrozone_dim.country,\n        macrozone_dim.city,\n        macrozone_dim.city_marketplace \n    FROM\n        {{ ref('proc_properties') }} properties \n    LEFT JOIN\n        {{ ref('proc_propertydetails') }} details \n            on properties.id = details.property_id  \n    LEFT JOIN\n        {{ ref('proc_property_salesdetails') }} sales_details \n            on properties.id = sales_details.property_id \n    LEFT JOIN\n        {{ ref('proc_properties_location') }}  location \n            on properties.neighborhood_id  = location.id  \n    LEFT JOIN\n        {{ ref('proc_properties_mz') }}  macrozone \n            on macrozone.property_id  = properties.id  \n    LEFT JOIN\n        {{ ref('proc_macrozone') }} macrozone_dim \n            on macrozone.geo_id = macrozone_dim.geo_id \n    WHERE properties.is_deleted = False", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/proc_rev_properties.sql", "original_file_path": "models/processing/rev/proc_rev_properties.sql", "name": "proc_rev_properties", "alias": "proc_rev_properties", "checksum": {"name": "sha256", "checksum": "55586c112765884a49f2d9b7224a5281eee600c0050cc8a0a31fd647a72655e3"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"], ["proc_properties_location"], ["proc_properties_mz"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/proc_rev_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.467027, "compiled_code": "SELECT\n        properties.id,\n        properties.for_rental,\n        properties.for_sale,\n        properties.vitruvio_suggest AS rental_recommended_price,\n        properties.vitruvio_min AS rental_min_recommended_price,\n        properties.vitruvio_max AS rental_max_recommended_price,\n        properties.first_publication_date AS rental_first_publication_date,\n        properties.last_publication_date AS rental_last_publication_date,\n        details.status AS rental_status,\n        details.valor AS rental_price,\n        details.currency_code AS rental_currency_code,\n        sales_details.status AS sale_status,\n        sales_details.price AS sale_price,\n        sales_details.recommended_price AS sale_recommended_price,\n        sales_details.recommended_price_min AS sale_min_recommended_price,\n        sales_details.recommended_price_max AS sale_max_recommended_price,\n        sales_details.currency_code AS sale_currency_code,\n        sales_details.first_publication_date AS sale_first_publication_date,\n        sales_details.last_publication_date AS sale_last_publication_date,\n        macrozone_dim.country,\n        macrozone_dim.city,\n        macrozone_dim.city_marketplace \n    FROM\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" properties \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" details \n            on properties.id = details.property_id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" sales_details \n            on properties.id = sales_details.property_id \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\"  location \n            on properties.neighborhood_id  = location.id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\"  macrozone \n            on macrozone.property_id  = properties.id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" macrozone_dim \n            on macrozone.geo_id = macrozone_dim.geo_id \n    WHERE properties.is_deleted = False", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\""}, "model.houm.proc_properties_rev_suggested_prices": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_rev_houm_properties", "model.houm.stg_rev_houm_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "proc_properties_rev_suggested_prices"], "unique_id": "model.houm.proc_properties_rev_suggested_prices", "raw_code": "with last_prediction_rev_houm_properties as (\nSELECT a.*\nFROM {{ ref('stg_rev_houm_properties') }} a\nINNER JOIN (\n    SELECT\n        property_id ,  max(prediction_timestamp) prediction_timestamp\n    FROM {{ ref('stg_rev_houm_properties') }} b  group by 1\n) c ON a.property_id = c.property_id and a.prediction_timestamp = c.prediction_timestamp\n)\n\nSELECT property_id\n        ,prediction_timestamp\n        ,country\n        ,sale_original_currency\n        ,sale_original_price\n        ,sale_min_price\n        ,sale_max_price\n        ,sale_suggested_currency\n        ,sale_suggested_price\n        ,rental_original_price\n        ,rental_original_currency\n        ,rental_min_price\n        ,rental_max_price\n        ,rental_suggested_currency\n        ,rental_suggested_price\nFROM last_prediction_rev_houm_properties", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/proc_properties_rev_suggested_prices.sql", "original_file_path": "models/processing/rev/proc_properties_rev_suggested_prices.sql", "name": "proc_properties_rev_suggested_prices", "alias": "proc_properties_rev_suggested_prices", "checksum": {"name": "sha256", "checksum": "155b022b1ac8ded09acc06cb0d303376ed1b25c44d938a84297dbb1b37cc6149"}, "tags": ["dw", "processing", "rev"], "refs": [["stg_rev_houm_properties"], ["stg_rev_houm_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/proc_properties_rev_suggested_prices.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.468811, "compiled_code": "with last_prediction_rev_houm_properties as (\nSELECT a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\" a\nINNER JOIN (\n    SELECT\n        property_id ,  max(prediction_timestamp) prediction_timestamp\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\" b  group by 1\n) c ON a.property_id = c.property_id and a.prediction_timestamp = c.prediction_timestamp\n)\n\nSELECT property_id\n        ,prediction_timestamp\n        ,country\n        ,sale_original_currency\n        ,sale_original_price\n        ,sale_min_price\n        ,sale_max_price\n        ,sale_suggested_currency\n        ,sale_suggested_price\n        ,rental_original_price\n        ,rental_original_currency\n        ,rental_min_price\n        ,rental_max_price\n        ,rental_suggested_currency\n        ,rental_suggested_price\nFROM last_prediction_rev_houm_properties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_rev_suggested_prices\""}, "model.houm.proc_rev_rental_last_months_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_last_months_properties"], "unique_id": "model.houm.proc_rev_rental_last_months_properties", "raw_code": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_rental_properties') }}\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_last_months_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_last_months_properties.sql", "name": "proc_rev_rental_last_months_properties", "alias": "proc_rev_rental_last_months_properties", "checksum": {"name": "sha256", "checksum": "b4abeff5d72655ada5d7a8ad14eac93fa7fb4e82c4acb830a0dd58346c391718"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_last_months_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.470669, "compiled_code": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_properties\"\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\""}, "model.houm.proc_rev_rental_published_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_published_properties"], "unique_id": "model.houm.proc_rev_rental_published_properties", "raw_code": "SELECT *\nFROM {{ ref('proc_rev_rental_last_months_properties') }}\nWHERE status = 'published'\nOR status = 'republished'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_published_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_published_properties.sql", "name": "proc_rev_rental_published_properties", "alias": "proc_rev_rental_published_properties", "checksum": {"name": "sha256", "checksum": "ee9ede781506ed56635a644767a2ffc26df81092c520e5f09fdf9b72544c7387"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.4722712, "compiled_code": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\"\nWHERE status = 'published'\nOR status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_published_properties\""}, "model.houm.proc_rev_rental_rented_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_rented_properties"], "unique_id": "model.houm.proc_rev_rental_rented_properties", "raw_code": "SELECT *\nFROM {{ ref('proc_rev_rental_last_months_properties') }}\nWHERE status = 'rented'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_rented_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_rented_properties.sql", "name": "proc_rev_rental_rented_properties", "alias": "proc_rev_rental_rented_properties", "checksum": {"name": "sha256", "checksum": "54e5bba8762501d2aebcf62aa7fa5ef4863d55afacdb454afde9ab59809fbe52"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_rented_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.473849, "compiled_code": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\"\nWHERE status = 'rented'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_rented_properties\""}, "model.houm.proc_rev_rental_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_properties"], "unique_id": "model.houm.proc_rev_rental_properties", "raw_code": "SELECT  id,\n        rental_price AS price,\n        rental_recommended_price AS recommended_price,\n        rental_min_recommended_price AS min_recommended_price,\n        rental_max_recommended_price AS max_recommended_price,\n        rental_status AS status,\n        rental_currency_code AS currency_code,\n        rental_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_properties') }}\nWHERE for_rental = True", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_properties.sql", "name": "proc_rev_rental_properties", "alias": "proc_rev_rental_properties", "checksum": {"name": "sha256", "checksum": "20e58d79aa74dbf2e1171de89a5db08fc02313db6a2a57388acabd5f24f843e4"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.475441, "compiled_code": "SELECT  id,\n        rental_price AS price,\n        rental_recommended_price AS recommended_price,\n        rental_min_recommended_price AS min_recommended_price,\n        rental_max_recommended_price AS max_recommended_price,\n        rental_status AS status,\n        rental_currency_code AS currency_code,\n        rental_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\"\nWHERE for_rental = True", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_properties\""}, "model.houm.proc_rev_sales_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_properties"], "unique_id": "model.houm.proc_rev_sales_properties", "raw_code": "SELECT  id,\n        sale_price AS price,\n        sale_recommended_price AS recommended_price,\n        sale_min_recommended_price AS min_recommended_price,\n        sale_max_recommended_price AS max_recommended_price,\n        sale_status AS status,\n        sale_currency_code AS currency_code,\n        sale_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_properties') }}\nWHERE for_sale = True", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_properties.sql", "name": "proc_rev_sales_properties", "alias": "proc_rev_sales_properties", "checksum": {"name": "sha256", "checksum": "4b2d312a0866ff936c89710822117f3588229a4423f5ae0be6e20005d04cbcd0"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.477185, "compiled_code": "SELECT  id,\n        sale_price AS price,\n        sale_recommended_price AS recommended_price,\n        sale_min_recommended_price AS min_recommended_price,\n        sale_max_recommended_price AS max_recommended_price,\n        sale_status AS status,\n        sale_currency_code AS currency_code,\n        sale_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\"\nWHERE for_sale = True", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_properties\""}, "model.houm.proc_rev_sales_sold_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_sold_properties"], "unique_id": "model.houm.proc_rev_sales_sold_properties", "raw_code": "SELECT *\nFROM {{ ref('proc_rev_sales_last_months_properties') }}\nWHERE status = 'sold'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_sold_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_sold_properties.sql", "name": "proc_rev_sales_sold_properties", "alias": "proc_rev_sales_sold_properties", "checksum": {"name": "sha256", "checksum": "cdf44705856b7b164e6e2b2aa3383869f695fb94667f90026c86a1a9e6ff7f71"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_sold_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.4787562, "compiled_code": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\"\nWHERE status = 'sold'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_sold_properties\""}, "model.houm.proc_rev_sales_last_months_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_last_months_properties"], "unique_id": "model.houm.proc_rev_sales_last_months_properties", "raw_code": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_sales_properties') }}\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_last_months_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_last_months_properties.sql", "name": "proc_rev_sales_last_months_properties", "alias": "proc_rev_sales_last_months_properties", "checksum": {"name": "sha256", "checksum": "f06618ec6b26f13d0a62f3ebabdbcd4aea36f718fc9f3eaf0f81a03bfa0047c5"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_last_months_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.480318, "compiled_code": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_properties\"\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\""}, "model.houm.proc_rev_sales_published_properties": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_published_properties"], "unique_id": "model.houm.proc_rev_sales_published_properties", "raw_code": "SELECT *\nFROM {{ ref('proc_rev_sales_last_months_properties') }}\nWHERE status = 'published'\nOR status = 'republished'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_published_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_published_properties.sql", "name": "proc_rev_sales_published_properties", "alias": "proc_rev_sales_published_properties", "checksum": {"name": "sha256", "checksum": "aed4390fd004d8d39565cba31cabdb437b56ece6ac90ec45c0aed5d44addb585"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1675970038.48188, "compiled_code": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\"\nWHERE status = 'published'\nOR status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_published_properties\""}, "model.houm.proc_marketing_paid_media": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media_executions", "model.houm.proc_marketing_paid_media_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media"], "unique_id": "model.houm.proc_marketing_paid_media", "raw_code": "{{ config(materialized='table') }}\n\nWITH paid_media_executions AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media_executions') }} \n)\n\n, paid_media_campaign AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media_campaign') }} \n)\n\nSELECT \n    paid_media_executions.platform, \n    paid_media_executions.account_id, \n    paid_media_executions.account_name, \n    paid_media_executions.campaign_id, \n    paid_media_executions.campaign_name, \n    paid_media_campaign.campaign_name AS campaign_current_name,\n    paid_media_campaign.dim_mz_country AS country,  \n    paid_media_campaign.dim_mz_region AS region_houm, \n    paid_media_campaign.dim_mz_city AS city_houm,\n    paid_media_campaign.location_id,\n    paid_media_campaign.loc_country,\n    paid_media_campaign.loc_region,\n    paid_media_campaign.loc_city,\n    paid_media_campaign.geo_id,  \n    paid_media_campaign.business_marketing, \n    paid_media_campaign.funnel_marketing, \n    paid_media_executions.ad_group_id, \n    paid_media_executions.ad_group_name, \n    paid_media_executions.ad_id, \n    paid_media_executions.ad_name, \n    paid_media_executions.executed_at, \n    paid_media_executions.campaign_status, \n    paid_media_campaign.campaign_current_status, \n    paid_media_executions.ad_group_status, \n    paid_media_executions.currency, \n    paid_media_executions.day_cost, \n    paid_media_executions.day_cost_usd,             \n    paid_media_executions.day_clicks, \n    paid_media_executions.day_impressions, \n    paid_media_campaign.platform_last_updated_at, \n    paid_media_campaign.campaign_last_active_day\nFROM paid_media_executions\nLEFT JOIN paid_media_campaign\n    ON paid_media_executions.campaign_id = paid_media_campaign.campaign_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media.sql", "name": "proc_marketing_paid_media", "alias": "proc_marketing_paid_media", "checksum": {"name": "sha256", "checksum": "54782452f4feb6de4f4e225f437821cf5e75283cfa29dedba484a5511ec4d126"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_marketing_paid_media_executions"], ["proc_marketing_paid_media_campaign"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1675970038.4841669, "compiled_code": "\n\nWITH paid_media_executions AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\" \n)\n\n, paid_media_campaign AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" \n)\n\nSELECT \n    paid_media_executions.platform, \n    paid_media_executions.account_id, \n    paid_media_executions.account_name, \n    paid_media_executions.campaign_id, \n    paid_media_executions.campaign_name, \n    paid_media_campaign.campaign_name AS campaign_current_name,\n    paid_media_campaign.dim_mz_country AS country,  \n    paid_media_campaign.dim_mz_region AS region_houm, \n    paid_media_campaign.dim_mz_city AS city_houm,\n    paid_media_campaign.location_id,\n    paid_media_campaign.loc_country,\n    paid_media_campaign.loc_region,\n    paid_media_campaign.loc_city,\n    paid_media_campaign.geo_id,  \n    paid_media_campaign.business_marketing, \n    paid_media_campaign.funnel_marketing, \n    paid_media_executions.ad_group_id, \n    paid_media_executions.ad_group_name, \n    paid_media_executions.ad_id, \n    paid_media_executions.ad_name, \n    paid_media_executions.executed_at, \n    paid_media_executions.campaign_status, \n    paid_media_campaign.campaign_current_status, \n    paid_media_executions.ad_group_status, \n    paid_media_executions.currency, \n    paid_media_executions.day_cost, \n    paid_media_executions.day_cost_usd,             \n    paid_media_executions.day_clicks, \n    paid_media_executions.day_impressions, \n    paid_media_campaign.platform_last_updated_at, \n    paid_media_campaign.campaign_last_active_day\nFROM paid_media_executions\nLEFT JOIN paid_media_campaign\n    ON paid_media_executions.campaign_id = paid_media_campaign.campaign_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\""}, "model.houm.proc_marketing_paid_media_campaign": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media_executions", "model.houm.dim_macrozones", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media_campaign"], "unique_id": "model.houm.proc_marketing_paid_media_campaign", "raw_code": "{{ config(materialized='table') }}\n\nWITH proc_marketing_paid_media_executions AS (\nSELECT  *,\n        LAST_VALUE(campaign_name) \n            OVER (PARTITION BY campaign_id ORDER BY executed_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS campaign_current_name\nFROM {{ ref('proc_marketing_paid_media_executions') }} \n)\n, last_platform_update AS (\nSELECT  platform, \n        MAX(executed_at) AS platform_last_updated_at\nFROM proc_marketing_paid_media_executions\nGROUP BY 1\n)\n, paid_media_campaigns AS (\nSELECT  proc_marketing_paid_media_executions.platform,\n        proc_marketing_paid_media_executions.account_id,\n        proc_marketing_paid_media_executions.account_name,\n        SUBSTRING(account_name, CHARINDEX(' ', account_name)) AS inicia_country,\n        CASE\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'USD' THEN REPLACE(TRIM(INITCAP(LEFT(inicia_country, CHARINDEX('|', inicia_country)-1))), 'Me', 'M\u00e9')\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'CLP' THEN 'Chile'\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'Houm' THEN 'Unknown'\n            ELSE TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1))\n        END AS country,\n        proc_marketing_paid_media_executions.campaign_id,\n        proc_marketing_paid_media_executions.campaign_current_name,\n        SUBSTRING(campaign_current_name, CHARINDEX('|', campaign_current_name)+1) AS inicia_city,\n        CASE WHEN CHARINDEX('|', inicia_city)-1 < 0 THEN 1 ELSE CHARINDEX('|', inicia_city)-1 END AS n_city,\n        CASE \n            WHEN TRIM(LEFT(inicia_city, n_city)) = 'c' THEN 'Unknown'\n            WHEN TRIM(LEFT(inicia_city, n_city)) = 'M\u00e9xico' THEN 'Ciudad de M\u00e9xico'\n            ELSE TRIM(LEFT(inicia_city, n_city))\n        END AS city,\n        proc_marketing_paid_media_executions.currency,\n        CASE\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Sales%' THEN 'Seller'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Rentals%' THEN 'Landlord'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%New Properties%' THEN 'Buyer New Properties'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tenants%' THEN 'Tenant'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS business_marketing,\n        CASE\n            WHEN (proc_marketing_paid_media_executions.campaign_current_name LIKE '%Sales%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%Rentals%') THEN 'Supply'\n            WHEN (proc_marketing_paid_media_executions.campaign_current_name LIKE '%Buyers%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tenants%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%New Properties%') THEN 'Demand'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS funnel_marketing,\n        CASE\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Medell_n%' THEN 109::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Antioqu_a%' THEN 109::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Bogot_%' THEN 14::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Regi_n Metropolitana%' THEN 79::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Valpara_so%' THEN 11::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Concepci_n%' THEN 8::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Ciudad de M_xico%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Monterrey%' THEN 54::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tijuana%' THEN 67::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Guadalajara%' THEN 30::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Puebla%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Quer_taro%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%GDL%' THEN 30::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%CDMX%' THEN 104::INT\n        ELSE NULL END AS geo_id,\n        last_platform_update.platform_last_updated_at,\n        SUM(proc_marketing_paid_media_executions.day_cost)::FLOAT AS total_cost,\n        SUM(proc_marketing_paid_media_executions.day_cost_usd)::FLOAT AS total_cost_usd,\n        SUM(proc_marketing_paid_media_executions.day_clicks) AS total_clicks,\n        SUM(proc_marketing_paid_media_executions.day_impressions) AS total_impressions,\n        MIN(proc_marketing_paid_media_executions.executed_at) AS campaing_start,\n        MAX(proc_marketing_paid_media_executions.executed_at) AS campaing_last_day,\n        MAX(CASE WHEN campaign_status = 'ACTIVE' THEN executed_at END) AS campaign_last_active_day,\n        CASE\n            WHEN campaign_last_active_day = last_platform_update.platform_last_updated_at THEN 'ACTIVE'\n        ELSE 'PAUSED' END::VARCHAR(10000) AS campaign_current_status,\n        COUNT(DISTINCT ad_group_id) AS ad_groups_in_campaing,\n        COUNT(DISTINCT ad_id) AS ads_in_campaing\nFROM proc_marketing_paid_media_executions\nLEFT JOIN last_platform_update\n    ON proc_marketing_paid_media_executions.platform = last_platform_update.platform\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n)\n\nSELECT  paid_media_campaigns.platform,\n        paid_media_campaigns.account_id,\n        paid_media_campaigns.account_name,\n        paid_media_campaigns.campaign_id,\n        paid_media_campaigns.campaign_current_name as campaign_name,\n        paid_media_campaigns.country,\n        paid_media_campaigns.city,\n        paid_media_campaigns.business_marketing,\n        paid_media_campaigns.funnel_marketing,\n        paid_media_campaigns.geo_id,\n        dim_geo.country AS dim_mz_country,\n        dim_geo.region_houm AS dim_mz_region,\n        dim_geo.city AS dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city,\n        paid_media_campaigns.platform_last_updated_at::DATE,\n        paid_media_campaigns.total_cost,\n        paid_media_campaigns.total_cost_usd,\n        paid_media_campaigns.total_clicks,\n        paid_media_campaigns.total_impressions,\n        paid_media_campaigns.campaing_start::DATE,\n        paid_media_campaigns.campaing_last_day::DATE,\n        paid_media_campaigns.campaign_last_active_day::DATE,\n        paid_media_campaigns.campaign_current_status,\n        paid_media_campaigns.ad_groups_in_campaing,\n        paid_media_campaigns.ads_in_campaing\nFROM paid_media_campaigns\nLEFT JOIN  {{ ref('dim_macrozones') }} AS dim_geo\n    ON dim_geo.geo_id = paid_media_campaigns.geo_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = paid_media_campaigns.country AND translation.macrozone_city = paid_media_campaigns.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media_campaign.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media_campaign.sql", "name": "proc_marketing_paid_media_campaign", "alias": "proc_marketing_paid_media_campaign", "checksum": {"name": "sha256", "checksum": "ca14daceb699f2fd48c178d80bcd10a7879ed0cee327513e84e525712f5fd9f6"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_marketing_paid_media_executions"], ["dim_macrozones"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1675970038.48593, "compiled_code": "\n\nWITH proc_marketing_paid_media_executions AS (\nSELECT  *,\n        LAST_VALUE(campaign_name) \n            OVER (PARTITION BY campaign_id ORDER BY executed_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS campaign_current_name\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\" \n)\n, last_platform_update AS (\nSELECT  platform, \n        MAX(executed_at) AS platform_last_updated_at\nFROM proc_marketing_paid_media_executions\nGROUP BY 1\n)\n, paid_media_campaigns AS (\nSELECT  proc_marketing_paid_media_executions.platform,\n        proc_marketing_paid_media_executions.account_id,\n        proc_marketing_paid_media_executions.account_name,\n        SUBSTRING(account_name, CHARINDEX(' ', account_name)) AS inicia_country,\n        CASE\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'USD' THEN REPLACE(TRIM(INITCAP(LEFT(inicia_country, CHARINDEX('|', inicia_country)-1))), 'Me', 'M\u00e9')\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'CLP' THEN 'Chile'\n            WHEN TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1)) = 'Houm' THEN 'Unknown'\n            ELSE TRIM(SUBSTRING(account_name, CHARINDEX('|', account_name)+1))\n        END AS country,\n        proc_marketing_paid_media_executions.campaign_id,\n        proc_marketing_paid_media_executions.campaign_current_name,\n        SUBSTRING(campaign_current_name, CHARINDEX('|', campaign_current_name)+1) AS inicia_city,\n        CASE WHEN CHARINDEX('|', inicia_city)-1 < 0 THEN 1 ELSE CHARINDEX('|', inicia_city)-1 END AS n_city,\n        CASE \n            WHEN TRIM(LEFT(inicia_city, n_city)) = 'c' THEN 'Unknown'\n            WHEN TRIM(LEFT(inicia_city, n_city)) = 'M\u00e9xico' THEN 'Ciudad de M\u00e9xico'\n            ELSE TRIM(LEFT(inicia_city, n_city))\n        END AS city,\n        proc_marketing_paid_media_executions.currency,\n        CASE\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Sales%' THEN 'Seller'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Rentals%' THEN 'Landlord'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%New Properties%' THEN 'Buyer New Properties'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tenants%' THEN 'Tenant'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS business_marketing,\n        CASE\n            WHEN (proc_marketing_paid_media_executions.campaign_current_name LIKE '%Sales%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%Rentals%') THEN 'Supply'\n            WHEN (proc_marketing_paid_media_executions.campaign_current_name LIKE '%Buyers%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tenants%' OR\n                    proc_marketing_paid_media_executions.campaign_current_name LIKE '%New Properties%') THEN 'Demand'\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS funnel_marketing,\n        CASE\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Medell_n%' THEN 109::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Antioqu_a%' THEN 109::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Bogot_%' THEN 14::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Regi_n Metropolitana%' THEN 79::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Valpara_so%' THEN 11::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Concepci_n%' THEN 8::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Ciudad de M_xico%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Monterrey%' THEN 54::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Tijuana%' THEN 67::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Guadalajara%' THEN 30::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Puebla%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%Quer_taro%' THEN 104::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%GDL%' THEN 30::INT\n            WHEN proc_marketing_paid_media_executions.campaign_current_name LIKE '%CDMX%' THEN 104::INT\n        ELSE NULL END AS geo_id,\n        last_platform_update.platform_last_updated_at,\n        SUM(proc_marketing_paid_media_executions.day_cost)::FLOAT AS total_cost,\n        SUM(proc_marketing_paid_media_executions.day_cost_usd)::FLOAT AS total_cost_usd,\n        SUM(proc_marketing_paid_media_executions.day_clicks) AS total_clicks,\n        SUM(proc_marketing_paid_media_executions.day_impressions) AS total_impressions,\n        MIN(proc_marketing_paid_media_executions.executed_at) AS campaing_start,\n        MAX(proc_marketing_paid_media_executions.executed_at) AS campaing_last_day,\n        MAX(CASE WHEN campaign_status = 'ACTIVE' THEN executed_at END) AS campaign_last_active_day,\n        CASE\n            WHEN campaign_last_active_day = last_platform_update.platform_last_updated_at THEN 'ACTIVE'\n        ELSE 'PAUSED' END::VARCHAR(10000) AS campaign_current_status,\n        COUNT(DISTINCT ad_group_id) AS ad_groups_in_campaing,\n        COUNT(DISTINCT ad_id) AS ads_in_campaing\nFROM proc_marketing_paid_media_executions\nLEFT JOIN last_platform_update\n    ON proc_marketing_paid_media_executions.platform = last_platform_update.platform\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n)\n\nSELECT  paid_media_campaigns.platform,\n        paid_media_campaigns.account_id,\n        paid_media_campaigns.account_name,\n        paid_media_campaigns.campaign_id,\n        paid_media_campaigns.campaign_current_name as campaign_name,\n        paid_media_campaigns.country,\n        paid_media_campaigns.city,\n        paid_media_campaigns.business_marketing,\n        paid_media_campaigns.funnel_marketing,\n        paid_media_campaigns.geo_id,\n        dim_geo.country AS dim_mz_country,\n        dim_geo.region_houm AS dim_mz_region,\n        dim_geo.city AS dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city,\n        paid_media_campaigns.platform_last_updated_at::DATE,\n        paid_media_campaigns.total_cost,\n        paid_media_campaigns.total_cost_usd,\n        paid_media_campaigns.total_clicks,\n        paid_media_campaigns.total_impressions,\n        paid_media_campaigns.campaing_start::DATE,\n        paid_media_campaigns.campaing_last_day::DATE,\n        paid_media_campaigns.campaign_last_active_day::DATE,\n        paid_media_campaigns.campaign_current_status,\n        paid_media_campaigns.ad_groups_in_campaing,\n        paid_media_campaigns.ads_in_campaing\nFROM paid_media_campaigns\nLEFT JOIN  \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo\n    ON dim_geo.geo_id = paid_media_campaigns.geo_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = paid_media_campaigns.country AND translation.macrozone_city = paid_media_campaigns.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\""}, "model.houm.proc_googleads_campaign_ad_union": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_supermetrics_googleads_ad", "model.houm.stg_supermetrics_googleads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_googleads_campaign_ad_union"], "unique_id": "model.houm.proc_googleads_campaign_ad_union", "raw_code": "{{ config(materialized='view') }}\n\nWITH stg_supermetrics_googleads_ad AS (\n    SELECT *\n    FROM {{ ref('stg_supermetrics_googleads_ad') }}\n)\n\n   , google_campaign_only AS (\n    SELECT 'Google'                   AS platform,\n           campaign.profile_id ,\n           campaign.account_name ,\n           campaign.campaign_id ,\n           campaign.campaign_name ,\n           NULL::VARCHAR              AS ad_group_id,\n           NULL::VARCHAR              AS ad_group_name,\n           NULL::VARCHAR              AS ad_id,\n           NULL::VARCHAR              AS ad_name,\n           campaign.date::TIMESTAMPTZ ,\n           campaign.campaign_status,\n           NULL::VARCHAR(10000)       AS ad_group_status,\n           NULL::VARCHAR(10000)       AS ad_status,\n           campaign.clicks,\n           campaign.impressions,\n           campaign.currency,\n           campaign.cost ::FLOAT,\n           campaign.cost_usd ::FLOAT\n    FROM {{ ref('stg_supermetrics_googleads_campaign') }} campaign\n             LEFT JOIN stg_supermetrics_googleads_ad ad ON ad.campaign_id = campaign.campaign_id\n    WHERE ad.campaign_id IS NULL --hago el union y luego filtro para as\u00ed solo considerar las campa\u00f1as que no se encuentran en la otra tabla\n    AND campaign.date >= '2022-01-01'::DATE\n       )\n\n   , google_ad AS (\n    SELECT 'Google'          AS platform,\n           profile_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           ad_group_id,\n           ad_group_name,\n           NULL::VARCHAR     AS ad_id,\n           NULL::VARCHAR     AS ad_name,\n           date::TIMESTAMPTZ ,\n           campaign_status,\n           ad_group_status,\n           ad_status,\n           clicks,\n           impressions,\n           currency,\n           cost ::FLOAT,\n           cost_usd ::FLOAT\n    FROM stg_supermetrics_googleads_ad AS googleads_ad\n    WHERE date >= '2022-01-01'::DATE\n)\n\n   , union_google AS (\n    SELECT *\n    FROM google_campaign_only\n    UNION\n    SELECT *\n    FROM google_ad\n)\n\n    SELECT platform,\n           profile_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           ad_group_id,\n           ad_group_name,\n           ad_id,\n           ad_name,\n           date,\n           campaign_status,\n           ad_group_status,\n           ad_status,\n           currency,\n           SUM(cost)::FLOAT     AS cost,\n           SUM(cost_usd)::FLOAT AS cost_usd,\n           SUM(clicks)          AS clicks,\n           SUM(impressions)     AS impressions\n\n    FROM union_google\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_googleads_campaign_ad_union.sql", "original_file_path": "models/processing/marketing/proc_googleads_campaign_ad_union.sql", "name": "proc_googleads_campaign_ad_union", "alias": "proc_googleads_campaign_ad_union", "checksum": {"name": "sha256", "checksum": "fe2face985ce5ec0ef3f49810fc312deed260cd6bb93855e8acba33dd15488fd"}, "tags": ["dw", "processing", "marketing"], "refs": [["stg_supermetrics_googleads_ad"], ["stg_supermetrics_googleads_campaign"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_googleads_campaign_ad_union.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "view"}, "created_at": 1675970038.487773, "compiled_code": "\n\nWITH stg_supermetrics_googleads_ad AS (\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_ad\"\n)\n\n   , google_campaign_only AS (\n    SELECT 'Google'                   AS platform,\n           campaign.profile_id ,\n           campaign.account_name ,\n           campaign.campaign_id ,\n           campaign.campaign_name ,\n           NULL::VARCHAR              AS ad_group_id,\n           NULL::VARCHAR              AS ad_group_name,\n           NULL::VARCHAR              AS ad_id,\n           NULL::VARCHAR              AS ad_name,\n           campaign.date::TIMESTAMPTZ ,\n           campaign.campaign_status,\n           NULL::VARCHAR(10000)       AS ad_group_status,\n           NULL::VARCHAR(10000)       AS ad_status,\n           campaign.clicks,\n           campaign.impressions,\n           campaign.currency,\n           campaign.cost ::FLOAT,\n           campaign.cost_usd ::FLOAT\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_campaign\" campaign\n             LEFT JOIN stg_supermetrics_googleads_ad ad ON ad.campaign_id = campaign.campaign_id\n    WHERE ad.campaign_id IS NULL --hago el union y luego filtro para as\u00ed solo considerar las campa\u00f1as que no se encuentran en la otra tabla\n    AND campaign.date >= '2022-01-01'::DATE\n       )\n\n   , google_ad AS (\n    SELECT 'Google'          AS platform,\n           profile_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           ad_group_id,\n           ad_group_name,\n           NULL::VARCHAR     AS ad_id,\n           NULL::VARCHAR     AS ad_name,\n           date::TIMESTAMPTZ ,\n           campaign_status,\n           ad_group_status,\n           ad_status,\n           clicks,\n           impressions,\n           currency,\n           cost ::FLOAT,\n           cost_usd ::FLOAT\n    FROM stg_supermetrics_googleads_ad AS googleads_ad\n    WHERE date >= '2022-01-01'::DATE\n)\n\n   , union_google AS (\n    SELECT *\n    FROM google_campaign_only\n    UNION\n    SELECT *\n    FROM google_ad\n)\n\n    SELECT platform,\n           profile_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           ad_group_id,\n           ad_group_name,\n           ad_id,\n           ad_name,\n           date,\n           campaign_status,\n           ad_group_status,\n           ad_status,\n           currency,\n           SUM(cost)::FLOAT     AS cost,\n           SUM(cost_usd)::FLOAT AS cost_usd,\n           SUM(clicks)          AS clicks,\n           SUM(impressions)     AS impressions\n\n    FROM union_google\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_googleads_campaign_ad_union\""}, "model.houm.proc_marketing_paid_media_executions": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_googleads_campaign_ad_union", "model.houm.stg_supermetrics_fbads_ad", "model.houm.stg_supermetrics_linkedinads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media_executions"], "unique_id": "model.houm.proc_marketing_paid_media_executions", "raw_code": "{{ config(materialized='table') }}\n\nWITH stg_paid_media_google_campaigns AS (\n    SELECT 'Google'                                                                AS platform ,\n           profile_id                                                              AS account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           NULL::VARCHAR                                                           AS ad_id ,\n           NULL::VARCHAR                                                           AS ad_name ,\n           date::TIMESTAMPTZ                                                       AS executed_at ,\n           CASE campaign_status\n                WHEN  'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS campaign_status ,\n           CASE ad_group_status\n                WHEN 'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS ad_group_status ,\n            --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost ::FLOAT ,                                                             \n           cost_usd ::FLOAT\n    FROM {{ ref('proc_googleads_campaign_ad_union') }} as  googleads_ad\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , stg_paid_media_facebook_campaigns AS (\n    SELECT 'Facebook'         AS platform ,\n           account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           ad_id ,\n           ad_name ,\n           date ::TIMESTAMPTZ AS executed_at ,\n           campaign_status ,\n           ad_group_status ,\n           --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost::FLOAT ,\n           cost_usd::FLOAT\n    FROM {{ ref('stg_supermetrics_fbads_ad') }} AS fbads\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n\n    , stg_paid_media_linkedin_campaigns AS (\n    SELECT 'LinkedIn'        AS platform,\n           account_id        AS account_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           creative_id       AS ad_group_id,\n           creative_dsc_name AS ad_group_name,\n           NULL::VARCHAR     AS ad_id,\n           NULL::VARCHAR     AS ad_name,\n           date::TIMESTAMPTZ AS executed_at,\n           creative_status   AS campaign_status,\n           creative_status   AS ad_group_status,\n           --creative_status   AS ad_status,\n           clicks,\n           impressions,\n           currency,\n           cost ::FLOAT,\n           cost_usd ::FLOAT\n    FROM {{ ref('stg_supermetrics_linkedinads_ad') }} AS linkedinads_ad\n    WHERE date >= '2022-01-01'::DATE\n)\n\n   , union_platform AS (\n    SELECT *\n    FROM stg_paid_media_google_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_facebook_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_linkedin_campaigns\n)\n   , paid_media AS (\n    SELECT union_platform.platform ,\n           union_platform.account_id ,\n           union_platform.account_name ,\n           union_platform.campaign_id ,\n           union_platform.campaign_name ,\n           union_platform.ad_group_id ,\n           union_platform.ad_group_name ,\n           union_platform.ad_id ,\n           union_platform.ad_name ,\n           union_platform.executed_at ,\n           union_platform.campaign_status ,\n           union_platform.ad_group_status ,\n           union_platform.currency ,\n           SUM(union_platform.cost)::FLOAT      AS day_cost ,\n           SUM(union_platform.cost_usd)::FLOAT  AS day_cost_usd ,\n           SUM(union_platform.clicks)           AS day_clicks ,\n           SUM(union_platform.impressions)      AS day_impressions\n\n    FROM union_platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n)\n\nSELECT paid_media.platform ,\n       paid_media.account_id ,\n       paid_media.account_name ,\n       paid_media.campaign_id ,\n       paid_media.campaign_name ,\n       paid_media.ad_group_id ,\n       paid_media.ad_group_name ,\n       paid_media.ad_id ,\n       paid_media.ad_name ,\n       paid_media.executed_at ,\n       paid_media.campaign_status ,\n       paid_media.ad_group_status ,\n       paid_media.currency ,\n       paid_media.day_cost ,\n       paid_media.day_cost_usd ,\n       paid_media.day_clicks ,\n       paid_media.day_impressions\n\nFROM paid_media\nORDER BY executed_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media_executions.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media_executions.sql", "name": "proc_marketing_paid_media_executions", "alias": "proc_marketing_paid_media_executions", "checksum": {"name": "sha256", "checksum": "52333008449ce8cbfdbcfda44cd43705c8ea70a2b0b9bb670736e5015fa0597e"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_googleads_campaign_ad_union"], ["stg_supermetrics_fbads_ad"], ["stg_supermetrics_linkedinads_ad"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media_executions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1675970038.489544, "compiled_code": "\n\nWITH stg_paid_media_google_campaigns AS (\n    SELECT 'Google'                                                                AS platform ,\n           profile_id                                                              AS account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           NULL::VARCHAR                                                           AS ad_id ,\n           NULL::VARCHAR                                                           AS ad_name ,\n           date::TIMESTAMPTZ                                                       AS executed_at ,\n           CASE campaign_status\n                WHEN  'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS campaign_status ,\n           CASE ad_group_status\n                WHEN 'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS ad_group_status ,\n            --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost ::FLOAT ,                                                             \n           cost_usd ::FLOAT\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_googleads_campaign_ad_union\" as  googleads_ad\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , stg_paid_media_facebook_campaigns AS (\n    SELECT 'Facebook'         AS platform ,\n           account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           ad_id ,\n           ad_name ,\n           date ::TIMESTAMPTZ AS executed_at ,\n           campaign_status ,\n           ad_group_status ,\n           --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost::FLOAT ,\n           cost_usd::FLOAT\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_ad\" AS fbads\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n\n    , stg_paid_media_linkedin_campaigns AS (\n    SELECT 'LinkedIn'        AS platform,\n           account_id        AS account_id,\n           account_name,\n           campaign_id,\n           campaign_name,\n           creative_id       AS ad_group_id,\n           creative_dsc_name AS ad_group_name,\n           NULL::VARCHAR     AS ad_id,\n           NULL::VARCHAR     AS ad_name,\n           date::TIMESTAMPTZ AS executed_at,\n           creative_status   AS campaign_status,\n           creative_status   AS ad_group_status,\n           --creative_status   AS ad_status,\n           clicks,\n           impressions,\n           currency,\n           cost ::FLOAT,\n           cost_usd ::FLOAT\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_linkedinads_ad\" AS linkedinads_ad\n    WHERE date >= '2022-01-01'::DATE\n)\n\n   , union_platform AS (\n    SELECT *\n    FROM stg_paid_media_google_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_facebook_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_linkedin_campaigns\n)\n   , paid_media AS (\n    SELECT union_platform.platform ,\n           union_platform.account_id ,\n           union_platform.account_name ,\n           union_platform.campaign_id ,\n           union_platform.campaign_name ,\n           union_platform.ad_group_id ,\n           union_platform.ad_group_name ,\n           union_platform.ad_id ,\n           union_platform.ad_name ,\n           union_platform.executed_at ,\n           union_platform.campaign_status ,\n           union_platform.ad_group_status ,\n           union_platform.currency ,\n           SUM(union_platform.cost)::FLOAT      AS day_cost ,\n           SUM(union_platform.cost_usd)::FLOAT  AS day_cost_usd ,\n           SUM(union_platform.clicks)           AS day_clicks ,\n           SUM(union_platform.impressions)      AS day_impressions\n\n    FROM union_platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n)\n\nSELECT paid_media.platform ,\n       paid_media.account_id ,\n       paid_media.account_name ,\n       paid_media.campaign_id ,\n       paid_media.campaign_name ,\n       paid_media.ad_group_id ,\n       paid_media.ad_group_name ,\n       paid_media.ad_id ,\n       paid_media.ad_name ,\n       paid_media.executed_at ,\n       paid_media.campaign_status ,\n       paid_media.ad_group_status ,\n       paid_media.currency ,\n       paid_media.day_cost ,\n       paid_media.day_cost_usd ,\n       paid_media.day_clicks ,\n       paid_media.day_impressions\n\nFROM paid_media\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\""}, "model.houm.sales_local_revenue": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_local_revenue"], "unique_id": "model.houm.sales_local_revenue", "raw_code": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/sales_local_revenue.sql", "original_file_path": "models/processing/finance/sales_local_revenue.sql", "name": "sales_local_revenue", "alias": "sales_local_revenue", "checksum": {"name": "sha256", "checksum": "8d8dbdb65ea95a5275a0aa200687fc26e4e04abbf661ef50285f3b69088f156b"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Total Revenue amount of Sales", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1675970038.877374, "compiled_code": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\""}, "model.houm.rentals_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "rentals_units"], "unique_id": "model.houm.rentals_units", "raw_code": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/rentals_units.sql", "original_file_path": "models/processing/finance/rentals_units.sql", "name": "rentals_units", "alias": "rentals_units", "checksum": {"name": "sha256", "checksum": "333ff51cbfa143e8049a65b50d0bdc18dca1780328be5255e3cb0bf1625e0f09"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of rented units for each month", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1675970038.877109, "compiled_code": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"rentals_units\""}, "model.houm.eop_subs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "eop_subs"], "unique_id": "model.houm.eop_subs", "raw_code": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/eop_subs.sql", "original_file_path": "models/processing/finance/eop_subs.sql", "name": "eop_subs", "alias": "eop_subs", "checksum": {"name": "sha256", "checksum": "15320a10bda8841ec4969ea2a30e886b10a2406b03adee53ae91c6f7cb90c230"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of subscriptions at the beggining of period", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/eop_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1675970038.8768451, "compiled_code": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"eop_subs\""}, "model.houm.sales_units": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_units"], "unique_id": "model.houm.sales_units", "raw_code": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/sales_units.sql", "original_file_path": "models/processing/finance/sales_units.sql", "name": "sales_units", "alias": "sales_units", "checksum": {"name": "sha256", "checksum": "9e97d9697020e7b89d68c88e67e49ea425551c0a676d1ab5dc30c14f753632b7"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of sold units for each month", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1675970038.876576, "compiled_code": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_units\""}, "model.houm.proc_nps_landlord_6_months": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_landlord_6_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord_6_months"], "unique_id": "model.houm.proc_nps_landlord_6_months", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_6months_comm AS (\nSELECT \n    10::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    'landlord_6_months'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'landlord_6_months' -- datos desde el 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_6months_wsp_new AS (\nSELECT \n    10::INT AS id_survey,\n    created_at,\n    created_date,\n    'landlord_6_months'::VARCHAR AS survey_type,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_automatic_landlord_6_meses')}} \nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 27 de mayo 2022\n)\n, nps_6months_wsp_old AS (\nSELECT \n    5::INT AS id_survey,\n    created_at,\n    created_date,     \n    'landlord_6_months'::VARCHAR AS survey_type,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,  \n    country::VARCHAR, \n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM {{ref('stg_whatsapp_nps_automatic_landlord_6_meses')}}\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_6months_survicate AS (\nSELECT \n    1::INT AS id_survey,\n    created_at,\n    created_date,\n\t'landlord_6_months'::VARCHAR AS survey_type,\n\tNULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n\t'Chile'::VARCHAR AS country,\n    recommendation,\n    CASE \n        WHEN recommendation IN (9,10)          THEN -100::INT \n\t\tWHEN recommendation IN (7,8)           THEN    0::INT\n\t\tWHEN recommendation IN (0,1,2,3,4,5,6) THEN  100::INT \n\t    ELSE NULL::INT\n\tEND AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL\n        ELSE comments\n    END AS comments\nFROM {{ref('stg_survicate_nps_landlord_satisfaction_6months_cl')}} \nWHERE TRUE \nAND created_at < '2021-10-28'\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_6months_comm\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_6months_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord_6_months.sql", "original_file_path": "models/processing/cx/proc_nps_landlord_6_months.sql", "name": "proc_nps_landlord_6_months", "alias": "proc_nps_landlord_6_months", "checksum": {"name": "sha256", "checksum": "a9fd1692a65237e0b615f807acdd99a8878a7d625471916c439724049edfc55a"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_automatic_landlord_6_meses"], ["stg_whatsapp_nps_automatic_landlord_6_meses"], ["stg_survicate_nps_landlord_satisfaction_6months_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord_6_months.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.497706, "compiled_code": "\n\nWITH nps_6months_comm AS (\nSELECT \n    10::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    'landlord_6_months'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'landlord_6_months' -- datos desde el 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_6months_wsp_new AS (\nSELECT \n    10::INT AS id_survey,\n    created_at,\n    created_date,\n    'landlord_6_months'::VARCHAR AS survey_type,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_landlord_6_meses\" \nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 27 de mayo 2022\n)\n, nps_6months_wsp_old AS (\nSELECT \n    5::INT AS id_survey,\n    created_at,\n    created_date,     \n    'landlord_6_months'::VARCHAR AS survey_type,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,  \n    country::VARCHAR, \n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\"\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_6months_survicate AS (\nSELECT \n    1::INT AS id_survey,\n    created_at,\n    created_date,\n\t'landlord_6_months'::VARCHAR AS survey_type,\n\tNULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n\t'Chile'::VARCHAR AS country,\n    recommendation,\n    CASE \n        WHEN recommendation IN (9,10)          THEN -100::INT \n\t\tWHEN recommendation IN (7,8)           THEN    0::INT\n\t\tWHEN recommendation IN (0,1,2,3,4,5,6) THEN  100::INT \n\t    ELSE NULL::INT\n\tEND AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL\n        ELSE comments\n    END AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\" \nWHERE TRUE \nAND created_at < '2021-10-28'\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_6months_comm\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_6months_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_6_months\""}, "model.houm.proc_survey_details": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.houm.seed_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_survey_details"], "unique_id": "model.houm.proc_survey_details", "raw_code": "SELECT \n    *\nFROM {{ref('seed_survey_details')}}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_survey_details.sql", "original_file_path": "models/processing/cx/proc_survey_details.sql", "name": "proc_survey_details", "alias": "proc_survey_details", "checksum": {"name": "sha256", "checksum": "1f94e4dc396a07584062c0093f23a110a835b24031a4490ade9a23e6299edd7e"}, "tags": ["dw", "processing", "cx"], "refs": [["seed_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_survey_details.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"]}, "created_at": 1675970038.499586, "compiled_code": "SELECT \n    *\nFROM \"houmdw_prod\".\"analytics_team\".\"seed_survey_details\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\""}, "model.houm.proc_nps_tenant_6_months": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_tenant_6_meses", "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant_6_months"], "unique_id": "model.houm.proc_nps_tenant_6_months", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_6months_comm AS (\nSELECT \n    10::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    (created_at::TIMESTAMPTZ)::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END) AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END) AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END) AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END) AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'tenant_6_months' -- datos desde el 15 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_6months_wsp_new AS (\nSELECT \n    10::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_automatic_tenant_6_meses')}}\nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 27 de mayo 2022\n)\n, nps_6months_wsp_old AS (\nSELECT \n    7::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM {{ref('stg_whatsapp_nps_automatic_tenant_6_meses')}}\n-- ORDER BY created_at DESC -- datos hasta 25 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_6months_comm\nUNION ALL\nSELECT\n    *\nFROM nps_6months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_old", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant_6_months.sql", "original_file_path": "models/processing/cx/proc_nps_tenant_6_months.sql", "name": "proc_nps_tenant_6_months", "alias": "proc_nps_tenant_6_months", "checksum": {"name": "sha256", "checksum": "071379050ad05232f1d8cad8df39041f28b4db531f334140d4085a8f51c50449"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_automatic_tenant_6_meses"], ["stg_whatsapp_nps_automatic_tenant_6_meses"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant_6_months.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.501159, "compiled_code": "\n\nWITH nps_6months_comm AS (\nSELECT \n    10::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    (created_at::TIMESTAMPTZ)::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END) AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END) AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END) AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END) AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'tenant_6_months' -- datos desde el 15 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_6months_wsp_new AS (\nSELECT \n    10::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_tenant_6_meses\"\nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 27 de mayo 2022\n)\n, nps_6months_wsp_old AS (\nSELECT \n    7::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_6_meses\"\n-- ORDER BY created_at DESC -- datos hasta 25 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_6months_comm\nUNION ALL\nSELECT\n    *\nFROM nps_6months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_6months_wsp_old", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_6_months\""}, "model.houm.proc_ces_landlord_poscontract": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_rentals_propietary_poscontract"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_ces_landlord_poscontract"], "unique_id": "model.houm.proc_ces_landlord_poscontract", "raw_code": "{{ config(materialized='view') }}\n\nWITH ces_pc_comm AS (\nSELECT \n    14::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT \n    ELSE NULL::INT\n    END AS ces,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'propietary_poscontract' -- datos desde 28 de noviembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n, ces_pc_wsp_new AS ( \nSELECT \n    14::INT AS id_survey,\n    created_at,\n    created_date,\n    'propietary_poscontract'::VARCHAR,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (1,2,3,4,5) THEN NULL::INT\n        ELSE recommendation::INT::INT\n    END AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT ELSE NULL::INT\n    END AS ces,\n    comments\nFROM  {{ref('stg_new_nps_rentals_propietary_poscontract')}}\nWHERE TRUE\nAND created_at < '2022-11-28'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 27 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    ces,\n    comments\nFROM ces_pc_comm\nUNION ALL\nSELECT \n    *\nFROM ces_pc_wsp_new", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_ces_landlord_poscontract.sql", "original_file_path": "models/processing/cx/proc_ces_landlord_poscontract.sql", "name": "proc_ces_landlord_poscontract", "alias": "proc_ces_landlord_poscontract", "checksum": {"name": "sha256", "checksum": "ca7a399c52ef77e865e9f3671e1c50dafe8b9f53d9d512ef08950898fe75d77a"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_rentals_propietary_poscontract"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_ces_landlord_poscontract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.502881, "compiled_code": "\n\nWITH ces_pc_comm AS (\nSELECT \n    14::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT \n    ELSE NULL::INT\n    END AS ces,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'propietary_poscontract' -- datos desde 28 de noviembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n, ces_pc_wsp_new AS ( \nSELECT \n    14::INT AS id_survey,\n    created_at,\n    created_date,\n    'propietary_poscontract'::VARCHAR,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (1,2,3,4,5) THEN NULL::INT\n        ELSE recommendation::INT::INT\n    END AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT ELSE NULL::INT\n    END AS ces,\n    comments\nFROM  \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_rentals_propietary_poscontract\"\nWHERE TRUE\nAND created_at < '2022-11-28'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 27 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    ces,\n    comments\nFROM ces_pc_comm\nUNION ALL\nSELECT \n    *\nFROM ces_pc_wsp_new", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_ces_landlord_poscontract\""}, "model.houm.proc_ces_landlord": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_ces_landlord_poscontract", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_ces_landlord"], "unique_id": "model.houm.proc_ces_landlord", "raw_code": "{{ config(materialized='view') }}\n\nSELECT  ces.*\nFROM {{ref('proc_ces_landlord_poscontract')}} AS ces\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id =  ces.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY ces.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_ces_landlord.sql", "original_file_path": "models/processing/cx/proc_ces_landlord.sql", "name": "proc_ces_landlord", "alias": "proc_ces_landlord", "checksum": {"name": "sha256", "checksum": "1d83dee9b2f4aa9ea94cfc3ceabb19aea1343de325688e0f3a576414fab8b55c"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_ces_landlord_poscontract"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_ces_landlord.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5047371, "compiled_code": "\n\nSELECT  ces.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_ces_landlord_poscontract\" AS ces\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id =  ces.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY ces.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_ces_landlord\""}, "model.houm.proc_surveys_landlord": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_nps_landlord", "model.houm.proc_csat_landlord", "model.houm.proc_ces_landlord"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_surveys_landlord"], "unique_id": "model.houm.proc_surveys_landlord", "raw_code": "{{ config(materialized='table') }}\n\nWITH surveys_landlord AS (\nSELECT \n    *\nFROM {{ref('proc_nps_landlord')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_csat_landlord')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_ces_landlord')}}\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    comments\nFROM surveys_landlord \nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_surveys_landlord.sql", "original_file_path": "models/processing/cx/proc_surveys_landlord.sql", "name": "proc_surveys_landlord", "alias": "proc_surveys_landlord", "checksum": {"name": "sha256", "checksum": "5302eb12722010798ac97f5bf740a2c3674570422fe12b0d1adf1b866a336227"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_nps_landlord"], ["proc_csat_landlord"], ["proc_ces_landlord"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_surveys_landlord.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1675970038.5064268, "compiled_code": "\n\nWITH surveys_landlord AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_csat_landlord\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_ces_landlord\"\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    comments\nFROM surveys_landlord \nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_surveys_landlord\""}, "model.houm.proc_nps_tenant_3_months": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_tenant_3_meses", "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant_3_months"], "unique_id": "model.houm.proc_nps_tenant_3_months", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_3months_comm AS (\nSELECT \n    9::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END) AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END) AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END) AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END) AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'tenant_3_months' -- datos desde el 15 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_3months_wsp_new AS (\nSELECT \n    9::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_automatic_tenant_3_meses')}}\nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 26 mayo 2022\n)\n, nps_3months_wsp_old AS (\nSELECT \n    6::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM {{ref('stg_whatsapp_nps_automatic_tenant_3_meses')}}\n-- ORDER BY created_at DESC -- datos hasta 25 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_3months_comm\nUNION ALL\nSELECT\n    *\nFROM nps_3months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_old", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant_3_months.sql", "original_file_path": "models/processing/cx/proc_nps_tenant_3_months.sql", "name": "proc_nps_tenant_3_months", "alias": "proc_nps_tenant_3_months", "checksum": {"name": "sha256", "checksum": "e8625fc02b1dde687ac137b66fd601942739e32bdea3598b28afb190766f9458"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_automatic_tenant_3_meses"], ["stg_whatsapp_nps_automatic_tenant_3_meses"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant_3_months.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5081758, "compiled_code": "\n\nWITH nps_3months_comm AS (\nSELECT \n    9::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END) AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END) AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END) AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END) AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'tenant_3_months' -- datos desde el 15 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_3months_wsp_new AS (\nSELECT \n    9::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_tenant_3_meses\"\nWHERE TRUE\nAND created_at < '2022-12-15'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 26 mayo 2022\n)\n, nps_3months_wsp_old AS (\nSELECT \n    6::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name,\n    phone AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_3_meses\"\n-- ORDER BY created_at DESC -- datos hasta 25 de mayo 2022\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_3months_comm\nUNION ALL\nSELECT\n    *\nFROM nps_3months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_old", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_3_months\""}, "model.houm.proc_nps_landlord_3_months": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord_3_months"], "unique_id": "model.houm.proc_nps_landlord_3_months", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_3months_comm AS (\nSELECT \n    11::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n\t'landlord_3_months'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'landlord_3_months' -- datos desde el 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_3months_wsp_new AS (\nSELECT \n    11::INT AS id_survey,\n    created_at,\n    created_date,\n\t'landlord_3_months'::VARCHAR AS survey_type,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_automatic_landlord_3_meses')}}\nWHERE TRUE\nAND created_at < '2022-12-16'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 26 de mayo 2022\n)\n, nps_3months_wsp_old AS (\nSELECT \n    6::INT AS id_survey,\n    created_at,\n    created_date,     \n\t'landlord_3_months'::VARCHAR AS survey_type,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone, \n    country::VARCHAR, \n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL\n        ELSE comments\n    END AS comments\nFROM {{ref('stg_whatsapp_nps_automatic_landlord_3_meses')}} \nWHERE TRUE\nAND created_at < '2022-05-26'::DATE -- para no duplicar respuestas\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_3months_comm\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_old", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord_3_months.sql", "original_file_path": "models/processing/cx/proc_nps_landlord_3_months.sql", "name": "proc_nps_landlord_3_months", "alias": "proc_nps_landlord_3_months", "checksum": {"name": "sha256", "checksum": "295a0da7fe9b73a7ca84299cc34a776160363874aa83c192b88406bfcb6b7972"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_automatic_landlord_3_meses"], ["stg_whatsapp_nps_automatic_landlord_3_meses"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord_3_months.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5099452, "compiled_code": "\n\nWITH nps_3months_comm AS (\nSELECT \n    11::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n\t'landlord_3_months'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'landlord_3_months' -- datos desde el 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n) \n, nps_3months_wsp_new AS (\nSELECT \n    11::INT AS id_survey,\n    created_at,\n    created_date,\n\t'landlord_3_months'::VARCHAR AS survey_type,\n    property_id,\n    subscription_id::INT,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_automatic_landlord_3_meses\"\nWHERE TRUE\nAND created_at < '2022-12-16'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde el 26 de mayo 2022\n)\n, nps_3months_wsp_old AS (\nSELECT \n    6::INT AS id_survey,\n    created_at,\n    created_date,     \n\t'landlord_3_months'::VARCHAR AS survey_type,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone, \n    country::VARCHAR, \n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL\n        ELSE comments\n    END AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\" \nWHERE TRUE\nAND created_at < '2022-05-26'::DATE -- para no duplicar respuestas\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_3months_comm\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_3months_wsp_old", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_3_months\""}, "model.houm.proc_nps_landlord_new_listing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_rentals_new_listing", "model.houm.stg_whatsapp_nps_rentas_new_listing", "model.houm.stg_survicate_nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord_new_listing"], "unique_id": "model.houm.proc_nps_landlord_new_listing", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_nrl_comm AS (\nSELECT \n    12::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'rent_propietary_listing' -- datos desde el 28 de noviembre 2022 \nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n, nps_nrl_wsp_new AS (\nSELECT \n    12::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type::VARCHAR,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name,\n    phone::VARCHAR AS applicant_phone,\n    INITCAP(country)::VARCHAR AS country,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_rentals_new_listing')}}\nWHERE TRUE\nAND survey_type = 'rent_propietary_listing'\nAND created_at < '2022-11-28'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 09 junio 2022\n)\n, nps_nrl_wsp_old AS (\nSELECT \n    8::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type::VARCHAR,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name,\n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL::INT\n    END AS nps, \n    comments \nFROM {{ref('stg_whatsapp_nps_rentas_new_listing')}}\nWHERE TRUE\nAND survey_type = 'rent_propietary_listing'\nAND created_at < '2022-06-09'::DATE -- para no duplicar respuestas\n)\n, nps_nrl_survicate AS (\nSELECT \n    3::INT AS id_survey,\n    created_at,\n    created_date,\n    'rent_propietary_listing'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    recommendation,\n    nps,\n    comments\nFROM {{ref('stg_survicate_nps_landlord_listing')}}\nWHERE TRUE \nAND created_date::DATE < '2021-10-28'\n)\n\nSELECT \n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_nrl_comm\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord_new_listing.sql", "original_file_path": "models/processing/cx/proc_nps_landlord_new_listing.sql", "name": "proc_nps_landlord_new_listing", "alias": "proc_nps_landlord_new_listing", "checksum": {"name": "sha256", "checksum": "cfd71650cdf38376b01f9fcd937b339ba09c4909ff58e829c579e128ce531462"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_rentals_new_listing"], ["stg_whatsapp_nps_rentas_new_listing"], ["stg_survicate_nps_landlord_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.511889, "compiled_code": "\n\nWITH nps_nrl_comm AS (\nSELECT \n    12::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'rent_propietary_listing' -- datos desde el 28 de noviembre 2022 \nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n, nps_nrl_wsp_new AS (\nSELECT \n    12::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type::VARCHAR,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name,\n    phone::VARCHAR AS applicant_phone,\n    INITCAP(country)::VARCHAR AS country,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_rentals_new_listing\"\nWHERE TRUE\nAND survey_type = 'rent_propietary_listing'\nAND created_at < '2022-11-28'::DATE -- para no duplicar respuestas\n-- ORDER BY created_at ASC -- datos desde 09 junio 2022\n)\n, nps_nrl_wsp_old AS (\nSELECT \n    8::INT AS id_survey,\n    created_at,\n    created_date,\n    survey_type::VARCHAR,\n    property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    name::VARCHAR AS applicant_name,\n    phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE \n        WHEN recommendation NOT IN (0,1,2,3,4,5,6,7,8,9,10) THEN NULL::INT\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL::INT\n    END AS nps, \n    comments \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing\"\nWHERE TRUE\nAND survey_type = 'rent_propietary_listing'\nAND created_at < '2022-06-09'::DATE -- para no duplicar respuestas\n)\n, nps_nrl_survicate AS (\nSELECT \n    3::INT AS id_survey,\n    created_at,\n    created_date,\n    'rent_propietary_listing'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    recommendation,\n    nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\"\nWHERE TRUE \nAND created_date::DATE < '2021-10-28'\n)\n\nSELECT \n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_nrl_comm\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_nrl_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_new_listing\""}, "model.houm.proc_ces_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_ces_tenant_poscontract", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_ces_tenant"], "unique_id": "model.houm.proc_ces_tenant", "raw_code": "{{ config(materialized='view') }}\n\nSELECT  ces.*\nFROM {{ref('proc_ces_tenant_poscontract')}} AS ces\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id =  ces.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY ces.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_ces_tenant.sql", "original_file_path": "models/processing/cx/proc_ces_tenant.sql", "name": "proc_ces_tenant", "alias": "proc_ces_tenant", "checksum": {"name": "sha256", "checksum": "e17d8e9fc435d39a299bc9e0647234c95dc7b293868adc93865c29aad6cd8cb3"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_ces_tenant_poscontract"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_ces_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.513648, "compiled_code": "\n\nSELECT  ces.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_ces_tenant_poscontract\" AS ces\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id =  ces.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY ces.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_ces_tenant\""}, "model.houm.proc_nps_tenant_24_horas": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_automatic_tenant_24_horas", "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant_24_horas"], "unique_id": "model.houm.proc_nps_tenant_24_horas", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_24horas_wsp_old AS (\nSELECT \n    5::INT AS id_survey,\n    created_at,\n    created_date,     \n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name, \n    phone AS applicant_phone,  \n    country, \n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM {{ref('stg_whatsapp_nps_automatic_tenant_24_horas')}}\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_24horas_survicate AS (\nSELECT \n    2::INT AS id_survey,\n    created_at,\n    created_date,\n\t'tenant_24_hrs' AS survey_type,\n\tNULL AS property_id,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n\tNULL AS applicant_name,\n\tNULL AS applicant_phone,\n\tcountry,\n    recommendation::INT,\n    nps::INT,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END  AS comments\nFROM {{ref('stg_survicate_nps_tenant_satisfaction_24hrs')}} \nWHERE created_at < '2021-10-29'\n)\n\nSELECT \n    *\nFROM nps_24horas_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_24horas_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant_24_horas.sql", "original_file_path": "models/processing/cx/proc_nps_tenant_24_horas.sql", "name": "proc_nps_tenant_24_horas", "alias": "proc_nps_tenant_24_horas", "checksum": {"name": "sha256", "checksum": "7e0250e9920e59959ef72a8092f63f0cd2b565f44af13166ac9d23d80a4a99c4"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_automatic_tenant_24_horas"], ["stg_survicate_nps_tenant_satisfaction_24hrs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant_24_horas.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5153558, "compiled_code": "\n\nWITH nps_24horas_wsp_old AS (\nSELECT \n    5::INT AS id_survey,\n    created_at,\n    created_date,     \n    survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n    name AS applicant_name, \n    phone AS applicant_phone,  \n    country, \n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_24_horas\"\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_24horas_survicate AS (\nSELECT \n    2::INT AS id_survey,\n    created_at,\n    created_date,\n\t'tenant_24_hrs' AS survey_type,\n\tNULL AS property_id,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n\tNULL AS applicant_name,\n\tNULL AS applicant_phone,\n\tcountry,\n    recommendation::INT,\n    nps::INT,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END  AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_satisfaction_24hrs\" \nWHERE created_at < '2021-10-29'\n)\n\nSELECT \n    *\nFROM nps_24horas_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_24horas_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_24_horas\""}, "model.houm.proc_surveys_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_nps_tenant", "model.houm.proc_csat_tenant", "model.houm.proc_ces_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_surveys_tenant"], "unique_id": "model.houm.proc_surveys_tenant", "raw_code": "{{ config(materialized='table') }}\n\nWITH surveys_tenant AS (\nSELECT \n    *\nFROM {{ref('proc_nps_tenant')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_csat_tenant')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_ces_tenant')}}\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    comments\nFROM surveys_tenant \nORDER BY created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_surveys_tenant.sql", "original_file_path": "models/processing/cx/proc_surveys_tenant.sql", "name": "proc_surveys_tenant", "alias": "proc_surveys_tenant", "checksum": {"name": "sha256", "checksum": "137db0c5a5b9e9dde02e59e2c5735fce5b09182f42e0f09b2a68d944f732214c"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_nps_tenant"], ["proc_csat_tenant"], ["proc_ces_tenant"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_surveys_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1675970038.517049, "compiled_code": "\n\nWITH surveys_tenant AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_csat_tenant\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_ces_tenant\"\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    comments\nFROM surveys_tenant \nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_surveys_tenant\""}, "model.houm.proc_csat_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_csat_tenant_visit_done", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_csat_tenant"], "unique_id": "model.houm.proc_csat_tenant", "raw_code": "{{ config(materialized='view') }}\n\nSELECT  csat.*\nFROM {{ref('proc_csat_tenant_visit_done')}} AS csat\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id =  csat.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY csat.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_csat_tenant.sql", "original_file_path": "models/processing/cx/proc_csat_tenant.sql", "name": "proc_csat_tenant", "alias": "proc_csat_tenant", "checksum": {"name": "sha256", "checksum": "d513b9c23a5ea351ab5d534b8b4152cac2950d60a087ba02232c75d3ecf84a61"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_csat_tenant_visit_done"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_csat_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.518952, "compiled_code": "\n\nSELECT  csat.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_csat_tenant_visit_done\" AS csat\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id =  csat.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY csat.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_csat_tenant\""}, "model.houm.proc_nps_landlord": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_nps_landlord_6_months", "model.houm.proc_nps_landlord_3_months", "model.houm.proc_nps_landlord_poscontract", "model.houm.proc_nps_landlord_new_listing", "model.houm.proc_nps_landlord_photo", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord"], "unique_id": "model.houm.proc_nps_landlord", "raw_code": "{{ config(materialized='view') }}\n\nWITH NPS_landlord AS (\nSELECT \n    *\nFROM {{ref('proc_nps_landlord_6_months')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_landlord_3_months')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_landlord_poscontract')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_landlord_new_listing')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_landlord_photo')}}\n)\n\nSELECT  nps.* \nFROM NPS_landlord AS nps\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id = nps.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY nps.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord.sql", "original_file_path": "models/processing/cx/proc_nps_landlord.sql", "name": "proc_nps_landlord", "alias": "proc_nps_landlord", "checksum": {"name": "sha256", "checksum": "6e8e415fff2ef850ae623aa1c868fb6ec283714bd245d231a4402c6a8fbf8af7"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_nps_landlord_6_months"], ["proc_nps_landlord_3_months"], ["proc_nps_landlord_poscontract"], ["proc_nps_landlord_new_listing"], ["proc_nps_landlord_photo"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.52064, "compiled_code": "\n\nWITH NPS_landlord AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_6_months\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_3_months\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_poscontract\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_new_listing\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_photo\"\n)\n\nSELECT  nps.* \nFROM NPS_landlord AS nps\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id = nps.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY nps.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord\""}, "model.houm.proc_nps_tenant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_nps_tenant_6_months", "model.houm.proc_nps_tenant_3_months", "model.houm.proc_nps_tenant_24_horas", "model.houm.proc_nps_tenant_visit_cancel", "model.houm.proc_nps_tenant_visit_done", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant"], "unique_id": "model.houm.proc_nps_tenant", "raw_code": "{{ config(materialized='view') }}\n\nWITH NPS_tenant AS (\nSELECT \n    *\nFROM {{ref('proc_nps_tenant_6_months')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_tenant_3_months')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_tenant_24_horas')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_tenant_visit_cancel')}}\nUNION ALL \nSELECT \n    *\nFROM {{ref('proc_nps_tenant_visit_done')}}\n)\n\nSELECT  nps.* \nFROM NPS_tenant AS nps\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id = nps.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY nps.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant.sql", "original_file_path": "models/processing/cx/proc_nps_tenant.sql", "name": "proc_nps_tenant", "alias": "proc_nps_tenant", "checksum": {"name": "sha256", "checksum": "b5afc416af2aa580305e28e2e0526bdfda8f314aa54d875ddd4e700d88056c24"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_nps_tenant_6_months"], ["proc_nps_tenant_3_months"], ["proc_nps_tenant_24_horas"], ["proc_nps_tenant_visit_cancel"], ["proc_nps_tenant_visit_done"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.522374, "compiled_code": "\n\nWITH NPS_tenant AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_6_months\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_3_months\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_24_horas\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_visit_cancel\"\nUNION ALL \nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_visit_done\"\n)\n\nSELECT  nps.* \nFROM NPS_tenant AS nps\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id = nps.id_survey\n    AND survey_details.client_type = 'tenant'::TEXT\nORDER BY nps.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant\""}, "model.houm.proc_csat_landlord_photo": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.proc_supply_schedules", "model.houm.stg_new_nps_visit_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_csat_landlord_photo"], "unique_id": "model.houm.proc_csat_landlord_photo", "raw_code": "{{ config(materialized='view') }}\n\nWITH csat_photo_done_comm AS (\nSELECT \n    13::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n   'after_photos'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    NULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT ELSE NULL::INT\n    END AS csat,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'photo_done' -- datos desde 20 de diciembre 2022\nAND column_value NOT LIKE 'sale%'\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2\n)\n, proc_supply_schedules AS (\nSELECT\n    begin_date_tz,\n    begin_date,\n    schedule_id,\n    loc_country\nFROM {{ ref('proc_supply_schedules') }} \n)\n, csat_photo_done_wsp_new AS ( \nSELECT \n    13::INT AS id_survey,\n    proc_supply_schedules.begin_date_tz AS created_at,\n    proc_supply_schedules.begin_date AS created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    csat_photo_done.property_id,\n    NULL::INT AS subscription_id,\n    appraiser::VARCHAR AS appraiser_name,\n    NULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    TRANSLATE(proc_supply_schedules.loc_country, '\u00e9', 'e') AS country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT ELSE NULL::INT \n    END AS csat,\n    comments\nFROM  {{ref('stg_new_nps_visit_photo_done')}} AS csat_photo_done -- datos desde el 02 de junio 2022\nLEFT JOIN proc_supply_schedules\n    ON proc_supply_schedules.schedule_id = csat_photo_done.schedule_id\nWHERE TRUE\nAND type = 'rent'\nAND created_at < '2022-12-20'::DATE -- para no duplicar respuestas\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    csat,\n    comments\nFROM csat_photo_done_comm\nUNION ALL\nSELECT \n    *\nFROM csat_photo_done_wsp_new", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_csat_landlord_photo.sql", "original_file_path": "models/processing/cx/proc_csat_landlord_photo.sql", "name": "proc_csat_landlord_photo", "alias": "proc_csat_landlord_photo", "checksum": {"name": "sha256", "checksum": "f2be9d5e5d73b6f7efb3631b2241b885be0dfa791eff363581898f45b89fc04d"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["proc_supply_schedules"], ["stg_new_nps_visit_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_csat_landlord_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.524215, "compiled_code": "\n\nWITH csat_photo_done_comm AS (\nSELECT \n    13::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n   'after_photos'::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    NULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT ELSE NULL::INT\n    END AS csat,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'photo_done' -- datos desde 20 de diciembre 2022\nAND column_value NOT LIKE 'sale%'\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2\n)\n, proc_supply_schedules AS (\nSELECT\n    begin_date_tz,\n    begin_date,\n    schedule_id,\n    loc_country\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\" \n)\n, csat_photo_done_wsp_new AS ( \nSELECT \n    13::INT AS id_survey,\n    proc_supply_schedules.begin_date_tz AS created_at,\n    proc_supply_schedules.begin_date AS created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    csat_photo_done.property_id,\n    NULL::INT AS subscription_id,\n    appraiser::VARCHAR AS appraiser_name,\n    NULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    TRANSLATE(proc_supply_schedules.loc_country, '\u00e9', 'e') AS country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT ELSE NULL::INT \n    END AS csat,\n    comments\nFROM  \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_photo_done\" AS csat_photo_done -- datos desde el 02 de junio 2022\nLEFT JOIN proc_supply_schedules\n    ON proc_supply_schedules.schedule_id = csat_photo_done.schedule_id\nWHERE TRUE\nAND type = 'rent'\nAND created_at < '2022-12-20'::DATE -- para no duplicar respuestas\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    csat,\n    comments\nFROM csat_photo_done_comm\nUNION ALL\nSELECT \n    *\nFROM csat_photo_done_wsp_new", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_csat_landlord_photo\""}, "model.houm.proc_nps_tenant_visit_cancel": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.stg_new_nps_visit_cancel_visit", "model.houm.stg_whatsapp_nps_visits_cancelled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant_visit_cancel"], "unique_id": "model.houm.proc_nps_tenant_visit_cancel", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_visit_cancel_comm AS (\nSELECT \n    8::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n    sflow_id AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL AS subscription_id,\n    max(CASE WHEN column_name  = 'APRAISER' THEN column_value END) AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id LIKE 'visit_cancel%' -- datos desde el 16 de diciembre 2022\nAND column_value NOT LIKE 'sale%'\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 5\n) \n, nps_visit_cancel_wsp_new AS (\nSELECT \n    8::INT AS id_survey,\n    created_at,\n    created_date,\n    cancel_detail AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM {{ref('stg_new_nps_visit_cancel_visit')}}\nWHERE TRUE\nAND created_at < '2022-12-16 9:53 PM'\n-- ORDER BY created_at ASC -- datos desde 09 junio 2022\n)\n, nps_visit_cancel_wsp_old AS (\nSELECT \n    4::INT AS id_survey,\n    created_at,\n    created_date,\n    'visit_cancel' AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    INITCAP(country) AS country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM {{ref('stg_whatsapp_nps_visits_cancelled')}}\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_visit_cancel_comm\nUNION ALL\nSELECT\n    *\nFROM nps_visit_cancel_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_visit_cancel_wsp_old", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant_visit_cancel.sql", "original_file_path": "models/processing/cx/proc_nps_tenant_visit_cancel.sql", "name": "proc_nps_tenant_visit_cancel", "alias": "proc_nps_tenant_visit_cancel", "checksum": {"name": "sha256", "checksum": "7e0edf7d7ec1a55884e687456ff4d20c837bf1592347f8554bf78c989ce2b2d4"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["stg_new_nps_visit_cancel_visit"], ["stg_whatsapp_nps_visits_cancelled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant_visit_cancel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.526148, "compiled_code": "\n\nWITH nps_visit_cancel_comm AS (\nSELECT \n    8::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n    sflow_id AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL AS subscription_id,\n    max(CASE WHEN column_name  = 'APRAISER' THEN column_value END) AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id LIKE 'visit_cancel%' -- datos desde el 16 de diciembre 2022\nAND column_value NOT LIKE 'sale%'\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 5\n) \n, nps_visit_cancel_wsp_new AS (\nSELECT \n    8::INT AS id_survey,\n    created_at,\n    created_date,\n    cancel_detail AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_cancel_visit\"\nWHERE TRUE\nAND created_at < '2022-12-16 9:53 PM'\n-- ORDER BY created_at ASC -- datos desde 09 junio 2022\n)\n, nps_visit_cancel_wsp_old AS (\nSELECT \n    4::INT AS id_survey,\n    created_at,\n    created_date,\n    'visit_cancel' AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    INITCAP(country) AS country,\n    recommendation::INT,\n    CASE\n        WHEN recommendation IN (9, 10)          THEN  100::INT\n        WHEN recommendation IN (7, 8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6)  THEN -100::INT\n        ELSE NULL\n    END AS nps, \n    comments \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_cancelled\"\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    nps,\n    comments\nFROM nps_visit_cancel_comm\nUNION ALL\nSELECT\n    *\nFROM nps_visit_cancel_wsp_new\nUNION ALL\nSELECT \n    *\nFROM nps_visit_cancel_wsp_old", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_visit_cancel\""}, "model.houm.proc_nps_landlord_poscontract": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc", "model.houm.stg_survicate_nps_landlord_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord_poscontract"], "unique_id": "model.houm.proc_nps_landlord_poscontract", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_pc_wsp_old AS (\nSELECT \n    7::INT AS id_survey,\n    created_at,\n    created_date,    \n    survey_type::VARCHAR,\n    CASE\n\t\tWHEN property_id = '-' THEN NULL::INT\n\t\tELSE property_id::INT\n\tEND AS property_id,\n\tNULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tname::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,   \n    country::VARCHAR,\n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps, \n    CASE \n            WHEN comments = '' OR comments = '-' THEN NULL \n            ELSE comments\n    END AS comments  \nFROM {{ref('stg_whatsapp_nps_rentas_propietary_pc')}}\nORDER BY created_at DESC\n)\n, nps_pc_survicate AS (\nSELECT\n    2::INT AS id_survey,\n    created_at,\n    created_date,\n    'propietary_poscontract'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    recommendation,\n    nps,\n    comments\nFROM {{ref('stg_survicate_nps_landlord_new_sub')}}\nWHERE created_date::DATE < '2021-10-25'\n)\n\nSELECT \n    *\nFROM nps_pc_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_pc_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord_poscontract.sql", "original_file_path": "models/processing/cx/proc_nps_landlord_poscontract.sql", "name": "proc_nps_landlord_poscontract", "alias": "proc_nps_landlord_poscontract", "checksum": {"name": "sha256", "checksum": "a7771ed4c448f45edc13803f8b88aea93af2b653e810d3184cdd206d1eebaf92"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_rentas_propietary_pc"], ["stg_survicate_nps_landlord_new_sub"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord_poscontract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5279381, "compiled_code": "\n\nWITH nps_pc_wsp_old AS (\nSELECT \n    7::INT AS id_survey,\n    created_at,\n    created_date,    \n    survey_type::VARCHAR,\n    CASE\n\t\tWHEN property_id = '-' THEN NULL::INT\n\t\tELSE property_id::INT\n\tEND AS property_id,\n\tNULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tname::VARCHAR AS applicant_name, \n    phone::VARCHAR AS applicant_phone,   \n    country::VARCHAR,\n    CASE \n        WHEN recommendation = '-' THEN NULL::INT\n        ELSE recommendation::INT \n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps, \n    CASE \n            WHEN comments = '' OR comments = '-' THEN NULL \n            ELSE comments\n    END AS comments  \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_propietary_pc\"\nORDER BY created_at DESC\n)\n, nps_pc_survicate AS (\nSELECT\n    2::INT AS id_survey,\n    created_at,\n    created_date,\n    'propietary_poscontract'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n\tNULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    recommendation,\n    nps,\n    comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_new_sub\"\nWHERE created_date::DATE < '2021-10-25'\n)\n\nSELECT \n    *\nFROM nps_pc_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_pc_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_poscontract\""}, "model.houm.proc_communications": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_messagebird_flow_response_schema", "model.houm.stg_messagebird_flow_response_values"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_communications"], "unique_id": "model.houm.proc_communications", "raw_code": "{{ config(materialized='table') }} \n\nSELECT\n    flow_response_values.invocation_id,\n    flow_response_values.created_at, \n    flow_response_schema.sflow_id,\n    flow_response_schema.column_id, \n    flow_response_schema.column_name,\n    flow_response_schema.column_des,\n    CASE\n        WHEN flow_response_values.column_value = ' ' OR \n        flow_response_values.column_value = 'No entend\u00ed su respuesta, por favor env\u00ede un mensaje con el n\u00famero que corresponda a la opci\u00f3n que desea.' \n        THEN NULL ELSE flow_response_values.column_value\n    END AS column_value\nFROM {{ref('stg_messagebird_flow_response_schema')}} AS flow_response_schema -- PREGUNTAS\nLEFT JOIN {{ref('stg_messagebird_flow_response_values')}} AS flow_response_values -- RESPUESTAS\n    ON flow_response_values.flow_id = flow_response_schema.flow_id\n    AND flow_response_values.sflow_id = flow_response_schema.sflow_id\n    AND flow_response_values.column_id = flow_response_schema.column_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_communications.sql", "original_file_path": "models/processing/cx/proc_communications.sql", "name": "proc_communications", "alias": "proc_communications", "checksum": {"name": "sha256", "checksum": "6630df7a1ff60274f21ab58512cf0332ac8e1365c6f7ee904a9a1a75f6512944"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_messagebird_flow_response_schema"], ["stg_messagebird_flow_response_values"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_communications.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1675970038.529637, "compiled_code": " \n\nSELECT\n    flow_response_values.invocation_id,\n    flow_response_values.created_at, \n    flow_response_schema.sflow_id,\n    flow_response_schema.column_id, \n    flow_response_schema.column_name,\n    flow_response_schema.column_des,\n    CASE\n        WHEN flow_response_values.column_value = ' ' OR \n        flow_response_values.column_value = 'No entend\u00ed su respuesta, por favor env\u00ede un mensaje con el n\u00famero que corresponda a la opci\u00f3n que desea.' \n        THEN NULL ELSE flow_response_values.column_value\n    END AS column_value\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_flow_response_schema\" AS flow_response_schema -- PREGUNTAS\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_messagebird_flow_response_values\" AS flow_response_values -- RESPUESTAS\n    ON flow_response_values.flow_id = flow_response_schema.flow_id\n    AND flow_response_values.sflow_id = flow_response_schema.sflow_id\n    AND flow_response_values.column_id = flow_response_schema.column_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_communications\""}, "model.houm.proc_csat_tenant_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications", "model.houm.proc_demand_schedules", "model.houm.stg_new_nps_visit_rental_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_csat_tenant_visit_done"], "unique_id": "model.houm.proc_csat_tenant_visit_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH csat_visit_done_comm AS (\nSELECT \n    11::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n    'visit_done'::TEXT AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL AS subscription_id,\n    max(CASE WHEN column_name  = 'APRAISER' THEN column_value END) AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT \n        ELSE NULL\n    END AS csat,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'visit_done_rent' -- datos desde 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2\n)\n, proc_demand_schedules AS (\nSELECT\n    begin_date_tz,\n    begin_date,\n    schedule_id\nFROM {{ ref('proc_demand_schedules') }} \n)\n, csat_visit_done_wsp_new AS (  \nSELECT \n    11::INT AS id_survey,\n    proc_demand_schedules.begin_date_tz AS created_at,\n    proc_demand_schedules.begin_date AS created_date,\n    'visit_done'::TEXT AS survey_type,\n    csat_visit_done.property_id,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation NOT IN (1,2,3,4,5) THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT ELSE NULL\n    END AS csat,\n    comments\nFROM  {{ref('stg_new_nps_visit_rental_visit_done')}} AS csat_visit_done -- datos desde el 25 de mayo 2022\nLEFT JOIN proc_demand_schedules\n    ON proc_demand_schedules.schedule_id = csat_visit_done.schedule_id\nWHERE TRUE\nAND created_at < '2022-12-16'\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    csat,\n    comments\nFROM csat_visit_done_comm\nUNION ALL\nSELECT \n    *\nFROM csat_visit_done_wsp_new", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_csat_tenant_visit_done.sql", "original_file_path": "models/processing/cx/proc_csat_tenant_visit_done.sql", "name": "proc_csat_tenant_visit_done", "alias": "proc_csat_tenant_visit_done", "checksum": {"name": "sha256", "checksum": "b2b5d84d7e629c134e9c1cb3550b823c05a8060ea014f17693642b40eb679bfb"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"], ["proc_demand_schedules"], ["stg_new_nps_visit_rental_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_csat_tenant_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.531363, "compiled_code": "\n\nWITH csat_visit_done_comm AS (\nSELECT \n    11::INT AS id_survey,\n    invocation_id, \n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::TIMESTAMPTZ AS created_at,\n    max(CASE WHEN column_name  = 'ANSWET_TIMESTAMP' THEN column_value END)::DATE AS created_date,\n    'visit_done'::TEXT AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    NULL AS subscription_id,\n    max(CASE WHEN column_name  = 'APRAISER' THEN column_value END) AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END) AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT \n        ELSE NULL\n    END AS csat,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END) AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'visit_done_rent' -- datos desde 16 de diciembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2\n)\n, proc_demand_schedules AS (\nSELECT\n    begin_date_tz,\n    begin_date,\n    schedule_id\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\" \n)\n, csat_visit_done_wsp_new AS (  \nSELECT \n    11::INT AS id_survey,\n    proc_demand_schedules.begin_date_tz AS created_at,\n    proc_demand_schedules.begin_date AS created_date,\n    'visit_done'::TEXT AS survey_type,\n    csat_visit_done.property_id,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name,\n    NULL AS applicant_name,\n    NULL AS applicant_phone,\n    country,\n    CASE \n        WHEN recommendation NOT IN (1,2,3,4,5) THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2,3) THEN -100::INT \n        WHEN recommendation = 4 THEN 0::INT \n        WHEN recommendation = 5 THEN 100::INT ELSE NULL\n    END AS csat,\n    comments\nFROM  \"houmdw_prod\".\"dbt_staging\".\"stg_new_nps_visit_rental_visit_done\" AS csat_visit_done -- datos desde el 25 de mayo 2022\nLEFT JOIN proc_demand_schedules\n    ON proc_demand_schedules.schedule_id = csat_visit_done.schedule_id\nWHERE TRUE\nAND created_at < '2022-12-16'\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    csat,\n    comments\nFROM csat_visit_done_comm\nUNION ALL\nSELECT \n    *\nFROM csat_visit_done_wsp_new", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_csat_tenant_visit_done\""}, "model.houm.proc_nps_landlord_photo": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_photo", "model.houm.stg_survicate_nps_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_landlord_photo"], "unique_id": "model.houm.proc_nps_landlord_photo", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_photo_wsp_old AS (\nSELECT \n    9::INT AS id_survey,\n    created_at, \n    created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    CASE\n        WHEN property_id = '-' THEN NULL::INT\n        ELSE property_id::INT \n\tEND AS property_id,\n\tNULL::INT AS subscription_id,\n    appraiser::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE\n        WHEN recommendation = '-' THEN NULL::INT\n\t\tELSE recommendation::INT\n\tEND AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n\tcomments\nFROM {{ref('stg_whatsapp_nps_photo')}}\n)\n, nps_photo_survicate AS ( \nSELECT \n    4::INT AS id_survey,\n    created_at,\n    created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    contactform1_name::VARCHAR AS applicant_name,\n    contactform1_phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    NULL::INT AS recommendation,\n    nps,\n    NULL AS comments \nFROM {{ref('stg_survicate_nps_photo_done')}}\nWHERE created_date < '2021-10-21'\n)\n\nSELECT \n    *\nFROM nps_photo_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_photo_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_landlord_photo.sql", "original_file_path": "models/processing/cx/proc_nps_landlord_photo.sql", "name": "proc_nps_landlord_photo", "alias": "proc_nps_landlord_photo", "checksum": {"name": "sha256", "checksum": "f4a3dbf78503801fb6f65938f5722ad06c0fb8f747cfeacd87490b573bf16eb1"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_photo"], ["stg_survicate_nps_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_landlord_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5333161, "compiled_code": "\n\nWITH nps_photo_wsp_old AS (\nSELECT \n    9::INT AS id_survey,\n    created_at, \n    created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    CASE\n        WHEN property_id = '-' THEN NULL::INT\n        ELSE property_id::INT \n\tEND AS property_id,\n\tNULL::INT AS subscription_id,\n    appraiser::VARCHAR AS appraiser_name,\n\tNULL::VARCHAR AS applicant_name,\n    NULL::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    CASE\n        WHEN recommendation = '-' THEN NULL::INT\n\t\tELSE recommendation::INT\n\tEND AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL::INT\n    END AS nps,\n\tcomments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_photo\"\n)\n, nps_photo_survicate AS ( \nSELECT \n    4::INT AS id_survey,\n    created_at,\n    created_date,\n    'after_photos'::VARCHAR AS survey_type,\n    NULL::INT AS property_id,\n    NULL::INT AS subscription_id,\n    NULL::VARCHAR AS appraiser_name,\n    contactform1_name::VARCHAR AS applicant_name,\n    contactform1_phone::VARCHAR AS applicant_phone,\n    country::VARCHAR,\n    NULL::INT AS recommendation,\n    nps,\n    NULL AS comments \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\"\nWHERE created_date < '2021-10-21'\n)\n\nSELECT \n    *\nFROM nps_photo_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_photo_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_landlord_photo\""}, "model.houm.proc_nps_tenant_visit_done": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_visits_done", "model.houm.stg_survicate_nps_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_nps_tenant_visit_done"], "unique_id": "model.houm.proc_nps_tenant_visit_done", "raw_code": "{{ config(materialized='view') }}\n\nWITH nps_visit_done_wsp_old AS (\nSELECT \n    3::INT AS id_survey,\n    created_at,\n    created_date,     \n    'visit_done' AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name, \n    NULL AS applicant_name,\n    NULL AS applicant_phone,  \n    'Chile' AS country, \n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM {{ref('stg_whatsapp_nps_visits_done')}}\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_visit_done_survicate AS (\nSELECT \n    1::INT AS id_survey,\n    created_at,\n    created_date,\n\t'visit_done' AS survey_type,\n\tNULL AS property_id,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n\tcontactform1_name AS applicant_name,\n\tcontactform1_phone AS applicant_phone,\n\tcountry,\n    recommendation::INT,\n    nps::INT,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END  AS comments\nFROM {{ref('stg_survicate_nps_visit_done')}} \nWHERE created_at < '2021-10-25'\n)\n\nSELECT \n    *\nFROM nps_visit_done_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_visit_done_survicate", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_nps_tenant_visit_done.sql", "original_file_path": "models/processing/cx/proc_nps_tenant_visit_done.sql", "name": "proc_nps_tenant_visit_done", "alias": "proc_nps_tenant_visit_done", "checksum": {"name": "sha256", "checksum": "d364dfbce1efb72b7c3c4c7457b72a0b419f38b37dcfb0eba8908961db38226e"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_visits_done"], ["stg_survicate_nps_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_nps_tenant_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.535032, "compiled_code": "\n\nWITH nps_visit_done_wsp_old AS (\nSELECT \n    3::INT AS id_survey,\n    created_at,\n    created_date,     \n    'visit_done' AS survey_type,\n    property_id::INT,\n    NULL AS subscription_id,\n    appraiser AS appraiser_name, \n    NULL AS applicant_name,\n    NULL AS applicant_phone,  \n    'Chile' AS country, \n    CASE \n        WHEN recommendation = '-' THEN NULL\n        ELSE recommendation::INT\n    END AS recommendation,\n    CASE\n        WHEN recommendation IN (9,10)          THEN  100::INT\n        WHEN recommendation IN (7,8)           THEN    0::INT\n        WHEN recommendation IN (0,1,2,3,4,5,6) THEN -100::INT\n        ELSE NULL\n    END AS nps,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_done\"\n-- ORDER BY created_at DESC -- datos hasta el 25 de mayo 2022\n)\n, nps_visit_done_survicate AS (\nSELECT \n    1::INT AS id_survey,\n    created_at,\n    created_date,\n\t'visit_done' AS survey_type,\n\tNULL AS property_id,\n    NULL AS subscription_id,\n    NULL AS appraiser_name,\n\tcontactform1_name AS applicant_name,\n\tcontactform1_phone AS applicant_phone,\n\tcountry,\n    recommendation::INT,\n    nps::INT,\n    CASE \n        WHEN comments = '' OR comments = '-' THEN NULL \n        ELSE comments\n    END  AS comments\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_visit_done\" \nWHERE created_at < '2021-10-25'\n)\n\nSELECT \n    *\nFROM nps_visit_done_wsp_old\nUNION ALL\nSELECT \n    *\nFROM nps_visit_done_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_nps_tenant_visit_done\""}, "model.houm.proc_ces_tenant_poscontract": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_communications"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_ces_tenant_poscontract"], "unique_id": "model.houm.proc_ces_tenant_poscontract", "raw_code": "{{ config(materialized='view') }}\n\nWITH ces_pc_comm AS (\nSELECT \n    12::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::VARCHAR AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR  AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR  AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT \n    ELSE NULL\n    END AS ces,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END)::VARCHAR AS comments\nFROM {{ref('proc_communications')}}\nWHERE TRUE \nAND sflow_id = 'tenant_poscontract' -- datos desde 27 de noviembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    ces,\n    comments\nFROM ces_pc_comm", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_ces_tenant_poscontract.sql", "original_file_path": "models/processing/cx/proc_ces_tenant_poscontract.sql", "name": "proc_ces_tenant_poscontract", "alias": "proc_ces_tenant_poscontract", "checksum": {"name": "sha256", "checksum": "c6a5f3f3500b4d64978129b0f8a4cf7668282b8c10590093baee3355526f6ed6"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_communications"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_ces_tenant_poscontract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5367308, "compiled_code": "\n\nWITH ces_pc_comm AS (\nSELECT \n    12::INT AS id_survey,\n    invocation_id, \n    created_at::TIMESTAMPTZ,\n    created_at::DATE AS created_date,\n    max(CASE WHEN column_name  = 'ROLE' THEN column_value END)::VARCHAR AS survey_type,\n    max(CASE WHEN column_name  = 'PROPERTY_ID' THEN column_value END)::INT AS property_id,\n    max(CASE WHEN column_name  = 'SUBSCRIPTION_ID' THEN column_value END)::VARCHAR AS subscription_id,\n    NULL AS appraiser_name,\n    max(CASE WHEN column_name  = 'NAME' THEN column_value END)::VARCHAR AS applicant_name,\n    max(CASE WHEN column_name  = 'PHONE' THEN column_value END)::VARCHAR  AS applicant_phone,\n    max(CASE WHEN column_name  = 'COUNTRY' THEN column_value END)::VARCHAR  AS country,\n    max(CASE WHEN column_name  = 'QUESTION_1' THEN column_value END)::INT AS recommendation,\n    CASE \n        WHEN recommendation IN (1,2) THEN -100::INT \n        WHEN recommendation = 3 THEN 0::INT \n        WHEN recommendation IN (4,5) THEN 100::INT \n    ELSE NULL\n    END AS ces,\n    max(CASE WHEN column_name  = 'QUESTION_2' THEN column_value END)::VARCHAR AS comments\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_communications\"\nWHERE TRUE \nAND sflow_id = 'tenant_poscontract' -- datos desde 27 de noviembre 2022\nAND invocation_id IS NOT NULL\nGROUP BY 1, 2, 3, 4\n)\n\nSELECT\n    id_survey,\n    created_at,\n    created_date,\n    survey_type,\n    property_id,\n    subscription_id,\n    appraiser_name,\n    applicant_name,\n    applicant_phone,\n    country,\n    recommendation,\n    ces,\n    comments\nFROM ces_pc_comm", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_ces_tenant_poscontract\""}, "model.houm.proc_csat_landlord": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_csat_landlord_photo", "model.houm.proc_survey_details"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_csat_landlord"], "unique_id": "model.houm.proc_csat_landlord", "raw_code": "{{ config(materialized='view') }}\n\nSELECT  csat.*\nFROM {{ref('proc_csat_landlord_photo')}} AS csat\nLEFT JOIN {{ref('proc_survey_details')}} survey_details\n    ON survey_details.id =  csat.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY csat.created_at DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_csat_landlord.sql", "original_file_path": "models/processing/cx/proc_csat_landlord.sql", "name": "proc_csat_landlord", "alias": "proc_csat_landlord", "checksum": {"name": "sha256", "checksum": "3d2f972b94ad40f7a10cec637ab047e35541de3ee6bcdc1b1c96dd4cd0a86b74"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_csat_landlord_photo"], ["proc_survey_details"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_csat_landlord.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "view"}, "created_at": 1675970038.5384052, "compiled_code": "\n\nSELECT  csat.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_csat_landlord_photo\" AS csat\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_survey_details\" survey_details\n    ON survey_details.id =  csat.id_survey\n    AND survey_details.client_type = 'landlord'::TEXT\nORDER BY csat.created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_csat_landlord\""}, "model.houm.proc_monthly_daily_inflation_mx": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_mx"], "unique_id": "model.houm.proc_monthly_daily_inflation_mx", "raw_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_mx') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "name": "proc_monthly_daily_inflation_mx", "alias": "proc_monthly_daily_inflation_mx", "checksum": {"name": "sha256", "checksum": "a0e46aeb50615f128eb111cbc1923708729639f05ba84ff98d007068472dc5ba"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_mx"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1675970038.540277, "compiled_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\""}, "model.houm.proc_monthly_daily_inflation_co": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_co"], "unique_id": "model.houm.proc_monthly_daily_inflation_co", "raw_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_co') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "name": "proc_monthly_daily_inflation_co", "alias": "proc_monthly_daily_inflation_co", "checksum": {"name": "sha256", "checksum": "d75ca539417ee8ab0d909840ac4fb787fc086054928d01b35a53f8a766a48228"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_co"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1675970038.5418398, "compiled_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\""}, "model.houm.proc_monthly_daily_inflation_cl": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_cl"], "unique_id": "model.houm.proc_monthly_daily_inflation_cl", "raw_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_cl') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "name": "proc_monthly_daily_inflation_cl", "alias": "proc_monthly_daily_inflation_cl", "checksum": {"name": "sha256", "checksum": "ed0edaf66573068c5a527e893215298f9e897dfa7d0d2bba03e13e9f4defc7b9"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1675970038.5433989, "compiled_code": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\""}, "model.houm.proc_demand_schedules_timing": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules_appraiserevent", "model.houm.stg_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.stg_propertydetails", "model.houm.stg_scheduler_appraisers", "seed.houm.seed_test_email", "model.houm.proc_properties_mz", "model.houm.dim_macrozones", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules_timing"], "unique_id": "model.houm.proc_demand_schedules_timing", "raw_code": "{{ config(materialized='table') }}\n\nWITH \nrelevant_events AS (\n    SELECT *\n    FROM {{ ref('proc_demand_schedules_appraiserevent') }} AS proc_demand_schedules_appraiserevent\n)\n\n, schedules_time AS (\n    SELECT \n        id schedule_id,\n        created_at,\n        begin_date,\n        end_date,\n        updated_at\n    FROM {{ ref('stg_scheduler_schedules')}}\n)\n-- modificar en un futuro, ideal utilizar proc_demand_schedules, pero no tiene timestamp de fecha\n\n, max_event AS (\n    SELECT \n    a.*\n    FROM relevant_events AS a    \n    INNER JOIN \n          (SELECT \n           schedule_id,\n           action,\n           MAX(created_at) AS created_at\n           FROM relevant_events \n           GROUP BY 1,2    \n          ) AS b \n        ON a.schedule_id = b.schedule_id\n            AND a.action = b.action \n            AND a.created_at = b.created_at\n)\n\n\n, arrived_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Arrived'\n)\n\n, start_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Started'\n)\n\n, done_event AS (\n    SELECT *\n    FROM max_event\n    WHERE action = 'Done'\n)\n\n, schedules AS (\n    SELECT \n        proc_demand_schedules.schedule_id,\n        proc_demand_schedules.property_id,\n        dim_macrozones.country AS country,\n        prop_mz.geo_id,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city,\n        proc_propertydetails.latitud,\n        proc_propertydetails.longitud,\n        schedules_time.created_at,\n        schedules_time.begin_date,\n        schedules_time.end_date,\n        schedules_time.updated_at,\n        proc_demand_schedules.status,\n        scheduler_appraisers.name,\n        proc_demand_schedules.roles, \n        proc_demand_schedules.schedule_type_name,\n        CASE WHEN proc_demand_schedules.email LIKE '%test.test%'\n             OR proc_demand_schedules.email LIKE '%test.com%'\n             OR proc_demand_schedules.applicant_id IS NULL \n             OR scheduler_appraisers.email in \n             ('oliver.houmtest@gmail.com',\n              'nadiana.cazorla@houm.com',\n              'ivan.santibanez@houm.com',\n              'luis.montecinos@houm.com',\n              'evelyn.gonzalez@houm.com',\n              'houmer_cl@houm.com',\n              'ivan.cerda@houm.com',\n              'alejandra.ramirez@houm.com',\n              'manuel.duran@houm.com',\n              'eyal.levy@houm.com',\n              'antoni.fuenmayor@houm.com',\n              'sonia.alvarado@houm.com') THEN TRUE\n             ELSE FALSE \n             END AS is_test,\n        CASE WHEN scheduler_appraisers.roles::text LIKE '%Dummy%' THEN TRUE \n             ELSE FALSE \n             END AS is_dummy   \n    FROM {{ ref('proc_demand_schedules') }} proc_demand_schedules\n    LEFT JOIN schedules_time \n       ON schedules_time.schedule_id = proc_demand_schedules.schedule_id\n    LEFT JOIN {{ ref('stg_propertydetails') }} proc_propertydetails\n       ON proc_propertydetails.property_id = proc_demand_schedules.property_id \n    LEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers      \n       ON scheduler_appraisers.email = proc_demand_schedules.appraiser_email\n    LEFT JOIN {{ ref('seed_test_email') }} AS test_persons\n        ON scheduler_appraisers.email = test_persons.email\n    LEFT JOIN {{ ref('proc_properties_mz') }} prop_mz\n       ON prop_mz.property_id = proc_demand_schedules.property_id\n    LEFT JOIN {{ ref('dim_macrozones') }} dim_macrozones  \n       ON dim_macrozones.geo_id = prop_mz.geo_id \n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n    WHERE TRUE\n    AND proc_demand_schedules.supply_relation!='New Properties'\n    AND scheduler_appraisers.roles::text NOT LIKE '%NonActive%'\n    AND proc_demand_schedules.begin_date IS NOT NULL \n    AND proc_demand_schedules.created_at IS NOT NULL \n    )\n\nSELECT \n    schedules.schedule_id,\n    schedules.property_id,\n    schedules.country,\n    schedules.geo_id,\n    schedules.mz_country,\n    schedules.mz_city,\n    schedules.location_id,\n    schedules.loc_country,\n    schedules.loc_region,\n    schedules.loc_city,\n    schedules.latitud latitude,\n    schedules.longitud longitude,\n    schedules.created_at,\n    schedules.begin_date,\n    schedules.end_date,\n    schedules.status,\n    schedules.schedule_type_name,\n    schedules.name houmer,\n    schedules.roles,\n    ST_Transform(ST_SetSRID(ST_Point(arrived_event.longitude, arrived_event.latitude), 4326), 3857) AS arrived_point,\n    ST_Transform(ST_SetSRID(ST_Point(start_event.longitude,  start_event.latitude), 4326), 3857) as start_point,  \n    ST_Transform(ST_SetSRID(ST_Point(done_event.longitude,  done_event.latitude), 4326), 3857) AS done_point,\n    ST_Transform(ST_SetSRID(ST_Point(schedules.longitud, schedules.latitud), 4326) , 3857) AS property_point ,\n    arrived_event.created_at AS arrived_date, -- fecha_llegada_visita,\n    start_event.created_at AS start_date, -- fecha_inicio_visita,\n    done_event.created_at AS done_date, --fecha_termino_visita\n    schedules.is_dummy,\n    schedules.is_test\nFROM schedules \nLEFT JOIN done_event\n   ON done_event.schedule_id = schedules.schedule_id\nLEFT JOIN start_event\n   ON start_event.schedule_id = schedules.schedule_id\nLEFT JOIN  arrived_event\n   ON arrived_event.schedule_id = schedules.schedule_id\nORDER BY schedules.schedule_id", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules_timing.sql", "original_file_path": "models/processing/demand/proc_demand_schedules_timing.sql", "name": "proc_demand_schedules_timing", "alias": "proc_demand_schedules_timing", "checksum": {"name": "sha256", "checksum": "aff7c79e62fc88dd8e085b03543d8cc82518b8de904c9adc35afb03f8eacd1da"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_demand_schedules_appraiserevent"], ["stg_scheduler_schedules"], ["proc_demand_schedules"], ["stg_propertydetails"], ["stg_scheduler_appraisers"], ["seed_test_email"], ["proc_properties_mz"], ["dim_macrozones"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules_timing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.544951, "compiled_code": "\n\nWITH \nrelevant_events AS (\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_appraiserevent\" AS proc_demand_schedules_appraiserevent\n)\n\n, schedules_time AS (\n    SELECT \n        id schedule_id,\n        created_at,\n        begin_date,\n        end_date,\n        updated_at\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\"\n)\n-- modificar en un futuro, ideal utilizar proc_demand_schedules, pero no tiene timestamp de fecha\n\n, max_event AS (\n    SELECT \n    a.*\n    FROM relevant_events AS a    \n    INNER JOIN \n          (SELECT \n           schedule_id,\n           action,\n           MAX(created_at) AS created_at\n           FROM relevant_events \n           GROUP BY 1,2    \n          ) AS b \n        ON a.schedule_id = b.schedule_id\n            AND a.action = b.action \n            AND a.created_at = b.created_at\n)\n\n\n, arrived_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Arrived'\n)\n\n, start_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Started'\n)\n\n, done_event AS (\n    SELECT *\n    FROM max_event\n    WHERE action = 'Done'\n)\n\n, schedules AS (\n    SELECT \n        proc_demand_schedules.schedule_id,\n        proc_demand_schedules.property_id,\n        dim_macrozones.country AS country,\n        prop_mz.geo_id,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city,\n        proc_propertydetails.latitud,\n        proc_propertydetails.longitud,\n        schedules_time.created_at,\n        schedules_time.begin_date,\n        schedules_time.end_date,\n        schedules_time.updated_at,\n        proc_demand_schedules.status,\n        scheduler_appraisers.name,\n        proc_demand_schedules.roles, \n        proc_demand_schedules.schedule_type_name,\n        CASE WHEN proc_demand_schedules.email LIKE '%test.test%'\n             OR proc_demand_schedules.email LIKE '%test.com%'\n             OR proc_demand_schedules.applicant_id IS NULL \n             OR scheduler_appraisers.email in \n             ('oliver.houmtest@gmail.com',\n              'nadiana.cazorla@houm.com',\n              'ivan.santibanez@houm.com',\n              'luis.montecinos@houm.com',\n              'evelyn.gonzalez@houm.com',\n              'houmer_cl@houm.com',\n              'ivan.cerda@houm.com',\n              'alejandra.ramirez@houm.com',\n              'manuel.duran@houm.com',\n              'eyal.levy@houm.com',\n              'antoni.fuenmayor@houm.com',\n              'sonia.alvarado@houm.com') THEN TRUE\n             ELSE FALSE \n             END AS is_test,\n        CASE WHEN scheduler_appraisers.roles::text LIKE '%Dummy%' THEN TRUE \n             ELSE FALSE \n             END AS is_dummy   \n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\" proc_demand_schedules\n    LEFT JOIN schedules_time \n       ON schedules_time.schedule_id = proc_demand_schedules.schedule_id\n    LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\" proc_propertydetails\n       ON proc_propertydetails.property_id = proc_demand_schedules.property_id \n    LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers      \n       ON scheduler_appraisers.email = proc_demand_schedules.appraiser_email\n    LEFT JOIN \"houmdw_prod\".\"analytics_team\".\"seed_test_email\" AS test_persons\n        ON scheduler_appraisers.email = test_persons.email\n    LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz\n       ON prop_mz.property_id = proc_demand_schedules.property_id\n    LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_macrozones  \n       ON dim_macrozones.geo_id = prop_mz.geo_id \n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\n    WHERE TRUE\n    AND proc_demand_schedules.supply_relation!='New Properties'\n    AND scheduler_appraisers.roles::text NOT LIKE '%NonActive%'\n    AND proc_demand_schedules.begin_date IS NOT NULL \n    AND proc_demand_schedules.created_at IS NOT NULL \n    )\n\nSELECT \n    schedules.schedule_id,\n    schedules.property_id,\n    schedules.country,\n    schedules.geo_id,\n    schedules.mz_country,\n    schedules.mz_city,\n    schedules.location_id,\n    schedules.loc_country,\n    schedules.loc_region,\n    schedules.loc_city,\n    schedules.latitud latitude,\n    schedules.longitud longitude,\n    schedules.created_at,\n    schedules.begin_date,\n    schedules.end_date,\n    schedules.status,\n    schedules.schedule_type_name,\n    schedules.name houmer,\n    schedules.roles,\n    ST_Transform(ST_SetSRID(ST_Point(arrived_event.longitude, arrived_event.latitude), 4326), 3857) AS arrived_point,\n    ST_Transform(ST_SetSRID(ST_Point(start_event.longitude,  start_event.latitude), 4326), 3857) as start_point,  \n    ST_Transform(ST_SetSRID(ST_Point(done_event.longitude,  done_event.latitude), 4326), 3857) AS done_point,\n    ST_Transform(ST_SetSRID(ST_Point(schedules.longitud, schedules.latitud), 4326) , 3857) AS property_point ,\n    arrived_event.created_at AS arrived_date, -- fecha_llegada_visita,\n    start_event.created_at AS start_date, -- fecha_inicio_visita,\n    done_event.created_at AS done_date, --fecha_termino_visita\n    schedules.is_dummy,\n    schedules.is_test\nFROM schedules \nLEFT JOIN done_event\n   ON done_event.schedule_id = schedules.schedule_id\nLEFT JOIN start_event\n   ON start_event.schedule_id = schedules.schedule_id\nLEFT JOIN  arrived_event\n   ON arrived_event.schedule_id = schedules.schedule_id\nORDER BY schedules.schedule_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\""}, "model.houm.proc_external_portal_leads_per_publication": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_country", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_external_portal_leads_per_publication"], "unique_id": "model.houm.proc_external_portal_leads_per_publication", "raw_code": "{{ \n        config(\n    materialized='table',\n    tags = ['arriendoasegurado','external_portal_integrations'],\n        ) \n    }}\n\nWITH destaques_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                                                                         AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                                                                            AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name                                                      AS load_status,\n           external_portal_integrations_loadstatus.uses_slot,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                                                           AS publication_business_type,\n           external_portal_integrations_portalplan.vigency                                                   AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name                                                 AS portal_name,\n           external_portal_integrations_externalportals.short_name                                           AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name                                                    AS country_name,\n           external_portal_integrations_country.iso_name                                                     AS country_iso_name,\n           LAG(publication_pretty_name)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt)                                        AS previous_state,\n           CASE\n               WHEN (previous_state != publication_pretty_name OR previous_state IS NULL) THEN 1\n               ELSE 0 END                                                                                    AS publication_change_aux\n\n    FROM {{ ref('stg_external_portal_integrations_publication_scd') }} AS pub\n\n             LEFT JOIN {{ ref('stg_external_portal_integrations_loadstatus') }} AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }} AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }} AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }} AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_country') }} AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n      AND audit_action != 'D'\n)\n\n   , periodos_destaques_aux AS (\n    SELECT\n        destaques_historicos_publicaciones.publication_id,\n        destaques_historicos_publicaciones.portal_name,\n        destaques_historicos_publicaciones.publication_business_type,\n        destaques_historicos_publicaciones.publication_pretty_name                                                                                      AS  publication_type,\n        destaques_historicos_publicaciones.country_name,\n        destaques_historicos_publicaciones.property_id                                                                                                  AS  property_id_publication,\n        destaques_historicos_publicaciones.audit_start_dt,\n        destaques_historicos_publicaciones.audit_end_dt_aux,\n        destaques_historicos_publicaciones.previous_state,\n        destaques_historicos_publicaciones.publication_change_aux,\n        SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )    AS  publication_change_logs\n\n    FROM destaques_historicos_publicaciones\n\n    WHERE TRUE\n)\n   , periodos_destaques AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           publication_business_type,\n           publication_type,\n           property_id_publication,\n           publication_change_logs,\n           MIN(audit_start_dt)   audit_start_dt,\n           MAX(audit_end_dt_aux) audit_end_dt_aux\n    FROM periodos_destaques_aux\n    GROUP BY 1, 2, 3, 4, 5, 6, 7\n)\n\n   , stg_demand_portalapplicant AS (\n    SELECT stg_demand_portalapplicant.id,\n           stg_demand_portalapplicant.created_at,\n           name,\n           last_name,\n           email,\n           phone,\n           CASE WHEN origin LIKE 'Inmuebles24 Premier' THEN 'Inmuebles24' ELSE origin END   AS origin_lead,\n           lead_id,\n           property_id                                                                      AS property_id_lead,\n           stg_demand_portalapplicant.business_type                                         AS business_type_lead,\n           proc_properties.country                                                          AS country_lead\n    FROM {{ ref('stg_demand_portalapplicant') }} AS stg_demand_portalapplicant\n             LEFT JOIN {{ ref('proc_properties') }} AS proc_properties ON stg_demand_portalapplicant.property_id = proc_properties.id\n    WHERE TRUE\n        AND stg_demand_portalapplicant.created_at > '2022-08-01'\n        AND proc_properties.country IS NOT NULL\n\n)\n--, final as (\nSELECT \n\n       periodos_destaques.publication_id,\n       COALESCE(periodos_destaques.property_id_publication, stg_demand_portalapplicant.property_id_lead)    AS property_id,\n       COALESCE(periodos_destaques.country_name, stg_demand_portalapplicant.country_lead)                   AS country,\n       COALESCE(periodos_destaques.portal_name, stg_demand_portalapplicant.origin_lead)                     AS portal,\n       COALESCE(periodos_destaques.publication_business_type,stg_demand_portalapplicant.business_type_lead) AS business_type,\n       CASE\n           WHEN periodos_destaques.publication_type IS NULL THEN 'Publication Type Not Found'\n           ELSE periodos_destaques.publication_type END                                                     AS publication_type,\n\n       periodos_destaques.publication_change_logs,\n       periodos_destaques.audit_start_dt,\n       periodos_destaques.audit_end_dt_aux,\n       stg_demand_portalapplicant.id demand_portalapplicant_id,\n       stg_demand_portalapplicant.created_at,\n       stg_demand_portalapplicant.name,\n       stg_demand_portalapplicant.last_name,\n       stg_demand_portalapplicant.email,\n       stg_demand_portalapplicant.phone,\n       stg_demand_portalapplicant.origin_lead,\n       stg_demand_portalapplicant.lead_id,\n       stg_demand_portalapplicant.property_id_lead,\n       stg_demand_portalapplicant.business_type_lead                                                             AS business_type_lead,\n       stg_demand_portalapplicant.country_lead \n\nFROM periodos_destaques\n         FULL OUTER JOIN stg_demand_portalapplicant\n                            ON periodos_destaques.property_id_publication = stg_demand_portalapplicant.property_id_lead\n                            AND periodos_destaques.publication_business_type = stg_demand_portalapplicant.business_type_lead\n                            AND periodos_destaques.portal_name = stg_demand_portalapplicant.origin_lead\n                            AND (periodos_destaques.audit_start_dt <= stg_demand_portalapplicant.created_at)\n                            AND (stg_demand_portalapplicant.created_at < periodos_destaques.audit_end_dt_aux)\n\nWHERE TRUE\n\nORDER BY publication_id, audit_start_dt ASC, created_at ASC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_external_portal_leads_per_publication.sql", "original_file_path": "models/processing/demand/proc_external_portal_leads_per_publication.sql", "name": "proc_external_portal_leads_per_publication", "alias": "proc_external_portal_leads_per_publication", "checksum": {"name": "sha256", "checksum": "b2edd41f477a7cd3e1e9b2f7d3d743c4f979b3ec7656ce3406affeb5288bbd9a"}, "tags": ["dw", "processing", "demand", "arriendoasegurado", "external_portal_integrations"], "refs": [["stg_external_portal_integrations_publication_scd"], ["stg_external_portal_integrations_loadstatus"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_country"], ["stg_demand_portalapplicant"], ["proc_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_external_portal_leads_per_publication.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["arriendoasegurado", "external_portal_integrations"]}, "created_at": 1675970038.547035, "compiled_code": "\n\nWITH destaques_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                                                                         AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                                                                            AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name                                                      AS load_status,\n           external_portal_integrations_loadstatus.uses_slot,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                                                           AS publication_business_type,\n           external_portal_integrations_portalplan.vigency                                                   AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name                                                 AS portal_name,\n           external_portal_integrations_externalportals.short_name                                           AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name                                                    AS country_name,\n           external_portal_integrations_country.iso_name                                                     AS country_iso_name,\n           LAG(publication_pretty_name)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt)                                        AS previous_state,\n           CASE\n               WHEN (previous_state != publication_pretty_name OR previous_state IS NULL) THEN 1\n               ELSE 0 END                                                                                    AS publication_change_aux\n\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\" AS pub\n\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\" AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\" AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\" AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\" AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\" AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n      AND audit_action != 'D'\n)\n\n   , periodos_destaques_aux AS (\n    SELECT\n        destaques_historicos_publicaciones.publication_id,\n        destaques_historicos_publicaciones.portal_name,\n        destaques_historicos_publicaciones.publication_business_type,\n        destaques_historicos_publicaciones.publication_pretty_name                                                                                      AS  publication_type,\n        destaques_historicos_publicaciones.country_name,\n        destaques_historicos_publicaciones.property_id                                                                                                  AS  property_id_publication,\n        destaques_historicos_publicaciones.audit_start_dt,\n        destaques_historicos_publicaciones.audit_end_dt_aux,\n        destaques_historicos_publicaciones.previous_state,\n        destaques_historicos_publicaciones.publication_change_aux,\n        SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )    AS  publication_change_logs\n\n    FROM destaques_historicos_publicaciones\n\n    WHERE TRUE\n)\n   , periodos_destaques AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           publication_business_type,\n           publication_type,\n           property_id_publication,\n           publication_change_logs,\n           MIN(audit_start_dt)   audit_start_dt,\n           MAX(audit_end_dt_aux) audit_end_dt_aux\n    FROM periodos_destaques_aux\n    GROUP BY 1, 2, 3, 4, 5, 6, 7\n)\n\n   , stg_demand_portalapplicant AS (\n    SELECT stg_demand_portalapplicant.id,\n           stg_demand_portalapplicant.created_at,\n           name,\n           last_name,\n           email,\n           phone,\n           CASE WHEN origin LIKE 'Inmuebles24 Premier' THEN 'Inmuebles24' ELSE origin END   AS origin_lead,\n           lead_id,\n           property_id                                                                      AS property_id_lead,\n           stg_demand_portalapplicant.business_type                                         AS business_type_lead,\n           proc_properties.country                                                          AS country_lead\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS stg_demand_portalapplicant\n             LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS proc_properties ON stg_demand_portalapplicant.property_id = proc_properties.id\n    WHERE TRUE\n        AND stg_demand_portalapplicant.created_at > '2022-08-01'\n        AND proc_properties.country IS NOT NULL\n\n)\n--, final as (\nSELECT \n\n       periodos_destaques.publication_id,\n       COALESCE(periodos_destaques.property_id_publication, stg_demand_portalapplicant.property_id_lead)    AS property_id,\n       COALESCE(periodos_destaques.country_name, stg_demand_portalapplicant.country_lead)                   AS country,\n       COALESCE(periodos_destaques.portal_name, stg_demand_portalapplicant.origin_lead)                     AS portal,\n       COALESCE(periodos_destaques.publication_business_type,stg_demand_portalapplicant.business_type_lead) AS business_type,\n       CASE\n           WHEN periodos_destaques.publication_type IS NULL THEN 'Publication Type Not Found'\n           ELSE periodos_destaques.publication_type END                                                     AS publication_type,\n\n       periodos_destaques.publication_change_logs,\n       periodos_destaques.audit_start_dt,\n       periodos_destaques.audit_end_dt_aux,\n       stg_demand_portalapplicant.id demand_portalapplicant_id,\n       stg_demand_portalapplicant.created_at,\n       stg_demand_portalapplicant.name,\n       stg_demand_portalapplicant.last_name,\n       stg_demand_portalapplicant.email,\n       stg_demand_portalapplicant.phone,\n       stg_demand_portalapplicant.origin_lead,\n       stg_demand_portalapplicant.lead_id,\n       stg_demand_portalapplicant.property_id_lead,\n       stg_demand_portalapplicant.business_type_lead                                                             AS business_type_lead,\n       stg_demand_portalapplicant.country_lead \n\nFROM periodos_destaques\n         FULL OUTER JOIN stg_demand_portalapplicant\n                            ON periodos_destaques.property_id_publication = stg_demand_portalapplicant.property_id_lead\n                            AND periodos_destaques.publication_business_type = stg_demand_portalapplicant.business_type_lead\n                            AND periodos_destaques.portal_name = stg_demand_portalapplicant.origin_lead\n                            AND (periodos_destaques.audit_start_dt <= stg_demand_portalapplicant.created_at)\n                            AND (stg_demand_portalapplicant.created_at < periodos_destaques.audit_end_dt_aux)\n\nWHERE TRUE\n\nORDER BY publication_id, audit_start_dt ASC, created_at ASC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_portal_leads_per_publication\""}, "model.houm.proc_demand_schedules": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules"], "unique_id": "model.houm.proc_demand_schedules", "raw_code": "{{ config(materialized='table') }}\n\nSELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    (timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE created_at,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE begin_date,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE AS begin_date_tz,\n    (timezone(prop_mz.timezone, schedules.end_date)::TIMESTAMP WITH TIME ZONE)::DATE end_date,\n    (timezone(prop_mz.timezone, schedules.updated_at)::TIMESTAMP WITH TIME ZONE)::DATE updated_at,\n    schedules.prop_id AS property_id,\n    properties.supply_source,\n    properties.supply_relation,\n    schedules.status,\n    schedules.origin,\n    scheduler_scheduletypes.name AS schedule_type_name,\n    scheduler_appraisers.roles,\n    scheduler_appraisers.email AS appraiser_email,\n    applicant.email, --AS applicant_email\n    applicant.id AS  applicant_id\nFROM {{ ref('stg_scheduler_schedules') }} AS schedules\nLEFT JOIN {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes\n    ON scheduler_scheduletypes.id  = schedules.schedule_type_id\nLEFT JOIN {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id  = schedules.id\nLEFT JOIN {{ ref('stg_arriendoasegurado_applicant') }} AS applicant\n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n    ON prop_mz.property_id = schedules.prop_id\nLEFT JOIN {{ ref('proc_properties') }} AS properties\n    ON properties.id = schedules.prop_id\nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} AS scheduler_appraisers\n    ON scheduler_appraisers.id = schedules.appraiser_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name in ('Visit','SalesVisit')", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules.sql", "original_file_path": "models/processing/demand/proc_demand_schedules.sql", "name": "proc_demand_schedules", "alias": "proc_demand_schedules", "checksum": {"name": "sha256", "checksum": "8e9bb5195037cebf291081e52a25f9198d4e365edca0707bcf5ef62ff49f35a2"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"], ["stg_scheduler_appraisers"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.5489962, "compiled_code": "\n\nSELECT\n    schedules.id AS schedule_id,\n    prop_mz.geo_id,\n    macrozone.country AS mz_country,\n    macrozone.city AS mz_city,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city,\n    (timezone(prop_mz.timezone, schedules.created_at)::TIMESTAMP WITH TIME ZONE)::DATE created_at,\n    (timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE)::DATE begin_date,\n    timezone(prop_mz.timezone, schedules.begin_date)::TIMESTAMP WITH TIME ZONE AS begin_date_tz,\n    (timezone(prop_mz.timezone, schedules.end_date)::TIMESTAMP WITH TIME ZONE)::DATE end_date,\n    (timezone(prop_mz.timezone, schedules.updated_at)::TIMESTAMP WITH TIME ZONE)::DATE updated_at,\n    schedules.prop_id AS property_id,\n    properties.supply_source,\n    properties.supply_relation,\n    schedules.status,\n    schedules.origin,\n    scheduler_scheduletypes.name AS schedule_type_name,\n    scheduler_appraisers.roles,\n    scheduler_appraisers.email AS appraiser_email,\n    applicant.email, --AS applicant_email\n    applicant.id AS  applicant_id\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes\n    ON scheduler_scheduletypes.id  = schedules.schedule_type_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id  = schedules.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant\n    ON applicant.id = scheduler_schedulehasapplicant.applicant_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = schedules.prop_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\n    ON properties.id = schedules.prop_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" AS scheduler_appraisers\n    ON scheduler_appraisers.id = schedules.appraiser_id\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = prop_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE scheduler_scheduletypes.name in ('Visit','SalesVisit')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\""}, "model.houm.proc_demand_schedules_appraiserevent": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules_appraiserevent"], "unique_id": "model.houm.proc_demand_schedules_appraiserevent", "raw_code": "SELECT \n    *\nFROM {{ ref('stg_scheduler_appraiserevent') }} AS scheduler_appraiserevent \nWHERE action IN ('Done', 'Arrived', 'Started')", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules_appraiserevent.sql", "original_file_path": "models/processing/demand/proc_demand_schedules_appraiserevent.sql", "name": "proc_demand_schedules_appraiserevent", "alias": "proc_demand_schedules_appraiserevent", "checksum": {"name": "sha256", "checksum": "d0ab4ce89700f967631fa380669205bd3b63620f76110eae05e7f401b3e10b96"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_appraiserevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules_appraiserevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.550879, "compiled_code": "SELECT \n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" AS scheduler_appraiserevent \nWHERE action IN ('Done', 'Arrived', 'Started')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_appraiserevent\""}, "model.houm.proc_first_cancelation": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_first_cancelation"], "unique_id": "model.houm.proc_first_cancelation", "raw_code": "{{ config(materialized='table') }}\nWITH \ncancelation_events AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    editor AS origin , \n    user_id , \n    appraiser_id , \n    0 AS latitude , \n    0 AS longitude \nFROM {{ ref('stg_scheduler_scheduleevent') }}    \nWHERE true \nAND action = 'Cancelled' \nAND editor != 'Appraiser'\n  --and created_at > '2022-07-01'::date\n)\n\n, appraiser_cancelations AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    'App' AS origin , \n    NULL::FLOAT  AS user_id , \n    appraiser_id , \n    latitude , \n    longitude \nFROM {{ ref('stg_scheduler_appraiserevent') }}     \nWHERE TRUE \nAND action  = 'Cancelled' \n--    and created_at > '2022-07-01'::date\n)\n\n, Union_Cancelation_table AS (\nSELECT \n    * \nFROM cancelation_events\nUNION\nSELECT \n    * \nFROM appraiser_cancelations\n)\n\n, rank_schedules AS (\nSELECT \n    *, \n    RANK() OVER (PARTITION BY schedule_id ORDER BY created_at) AS rank_visita\nFROM Union_Cancelation_table\n)\n\nSELECT\n    schedule_id ,\n    action ,\n    created_at AS cancelled_at ,\n    origin ,\n    user_id\nFROM rank_schedules\nWHERE rank_visita=1", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_first_cancelation.sql", "original_file_path": "models/processing/demand/proc_first_cancelation.sql", "name": "proc_first_cancelation", "alias": "proc_first_cancelation", "checksum": {"name": "sha256", "checksum": "762a4a08045a4d518b1e5ba81eee9c3436aa03880147713e60adae8f7d28b5cf"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_scheduleevent"], ["stg_scheduler_appraiserevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_first_cancelation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.552447, "compiled_code": "\nWITH \ncancelation_events AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    editor AS origin , \n    user_id , \n    appraiser_id , \n    0 AS latitude , \n    0 AS longitude \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\"    \nWHERE true \nAND action = 'Cancelled' \nAND editor != 'Appraiser'\n  --and created_at > '2022-07-01'::date\n)\n\n, appraiser_cancelations AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    'App' AS origin , \n    NULL::FLOAT  AS user_id , \n    appraiser_id , \n    latitude , \n    longitude \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\"     \nWHERE TRUE \nAND action  = 'Cancelled' \n--    and created_at > '2022-07-01'::date\n)\n\n, Union_Cancelation_table AS (\nSELECT \n    * \nFROM cancelation_events\nUNION\nSELECT \n    * \nFROM appraiser_cancelations\n)\n\n, rank_schedules AS (\nSELECT \n    *, \n    RANK() OVER (PARTITION BY schedule_id ORDER BY created_at) AS rank_visita\nFROM Union_Cancelation_table\n)\n\nSELECT\n    schedule_id ,\n    action ,\n    created_at AS cancelled_at ,\n    origin ,\n    user_id\nFROM rank_schedules\nWHERE rank_visita=1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_first_cancelation\""}, "model.houm.proc_demand_lead_activities": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_portalhoum", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_whatsapp", "model.houm.proc_demand_marketingapplicant", "model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_lead_activities"], "unique_id": "model.houm.proc_demand_lead_activities", "raw_code": "{{ config(materialized='table')}}\n\nWITH portalhoum AS (\nSELECT 'PH - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       last_name,\n       phone,\n       email,\n       lead_id,\n       'Houm Marketplace'::TEXT AS source,\n       origin,\n       'Houm' AS portal,\n       property_id,\n       business_type,\n       SPLIT_PART(utm_content,'_',1) AS campaign_id,                    \n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       utm_campaign,\n       utm_content,\n       utm_medium,\n       utm_source,\n       utm_term\nFROM {{ ref('proc_demand_portalhoum') }} proc_demand_portalhoum\n)\n, portalapplicant AS (\nSELECT 'PA - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       last_name,\n       phone,\n       email,\n       lead_id,\n       'Portal Applicant'::TEXT AS source,\n       origin,\n       origin AS portal,\n       property_id,\n       business_type,\n       NULL AS campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       NULL AS utm_campaign,\n       NULL AS utm_content,\n       NULL AS utm_medium,\n       NULL AS utm_source,\n       NULL AS utm_term\nFROM {{ ref('proc_demand_portalapplicant') }} proc_demand_portalapplicant\n)\n, whatsapp AS (\nSELECT 'WP - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       NULL AS name,\n       NULL AS last_name,\n       phone,\n       NULL AS email,\n       lead_id,\n       'Whatsapp'::TEXT AS source,\n       origin_clean AS origin,\n       CASE\n              WHEN origin_clean IN ('Houm', 'Otro', 'MessageBird') THEN 'Houm'\n       ELSE origin_clean END AS portal,\n       property_id,\n       business_type,\n       NULL AS campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       NULL AS utm_campaign,\n       NULL AS utm_content,\n       NULL AS utm_medium,\n       NULL AS utm_source,\n       NULL AS utm_term\nFROM {{ ref('proc_demand_whatsapp') }} proc_demand_whatsapp\n)\n, marketingapplicant AS (\nSELECT 'MKT - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       NULL AS last_name,\n       phone,\n       email,\n       lead_id,\n       'Marketing'::TEXT AS source,\n       origin,\n       NULL AS portal,\n       NULL AS property_id,\n       business_type,\n       campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       utm_campaign,\n       NULL AS utm_content,\n       utm_medium,\n       utm_source,\n       NULL AS utm_term\nFROM {{ ref('proc_demand_marketingapplicant') }} proc_demand_marketingapplicant\n)\n, demand_leads AS (\nSELECT *\nFROM portalhoum\nUNION ALL\nSELECT *\nFROM portalapplicant\nUNION ALL\nSELECT *\nFROM whatsapp\nUNION ALL\nSELECT *\nFROM marketingapplicant\n)\n\nSELECT demand_leads.activity_id,\n       demand_leads.created_at,\n       COALESCE((TIMEZONE(dim_macrozones.timezone, demand_leads.created_at)::timestamp WITH TIME ZONE)::DATE, demand_leads.created_at::DATE) AS created_at_utc,\n       dim_macrozones.timezone,\n       demand_leads.updated_at,\n       demand_leads.name,\n       demand_leads.last_name,\n       demand_leads.phone,\n       demand_leads.email,\n       demand_leads.lead_id,\n       demand_leads.source,\n       demand_leads.origin,\n       demand_leads.portal,\n       demand_leads.property_id,\n       demand_leads.business_type,\n       demand_leads.campaign_id,\n       CASE WHEN marketing_paid_media.campaign_id IS NOT NULL THEN TRUE ELSE FALSE END AS is_paid_media_lead, \n       demand_leads.geo_id,\n       demand_leads.country,\n       demand_leads.region_houm,\n       demand_leads.location_id,\n       demand_leads.loc_country,\n       demand_leads.loc_region,\n       demand_leads.loc_city,\n       demand_leads.utm_campaign,\n       demand_leads.utm_content,\n       demand_leads.utm_medium,\n       demand_leads.utm_source,\n       demand_leads.utm_term\nFROM demand_leads\nLEFT JOIN {{ ref('dim_macrozones') }} dim_macrozones \n       ON dim_macrozones.geo_id = demand_leads.geo_id\nLEFT JOIN {{ ref('proc_marketing_paid_media_campaign') }} AS marketing_paid_media\n       ON marketing_paid_media.campaign_id = demand_leads.campaign_id \nORDER BY created_at_utc DESC", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_lead_activities.sql", "original_file_path": "models/processing/demand/proc_demand_lead_activities.sql", "name": "proc_demand_lead_activities", "alias": "proc_demand_lead_activities", "checksum": {"name": "sha256", "checksum": "a9b1a87e7d00d60d7e66fe27a7164e53171b5042712b2ef6712400662cb1d070"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_demand_portalhoum"], ["proc_demand_portalapplicant"], ["proc_demand_whatsapp"], ["proc_demand_marketingapplicant"], ["dim_macrozones"], ["proc_marketing_paid_media_campaign"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_lead_activities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.554323, "compiled_code": "\n\nWITH portalhoum AS (\nSELECT 'PH - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       last_name,\n       phone,\n       email,\n       lead_id,\n       'Houm Marketplace'::TEXT AS source,\n       origin,\n       'Houm' AS portal,\n       property_id,\n       business_type,\n       SPLIT_PART(utm_content,'_',1) AS campaign_id,                    \n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       utm_campaign,\n       utm_content,\n       utm_medium,\n       utm_source,\n       utm_term\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalhoum\" proc_demand_portalhoum\n)\n, portalapplicant AS (\nSELECT 'PA - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       last_name,\n       phone,\n       email,\n       lead_id,\n       'Portal Applicant'::TEXT AS source,\n       origin,\n       origin AS portal,\n       property_id,\n       business_type,\n       NULL AS campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       NULL AS utm_campaign,\n       NULL AS utm_content,\n       NULL AS utm_medium,\n       NULL AS utm_source,\n       NULL AS utm_term\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalapplicant\" proc_demand_portalapplicant\n)\n, whatsapp AS (\nSELECT 'WP - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       NULL AS name,\n       NULL AS last_name,\n       phone,\n       NULL AS email,\n       lead_id,\n       'Whatsapp'::TEXT AS source,\n       origin_clean AS origin,\n       CASE\n              WHEN origin_clean IN ('Houm', 'Otro', 'MessageBird') THEN 'Houm'\n       ELSE origin_clean END AS portal,\n       property_id,\n       business_type,\n       NULL AS campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       NULL AS utm_campaign,\n       NULL AS utm_content,\n       NULL AS utm_medium,\n       NULL AS utm_source,\n       NULL AS utm_term\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_whatsapp\" proc_demand_whatsapp\n)\n, marketingapplicant AS (\nSELECT 'MKT - ' || id AS activity_id,\n       created_at,\n       updated_at,\n       name,\n       NULL AS last_name,\n       phone,\n       email,\n       lead_id,\n       'Marketing'::TEXT AS source,\n       origin,\n       NULL AS portal,\n       NULL AS property_id,\n       business_type,\n       campaign_id,\n       geo_id,\n       dim_mz_country AS country,\n       dim_mz_region AS region_houm,\n       location_id,\n       loc_country,\n       loc_region,\n       loc_city,\n       utm_campaign,\n       NULL AS utm_content,\n       utm_medium,\n       utm_source,\n       NULL AS utm_term\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_marketingapplicant\" proc_demand_marketingapplicant\n)\n, demand_leads AS (\nSELECT *\nFROM portalhoum\nUNION ALL\nSELECT *\nFROM portalapplicant\nUNION ALL\nSELECT *\nFROM whatsapp\nUNION ALL\nSELECT *\nFROM marketingapplicant\n)\n\nSELECT demand_leads.activity_id,\n       demand_leads.created_at,\n       COALESCE((TIMEZONE(dim_macrozones.timezone, demand_leads.created_at)::timestamp WITH TIME ZONE)::DATE, demand_leads.created_at::DATE) AS created_at_utc,\n       dim_macrozones.timezone,\n       demand_leads.updated_at,\n       demand_leads.name,\n       demand_leads.last_name,\n       demand_leads.phone,\n       demand_leads.email,\n       demand_leads.lead_id,\n       demand_leads.source,\n       demand_leads.origin,\n       demand_leads.portal,\n       demand_leads.property_id,\n       demand_leads.business_type,\n       demand_leads.campaign_id,\n       CASE WHEN marketing_paid_media.campaign_id IS NOT NULL THEN TRUE ELSE FALSE END AS is_paid_media_lead, \n       demand_leads.geo_id,\n       demand_leads.country,\n       demand_leads.region_houm,\n       demand_leads.location_id,\n       demand_leads.loc_country,\n       demand_leads.loc_region,\n       demand_leads.loc_city,\n       demand_leads.utm_campaign,\n       demand_leads.utm_content,\n       demand_leads.utm_medium,\n       demand_leads.utm_source,\n       demand_leads.utm_term\nFROM demand_leads\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_macrozones \n       ON dim_macrozones.geo_id = demand_leads.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" AS marketing_paid_media\n       ON marketing_paid_media.campaign_id = demand_leads.campaign_id \nORDER BY created_at_utc DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\""}, "model.houm.proc_demand_whatsapp": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_whatsapp", "model.houm.dim_macrozones", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_whatsapp"], "unique_id": "model.houm.proc_demand_whatsapp", "raw_code": "{{ config(materialized='table') }}\n\nWITH properties_mz AS (\n    SELECT properties_mz.property_id,\n           properties_mz.geo_id\n    FROM {{ ref('proc_properties_mz') }} AS properties_mz\n)\n, lead AS (\nSELECT DISTINCT id AS lead_id,\n                country AS country_suffix,\n                CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n                -- country lead\n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 'Chile'\n                    WHEN country_suffix LIKE 'co' THEN 'Colombia'\n                    WHEN country_suffix LIKE 'mx' THEN 'M\u00e9xico'\n                ELSE NULL END AS country,\n                --   \n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 79::INT\n                    WHEN country_suffix LIKE 'co' THEN 14::INT\n                    WHEN country_suffix LIKE 'mx' THEN 104::INT\n                ELSE NULL END AS geo_id_country,\n                CASE\n                    WHEN city LIKE '%Medell_n%' THEN 109::INT\n                    WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n                    WHEN city LIKE '%Bogot_%' THEN 14::INT\n                    WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                    WHEN city LIKE '%Santiago%' THEN 79::INT\n                    WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                    WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                    WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                    WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                    WHEN city LIKE '%Monterrey%' THEN 54::INT\n                    WHEN city LIKE '%Nuevo Le_n%' THEN 54::INT\n                    WHEN city LIKE '%MTY%' THEN 54::INT\n                    WHEN city LIKE '%Tijuana%' THEN 67::INT\n                    WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                    WHEN city LIKE '%Puebla%' THEN 104::INT\n                    WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                    WHEN city LIKE '%GDL%' THEN 30::INT\n                    WHEN city LIKE '%CDMX%' THEN 104::INT\n                    WHEN city LIKE '%M_xico%' THEN 104::INT\n                ELSE NULL END AS geo_id_city,\n                COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM {{ ref('stg_demand_lead') }}\n)\n, stg_demand_whatsapp AS (\nSELECT  stg_demand_whatsapp.id,\n        stg_demand_whatsapp.created_at,\n        stg_demand_whatsapp.updated_at,\n        stg_demand_whatsapp.phone,\n        stg_demand_whatsapp.lead_id,\n        stg_demand_whatsapp.property_id,\n        properties_mz.geo_id AS geo_id_property,\n        stg_demand_whatsapp.business_type,\n        stg_demand_whatsapp.to_number,\n        CASE\n            WHEN to_number LIKE '+57%' THEN 14::INT\n            WHEN to_number LIKE '57%' THEN 14::INT\n            WHEN to_number LIKE '+56%' THEN 79::INT\n            WHEN to_number LIKE '56%' THEN 79::INT\n            WHEN to_number LIKE '+52%' THEN 104::INT\n            WHEN to_number LIKE '52%' THEN 104::INT \n        END AS geo_id_to_number,\n        stg_demand_whatsapp.origin,\n        CASE\n            --Portales\n            WHEN origin ILIKE '%MercadoLibre%' THEN 'MercadoLibre'\n            WHEN origin ILIKE 'Portal Inmobiliario' THEN 'MercadoLibre'\n            WHEN origin ILIKE '%meli%' THEN 'MercadoLibre'\n            WHEN origin ILIKE '%Inmuebles24%premier%' THEN 'Inmuebles24 Premier'\n            WHEN origin ILIKE '%Inmuebles24%' THEN 'Inmuebles24'\n            WHEN origin ILIKE '%I24%' THEN 'Inmuebles24'\n            WHEN origin ILIKE '%yapo%' THEN 'Yapo'\n            WHEN origin ILIKE '%Properati%' THEN 'Proppit'\n            WHEN origin ILIKE '%Properaty%' THEN 'Proppit'\n            WHEN origin ILIKE '%Chile Propiedades%' THEN 'Chile Propiedades'\n            WHEN origin ILIKE '%Proppit%' THEN 'Proppit'\n            WHEN origin ILIKE '%ciencuadras%' THEN 'Ciencuadras'\n            WHEN origin ILIKE '%Metrocuadrado%' THEN 'MetroCuadrado'\n            WHEN origin ILIKE '%inca%aiz%' THEN 'FincaRaiz'\n            WHEN origin ILIKE '%Vivanuncios%' THEN 'Vivanuncios'\n            WHEN origin ILIKE '%GoPlaceIt%' THEN 'GoPlaceIt'\n            WHEN origin ILIKE '%iCasas%' THEN 'iCasas'\n            WHEN origin ILIKE '%lamudi%' THEN 'Lamudi'\n            WHEN origin ILIKE '%metroscubicos%' THEN 'MetrosCubicos'\n            WHEN origin ILIKE '%Segundamano%' THEN 'Segundamano'\n            WHEN origin ILIKE '%TocToc%' THEN 'Segundamano'\n            WHEN origin ILIKE '%whatsapp%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%portales%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%essa%gebird%' THEN 'MessageBird'\n            --Houm\n            WHEN origin ILIKE '%houm%' THEN 'Houm'\n            WHEN origin ILIKE '%Marketplace%' THEN 'Houm'\n            WHEN origin ILIKE '%Asesor%a%' THEN 'Houm'\n            WHEN origin ILIKE '%.%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%property%' THEN 'Otro'\n            ELSE origin\n        END AS origin_clean,\n        CASE\n            WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 79::INT\n            WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 14::INT\n            WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 104::INT\n        ELSE NULL END AS geo_id_portal,\n        COALESCE(geo_id_property, geo_id_to_number, geo_id_portal) AS geo_id_whatsapp,\n        CASE\n            WHEN phone LIKE '+56%' THEN 'Chile'\n            WHEN phone LIKE '56%' THEN 'Chile'\n            WHEN phone LIKE '+57%' THEN 'Colombia'\n            WHEN phone LIKE '57%' THEN 'Colombia'\n            WHEN phone LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN phone LIKE '52%' THEN 'M\u00e9xico'\n            WHEN to_number LIKE '+56%' THEN 'Chile'\n            WHEN to_number LIKE '56%' THEN 'Chile'\n            WHEN to_number LIKE '+57%' THEN 'Colombia'\n            WHEN to_number LIKE '57%' THEN 'Colombia'\n            WHEN to_number LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN to_number LIKE '52%' THEN 'M\u00e9xico'\n            WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 'Chile'\n            WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 'Colombia'\n            WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 'M\u00e9xico'\n        ELSE NULL END AS country\nFROM {{ ref('stg_demand_whatsapp') }} AS stg_demand_whatsapp\nLEFT JOIN properties_mz \n    ON properties_mz.property_id = stg_demand_whatsapp.property_id\n)\n, stg_demand_whatsapp_2 AS (\nSELECT  stg_demand_whatsapp.id,\n        stg_demand_whatsapp.created_at,\n        stg_demand_whatsapp.updated_at,\n        stg_demand_whatsapp.phone,\n        stg_demand_whatsapp.country,\n        lead.country AS lead_country,\n        lead.city AS lead_city,\n        stg_demand_whatsapp.lead_id,\n        stg_demand_whatsapp.property_id,\n        stg_demand_whatsapp.business_type,\n        stg_demand_whatsapp.to_number,\n        stg_demand_whatsapp.origin,\n        stg_demand_whatsapp.origin_clean,\n        COALESCE(geo_id_whatsapp, geo_id_lead) AS geo_id\nFROM stg_demand_whatsapp\nLEFT JOIN lead \n    ON stg_demand_whatsapp.lead_id = lead.lead_id\n)\n, stg_demand_whatsapp_3 AS (\nSELECT  stg_demand_whatsapp_2.id,\n        stg_demand_whatsapp_2.created_at,\n        stg_demand_whatsapp_2.updated_at,\n        stg_demand_whatsapp_2.phone,\n        stg_demand_whatsapp_2.property_id,\n        stg_demand_whatsapp_2.business_type,\n        stg_demand_whatsapp_2.to_number,\n        stg_demand_whatsapp_2.lead_id,\n        stg_demand_whatsapp_2.origin,\n        stg_demand_whatsapp_2.origin_clean,\n        stg_demand_whatsapp_2.geo_id,\n        dim_mz.country AS dim_mz_country,\n        dim_mz.region_houm AS dim_mz_region,\n        dim_mz.city AS dim_mz_city,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        COALESCE(mz_country, stg_demand_whatsapp_2.country, lead_country, 'Unknown') AS country,\n        COALESCE(mz_city, CASE WHEN stg_demand_whatsapp_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_whatsapp_2\nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz \n    ON stg_demand_whatsapp_2.geo_id = dim_mz.geo_id\nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = stg_demand_whatsapp_2.geo_id\n)\n\nSELECT \n        stg_demand_whatsapp_3.id,\n        stg_demand_whatsapp_3.created_at,\n        stg_demand_whatsapp_3.updated_at,\n        stg_demand_whatsapp_3.phone,\n        stg_demand_whatsapp_3.property_id,\n        stg_demand_whatsapp_3.business_type,\n        stg_demand_whatsapp_3.to_number,\n        stg_demand_whatsapp_3.lead_id,\n        stg_demand_whatsapp_3.origin,\n        stg_demand_whatsapp_3.origin_clean,\n        stg_demand_whatsapp_3.geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM stg_demand_whatsapp_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = stg_demand_whatsapp_3.country AND translation.macrozone_city = stg_demand_whatsapp_3.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_whatsapp.sql", "original_file_path": "models/processing/demand/proc_demand_whatsapp.sql", "name": "proc_demand_whatsapp", "alias": "proc_demand_whatsapp", "checksum": {"name": "sha256", "checksum": "85b0b0a65d4ad958dd60539e889b6c5da1909c507df43abeac58073d2ef7a5d6"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties_mz"], ["stg_demand_lead"], ["stg_demand_whatsapp"], ["dim_macrozones"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.556227, "compiled_code": "\n\nWITH properties_mz AS (\n    SELECT properties_mz.property_id,\n           properties_mz.geo_id\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n)\n, lead AS (\nSELECT DISTINCT id AS lead_id,\n                country AS country_suffix,\n                CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n                -- country lead\n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 'Chile'\n                    WHEN country_suffix LIKE 'co' THEN 'Colombia'\n                    WHEN country_suffix LIKE 'mx' THEN 'M\u00e9xico'\n                ELSE NULL END AS country,\n                --   \n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 79::INT\n                    WHEN country_suffix LIKE 'co' THEN 14::INT\n                    WHEN country_suffix LIKE 'mx' THEN 104::INT\n                ELSE NULL END AS geo_id_country,\n                CASE\n                    WHEN city LIKE '%Medell_n%' THEN 109::INT\n                    WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n                    WHEN city LIKE '%Bogot_%' THEN 14::INT\n                    WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                    WHEN city LIKE '%Santiago%' THEN 79::INT\n                    WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                    WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                    WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                    WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                    WHEN city LIKE '%Monterrey%' THEN 54::INT\n                    WHEN city LIKE '%Nuevo Le_n%' THEN 54::INT\n                    WHEN city LIKE '%MTY%' THEN 54::INT\n                    WHEN city LIKE '%Tijuana%' THEN 67::INT\n                    WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                    WHEN city LIKE '%Puebla%' THEN 104::INT\n                    WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                    WHEN city LIKE '%GDL%' THEN 30::INT\n                    WHEN city LIKE '%CDMX%' THEN 104::INT\n                    WHEN city LIKE '%M_xico%' THEN 104::INT\n                ELSE NULL END AS geo_id_city,\n                COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\"\n)\n, stg_demand_whatsapp AS (\nSELECT  stg_demand_whatsapp.id,\n        stg_demand_whatsapp.created_at,\n        stg_demand_whatsapp.updated_at,\n        stg_demand_whatsapp.phone,\n        stg_demand_whatsapp.lead_id,\n        stg_demand_whatsapp.property_id,\n        properties_mz.geo_id AS geo_id_property,\n        stg_demand_whatsapp.business_type,\n        stg_demand_whatsapp.to_number,\n        CASE\n            WHEN to_number LIKE '+57%' THEN 14::INT\n            WHEN to_number LIKE '57%' THEN 14::INT\n            WHEN to_number LIKE '+56%' THEN 79::INT\n            WHEN to_number LIKE '56%' THEN 79::INT\n            WHEN to_number LIKE '+52%' THEN 104::INT\n            WHEN to_number LIKE '52%' THEN 104::INT \n        END AS geo_id_to_number,\n        stg_demand_whatsapp.origin,\n        CASE\n            --Portales\n            WHEN origin ILIKE '%MercadoLibre%' THEN 'MercadoLibre'\n            WHEN origin ILIKE 'Portal Inmobiliario' THEN 'MercadoLibre'\n            WHEN origin ILIKE '%meli%' THEN 'MercadoLibre'\n            WHEN origin ILIKE '%Inmuebles24%premier%' THEN 'Inmuebles24 Premier'\n            WHEN origin ILIKE '%Inmuebles24%' THEN 'Inmuebles24'\n            WHEN origin ILIKE '%I24%' THEN 'Inmuebles24'\n            WHEN origin ILIKE '%yapo%' THEN 'Yapo'\n            WHEN origin ILIKE '%Properati%' THEN 'Proppit'\n            WHEN origin ILIKE '%Properaty%' THEN 'Proppit'\n            WHEN origin ILIKE '%Chile Propiedades%' THEN 'Chile Propiedades'\n            WHEN origin ILIKE '%Proppit%' THEN 'Proppit'\n            WHEN origin ILIKE '%ciencuadras%' THEN 'Ciencuadras'\n            WHEN origin ILIKE '%Metrocuadrado%' THEN 'MetroCuadrado'\n            WHEN origin ILIKE '%inca%aiz%' THEN 'FincaRaiz'\n            WHEN origin ILIKE '%Vivanuncios%' THEN 'Vivanuncios'\n            WHEN origin ILIKE '%GoPlaceIt%' THEN 'GoPlaceIt'\n            WHEN origin ILIKE '%iCasas%' THEN 'iCasas'\n            WHEN origin ILIKE '%lamudi%' THEN 'Lamudi'\n            WHEN origin ILIKE '%metroscubicos%' THEN 'MetrosCubicos'\n            WHEN origin ILIKE '%Segundamano%' THEN 'Segundamano'\n            WHEN origin ILIKE '%TocToc%' THEN 'Segundamano'\n            WHEN origin ILIKE '%whatsapp%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%portales%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%essa%gebird%' THEN 'MessageBird'\n            --Houm\n            WHEN origin ILIKE '%houm%' THEN 'Houm'\n            WHEN origin ILIKE '%Marketplace%' THEN 'Houm'\n            WHEN origin ILIKE '%Asesor%a%' THEN 'Houm'\n            WHEN origin ILIKE '%.%' THEN 'Whatsapp Portales'\n            WHEN origin ILIKE '%property%' THEN 'Otro'\n            ELSE origin\n        END AS origin_clean,\n        CASE\n            WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 79::INT\n            WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 14::INT\n            WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 104::INT\n        ELSE NULL END AS geo_id_portal,\n        COALESCE(geo_id_property, geo_id_to_number, geo_id_portal) AS geo_id_whatsapp,\n        CASE\n            WHEN phone LIKE '+56%' THEN 'Chile'\n            WHEN phone LIKE '56%' THEN 'Chile'\n            WHEN phone LIKE '+57%' THEN 'Colombia'\n            WHEN phone LIKE '57%' THEN 'Colombia'\n            WHEN phone LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN phone LIKE '52%' THEN 'M\u00e9xico'\n            WHEN to_number LIKE '+56%' THEN 'Chile'\n            WHEN to_number LIKE '56%' THEN 'Chile'\n            WHEN to_number LIKE '+57%' THEN 'Colombia'\n            WHEN to_number LIKE '57%' THEN 'Colombia'\n            WHEN to_number LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN to_number LIKE '52%' THEN 'M\u00e9xico'\n            WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 'Chile'\n            WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 'Colombia'\n            WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 'M\u00e9xico'\n        ELSE NULL END AS country\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_whatsapp\" AS stg_demand_whatsapp\nLEFT JOIN properties_mz \n    ON properties_mz.property_id = stg_demand_whatsapp.property_id\n)\n, stg_demand_whatsapp_2 AS (\nSELECT  stg_demand_whatsapp.id,\n        stg_demand_whatsapp.created_at,\n        stg_demand_whatsapp.updated_at,\n        stg_demand_whatsapp.phone,\n        stg_demand_whatsapp.country,\n        lead.country AS lead_country,\n        lead.city AS lead_city,\n        stg_demand_whatsapp.lead_id,\n        stg_demand_whatsapp.property_id,\n        stg_demand_whatsapp.business_type,\n        stg_demand_whatsapp.to_number,\n        stg_demand_whatsapp.origin,\n        stg_demand_whatsapp.origin_clean,\n        COALESCE(geo_id_whatsapp, geo_id_lead) AS geo_id\nFROM stg_demand_whatsapp\nLEFT JOIN lead \n    ON stg_demand_whatsapp.lead_id = lead.lead_id\n)\n, stg_demand_whatsapp_3 AS (\nSELECT  stg_demand_whatsapp_2.id,\n        stg_demand_whatsapp_2.created_at,\n        stg_demand_whatsapp_2.updated_at,\n        stg_demand_whatsapp_2.phone,\n        stg_demand_whatsapp_2.property_id,\n        stg_demand_whatsapp_2.business_type,\n        stg_demand_whatsapp_2.to_number,\n        stg_demand_whatsapp_2.lead_id,\n        stg_demand_whatsapp_2.origin,\n        stg_demand_whatsapp_2.origin_clean,\n        stg_demand_whatsapp_2.geo_id,\n        dim_mz.country AS dim_mz_country,\n        dim_mz.region_houm AS dim_mz_region,\n        dim_mz.city AS dim_mz_city,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        COALESCE(mz_country, stg_demand_whatsapp_2.country, lead_country, 'Unknown') AS country,\n        COALESCE(mz_city, CASE WHEN stg_demand_whatsapp_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_whatsapp_2\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz \n    ON stg_demand_whatsapp_2.geo_id = dim_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = stg_demand_whatsapp_2.geo_id\n)\n\nSELECT \n        stg_demand_whatsapp_3.id,\n        stg_demand_whatsapp_3.created_at,\n        stg_demand_whatsapp_3.updated_at,\n        stg_demand_whatsapp_3.phone,\n        stg_demand_whatsapp_3.property_id,\n        stg_demand_whatsapp_3.business_type,\n        stg_demand_whatsapp_3.to_number,\n        stg_demand_whatsapp_3.lead_id,\n        stg_demand_whatsapp_3.origin,\n        stg_demand_whatsapp_3.origin_clean,\n        stg_demand_whatsapp_3.geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM stg_demand_whatsapp_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = stg_demand_whatsapp_3.country AND translation.macrozone_city = stg_demand_whatsapp_3.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_whatsapp\""}, "model.houm.proc_others_cancelations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_scheduleevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_others_cancelations"], "unique_id": "model.houm.proc_others_cancelations", "raw_code": "{{ config(materialized='table') }}\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_scheduleevent.created_at cancelled_at ,\n    0 latitude_appraiser ,\n    0 longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_scheduleevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_scheduleevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM {{ ref('stg_scheduler_cancelreasons') }} scheduler_cancelreasons        \nLEFT JOIN {{ ref('stg_scheduler_schedules') }} scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN {{ ref('stg_scheduler_cancelreasontypes') }} scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN {{ ref('stg_scheduler_appraiserevent') }} scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nLEFT JOIN {{ ref('stg_scheduler_scheduleevent') }} scheduler_scheduleevent \n    ON scheduler_scheduleevent.schedule_id = scheduler_schedules.id\nWHERE scheduler_scheduleevent.action = 'Cancelled'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_others_cancelations.sql", "original_file_path": "models/processing/demand/proc_others_cancelations.sql", "name": "proc_others_cancelations", "alias": "proc_others_cancelations", "checksum": {"name": "sha256", "checksum": "be7e6bc07326b8391930b850c094322ee4bef1e06d716ddef0c4e60ddc7d23ef"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_cancelreasons"], ["stg_scheduler_schedules"], ["stg_scheduler_cancelreasontypes"], ["stg_scheduler_appraiserevent"], ["stg_scheduler_appraisers"], ["stg_scheduler_scheduleevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_others_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.558151, "compiled_code": "\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_scheduleevent.created_at cancelled_at ,\n    0 latitude_appraiser ,\n    0 longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_scheduleevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_scheduleevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\" scheduler_cancelreasons        \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\" scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\" scheduler_scheduleevent \n    ON scheduler_scheduleevent.schedule_id = scheduler_schedules.id\nWHERE scheduler_scheduleevent.action = 'Cancelled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_others_cancelations\""}, "model.houm.proc_demand_portalapplicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties_mz", "model.houm.dim_macrozones", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_portalapplicant"], "unique_id": "model.houm.proc_demand_portalapplicant", "raw_code": "{{ config(materialized='table') }}\n\nWITH rental_properties AS (\nSELECT  id AS property_id,\n        'rentals' AS property_business_type\nFROM {{ ref('proc_properties') }}\nWHERE TRUE\nAND for_rental = TRUE\n)\n, sales_properties AS (\nSELECT  id AS property_id,\n        'sales' AS property_business_type\nFROM {{ ref('proc_properties') }}\nWHERE TRUE\nAND for_sale = TRUE\n)\n, union_properties AS (\nSELECT *\nFROM rental_properties\nUNION\nSELECT *\nFROM sales_properties\n)\n, stg_demand_portalapplicant AS (\nSELECT  demand_portalapplicant.id,\n        demand_portalapplicant.created_at,\n        demand_portalapplicant.updated_at,\n        demand_portalapplicant.phone,\n        demand_portalapplicant.email,\n        demand_portalapplicant.lead_id,\n        demand_portalapplicant.name,\n        demand_portalapplicant.last_name,\n        demand_portalapplicant.origin,\n        demand_portalapplicant.property_id,\n        demand_portalapplicant.business_type AS lead_business_type,\n        union_properties.property_business_type,\n        COALESCE(lead_business_type, property_business_type) AS business_type,\n        properties_mz.geo_id,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        dim_mz.country AS dim_mz_country,\n        dim_mz.region_houm AS dim_mz_region,\n        dim_mz.city AS dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM {{ ref('stg_demand_portalapplicant') }} AS demand_portalapplicant\nLEFT JOIN union_properties\n    ON demand_portalapplicant.property_id = union_properties.property_id \n    AND demand_portalapplicant.business_type IS NULL\n--- Hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las \n--- filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\nLEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n    ON demand_portalapplicant.property_id = properties_mz.property_id\nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz -- borrar\n    ON properties_mz.geo_id = dim_mz.geo_id\n--- Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = properties_mz.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE TRUE\n    AND demand_portalapplicant.origin != 'Houm' \n--- Limpiamos los leads con origen de portal como \"Houm\" porque SE consideran en demand_portalhoum, y en el pasado esta tabla los duplicaba\n)\n\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        location_id,\n        loc_country,\n        loc_region,\n        loc_city\nFROM stg_demand_portalapplicant", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_portalapplicant.sql", "original_file_path": "models/processing/demand/proc_demand_portalapplicant.sql", "name": "proc_demand_portalapplicant", "alias": "proc_demand_portalapplicant", "checksum": {"name": "sha256", "checksum": "9cbf77f32dd2de964157e762383c1d350ff849ca2984d314c28b616959d36865"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["proc_properties"], ["stg_demand_portalapplicant"], ["proc_properties_mz"], ["dim_macrozones"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_portalapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.559919, "compiled_code": "\n\nWITH rental_properties AS (\nSELECT  id AS property_id,\n        'rentals' AS property_business_type\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nWHERE TRUE\nAND for_rental = TRUE\n)\n, sales_properties AS (\nSELECT  id AS property_id,\n        'sales' AS property_business_type\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nWHERE TRUE\nAND for_sale = TRUE\n)\n, union_properties AS (\nSELECT *\nFROM rental_properties\nUNION\nSELECT *\nFROM sales_properties\n)\n, stg_demand_portalapplicant AS (\nSELECT  demand_portalapplicant.id,\n        demand_portalapplicant.created_at,\n        demand_portalapplicant.updated_at,\n        demand_portalapplicant.phone,\n        demand_portalapplicant.email,\n        demand_portalapplicant.lead_id,\n        demand_portalapplicant.name,\n        demand_portalapplicant.last_name,\n        demand_portalapplicant.origin,\n        demand_portalapplicant.property_id,\n        demand_portalapplicant.business_type AS lead_business_type,\n        union_properties.property_business_type,\n        COALESCE(lead_business_type, property_business_type) AS business_type,\n        properties_mz.geo_id,\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        dim_mz.country AS dim_mz_country,\n        dim_mz.region_houm AS dim_mz_region,\n        dim_mz.city AS dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS demand_portalapplicant\nLEFT JOIN union_properties\n    ON demand_portalapplicant.property_id = union_properties.property_id \n    AND demand_portalapplicant.business_type IS NULL\n--- Hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las \n--- filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n    ON demand_portalapplicant.property_id = properties_mz.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz -- borrar\n    ON properties_mz.geo_id = dim_mz.geo_id\n--- Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = properties_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city\nWHERE TRUE\n    AND demand_portalapplicant.origin != 'Houm' \n--- Limpiamos los leads con origen de portal como \"Houm\" porque SE consideran en demand_portalhoum, y en el pasado esta tabla los duplicaba\n)\n\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        location_id,\n        loc_country,\n        loc_region,\n        loc_city\nFROM stg_demand_portalapplicant", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalapplicant\""}, "model.houm.proc_demand_marketingapplicant": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_lead", "model.houm.stg_demand_marketingapplicant", "model.houm.proc_marketing_paid_media_campaign", "model.houm.dim_macrozones", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_marketingapplicant"], "unique_id": "model.houm.proc_demand_marketingapplicant", "raw_code": "{{ config(materialized='table') }}\n\nWITH lead AS (\nSELECT DISTINCT id AS lead_id,\n                country AS country_suffix,\n                CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n                -- country lead\n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 'Chile'\n                    WHEN country_suffix LIKE 'co' THEN 'Colombia'\n                    WHEN country_suffix LIKE 'mx' THEN 'M\u00e9xico'\n                ELSE NULL END AS country,\n                --   \n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 79::INT\n                    WHEN country_suffix LIKE 'co' THEN 14::INT\n                    WHEN country_suffix LIKE 'mx' THEN 104::INT\n                ELSE NULL END AS geo_id_country,\n                CASE\n                    WHEN city LIKE '%Medell_n%' THEN 109::INT\n                    WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n                    WHEN city LIKE '%Bogot_' THEN 14::INT\n                    WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                    WHEN city LIKE '%Santiago%' THEN 79::INT\n                    WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                    WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                    WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                    WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                    WHEN city LIKE '%Monterrey%' THEN 54::INT\n                    WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n                    WHEN city LIKE '%MTY%' THEN 54::INT\n                    WHEN city LIKE '%Tijuana%' THEN 67::INT\n                    WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                    WHEN city LIKE '%Puebla%' THEN 104::INT\n                    WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                    WHEN city LIKE '%GDL%' THEN 30::INT\n                    WHEN city LIKE '%CDMX%' THEN 104::INT\n                    WHEN city LIKE '%M_xico%' THEN 104::INT\n                ELSE NULL END AS geo_id_city,\n                COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM {{ ref('stg_demand_lead') }}\n)\n, stg_demand_marketingapplicant AS (\nSELECT  demand_marketingapplicant.id,\n        demand_marketingapplicant.created_at,\n        demand_marketingapplicant.updated_at,\n        demand_marketingapplicant.lead_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'phone') AS phone,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'email') AS email,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'name') AS name,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'business_type') AS business_type,\n        SPLIT_PART(json_extract_path_text(demand_marketingapplicant.extra_info, 'campaign_id'),'_',1) AS campaign_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'country') AS country,\n        SUBSTRING(utm_campaign, CHARINDEX('|', utm_campaign)+1) AS inicia_city,\n        CASE WHEN CHARINDEX('|', inicia_city)-1 < 0 THEN 1 ELSE CHARINDEX('|', inicia_city)-1 END AS n_city,\n        TRIM(REPLACE(CASE WHEN LEN(LEFT(inicia_city, n_city)) < 2 OR TRIM(LEFT(inicia_city, n_city)) = 'New Properties' THEN NULL ELSE LEFT(inicia_city, n_city) END, '_', ' ')) AS city,\n        CASE\n        \tWHEN country LIKE 'Chile' THEN 79::INT\n        \tWHEN country LIKE 'Mexico' THEN 104::INT\n        \tWHEN country LIKE 'Colombia' THEN 14::INT\n        ELSE NULL END AS geo_id_country,\n        CASE \n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%acebook%' THEN 'Facebook'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%oogle%' THEN 'Google'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%Unknow%' OR demand_marketingapplicant.utm_campaign LIKE '%-  ' THEN 'Unknown'\n        ELSE 'Otro' END AS origin,\n        demand_marketingapplicant.utm_source,\n        demand_marketingapplicant.utm_medium,\n        demand_marketingapplicant.utm_campaign\nFROM {{ ref('stg_demand_marketingapplicant') }} AS demand_marketingapplicant\n)\n, stg_demand_marketingapplicant_2 AS (\nSELECT  stg_demand_marketingapplicant.id,\n        stg_demand_marketingapplicant.created_at,\n        stg_demand_marketingapplicant.updated_at,\n        stg_demand_marketingapplicant.name,\n        stg_demand_marketingapplicant.phone,\n        stg_demand_marketingapplicant.email,\n        stg_demand_marketingapplicant.country,\n        marketing_paid_media.country AS paid_media_country,\n        lead.country AS lead_country,\n        stg_demand_marketingapplicant.city,\n        marketing_paid_media.city AS paid_media_city,\n        lead.city AS lead_city,\n        stg_demand_marketingapplicant.lead_id,\n        stg_demand_marketingapplicant.business_type,\n        stg_demand_marketingapplicant.campaign_id,\n        stg_demand_marketingapplicant.origin,\n        stg_demand_marketingapplicant.geo_id_country,\n        marketing_paid_media.geo_id AS geo_id_paid_media,\n        COALESCE(geo_id_paid_media, stg_demand_marketingapplicant.geo_id_country) AS geo_id_marketing,\n        COALESCE(geo_id_marketing, geo_id_lead) AS geo_id,\n        stg_demand_marketingapplicant.utm_source,\n        stg_demand_marketingapplicant.utm_medium,\n        stg_demand_marketingapplicant.utm_campaign\nFROM stg_demand_marketingapplicant\n    LEFT JOIN {{ ref('proc_marketing_paid_media_campaign') }} AS marketing_paid_media\n        ON marketing_paid_media.campaign_id = stg_demand_marketingapplicant.campaign_id\n    LEFT JOIN lead \n        ON stg_demand_marketingapplicant.lead_id = lead.lead_id\n)\n, stg_demand_marketingapplicant_3 AS (\nSELECT\n    stg_demand_marketingapplicant_2.id,\n    stg_demand_marketingapplicant_2.created_at,\n    stg_demand_marketingapplicant_2.updated_at,\n    stg_demand_marketingapplicant_2.name,\n    stg_demand_marketingapplicant_2.phone,\n    stg_demand_marketingapplicant_2.email,\n    stg_demand_marketingapplicant_2.lead_id,\n    stg_demand_marketingapplicant_2.business_type,\n    stg_demand_marketingapplicant_2.campaign_id,\n    stg_demand_marketingapplicant_2.origin,\n    stg_demand_marketingapplicant_2.geo_id,\n    stg_demand_marketingapplicant_2.utm_source,\n    stg_demand_marketingapplicant_2.utm_medium,\n    stg_demand_marketingapplicant_2.utm_campaign,\n    dim_mz.country AS dim_mz_country,\n    dim_mz.region_houm AS dim_mz_region,\n    dim_mz.city AS dim_mz_city,\n    COALESCE(paid_media_country, stg_demand_marketingapplicant_2.country, lead_country, 'Unknown') AS country,\n    COALESCE(paid_media_city, stg_demand_marketingapplicant_2.city, CASE WHEN paid_media_country = lead_country OR stg_demand_marketingapplicant_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_marketingapplicant_2\nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz\n    ON stg_demand_marketingapplicant_2.geo_id = dim_mz.geo_id\n)\n\nSELECT  stg_demand_marketingapplicant_3.id,\n        stg_demand_marketingapplicant_3.created_at,\n        stg_demand_marketingapplicant_3.updated_at,\n        stg_demand_marketingapplicant_3.name,\n        stg_demand_marketingapplicant_3.phone,\n        stg_demand_marketingapplicant_3.email,\n        stg_demand_marketingapplicant_3.lead_id,\n        stg_demand_marketingapplicant_3.business_type,\n        stg_demand_marketingapplicant_3.campaign_id,\n        stg_demand_marketingapplicant_3.origin,\n        stg_demand_marketingapplicant_3.utm_source,\n        stg_demand_marketingapplicant_3.utm_medium,\n        stg_demand_marketingapplicant_3.utm_campaign,\n        stg_demand_marketingapplicant_3.geo_id,\n        stg_demand_marketingapplicant_3.dim_mz_country,\n        stg_demand_marketingapplicant_3.dim_mz_region,\n        stg_demand_marketingapplicant_3.dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city \nFROM stg_demand_marketingapplicant_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = stg_demand_marketingapplicant_3.country AND translation.macrozone_city = stg_demand_marketingapplicant_3.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_marketingapplicant.sql", "original_file_path": "models/processing/demand/proc_demand_marketingapplicant.sql", "name": "proc_demand_marketingapplicant", "alias": "proc_demand_marketingapplicant", "checksum": {"name": "sha256", "checksum": "10c761c6895f442682454e9e91b9f9dbb3576d3f95bc6332771b704826db9f71"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_lead"], ["stg_demand_marketingapplicant"], ["proc_marketing_paid_media_campaign"], ["dim_macrozones"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_marketingapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.5618749, "compiled_code": "\n\nWITH lead AS (\nSELECT DISTINCT id AS lead_id,\n                country AS country_suffix,\n                CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n                -- country lead\n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 'Chile'\n                    WHEN country_suffix LIKE 'co' THEN 'Colombia'\n                    WHEN country_suffix LIKE 'mx' THEN 'M\u00e9xico'\n                ELSE NULL END AS country,\n                --   \n                CASE\n                    WHEN country_suffix LIKE 'cl' THEN 79::INT\n                    WHEN country_suffix LIKE 'co' THEN 14::INT\n                    WHEN country_suffix LIKE 'mx' THEN 104::INT\n                ELSE NULL END AS geo_id_country,\n                CASE\n                    WHEN city LIKE '%Medell_n%' THEN 109::INT\n                    WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n                    WHEN city LIKE '%Bogot_' THEN 14::INT\n                    WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                    WHEN city LIKE '%Santiago%' THEN 79::INT\n                    WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                    WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                    WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                    WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                    WHEN city LIKE '%Monterrey%' THEN 54::INT\n                    WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n                    WHEN city LIKE '%MTY%' THEN 54::INT\n                    WHEN city LIKE '%Tijuana%' THEN 67::INT\n                    WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                    WHEN city LIKE '%Puebla%' THEN 104::INT\n                    WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                    WHEN city LIKE '%GDL%' THEN 30::INT\n                    WHEN city LIKE '%CDMX%' THEN 104::INT\n                    WHEN city LIKE '%M_xico%' THEN 104::INT\n                ELSE NULL END AS geo_id_city,\n                COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\"\n)\n, stg_demand_marketingapplicant AS (\nSELECT  demand_marketingapplicant.id,\n        demand_marketingapplicant.created_at,\n        demand_marketingapplicant.updated_at,\n        demand_marketingapplicant.lead_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'phone') AS phone,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'email') AS email,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'name') AS name,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'business_type') AS business_type,\n        SPLIT_PART(json_extract_path_text(demand_marketingapplicant.extra_info, 'campaign_id'),'_',1) AS campaign_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'country') AS country,\n        SUBSTRING(utm_campaign, CHARINDEX('|', utm_campaign)+1) AS inicia_city,\n        CASE WHEN CHARINDEX('|', inicia_city)-1 < 0 THEN 1 ELSE CHARINDEX('|', inicia_city)-1 END AS n_city,\n        TRIM(REPLACE(CASE WHEN LEN(LEFT(inicia_city, n_city)) < 2 OR TRIM(LEFT(inicia_city, n_city)) = 'New Properties' THEN NULL ELSE LEFT(inicia_city, n_city) END, '_', ' ')) AS city,\n        CASE\n        \tWHEN country LIKE 'Chile' THEN 79::INT\n        \tWHEN country LIKE 'Mexico' THEN 104::INT\n        \tWHEN country LIKE 'Colombia' THEN 14::INT\n        ELSE NULL END AS geo_id_country,\n        CASE \n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%acebook%' THEN 'Facebook'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%oogle%' THEN 'Google'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%Unknow%' OR demand_marketingapplicant.utm_campaign LIKE '%-  ' THEN 'Unknown'\n        ELSE 'Otro' END AS origin,\n        demand_marketingapplicant.utm_source,\n        demand_marketingapplicant.utm_medium,\n        demand_marketingapplicant.utm_campaign\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_marketingapplicant\" AS demand_marketingapplicant\n)\n, stg_demand_marketingapplicant_2 AS (\nSELECT  stg_demand_marketingapplicant.id,\n        stg_demand_marketingapplicant.created_at,\n        stg_demand_marketingapplicant.updated_at,\n        stg_demand_marketingapplicant.name,\n        stg_demand_marketingapplicant.phone,\n        stg_demand_marketingapplicant.email,\n        stg_demand_marketingapplicant.country,\n        marketing_paid_media.country AS paid_media_country,\n        lead.country AS lead_country,\n        stg_demand_marketingapplicant.city,\n        marketing_paid_media.city AS paid_media_city,\n        lead.city AS lead_city,\n        stg_demand_marketingapplicant.lead_id,\n        stg_demand_marketingapplicant.business_type,\n        stg_demand_marketingapplicant.campaign_id,\n        stg_demand_marketingapplicant.origin,\n        stg_demand_marketingapplicant.geo_id_country,\n        marketing_paid_media.geo_id AS geo_id_paid_media,\n        COALESCE(geo_id_paid_media, stg_demand_marketingapplicant.geo_id_country) AS geo_id_marketing,\n        COALESCE(geo_id_marketing, geo_id_lead) AS geo_id,\n        stg_demand_marketingapplicant.utm_source,\n        stg_demand_marketingapplicant.utm_medium,\n        stg_demand_marketingapplicant.utm_campaign\nFROM stg_demand_marketingapplicant\n    LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" AS marketing_paid_media\n        ON marketing_paid_media.campaign_id = stg_demand_marketingapplicant.campaign_id\n    LEFT JOIN lead \n        ON stg_demand_marketingapplicant.lead_id = lead.lead_id\n)\n, stg_demand_marketingapplicant_3 AS (\nSELECT\n    stg_demand_marketingapplicant_2.id,\n    stg_demand_marketingapplicant_2.created_at,\n    stg_demand_marketingapplicant_2.updated_at,\n    stg_demand_marketingapplicant_2.name,\n    stg_demand_marketingapplicant_2.phone,\n    stg_demand_marketingapplicant_2.email,\n    stg_demand_marketingapplicant_2.lead_id,\n    stg_demand_marketingapplicant_2.business_type,\n    stg_demand_marketingapplicant_2.campaign_id,\n    stg_demand_marketingapplicant_2.origin,\n    stg_demand_marketingapplicant_2.geo_id,\n    stg_demand_marketingapplicant_2.utm_source,\n    stg_demand_marketingapplicant_2.utm_medium,\n    stg_demand_marketingapplicant_2.utm_campaign,\n    dim_mz.country AS dim_mz_country,\n    dim_mz.region_houm AS dim_mz_region,\n    dim_mz.city AS dim_mz_city,\n    COALESCE(paid_media_country, stg_demand_marketingapplicant_2.country, lead_country, 'Unknown') AS country,\n    COALESCE(paid_media_city, stg_demand_marketingapplicant_2.city, CASE WHEN paid_media_country = lead_country OR stg_demand_marketingapplicant_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_marketingapplicant_2\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz\n    ON stg_demand_marketingapplicant_2.geo_id = dim_mz.geo_id\n)\n\nSELECT  stg_demand_marketingapplicant_3.id,\n        stg_demand_marketingapplicant_3.created_at,\n        stg_demand_marketingapplicant_3.updated_at,\n        stg_demand_marketingapplicant_3.name,\n        stg_demand_marketingapplicant_3.phone,\n        stg_demand_marketingapplicant_3.email,\n        stg_demand_marketingapplicant_3.lead_id,\n        stg_demand_marketingapplicant_3.business_type,\n        stg_demand_marketingapplicant_3.campaign_id,\n        stg_demand_marketingapplicant_3.origin,\n        stg_demand_marketingapplicant_3.utm_source,\n        stg_demand_marketingapplicant_3.utm_medium,\n        stg_demand_marketingapplicant_3.utm_campaign,\n        stg_demand_marketingapplicant_3.geo_id,\n        stg_demand_marketingapplicant_3.dim_mz_country,\n        stg_demand_marketingapplicant_3.dim_mz_region,\n        stg_demand_marketingapplicant_3.dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city \nFROM stg_demand_marketingapplicant_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = stg_demand_marketingapplicant_3.country AND translation.macrozone_city = stg_demand_marketingapplicant_3.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_marketingapplicant\""}, "model.houm.proc_demand_sales_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_sales_leads"], "unique_id": "model.houm.proc_demand_sales_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Demand' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    partner_code ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    ------\n    stage_id ,\n    stage_name , \n    stage_unified_name ,\n    stage_order ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    paid_media_geo_id ,\n    marketing_lead_id ,\n    utm_term ,\n    source ,\n    unified_source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    -- supply_qualification_date ,\n    -- supply_qualification ,\n    buyer_qualification_date ,\n    buyer_qualification ,\n    negotiation_property_condition ,\n    ---------\n    profile_financial ,\n    profile_buying_interest ,\n    profile_timing_need ,\n    profile_income ,\n    profile_savings_initial_fee ,\n    profile_decision_maker ,\n    profile_property_type ,\n    profile_property_condition ,\n    profile_geographic_interest ,\n    profile_rooms ,\n    profile_bathrooms ,\n    profile_parkings ,\n    profile_storage ,\n    profile_source_of_income ,\n    profile_income_type ,\n    profile_profession ,\n    profile_income_supplement ,\n    profile_saving_capacity ,\n    profile_ap_buyers ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_sales_leads.sql", "original_file_path": "models/processing/demand/proc_demand_sales_leads.sql", "name": "proc_demand_sales_leads", "alias": "proc_demand_sales_leads", "checksum": {"name": "sha256", "checksum": "254485234d6e8ec3bfb13f280b7c165e625632fb04fd2ef0691244289ef46d78"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_sales_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.5637639, "compiled_code": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Demand' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    partner_code ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    ------\n    stage_id ,\n    stage_name , \n    stage_unified_name ,\n    stage_order ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    paid_media_geo_id ,\n    marketing_lead_id ,\n    utm_term ,\n    source ,\n    unified_source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    -- supply_qualification_date ,\n    -- supply_qualification ,\n    buyer_qualification_date ,\n    buyer_qualification ,\n    negotiation_property_condition ,\n    ---------\n    profile_financial ,\n    profile_buying_interest ,\n    profile_timing_need ,\n    profile_income ,\n    profile_savings_initial_fee ,\n    profile_decision_maker ,\n    profile_property_type ,\n    profile_property_condition ,\n    profile_geographic_interest ,\n    profile_rooms ,\n    profile_bathrooms ,\n    profile_parkings ,\n    profile_storage ,\n    profile_source_of_income ,\n    profile_income_type ,\n    profile_profession ,\n    profile_income_supplement ,\n    profile_saving_capacity ,\n    profile_ap_buyers ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\""}, "model.houm.proc_demand_reservations": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_cl_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_co_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_mx_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_reservations"], "unique_id": "model.houm.proc_demand_reservations", "raw_code": "{{ config(materialized='table') }}    \n\nWITH payments_cl AS (\nSELECT\n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM {{ ref('stg_payments_cl_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_co AS (\nselect \n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,  -- 'CO-' || _id reservation_id\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM {{ ref('stg_payments_co_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_mx AS (\nSELECT \n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,  -- 'MX-' || _id reservation_id\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM {{ ref('stg_payments_mx_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED')    \n)\n\n, demand_reservations AS (\nSELECT \n    * \nFROM payments_cl\nUNION ALL \nSELECT \n    * \nFROM payments_co\nUNION ALL\nSELECT\n    * \nFROM payments_mx\n)\n\nSELECT \n    demand_reservations.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM demand_reservations\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = demand_reservations.geo_id\nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_reservations.sql", "original_file_path": "models/processing/demand/proc_demand_reservations.sql", "name": "proc_demand_reservations", "alias": "proc_demand_reservations", "checksum": {"name": "sha256", "checksum": "2373cbb8919a63089f4d3d4cde0f0367f05a925e0f6781eb2ff47066db9c12d1"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_payments_cl_db_movements"], ["proc_properties_mz"], ["stg_payments_co_db_movements"], ["proc_properties_mz"], ["stg_payments_mx_db_movements"], ["proc_properties_mz"], ["stg_scheduler_macrozone"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.565481, "compiled_code": "    \n\nWITH payments_cl AS (\nSELECT\n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_co AS (\nselect \n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,  -- 'CO-' || _id reservation_id\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_mx AS (\nSELECT \n    movements.date::TIMESTAMP AS payment_date,\n    CONVERT_TIMEZONE(prop_mz.timezone, movements.date::TIMESTAMP) AS payment_date_local,\n    movements.agreed_date,\n    prop_mz.geo_id,\n    _id AS reservation_id,  -- 'MX-' || _id reservation_id\n    movements.property_id,\n    movements.concept,\n    movements.type,\n    movements.person_data_sub_person_id,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED')    \n)\n\n, demand_reservations AS (\nSELECT \n    * \nFROM payments_cl\nUNION ALL \nSELECT \n    * \nFROM payments_co\nUNION ALL\nSELECT\n    * \nFROM payments_mx\n)\n\nSELECT \n    demand_reservations.*,\n    locations_houm.id AS location_id,\n    locations_houm.country AS loc_country,\n    locations_houm.region AS loc_region,\n    locations_houm.city AS loc_city\nFROM demand_reservations\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = demand_reservations.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = macrozone.country AND translation.macrozone_city = macrozone.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\""}, "model.houm.proc_demand_leads": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalhoum", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_leads"], "unique_id": "model.houm.proc_demand_leads", "raw_code": "{{ config(materialized='table') }}\n\nWITH rental_properties AS (\nSELECT \n\tid AS property_id \nFROM {{ ref('proc_properties') }}\nWHERE TRUE\n\tAND for_rental = TRUE\n)\n\n, demand_leads_clean AS (\nSELECT * \nFROM {{ ref('stg_demand_lead') }} AS demand_leads\nWHERE TRUE \n\tAND ( ( email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR email IS NULL )\n)\n\n, pa_leads AS (\nSELECT \n\t'PA -' || demand_portalapplicant.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) AS created_at ,\n\tCOALESCE(origin, 'Portal No Identificado')  AS origin ,\n\tprop_mz.geo_id \n\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM {{ ref('stg_demand_portalapplicant') }} AS demand_portalapplicant\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties \n\tON rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n\tON prop_mz.property_id = rental_properties.property_id\nWHERE TRUE \n\tAND ( origin != 'Test' OR origin IS NULL) \n)\n\n, houm_leads AS ( \nSELECT      \n\t'HOUM -' || demand_portalhoum.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalhoum.created_at)::TIMESTAMP WITH TIME ZONE )::DATE,demand_portalhoum.created_at::DATE) AS created_at ,\n\t'Houm' AS origin , \n\tprop_mz.geo_id \nFROM {{ ref('stg_demand_portalhoum') }} demand_portalhoum\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n\tON prop_mz.property_id = demand_portalhoum.property_id\nWHERE TRUE \n\tAND business_type = 'rentals' \n)\n\n, demand_leads AS (\nSELECT \n\t* \nFROM pa_leads\nUNION ALL \nSELECT \n\t* \nFROM houm_leads\n)\n\nSELECT *\nFROM demand_leads", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_leads.sql", "original_file_path": "models/processing/demand/proc_demand_leads.sql", "name": "proc_demand_leads", "alias": "proc_demand_leads", "checksum": {"name": "sha256", "checksum": "f0a000db7a1450dc1d084ccb8c9150b144e9044ee7678976c1f0bc2727996321"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["stg_demand_lead"], ["stg_demand_portalapplicant"], ["proc_properties_mz"], ["stg_demand_portalhoum"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.56731, "compiled_code": "\n\nWITH rental_properties AS (\nSELECT \n\tid AS property_id \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nWHERE TRUE\n\tAND for_rental = TRUE\n)\n\n, demand_leads_clean AS (\nSELECT * \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\" AS demand_leads\nWHERE TRUE \n\tAND ( ( email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR email IS NULL )\n)\n\n, pa_leads AS (\nSELECT \n\t'PA -' || demand_portalapplicant.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) AS created_at ,\n\tCOALESCE(origin, 'Portal No Identificado')  AS origin ,\n\tprop_mz.geo_id \n\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS demand_portalapplicant\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties \n\tON rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n\tON prop_mz.property_id = rental_properties.property_id\nWHERE TRUE \n\tAND ( origin != 'Test' OR origin IS NULL) \n)\n\n, houm_leads AS ( \nSELECT      \n\t'HOUM -' || demand_portalhoum.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalhoum.created_at)::TIMESTAMP WITH TIME ZONE )::DATE,demand_portalhoum.created_at::DATE) AS created_at ,\n\t'Houm' AS origin , \n\tprop_mz.geo_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" demand_portalhoum\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n\tON prop_mz.property_id = demand_portalhoum.property_id\nWHERE TRUE \n\tAND business_type = 'rentals' \n)\n\n, demand_leads AS (\nSELECT \n\t* \nFROM pa_leads\nUNION ALL \nSELECT \n\t* \nFROM houm_leads\n)\n\nSELECT *\nFROM demand_leads", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\""}, "model.houm.proc_demand_portalhoum": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_lead", "model.houm.stg_demand_portalhoum", "model.houm.proc_properties_mz", "model.houm.dim_macrozones", "model.houm.stg_scheduler_macrozone", "model.houm.proc_marketing_paid_media_campaign", "model.houm.trans_macrozone_to_location", "model.houm.dim_locations_houm"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_portalhoum"], "unique_id": "model.houm.proc_demand_portalhoum", "raw_code": "{{ config(materialized='table') }}\n\nWITH lead AS (\nSELECT  DISTINCT id AS lead_id,\n        country AS country_suffix,\n        CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n        -- country lead\n        CASE\n            WHEN country LIKE 'cl' THEN 'Chile'\n            WHEN country LIKE 'co' THEN 'Colombia'\n            WHEN country LIKE 'mx' THEN 'M\u00e9xico'\n        ELSE NULL END AS country,\n        --   \n        CASE\n            WHEN country LIKE 'cl' THEN 79::INT\n            WHEN country LIKE 'co' THEN 14::INT\n            WHEN country LIKE 'mx' THEN 104::INT\n        ELSE NULL END AS geo_id_country,\n        CASE\n            WHEN city LIKE '%Medell_n%' THEN 109::INT\n            WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n            WHEN city LIKE '%Bogot_' THEN 14::INT\n            WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n            WHEN city LIKE '%Santiago%' THEN 79::INT\n            WHEN city LIKE '%Valpara_so%' THEN 11::INT\n            WHEN city LIKE '%Concepci_n%' THEN 8::INT\n            WHEN city LIKE '%B_o B_o%' THEN 8::INT\n            WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n            WHEN city LIKE '%Monterrey%' THEN 54::INT\n            WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n            WHEN city LIKE '%MTY%' THEN 54::INT\n            WHEN city LIKE '%Tijuana%' THEN 67::INT\n            WHEN city LIKE '%Guadalajara%' THEN 30::INT\n            WHEN city LIKE '%Puebla%' THEN 104::INT\n            WHEN city LIKE '%Quer_taro%' THEN 104::INT\n            WHEN city LIKE '%GDL%' THEN 30::INT\n            WHEN city LIKE '%CDMX%' THEN 104::INT\n            WHEN city LIKE '%M_xico%' THEN 104::INT\n        ELSE NULL END AS geo_id_city,\n        COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM {{ ref('stg_demand_lead') }}\n)\n\n, stg_demand_portalhoum AS (\nSELECT  demand_portalhoum.id,\n        demand_portalhoum.created_at,\n        demand_portalhoum.updated_at,\n        demand_portalhoum.name,\n        demand_portalhoum.last_name,\n        demand_portalhoum.phone,\n        demand_portalhoum.email,\n        CASE\n            WHEN demand_portalhoum.phone LIKE '+57%' THEN 'Colombia'\n            WHEN demand_portalhoum.phone LIKE '57%' THEN 'Colombia'\n            WHEN demand_portalhoum.phone LIKE '+56%' THEN 'Chile'\n            WHEN demand_portalhoum.phone LIKE '56%' THEN 'Chile'\n            WHEN demand_portalhoum.phone LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN demand_portalhoum.phone LIKE '52%' THEN 'M\u00e9xico'\n        ELSE NULL END AS country,\n        lead.country AS lead_country,\n        lead.city AS lead_city,\n        demand_portalhoum.lead_id,\n        demand_portalhoum.business_type,\n        demand_portalhoum.origin,\n        demand_portalhoum.property_id,\n        COALESCE(properties_mz.geo_id, geo_id_lead) AS geo_id,\n        dim_mz.country AS dim_mz_country, -- borrar\n        dim_mz.region_houm AS dim_mz_region, -- borrar\n        dim_mz.city AS dim_mz_city, -- borrar\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        SPLIT_PART(utm_content,'_',1) AS campaign_id,\n        demand_portalhoum.utm_campaign,\n        demand_portalhoum.utm_content,\n        demand_portalhoum.utm_medium,\n        demand_portalhoum.utm_source,\n        demand_portalhoum.utm_term\nFROM {{ ref('stg_demand_portalhoum') }} AS demand_portalhoum\nLEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n    ON demand_portalhoum.property_id = properties_mz.property_id\nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz -- borrar\n    ON properties_mz.geo_id = dim_mz.geo_id\nLEFT JOIN {{ ref('stg_scheduler_macrozone') }} AS macrozone\n    ON macrozone.id = properties_mz.geo_id\nLEFT JOIN lead \n    ON demand_portalhoum.lead_id = lead.lead_id\n)\n\n, stg_demand_portalhoum_2 AS (\nSELECT  stg_demand_portalhoum.*,\n        proc_paid_media.country AS paid_media_country,\n        proc_paid_media.city AS paid_media_city\nFROM stg_demand_portalhoum\nLEFT JOIN {{ ref('proc_marketing_paid_media_campaign') }} AS proc_paid_media\n    ON proc_paid_media.campaign_id = stg_demand_portalhoum.campaign_id\n)\n\n, stg_demand_portalhoum_3 AS (\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        campaign_id,\n        utm_campaign,\n        utm_content,\n        utm_medium,\n        utm_source,\n        utm_term,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        mz_country,\n        mz_city,\n        COALESCE(mz_country, stg_demand_portalhoum_2.country, paid_media_country, lead_country, 'Unknown') AS country,\n        COALESCE(mz_city, paid_media_city, CASE WHEN stg_demand_portalhoum_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_portalhoum_2\n)\n\nSELECT  stg_demand_portalhoum_3.id,\n        stg_demand_portalhoum_3.created_at,\n        stg_demand_portalhoum_3.updated_at,\n        stg_demand_portalhoum_3.name,\n        stg_demand_portalhoum_3.last_name,\n        stg_demand_portalhoum_3.phone,\n        stg_demand_portalhoum_3.email,\n        stg_demand_portalhoum_3.lead_id,\n        stg_demand_portalhoum_3.origin,\n        stg_demand_portalhoum_3.property_id,\n        stg_demand_portalhoum_3.business_type,\n        stg_demand_portalhoum_3.campaign_id,\n        stg_demand_portalhoum_3.utm_campaign,\n        stg_demand_portalhoum_3.utm_content,\n        stg_demand_portalhoum_3.utm_medium,\n        stg_demand_portalhoum_3.utm_source,\n        stg_demand_portalhoum_3.utm_term,\n        stg_demand_portalhoum_3.geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM stg_demand_portalhoum_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN {{ref('trans_macrozone_to_location') }} AS translation\n    ON translation.macrozone_country = stg_demand_portalhoum_3.country AND translation.macrozone_city = stg_demand_portalhoum_3.city\nLEFT JOIN {{ref('dim_locations_houm') }} AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_portalhoum.sql", "original_file_path": "models/processing/demand/proc_demand_portalhoum.sql", "name": "proc_demand_portalhoum", "alias": "proc_demand_portalhoum", "checksum": {"name": "sha256", "checksum": "3ea3a095a69eb5e9edc11bc9ad2ac8ee52f6aa25ff0b24504b214e7ae3bafea0"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_lead"], ["stg_demand_portalhoum"], ["proc_properties_mz"], ["dim_macrozones"], ["stg_scheduler_macrozone"], ["proc_marketing_paid_media_campaign"], ["trans_macrozone_to_location"], ["dim_locations_houm"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_portalhoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1675970038.569435, "compiled_code": "\n\nWITH lead AS (\nSELECT  DISTINCT id AS lead_id,\n        country AS country_suffix,\n        CASE WHEN (city = '' OR city IS NULL) THEN NULL ELSE city END AS city,\n        -- country lead\n        CASE\n            WHEN country LIKE 'cl' THEN 'Chile'\n            WHEN country LIKE 'co' THEN 'Colombia'\n            WHEN country LIKE 'mx' THEN 'M\u00e9xico'\n        ELSE NULL END AS country,\n        --   \n        CASE\n            WHEN country LIKE 'cl' THEN 79::INT\n            WHEN country LIKE 'co' THEN 14::INT\n            WHEN country LIKE 'mx' THEN 104::INT\n        ELSE NULL END AS geo_id_country,\n        CASE\n            WHEN city LIKE '%Medell_n%' THEN 109::INT\n            WHEN city LIKE '%Antioqu_a%' THEN 109::INT\n            WHEN city LIKE '%Bogot_' THEN 14::INT\n            WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n            WHEN city LIKE '%Santiago%' THEN 79::INT\n            WHEN city LIKE '%Valpara_so%' THEN 11::INT\n            WHEN city LIKE '%Concepci_n%' THEN 8::INT\n            WHEN city LIKE '%B_o B_o%' THEN 8::INT\n            WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n            WHEN city LIKE '%Monterrey%' THEN 54::INT\n            WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n            WHEN city LIKE '%MTY%' THEN 54::INT\n            WHEN city LIKE '%Tijuana%' THEN 67::INT\n            WHEN city LIKE '%Guadalajara%' THEN 30::INT\n            WHEN city LIKE '%Puebla%' THEN 104::INT\n            WHEN city LIKE '%Quer_taro%' THEN 104::INT\n            WHEN city LIKE '%GDL%' THEN 30::INT\n            WHEN city LIKE '%CDMX%' THEN 104::INT\n            WHEN city LIKE '%M_xico%' THEN 104::INT\n        ELSE NULL END AS geo_id_city,\n        COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\"\n)\n\n, stg_demand_portalhoum AS (\nSELECT  demand_portalhoum.id,\n        demand_portalhoum.created_at,\n        demand_portalhoum.updated_at,\n        demand_portalhoum.name,\n        demand_portalhoum.last_name,\n        demand_portalhoum.phone,\n        demand_portalhoum.email,\n        CASE\n            WHEN demand_portalhoum.phone LIKE '+57%' THEN 'Colombia'\n            WHEN demand_portalhoum.phone LIKE '57%' THEN 'Colombia'\n            WHEN demand_portalhoum.phone LIKE '+56%' THEN 'Chile'\n            WHEN demand_portalhoum.phone LIKE '56%' THEN 'Chile'\n            WHEN demand_portalhoum.phone LIKE '+52%' THEN 'M\u00e9xico'\n            WHEN demand_portalhoum.phone LIKE '52%' THEN 'M\u00e9xico'\n        ELSE NULL END AS country,\n        lead.country AS lead_country,\n        lead.city AS lead_city,\n        demand_portalhoum.lead_id,\n        demand_portalhoum.business_type,\n        demand_portalhoum.origin,\n        demand_portalhoum.property_id,\n        COALESCE(properties_mz.geo_id, geo_id_lead) AS geo_id,\n        dim_mz.country AS dim_mz_country, -- borrar\n        dim_mz.region_houm AS dim_mz_region, -- borrar\n        dim_mz.city AS dim_mz_city, -- borrar\n        macrozone.country AS mz_country,\n        macrozone.city AS mz_city,\n        SPLIT_PART(utm_content,'_',1) AS campaign_id,\n        demand_portalhoum.utm_campaign,\n        demand_portalhoum.utm_content,\n        demand_portalhoum.utm_medium,\n        demand_portalhoum.utm_source,\n        demand_portalhoum.utm_term\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" AS demand_portalhoum\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n    ON demand_portalhoum.property_id = properties_mz.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz -- borrar\n    ON properties_mz.geo_id = dim_mz.geo_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\" AS macrozone\n    ON macrozone.id = properties_mz.geo_id\nLEFT JOIN lead \n    ON demand_portalhoum.lead_id = lead.lead_id\n)\n\n, stg_demand_portalhoum_2 AS (\nSELECT  stg_demand_portalhoum.*,\n        proc_paid_media.country AS paid_media_country,\n        proc_paid_media.city AS paid_media_city\nFROM stg_demand_portalhoum\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" AS proc_paid_media\n    ON proc_paid_media.campaign_id = stg_demand_portalhoum.campaign_id\n)\n\n, stg_demand_portalhoum_3 AS (\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        campaign_id,\n        utm_campaign,\n        utm_content,\n        utm_medium,\n        utm_source,\n        utm_term,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        mz_country,\n        mz_city,\n        COALESCE(mz_country, stg_demand_portalhoum_2.country, paid_media_country, lead_country, 'Unknown') AS country,\n        COALESCE(mz_city, paid_media_city, CASE WHEN stg_demand_portalhoum_2.country = lead_country THEN lead_city END, lead_city, 'Unknown') AS city\nFROM stg_demand_portalhoum_2\n)\n\nSELECT  stg_demand_portalhoum_3.id,\n        stg_demand_portalhoum_3.created_at,\n        stg_demand_portalhoum_3.updated_at,\n        stg_demand_portalhoum_3.name,\n        stg_demand_portalhoum_3.last_name,\n        stg_demand_portalhoum_3.phone,\n        stg_demand_portalhoum_3.email,\n        stg_demand_portalhoum_3.lead_id,\n        stg_demand_portalhoum_3.origin,\n        stg_demand_portalhoum_3.property_id,\n        stg_demand_portalhoum_3.business_type,\n        stg_demand_portalhoum_3.campaign_id,\n        stg_demand_portalhoum_3.utm_campaign,\n        stg_demand_portalhoum_3.utm_content,\n        stg_demand_portalhoum_3.utm_medium,\n        stg_demand_portalhoum_3.utm_source,\n        stg_demand_portalhoum_3.utm_term,\n        stg_demand_portalhoum_3.geo_id,\n        dim_mz_country,\n        dim_mz_region,\n        dim_mz_city,\n        locations_houm.id AS location_id,\n        locations_houm.country AS loc_country,\n        locations_houm.region AS loc_region,\n        locations_houm.city AS loc_city\nFROM stg_demand_portalhoum_3\n---  Conect to the new geographic dimensional table \nLEFT JOIN \"houmdw_prod\".\"dbt_marts\".\"trans_macrozone_to_location\" AS translation\n    ON translation.macrozone_country = stg_demand_portalhoum_3.country AND translation.macrozone_city = stg_demand_portalhoum_3.city\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_locations_houm\" AS locations_houm\n    ON locations_houm.country = translation.location_country AND locations_houm.region = translation.location_region AND locations_houm.city = translation.location_city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalhoum\""}, "model.houm.processing_phase": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "processing_phase"], "unique_id": "model.houm.processing_phase", "raw_code": "{{ config(materialized='incremental') }}\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "audit/processing_phase.sql", "original_file_path": "models/audit/processing_phase.sql", "name": "processing_phase", "alias": "processing_phase", "checksum": {"name": "sha256", "checksum": "ae91d6d2a5f8b288784499471395a79ff569788ea64c61b1f6cac581821fee14"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/processing_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1675970038.571219, "compiled_code": "\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '2023-02-09 16:13:54.685542-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"processing_phase\""}, "model.houm.staging_phase": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "staging_phase"], "unique_id": "model.houm.staging_phase", "raw_code": "{{ config(materialized='incremental') }}\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "audit/staging_phase.sql", "original_file_path": "models/audit/staging_phase.sql", "name": "staging_phase", "alias": "staging_phase", "checksum": {"name": "sha256", "checksum": "77af671f108a3b96b2d55e2281247576de2ff93d0d7199f5c33670b8f0bad2a8"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/staging_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1675970038.574825, "compiled_code": "\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '2023-02-09 16:13:54.685542-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"staging_phase\""}, "model.houm.freshness_phase": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "freshness_phase"], "unique_id": "model.houm.freshness_phase", "raw_code": "{{ config(materialized='incremental') }}\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "audit/freshness_phase.sql", "original_file_path": "models/audit/freshness_phase.sql", "name": "freshness_phase", "alias": "freshness_phase", "checksum": {"name": "sha256", "checksum": "738568135da8a2e72a4fe5994a7d47264532e0b3c662efd6ebbe3394980b1288"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/freshness_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1675970038.578376, "compiled_code": "\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '2023-02-09 16:13:54.685542-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"freshness_phase\""}, "model.houm.dwh_phase": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "dwh_phase"], "unique_id": "model.houm.dwh_phase", "raw_code": "{{ config(materialized='incremental') }}\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "audit/dwh_phase.sql", "original_file_path": "models/audit/dwh_phase.sql", "name": "dwh_phase", "alias": "dwh_phase", "checksum": {"name": "sha256", "checksum": "05c0f61b5e87deff2708d3aad3b3c55c6fad3cbd55513cd8f435c886a764164c"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/dwh_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1675970038.581811, "compiled_code": "\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '2023-02-09 16:13:54.685542-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"dwh_phase\""}, "snapshot.houm.stg_macrozoneportalplan_snapshot": {"compiled": true, "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_macrozoneportalplan", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["snapshot", "external_portal_integrations"], "meta": {}, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "unique_key", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "strategy": "check", "target_schema": "dbt_snapshots", "check_cols": ["total_slots", "available_slots", "portal_plan_slots"], "invalidate_hard_deletes": true, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_snapshots", "fqn": ["houm", "external_portal_integrations", "stg_macrozoneportalplan_snapshot", "stg_macrozoneportalplan_snapshot"], "unique_id": "snapshot.houm.stg_macrozoneportalplan_snapshot", "raw_code": "\n\n    {{\n        config(\n          target_schema='dbt_snapshots',\n          strategy='check',\n          unique_key='unique_key',\n          tags = [\"snapshot\",\"external_portal_integrations\"],\n          check_cols=['total_slots', 'available_slots', 'portal_plan_slots'],\n          invalidate_hard_deletes=True,\n        )\n    }}\n\nSELECT\n       mpp.macrozone_id||'-'||ec.iso_name||'-'||ep.short_name||'-'||pp.business_type||'-'||pt.publication_name as unique_key,\n       mpp.id ,\n       mpp.total_slots ,\n       mpp.available_slots ,\n       mpp.macrozone_id ,\n       mpp.portal_plan_id ,\n       pp.portal_id ,\n       pp.publication_type_id ,\n       pt.publication_name ,\n       pt.publication_pretty_name ,\n       CASE pp.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                  AS business_type,\n       pp.slots                 AS portal_plan_slots,\n       ep.name                  AS portal_name ,\n       ep.short_name            AS portal_short_name ,\n       ec.full_name             AS country ,\n       ec.iso_name              AS country_iso\n\nFROM      {{ ref('stg_external_portal_integrations_macrozoneportalplan') }}     AS mpp\nLEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }}              AS pp  ON mpp.portal_plan_id = pp.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }}         AS pt  ON pp.publication_type_id = pt.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }}         AS ep  ON pp.portal_id = ep.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_country') }}                 AS ec  ON ep.country_id = ec.id\n    \n", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "external_portal_integrations/stg_macrozoneportalplan_snapshot.sql", "original_file_path": "snapshots/external_portal_integrations/stg_macrozoneportalplan_snapshot.sql", "name": "stg_macrozoneportalplan_snapshot", "alias": "stg_macrozoneportalplan_snapshot", "checksum": {"name": "sha256", "checksum": "13f88612cb13d915bd4c25d0542f2afd8e3eb82b5a0e3f72841fc6bfab09f064"}, "tags": ["snapshot", "external_portal_integrations"], "refs": [["stg_external_portal_integrations_macrozoneportalplan"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_country"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "dbt_snapshots", "strategy": "check", "unique_key": "unique_key", "tags": ["snapshot", "external_portal_integrations"], "check_cols": ["total_slots", "available_slots", "portal_plan_slots"], "invalidate_hard_deletes": true}, "created_at": 1675970038.5934741, "compiled_code": "\n\n    \n\nSELECT\n       mpp.macrozone_id||'-'||ec.iso_name||'-'||ep.short_name||'-'||pp.business_type||'-'||pt.publication_name as unique_key,\n       mpp.id ,\n       mpp.total_slots ,\n       mpp.available_slots ,\n       mpp.macrozone_id ,\n       mpp.portal_plan_id ,\n       pp.portal_id ,\n       pp.publication_type_id ,\n       pt.publication_name ,\n       pt.publication_pretty_name ,\n       CASE pp.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                  AS business_type,\n       pp.slots                 AS portal_plan_slots,\n       ep.name                  AS portal_name ,\n       ep.short_name            AS portal_short_name ,\n       ec.full_name             AS country ,\n       ec.iso_name              AS country_iso\n\nFROM      \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_macrozoneportalplan\"     AS mpp\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\"              AS pp  ON mpp.portal_plan_id = pp.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\"         AS pt  ON pp.publication_type_id = pt.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\"         AS ep  ON pp.portal_id = ep.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\"                 AS ec  ON ep.country_id = ec.id\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_snapshots\".\"stg_macrozoneportalplan_snapshot\""}, "test.houm.assert_properties_rent_prices_chile": {"compiled": true, "resource_type": "test", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails", "model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "assert_properties_rent_prices_chile"], "unique_id": "test.houm.assert_properties_rent_prices_chile", "raw_code": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom {{ ref('stg_propertydetails' )}}  propertiesdetails\ninner join {{ref('stg_properties')}} properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/assert_properties_rent_prices_chile.sql", "original_file_path": "tests/staging/assert_properties_rent_prices_chile.sql", "name": "assert_properties_rent_prices_chile", "alias": "assert_properties_rent_prices_chile", "checksum": {"name": "sha256", "checksum": "4ec2e33ef03374d3793a93f32671a95972e1c84f375e743e9b7a4dcfa981e093"}, "tags": [], "refs": [["stg_propertydetails"], ["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/tests/staging/assert_properties_rent_prices_chile.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.606922, "compiled_code": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"  propertiesdetails\ninner join \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "seed.houm.seed_plan_legacy_details": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_plan_legacy_details"], "unique_id": "seed.houm.seed_plan_legacy_details", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_plan_legacy_details.csv", "original_file_path": "seeds/seed_plan_legacy_details.csv", "name": "seed_plan_legacy_details", "alias": "seed_plan_legacy_details", "checksum": {"name": "sha256", "checksum": "5607703c7bb060f040456511e9e14f3f8ac911bdf24ae7a0c3efbb0d8144adae"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.617373, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_plan_legacy_details\""}, "seed.houm.seed_propiedades_axion": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_propiedades_axion"], "unique_id": "seed.houm.seed_propiedades_axion", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_propiedades_axion.csv", "original_file_path": "seeds/seed_propiedades_axion.csv", "name": "seed_propiedades_axion", "alias": "seed_propiedades_axion", "checksum": {"name": "sha256", "checksum": "30ab7d7a2d01c048c824c4ed3d43b34b755f41b25181ccad2ca5ee689bb57ef8"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.618616, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_propiedades_axion\""}, "seed.houm.seed_plan_legacy_taxes": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_plan_legacy_taxes"], "unique_id": "seed.houm.seed_plan_legacy_taxes", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_plan_legacy_taxes.csv", "original_file_path": "seeds/seed_plan_legacy_taxes.csv", "name": "seed_plan_legacy_taxes", "alias": "seed_plan_legacy_taxes", "checksum": {"name": "sha256", "checksum": "c90a29ac264ec2a3153c552d571e56a773a96857a1c8d0acbb9b20acef2ca196"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.619798, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_plan_legacy_taxes\""}, "seed.houm.seed_metrics_order": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_metrics_order"], "unique_id": "seed.houm.seed_metrics_order", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_metrics_order.csv", "original_file_path": "seeds/seed_metrics_order.csv", "name": "seed_metrics_order", "alias": "seed_metrics_order", "checksum": {"name": "sha256", "checksum": "0f5d2dacb6945517def5852f967f2115b3f21824b32f5e385ba1afcfdb9fb975"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.621065, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_metrics_order\""}, "seed.houm.seed_test_email": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_test_email"], "unique_id": "seed.houm.seed_test_email", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_test_email.csv", "original_file_path": "seeds/seed_test_email.csv", "name": "seed_test_email", "alias": "seed_test_email", "checksum": {"name": "sha256", "checksum": "8c959d0ae90756ba76839cbdd199c4ac46d14e3ecaaf9e93a7645e0d79380219"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.622237, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_test_email\""}, "seed.houm.seed_movements_methods": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_movements_methods"], "unique_id": "seed.houm.seed_movements_methods", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_movements_methods.csv", "original_file_path": "seeds/seed_movements_methods.csv", "name": "seed_movements_methods", "alias": "seed_movements_methods", "checksum": {"name": "sha256", "checksum": "a130e9c3eaf1b2e2753100b5ab779cce7bb9d1d87d85e60d13d99702b10ba0da"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6234071, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_movements_methods\""}, "seed.houm.seed_kustomer_queues": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_kustomer_queues"], "unique_id": "seed.houm.seed_kustomer_queues", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_kustomer_queues.csv", "original_file_path": "seeds/seed_kustomer_queues.csv", "name": "seed_kustomer_queues", "alias": "seed_kustomer_queues", "checksum": {"name": "sha256", "checksum": "eb16033b66836426df7f7f473bb1414190bcb2d063f38cc30c73eb5bcad25da3"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.624576, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_kustomer_queues\""}, "seed.houm.seed_dim_locations_houm_traduccion_1": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_dim_locations_houm_traduccion_1"], "unique_id": "seed.houm.seed_dim_locations_houm_traduccion_1", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_dim_locations_houm_traduccion_1.csv", "original_file_path": "seeds/seed_dim_locations_houm_traduccion_1.csv", "name": "seed_dim_locations_houm_traduccion_1", "alias": "seed_dim_locations_houm_traduccion_1", "checksum": {"name": "sha256", "checksum": "633f499463445b38574c7fbc06d132383b33a5686a160f9a8905330a2b4b7c19"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.625901, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_dim_locations_houm_traduccion_1\""}, "seed.houm.seed_unified_stages_pipedrive": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_unified_stages_pipedrive"], "unique_id": "seed.houm.seed_unified_stages_pipedrive", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_unified_stages_pipedrive.csv", "original_file_path": "seeds/seed_unified_stages_pipedrive.csv", "name": "seed_unified_stages_pipedrive", "alias": "seed_unified_stages_pipedrive", "checksum": {"name": "sha256", "checksum": "6a89535d7a166e58f16eb4e0ea484e03071b94afddef340c04f43e92e70a106d"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.627059, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_unified_stages_pipedrive\""}, "seed.houm.seed_dim_locations_houm": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_dim_locations_houm"], "unique_id": "seed.houm.seed_dim_locations_houm", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_dim_locations_houm.csv", "original_file_path": "seeds/seed_dim_locations_houm.csv", "name": "seed_dim_locations_houm", "alias": "seed_dim_locations_houm", "checksum": {"name": "sha256", "checksum": "5b7c97b93ec9e175e76cc9a180be7af58eaccd5dae083529fd716062bb72989a"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6282072, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_dim_locations_houm\""}, "seed.houm.seed_metrics": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_metrics"], "unique_id": "seed.houm.seed_metrics", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_metrics.csv", "original_file_path": "seeds/seed_metrics.csv", "name": "seed_metrics", "alias": "seed_metrics", "checksum": {"name": "sha256", "checksum": "ddd16ae3a8753c105beb0740d2c6580794871eef3b03596af3198ae15b08d31c"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6293602, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_metrics\""}, "seed.houm.country-codes": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "country-codes"], "unique_id": "seed.houm.country-codes", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "country-codes.csv", "original_file_path": "seeds/country-codes.csv", "name": "country-codes", "alias": "country-codes", "checksum": {"name": "sha256", "checksum": "ea57c67f19126730facb36f54d1c059294a74a8865b6e2391e1526d563cd1c68"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.63131, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"country-codes\""}, "seed.houm.seed_survey_details": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_survey_details"], "unique_id": "seed.houm.seed_survey_details", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_survey_details.csv", "original_file_path": "seeds/seed_survey_details.csv", "name": "seed_survey_details", "alias": "seed_survey_details", "checksum": {"name": "sha256", "checksum": "2a8b325d9c5e39d1ed1234128918304bc0dbd519d1b4655ea7ecd68b1afe9446"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6324842, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_survey_details\""}, "seed.houm.seed_dim_dates": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "seed_dim_dates"], "unique_id": "seed.houm.seed_dim_dates", "raw_code": "", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "seed_dim_dates.csv", "original_file_path": "seeds/seed_dim_dates.csv", "name": "seed_dim_dates", "alias": "seed_dim_dates", "checksum": {"name": "sha256", "checksum": "afb397cdf7741b2e0a02590345ee9ccb27da9ad051d683433ccf120642c57fec"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6336489, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"seed_dim_dates\""}, "operation.houm.houm-on-run-end-0": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-0"], "unique_id": "operation.houm.houm-on-run-end-0", "raw_code": "grant usage on schema analytics to metabase", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-0.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-0", "alias": "houm-on-run-end-0", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6428008, "compiled_code": "grant usage on schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 0}, "operation.houm.houm-on-run-end-1": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-1"], "unique_id": "operation.houm.houm-on-run-end-1", "raw_code": "grant select on all tables in schema analytics to metabase", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-1.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-1", "alias": "houm-on-run-end-1", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-1.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.644911, "compiled_code": "grant select on all tables in schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 1}, "operation.houm.houm-on-run-end-2": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-2"], "unique_id": "operation.houm.houm-on-run-end-2", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-2.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-2", "alias": "houm-on-run-end-2", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-2.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6470861, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 2}, "operation.houm.houm-on-run-end-3": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-3"], "unique_id": "operation.houm.houm-on-run-end-3", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-3.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-3", "alias": "houm-on-run-end-3", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-3.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.649175, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 3}, "operation.houm.houm-on-run-end-4": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-4"], "unique_id": "operation.houm.houm-on-run-end-4", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-4.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-4", "alias": "houm-on-run-end-4", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-4.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.651291, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 4}, "operation.houm.houm-on-run-end-5": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-5"], "unique_id": "operation.houm.houm-on-run-end-5", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-5.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-5", "alias": "houm-on-run-end-5", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-5.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.653436, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 5}, "operation.houm.houm-on-run-end-6": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-6"], "unique_id": "operation.houm.houm-on-run-end-6", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-6.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-6", "alias": "houm-on-run-end-6", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-6.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.656168, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 6}, "operation.houm.houm-on-run-end-7": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-7"], "unique_id": "operation.houm.houm-on-run-end-7", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-7.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-7", "alias": "houm-on-run-end-7", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-7.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.658257, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 7}, "operation.houm.houm-on-run-end-8": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-8"], "unique_id": "operation.houm.houm-on-run-end-8", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-8.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-8", "alias": "houm-on-run-end-8", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-8.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.660403, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 8}, "operation.houm.houm-on-run-end-9": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-9"], "unique_id": "operation.houm.houm-on-run-end-9", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-9.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-9", "alias": "houm-on-run-end-9", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-9.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6624708, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 9}, "operation.houm.houm-on-run-end-10": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-10"], "unique_id": "operation.houm.houm-on-run-end-10", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-10.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-10", "alias": "houm-on-run-end-10", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-10.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.664629, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 10}, "operation.houm.houm-on-run-end-11": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-11"], "unique_id": "operation.houm.houm-on-run-end-11", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-11.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-11", "alias": "houm-on-run-end-11", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-11.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.666709, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 11}, "operation.houm.houm-on-run-end-12": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-12"], "unique_id": "operation.houm.houm-on-run-end-12", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-12.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-12", "alias": "houm-on-run-end-12", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-12.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6688268, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 12}, "operation.houm.houm-on-run-end-13": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-13"], "unique_id": "operation.houm.houm-on-run-end-13", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-13.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-13", "alias": "houm-on-run-end-13", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-13.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6710122, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 13}, "operation.houm.houm-on-run-end-14": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-14"], "unique_id": "operation.houm.houm-on-run-end-14", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-14.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-14", "alias": "houm-on-run-end-14", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-14.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.673089, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 14}, "operation.houm.houm-on-run-end-15": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-15"], "unique_id": "operation.houm.houm-on-run-end-15", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-15.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-15", "alias": "houm-on-run-end-15", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-15.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.675914, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 15}, "operation.houm.houm-on-run-end-16": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-16"], "unique_id": "operation.houm.houm-on-run-end-16", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-16.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-16", "alias": "houm-on-run-end-16", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-16.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.678062, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 16}, "operation.houm.houm-on-run-end-17": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-17"], "unique_id": "operation.houm.houm-on-run-end-17", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-17.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-17", "alias": "houm-on-run-end-17", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-17.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6801121, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 17}, "operation.houm.houm-on-run-end-18": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-18"], "unique_id": "operation.houm.houm-on-run-end-18", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-18.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-18", "alias": "houm-on-run-end-18", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-18.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.682185, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 18}, "operation.houm.houm-on-run-end-19": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-19"], "unique_id": "operation.houm.houm-on-run-end-19", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-19.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-19", "alias": "houm-on-run-end-19", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-19.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6843169, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 19}, "operation.houm.houm-on-run-end-20": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-20"], "unique_id": "operation.houm.houm-on-run-end-20", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-20.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-20", "alias": "houm-on-run-end-20", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-20.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.68639, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 20}, "operation.houm.houm-on-run-end-21": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-21"], "unique_id": "operation.houm.houm-on-run-end-21", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-21.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-21", "alias": "houm-on-run-end-21", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-21.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.688479, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 21}, "operation.houm.houm-on-run-end-22": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-22"], "unique_id": "operation.houm.houm-on-run-end-22", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-22.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-22", "alias": "houm-on-run-end-22", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-22.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.690606, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 22}, "operation.houm.houm-on-run-end-23": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-23"], "unique_id": "operation.houm.houm-on-run-end-23", "raw_code": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-23.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-23", "alias": "houm-on-run-end-23", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-23.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.692721, "compiled_code": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 23}, "operation.houm.houm-on-run-end-24": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-24"], "unique_id": "operation.houm.houm-on-run-end-24", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-24.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-24", "alias": "houm-on-run-end-24", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-24.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.695571, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 24}, "operation.houm.houm-on-run-end-25": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-25"], "unique_id": "operation.houm.houm-on-run-end-25", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-25.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-25", "alias": "houm-on-run-end-25", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-25.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.697697, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 25}, "operation.houm.houm-on-run-end-26": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-26"], "unique_id": "operation.houm.houm-on-run-end-26", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-26.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-26", "alias": "houm-on-run-end-26", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-26.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.6997619, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 26}, "operation.houm.houm-on-run-end-27": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-27"], "unique_id": "operation.houm.houm-on-run-end-27", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-27.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-27", "alias": "houm-on-run-end-27", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-27.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.701835, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 27}, "operation.houm.houm-on-run-end-28": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-28"], "unique_id": "operation.houm.houm-on-run-end-28", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-28.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-28", "alias": "houm-on-run-end-28", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-28.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7039502, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 28}, "operation.houm.houm-on-run-end-29": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-29"], "unique_id": "operation.houm.houm-on-run-end-29", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-29.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-29", "alias": "houm-on-run-end-29", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-29.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.706014, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 29}, "operation.houm.houm-on-run-end-30": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-30"], "unique_id": "operation.houm.houm-on-run-end-30", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-30.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-30", "alias": "houm-on-run-end-30", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-30.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.70818, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 30}, "operation.houm.houm-on-run-end-31": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-31"], "unique_id": "operation.houm.houm-on-run-end-31", "raw_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-31.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-31", "alias": "houm-on-run-end-31", "checksum": {"name": "sha256", "checksum": "be87f96bec3f7bb2c6218b8339f486a1acc84b7cea9d8b745757f6037754534b"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-31.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.710229, "compiled_code": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 31}, "test.houm.unique_properties_published_property_id.3fc869c6e4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "unique_properties_published_property_id"], "unique_id": "test.houm.unique_properties_published_property_id.3fc869c6e4", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "unique_properties_published_property_id", "alias": "unique_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/unique_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7312489, "compiled_code": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.not_null_properties_published_property_id.cfd67d7b86": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "not_null_properties_published_property_id"], "unique_id": "test.houm.not_null_properties_published_property_id.cfd67d7b86", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "not_null_properties_published_property_id", "alias": "not_null_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/not_null_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.732338, "compiled_code": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "unique_dim_macrozones_macrozone"], "unique_id": "test.houm.unique_dim_macrozones_macrozone.99a7937a3d", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "unique_dim_macrozones_macrozone", "alias": "unique_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/unique_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.734051, "compiled_code": "\n    \n    \n\nselect\n    macrozone as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is not null\ngroup by macrozone\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "not_null_dim_macrozones_macrozone"], "unique_id": "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "not_null_dim_macrozones_macrozone", "alias": "not_null_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/not_null_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.735208, "compiled_code": "\n    \n    \n\n\n\nselect macrozone\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.unique_stg_properties_id.c012ce6a29": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_properties_id"], "unique_id": "test.houm.unique_stg_properties_id.c012ce6a29", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_properties_id", "alias": "unique_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.751035, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.not_null_stg_properties_id.d43465ee9b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_properties_id"], "unique_id": "test.houm.not_null_stg_properties_id.d43465ee9b", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_properties_id", "alias": "not_null_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7520819, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.unique_stg_propertydetails_property_id.3d72328240": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_propertydetails_property_id"], "unique_id": "test.houm.unique_stg_propertydetails_property_id.3d72328240", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_propertydetails_property_id", "alias": "unique_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.753222, "compiled_code": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.not_null_stg_propertydetails_property_id.e78288fade": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_propertydetails_property_id"], "unique_id": "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_propertydetails_property_id", "alias": "not_null_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7542279, "compiled_code": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_propertydetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1\") }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_propertydetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1"}, "created_at": 1675970038.7552419, "compiled_code": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_property_salesdetails_property_id"], "unique_id": "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_property_salesdetails_property_id", "alias": "unique_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7628028, "compiled_code": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_property_salesdetails_property_id"], "unique_id": "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_property_salesdetails_property_id", "alias": "not_null_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.763835, "compiled_code": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee\") }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee"}, "created_at": 1675970038.765034, "compiled_code": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_employees_dwh_person_id"], "unique_id": "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_employees_dwh_person_id", "alias": "unique_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.768184, "compiled_code": "\n    \n    \n\nselect\n    dwh_person_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is not null\ngroup by dwh_person_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_employees_dwh_person_id"], "unique_id": "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_employees_dwh_person_id", "alias": "not_null_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.769671, "compiled_code": "\n    \n    \n\n\n\nselect dwh_person_id\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.unique_stg_zendesk_users_id.e79d686872": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_users_id"], "unique_id": "test.houm.unique_stg_zendesk_users_id.e79d686872", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_users_id", "alias": "unique_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.770689, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_id.52cc258f65": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_id"], "unique_id": "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_id", "alias": "not_null_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7716858, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_created_at", "alias": "not_null_stg_zendesk_users_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.7726982, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_users"}, "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_tickets_id"], "unique_id": "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52", "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_tickets_id", "alias": "unique_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.803784, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_id", "alias": "not_null_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.804966, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_created_at", "alias": "not_null_stg_zendesk_tickets_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.8059928, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_requester_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_requester_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_requester_id", "alias": "not_null_stg_zendesk_tickets_requester_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_requester_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.8071291, "compiled_code": "\n    \n    \n\n\n\nselect requester_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere requester_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784\") }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784"}, "created_at": 1675970038.808149, "compiled_code": "\n    \n    \n\nwith child as (\n    select requester_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where requester_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_submitter_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_submitter_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_submitter_id", "alias": "not_null_stg_zendesk_tickets_submitter_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_submitter_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1675970038.8116338, "compiled_code": "\n    \n    \n\n\n\nselect submitter_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere submitter_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": {"test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651\") }}", "language": "sql", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651"}, "created_at": 1675970038.812673, "compiled_code": "\n    \n    \n\nwith child as (\n    select submitter_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where submitter_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}}, "sources": {"source.houm.public.dim_polygons": {"fqn": ["houm", "dwh", "dims", "public", "dim_polygons"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_polygons", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "dim_polygons", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_polygons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_polygons\"", "created_at": 1675970038.8782122}, "source.houm.historical.historical_scheduler_macrozone": {"fqn": ["houm", "dwh", "dims", "historical", "historical_scheduler_macrozone"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_scheduler_macrozone", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "historical_scheduler_macrozone", "source_name": "historical", "source_description": "", "loader": "", "identifier": "historical_scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_scheduler_macrozone\"", "created_at": 1675970038.878305}, "source.houm.public.dim_dates": {"fqn": ["houm", "staging", "public", "dim_dates"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_dates", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "dim_dates", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_dates", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_dates\"", "created_at": 1675970038.878379}, "source.houm.public.rev_houm_properties": {"fqn": ["houm", "staging", "public", "rev_houm_properties"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.rev_houm_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "rev_houm_properties", "source_name": "public", "source_description": "", "loader": "", "identifier": "rev_houm_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"rev_houm_properties\"", "created_at": 1675970038.8784451}, "source.houm.public.economic_indicator_uf": {"fqn": ["houm", "staging", "public", "economic_indicator_uf"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.economic_indicator_uf", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "economic_indicator_uf", "source_name": "public", "source_description": "", "loader": "", "identifier": "economic_indicator_uf", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"economic_indicator_uf\"", "created_at": 1675970038.8785112}, "source.houm.historical.historical_properties": {"fqn": ["houm", "staging", "historical", "historical_properties"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties\"", "created_at": 1675970038.878577}, "source.houm.historical.historical_arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_propertydetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_propertydetails\"", "created_at": 1675970038.8786418}, "source.houm.historical.historical_properties_salesdetails": {"fqn": ["houm", "staging", "historical", "historical_properties_salesdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties_salesdetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties_salesdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties_salesdetails\"", "created_at": 1675970038.878706}, "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_homecheckerdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_homecheckerdetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_homecheckerdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_homecheckerdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"", "created_at": 1675970038.8787699}, "source.houm.historical.historical_users": {"fqn": ["houm", "staging", "historical", "historical_users"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_users", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_users", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_users\"", "created_at": 1675970038.878835}, "source.houm.historical.historical_contracts": {"fqn": ["houm", "staging", "historical", "historical_contracts"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_contracts", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_contracts", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_contracts", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_contracts\"", "created_at": 1675970038.8789032}, "source.houm.historical.historical_plans": {"fqn": ["houm", "staging", "historical", "historical_plans"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_plans", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_plans", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_plans", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_plans\"", "created_at": 1675970038.8789692}, "source.houm.historical.historical_external_portal_integrations_publication": {"fqn": ["houm", "staging", "historical", "historical_external_portal_integrations_publication"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_external_portal_integrations_publication", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_external_portal_integrations_publication", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_external_portal_integrations_publication", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_external_portal_integrations_publication\"", "created_at": 1675970038.879034}, "source.houm.historical.historical_evaluation": {"fqn": ["houm", "staging", "historical", "historical_evaluation"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_evaluation", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_evaluation", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_evaluation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_evaluation\"", "created_at": 1675970038.879097}, "source.houm.raw_stage.series_ipc_cl": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_cl"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_cl", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"", "created_at": 1675970038.8791602}, "source.houm.raw_stage.series_ipc_mx": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_mx"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_mx", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_mx", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"", "created_at": 1675970038.879224}, "source.houm.raw_stage.series_ipc_co": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_co"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_co", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_co", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"", "created_at": 1675970038.879288}, "source.houm.raw_stage.properties": {"fqn": ["houm", "staging", "raw_stage", "properties"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties\"", "created_at": 1675970038.879352}, "source.houm.raw_stage.properties_salesdetails": {"fqn": ["houm", "staging", "raw_stage", "properties_salesdetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_salesdetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_salesdetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"", "created_at": 1675970038.879414}, "source.houm.raw_stage.properties_location": {"fqn": ["houm", "staging", "raw_stage", "properties_location"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_location", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_location", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_location", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_location\"", "created_at": 1675970038.879476}, "source.houm.raw_stage.properties_associationamenities": {"fqn": ["houm", "staging", "raw_stage", "properties_associationamenities"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_associationamenities", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_associationamenities", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_associationamenities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_associationamenities\"", "created_at": 1675970038.879539}, "source.houm.raw_stage.properties_inspectionreport": {"fqn": ["houm", "staging", "raw_stage", "properties_inspectionreport"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_inspectionreport", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_inspectionreport", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_inspectionreport", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_inspectionreport\"", "created_at": 1675970038.879602}, "source.houm.raw_stage.properties_basicservice": {"fqn": ["houm", "staging", "raw_stage", "properties_basicservice"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_basicservice", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_basicservice", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_basicservice", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_basicservice\"", "created_at": 1675970038.879665}, "source.houm.raw_stage.arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_propertydetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"", "created_at": 1675970038.8797271}, "source.houm.raw_stage.arriendoasegurado_city": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_city"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_city", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_city", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_city", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_city\"", "created_at": 1675970038.8797948}, "source.houm.raw_stage.arriendoasegurado_applicant": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_applicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_applicant", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_applicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_applicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "created_at": 1675970038.8798568}, "source.houm.raw_stage.arriendoasegurado_contractperson": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_contractperson"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_contractperson", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_contractperson", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_contractperson", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_contractperson\"", "created_at": 1675970038.879919}, "source.houm.raw_stage.arriendoasegurado_planmonth": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_planmonth"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_planmonth", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_planmonth", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_planmonth", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_planmonth\"", "created_at": 1675970038.879981}, "source.houm.raw_stage.arriendoasegurado_rentfeedback": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_rentfeedback"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_rentfeedback", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_rentfeedback", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_rentfeedback", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_rentfeedback\"", "created_at": 1675970038.8800461}, "source.houm.raw_stage.users": {"fqn": ["houm", "staging", "raw_stage", "users"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.users", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"users\"", "created_at": 1675970038.880107}, "source.houm.raw_stage.subscription_subscription": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscription"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscription", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscription", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscription", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"", "created_at": 1675970038.8801699}, "source.houm.raw_stage.real_estate_developments_developments": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_developments"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_developments", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_developments", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_developments", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developments\"", "created_at": 1675970038.880233}, "source.houm.raw_stage.real_estate_developments_developmentdetails": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_developmentdetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_developmentdetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_developmentdetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_developmentdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developmentdetails\"", "created_at": 1675970038.8802948}, "source.houm.raw_stage.real_estate_developments_unittypes": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_unittypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_unittypes", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_unittypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_unittypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_unittypes\"", "created_at": 1675970038.880357}, "source.houm.raw_stage.real_estate_developments_units": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_units"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_units", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_units", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_units", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_units\"", "created_at": 1675970038.8804202}, "source.houm.raw_stage.demand_lead": {"fqn": ["houm", "staging", "raw_stage", "demand_lead"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_lead", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_lead", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_lead", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "created_at": 1675970038.880481}, "source.houm.raw_stage.demand_portalhoum": {"fqn": ["houm", "staging", "raw_stage", "demand_portalhoum"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalhoum", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalhoum", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalhoum", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "created_at": 1675970038.880543}, "source.houm.raw_stage.demand_portalapplicant": {"fqn": ["houm", "staging", "raw_stage", "demand_portalapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalapplicant", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "created_at": 1675970038.880606}, "source.houm.raw_stage.demand_marketingapplicant": {"fqn": ["houm", "staging", "raw_stage", "demand_marketingapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_marketingapplicant", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_marketingapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_marketingapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_marketingapplicant\"", "created_at": 1675970038.8806689}, "source.houm.raw_stage.demand_whatsapp": {"fqn": ["houm", "staging", "raw_stage", "demand_whatsapp"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_whatsapp", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_whatsapp", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_whatsapp", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_whatsapp\"", "created_at": 1675970038.8807302}, "source.houm.raw_stage.demand_calls": {"fqn": ["houm", "staging", "raw_stage", "demand_calls"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_calls", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_calls", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_calls", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_calls\"", "created_at": 1675970038.880793}, "source.houm.raw_stage.demand_eventleadhasappraiser": {"fqn": ["houm", "staging", "raw_stage", "demand_eventleadhasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_eventleadhasappraiser", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_eventleadhasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_eventleadhasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_eventleadhasappraiser\"", "created_at": 1675970038.880855}, "source.houm.raw_stage.demand_leadhasappraiser": {"fqn": ["houm", "staging", "raw_stage", "demand_leadhasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_leadhasappraiser", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_leadhasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_leadhasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_leadhasappraiser\"", "created_at": 1675970038.880917}, "source.houm.raw_stage.demand_eventleadprofile": {"fqn": ["houm", "staging", "raw_stage", "demand_eventleadprofile"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_eventleadprofile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_eventleadprofile", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_eventleadprofile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_eventleadprofile\"", "created_at": 1675970038.8810189}, "source.houm.raw_stage.scheduler_schedules": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedules"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedules", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedules", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedules", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "created_at": 1675970038.881082}, "source.houm.raw_stage.scheduler_scheduletypes": {"fqn": ["houm", "staging", "raw_stage", "scheduler_scheduletypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_scheduletypes", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_scheduletypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_scheduletypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "created_at": 1675970038.881144}, "source.houm.raw_stage.scheduler_appraisers": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraisers"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraisers", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraisers", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraisers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraisers\"", "created_at": 1675970038.881205}, "source.houm.raw_stage.scheduler_schedulehasapplicant": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedulehasapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedulehasapplicant", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedulehasapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedulehasapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "created_at": 1675970038.8812659}, "source.houm.raw_stage.scheduler_applicanthasappraiser": {"fqn": ["houm", "staging", "raw_stage", "scheduler_applicanthasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_applicanthasappraiser", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_applicanthasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_applicanthasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_applicanthasappraiser\"", "created_at": 1675970038.881328}, "source.houm.raw_stage.scheduler_appraiseravailability": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiseravailability"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiseravailability", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiseravailability", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiseravailability", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiseravailability\"", "created_at": 1675970038.8813922}, "source.houm.raw_stage.scheduler_appraiserevent": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiserevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiserevent", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiserevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiserevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserevent\"", "created_at": 1675970038.881453}, "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiserworkingmacrozone"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiserworkingmacrozone", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiserworkingmacrozone", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiserworkingmacrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserworkingmacrozone\"", "created_at": 1675970038.881516}, "source.houm.raw_stage.scheduler_cancelreasons": {"fqn": ["houm", "staging", "raw_stage", "scheduler_cancelreasons"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_cancelreasons", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_cancelreasons", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_cancelreasons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasons\"", "created_at": 1675970038.881578}, "source.houm.raw_stage.scheduler_cancelreasontypes": {"fqn": ["houm", "staging", "raw_stage", "scheduler_cancelreasontypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_cancelreasontypes", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_cancelreasontypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_cancelreasontypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasontypes\"", "created_at": 1675970038.88164}, "source.houm.raw_stage.scheduler_macrozone": {"fqn": ["houm", "staging", "raw_stage", "scheduler_macrozone"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_macrozone", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_macrozone", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\"", "created_at": 1675970038.8817012}, "source.houm.raw_stage.scheduler_scheduleevent": {"fqn": ["houm", "staging", "raw_stage", "scheduler_scheduleevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_scheduleevent", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_scheduleevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_scheduleevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_scheduleevent\"", "created_at": 1675970038.881762}, "source.houm.raw_stage.subscription_subscriptiondiscount": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscriptiondiscount"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscriptiondiscount", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscriptiondiscount", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscriptiondiscount", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscriptiondiscount\"", "created_at": 1675970038.881824}, "source.houm.raw_stage.subscription_subscriptionevent": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscriptionevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscriptionevent", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscriptionevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscriptionevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscriptionevent\"", "created_at": 1675970038.881886}, "source.houm.raw_stage.bid": {"fqn": ["houm", "staging", "raw_stage", "bid"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.bid", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "bid", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"bid\"", "created_at": 1675970038.881948}, "source.houm.raw_stage.negotiation": {"fqn": ["houm", "staging", "raw_stage", "negotiation"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.negotiation", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "negotiation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"negotiation\"", "created_at": 1675970038.8820102}, "source.houm.raw_stage.identification": {"fqn": ["houm", "staging", "raw_stage", "identification"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.identification", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "identification", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"identification\"", "created_at": 1675970038.882072}, "source.houm.raw_stage.identification_type": {"fqn": ["houm", "staging", "raw_stage", "identification_type"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.identification_type", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification_type", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "identification_type", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"identification_type\"", "created_at": 1675970038.882133}, "source.houm.raw_stage.contracts_codebtors": {"fqn": ["houm", "staging", "raw_stage", "contracts_codebtors"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.contracts_codebtors", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "contracts_codebtors", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "contracts_codebtors", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"contracts_codebtors\"", "created_at": 1675970038.882196}, "source.houm.raw_stage.plans_cities": {"fqn": ["houm", "staging", "raw_stage", "plans_cities"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.plans_cities", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "plans_cities", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "plans_cities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"plans_cities\"", "created_at": 1675970038.882258}, "source.houm.raw_stage.billing_adjustment": {"fqn": ["houm", "staging", "raw_stage", "billing_adjustment"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.billing_adjustment", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "billing_adjustment", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "billing_adjustment", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"billing_adjustment\"", "created_at": 1675970038.88232}, "source.houm.raw_stage.payment_orders": {"fqn": ["houm", "staging", "raw_stage", "payment_orders"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.payment_orders", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payment_orders", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "payment_orders", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"payment_orders\"", "created_at": 1675970038.8823822}, "source.houm.raw_stage.plans": {"fqn": ["houm", "staging", "raw_stage", "plans"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.plans", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "plans", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "plans", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"plans\"", "created_at": 1675970038.882445}, "source.houm.raw_stage.contracts": {"fqn": ["houm", "staging", "raw_stage", "contracts"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.contracts", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "contracts", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "contracts", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"contracts\"", "created_at": 1675970038.882507}, "source.houm.raw_stage.external_portal_integrations_country": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_country"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_country", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_country", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_country", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_country\"", "created_at": 1675970038.882568}, "source.houm.raw_stage.external_portal_integrations_publication": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publication"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publication", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publication", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publication", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publication\"", "created_at": 1675970038.8826299}, "source.houm.raw_stage.external_portal_integrations_publicationtype": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publicationtype"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publicationtype", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publicationtype", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publicationtype", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationtype\"", "created_at": 1675970038.8826911}, "source.houm.raw_stage.external_portal_integrations_portalplan": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_portalplan"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_portalplan", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_portalplan", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_portalplan", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_portalplan\"", "created_at": 1675970038.882754}, "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_macrozoneportalplan"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_macrozoneportalplan", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_macrozoneportalplan", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_macrozoneportalplan\"", "created_at": 1675970038.882816}, "source.houm.raw_stage.external_portal_integrations_loadstatus": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_loadstatus"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_loadstatus", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_loadstatus", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_loadstatus", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_loadstatus\"", "created_at": 1675970038.8828769}, "source.houm.raw_stage.external_portal_integrations_externalportals": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_externalportals"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_externalportals", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_externalportals", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_externalportals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_externalportals\"", "created_at": 1675970038.8829389}, "source.houm.raw_stage.external_portal_integrations_publicationurl": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publicationurl"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publicationurl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publicationurl", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publicationurl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationurl\"", "created_at": 1675970038.883002}, "source.houm.raw_stage.external_properties_rent_chile": {"fqn": ["houm", "staging", "raw_stage", "external_properties_rent_chile"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_rent_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_rent_chile", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_rent_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_rent_chile\"", "created_at": 1675970038.883063}, "source.houm.raw_stage.external_properties_rent_colombia": {"fqn": ["houm", "staging", "raw_stage", "external_properties_rent_colombia"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_rent_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_rent_colombia", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_rent_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_rent_colombia\"", "created_at": 1675970038.8831239}, "source.houm.raw_stage.external_properties_rent_mexico": {"fqn": ["houm", "staging", "raw_stage", "external_properties_rent_mexico"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_rent_mexico", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_rent_mexico", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_rent_mexico", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_rent_mexico\"", "created_at": 1675970038.8831859}, "source.houm.raw_stage.external_properties_sales_chile": {"fqn": ["houm", "staging", "raw_stage", "external_properties_sales_chile"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_sales_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_sales_chile", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_sales_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_sales_chile\"", "created_at": 1675970038.883248}, "source.houm.raw_stage.external_properties_sales_colombia": {"fqn": ["houm", "staging", "raw_stage", "external_properties_sales_colombia"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_sales_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_sales_colombia", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_sales_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_sales_colombia\"", "created_at": 1675970038.88331}, "source.houm.raw_stage.external_properties_sales_mexico": {"fqn": ["houm", "staging", "raw_stage", "external_properties_sales_mexico"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_properties_sales_mexico", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_properties_sales_mexico", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_properties_sales_mexico", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_properties_sales_mexico\"", "created_at": 1675970038.883372}, "source.houm.staging_buk.employees_chile": {"fqn": ["houm", "staging", "staging_buk", "employees_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_chile\"", "created_at": 1675970038.8834329}, "source.houm.staging_buk.employees_colombia": {"fqn": ["houm", "staging", "staging_buk", "employees_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "created_at": 1675970038.8834949}, "source.houm.staging_buk.roles_chile": {"fqn": ["houm", "staging", "staging_buk", "roles_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_chile\"", "created_at": 1675970038.8835762}, "source.houm.staging_buk.roles_colombia": {"fqn": ["houm", "staging", "staging_buk", "roles_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "created_at": 1675970038.883638}, "source.houm.staging_buk.accounting_chile": {"fqn": ["houm", "staging", "staging_buk", "accounting_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_chile\"", "created_at": 1675970038.8837}, "source.houm.staging_buk.accounting_colombia": {"fqn": ["houm", "staging", "staging_buk", "accounting_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_colombia\"", "created_at": 1675970038.8837628}, "source.houm.staging_buk.areas_chile": {"fqn": ["houm", "staging", "staging_buk", "areas_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_chile\"", "created_at": 1675970038.8838248}, "source.houm.staging_buk.areas_colombia": {"fqn": ["houm", "staging", "staging_buk", "areas_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "created_at": 1675970038.8838882}, "source.houm.staging_buk.companies_chile": {"fqn": ["houm", "staging", "staging_buk", "companies_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_chile\"", "created_at": 1675970038.8839521}, "source.houm.staging_buk.companies_colombia": {"fqn": ["houm", "staging", "staging_buk", "companies_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "created_at": 1675970038.884017}, "source.houm.staging_buk.departments_chile": {"fqn": ["houm", "staging", "staging_buk", "departments_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_chile\"", "created_at": 1675970038.8840802}, "source.houm.staging_buk.departments_colombia": {"fqn": ["houm", "staging", "staging_buk", "departments_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "created_at": 1675970038.884143}, "source.houm.staging_buk.jobs_chile": {"fqn": ["houm", "staging", "staging_buk", "jobs_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_chile\"", "created_at": 1675970038.884205}, "source.houm.staging_buk.jobs_colombia": {"fqn": ["houm", "staging", "staging_buk", "jobs_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "created_at": 1675970038.884267}, "source.houm.staging_buk.payrolls_chile": {"fqn": ["houm", "staging", "staging_buk", "payrolls_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"", "created_at": 1675970038.8843288}, "source.houm.staging_buk.payrolls_colombia": {"fqn": ["houm", "staging", "staging_buk", "payrolls_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "created_at": 1675970038.8843908}, "source.houm.staging_buk.line_settlements_chile": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_chile", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"", "created_at": 1675970038.884452}, "source.houm.staging_buk.line_settlements_colombia": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_colombia", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "created_at": 1675970038.884514}, "source.houm.airbyte_zendesk.users": {"fqn": ["houm", "staging", "airbyte_zendesk", "users"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.users", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"users\"", "created_at": 1675970038.884577}, "source.houm.airbyte_zendesk.tickets": {"fqn": ["houm", "staging", "airbyte_zendesk", "tickets"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.tickets", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "tickets", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "tickets", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "created_at": 1675970038.884638}, "source.houm.airbyte_zendesk.ticket_audits": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\"", "created_at": 1675970038.8846998}, "source.houm.airbyte_zendesk.ticket_audits_events": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_events"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_events", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_events", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_events", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\"", "created_at": 1675970038.884762}, "source.houm.airbyte_zendesk.ticket_audits_via": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\"", "created_at": 1675970038.884824}, "source.houm.airbyte_zendesk.ticket_audits_via_source": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\"", "created_at": 1675970038.884886}, "source.houm.airbyte_zendesk.ticket_audits_via_source_from": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_from"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_from", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source_from", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\"", "created_at": 1675970038.884948}, "source.houm.airbyte_zendesk.ticket_audits_via_source_to": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_to"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_to", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_to", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source_to", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\"", "created_at": 1675970038.8850088}, "source.houm.airbyte_zendesk.ticket_metrics": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_metrics"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_metrics", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_metrics", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_metrics", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "created_at": 1675970038.885071}, "source.houm.airbyte_zendesk.ticket_comments": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_comments"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_comments", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_comments", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_comments", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\"", "created_at": 1675970038.885133}, "source.houm.pipedrive.activities": {"fqn": ["houm", "staging", "pipedrive", "activities"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.activities", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "activities", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "activities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"activities\"", "created_at": 1675970038.885196}, "source.houm.pipedrive.deals": {"fqn": ["houm", "staging", "pipedrive", "deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.deals", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"deals\"", "created_at": 1675970038.885257}, "source.houm.pipedrive.pipelines": {"fqn": ["houm", "staging", "pipedrive", "pipelines"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.pipelines", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "pipelines", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "pipelines", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"pipelines\"", "created_at": 1675970038.8853178}, "source.houm.pipedrive.stages": {"fqn": ["houm", "staging", "pipedrive", "stages"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.stages", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "stages", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "stages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"stages\"", "created_at": 1675970038.88538}, "source.houm.pipedrive.bi_persons": {"fqn": ["houm", "staging", "pipedrive", "bi_persons"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_persons", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_persons", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_persons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_persons\"", "created_at": 1675970038.885442}, "source.houm.pipedrive.bi_deals": {"fqn": ["houm", "staging", "pipedrive", "bi_deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_deals", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_deals\"", "created_at": 1675970038.8855019}, "source.houm.mongo_tables.payments_cl_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_cl_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_cl_db_movements", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_cl_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_cl_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "created_at": 1675970038.8855639}, "source.houm.mongo_tables.payments_co_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_co_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_co_db_movements", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_co_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_co_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "created_at": 1675970038.885626}, "source.houm.mongo_tables.payments_mx_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_mx_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_mx_db_movements", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_mx_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_mx_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "created_at": 1675970038.885687}, "source.houm.mongo_tables.propertyduty_info": {"fqn": ["houm", "staging", "mongo_tables", "propertyduty_info"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.propertyduty_info", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "propertyduty_info", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "propertyduty_info", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"propertyduty_info\"", "created_at": 1675970038.885749}, "source.houm.mongo_tables.propertyduty_detail": {"fqn": ["houm", "staging", "mongo_tables", "propertyduty_detail"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.propertyduty_detail", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "propertyduty_detail", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "propertyduty_detail", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"propertyduty_detail\"", "created_at": 1675970038.88581}, "source.houm.mongo_tables.propertyduty_company": {"fqn": ["houm", "staging", "mongo_tables", "propertyduty_company"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.propertyduty_company", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "propertyduty_company", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "propertyduty_company", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"propertyduty_company\"", "created_at": 1675970038.8858728}, "source.houm.airbyte_gspread.bb_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "bb_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.bb_fb", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bb_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "bb_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "created_at": 1675970038.885935}, "source.houm.airbyte_gspread.gg_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "created_at": 1675970038.885996}, "source.houm.airbyte_gspread.gg_mxco": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_mxco"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_mxco", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_mxco", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_mxco", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "created_at": 1675970038.886059}, "source.houm.airbyte_gspread.campaign_keys_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_fb", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "created_at": 1675970038.886139}, "source.houm.airbyte_gspread.campaign_keys_gg": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_gg"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_gg", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_gg", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_gg", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "created_at": 1675970038.886202}, "source.houm.airbyte_gspread.data": {"fqn": ["houm", "staging", "airbyte_gspread", "data"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.data", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "data", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "data", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"data\"", "created_at": 1675970038.886265}, "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"", "created_at": 1675970038.886328}, "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "created_at": 1675970038.886392}, "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_24_hrs"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_24_hrs", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_24_hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"", "created_at": 1675970038.886456}, "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"", "created_at": 1675970038.886521}, "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"", "created_at": 1675970038.886583}, "source.houm.airbyte_gspread.nps_cancel_visit": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_cancel_visit"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_cancel_visit", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_cancel_visit", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_cancel_visit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"", "created_at": 1675970038.886644}, "source.houm.airbyte_gspread.nps_chile_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_foto", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"", "created_at": 1675970038.8867059}, "source.houm.airbyte_gspread.nps_chile_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_renta", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"", "created_at": 1675970038.8867671}, "source.houm.airbyte_gspread.nps_chile_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_sales", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_sales\"", "created_at": 1675970038.886828}, "source.houm.airbyte_gspread.nps_colombia_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_foto", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"", "created_at": 1675970038.88689}, "source.houm.airbyte_gspread.nps_colombia_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_renta", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"", "created_at": 1675970038.886951}, "source.houm.airbyte_gspread.nps_colombia_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_sales", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_sales\"", "created_at": 1675970038.8870132}, "source.houm.airbyte_gspread.nps_mexico_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_foto", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "created_at": 1675970038.8870752}, "source.houm.airbyte_gspread.nps_mexico_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_renta", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"", "created_at": 1675970038.887137}, "source.houm.airbyte_gspread.nps_mexico_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_sales", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_sales\"", "created_at": 1675970038.887199}, "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"", "created_at": 1675970038.88726}, "source.houm.airbyte_gspread.nps_sales_post_venta_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_seller", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"", "created_at": 1675970038.8873222}, "source.houm.airbyte_gspread.nps_sales_promesa_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"", "created_at": 1675970038.887383}, "source.houm.airbyte_gspread.nps_sales_promesa_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_seller", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"", "created_at": 1675970038.887444}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"", "created_at": 1675970038.8875048}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"", "created_at": 1675970038.887566}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"", "created_at": 1675970038.887626}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_cl\"", "created_at": 1675970038.887688}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_co\"", "created_at": 1675970038.8877492}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_mx\"", "created_at": 1675970038.8878112}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"", "created_at": 1675970038.887872}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"", "created_at": 1675970038.887934}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "created_at": 1675970038.887994}, "source.houm.airbyte_gspread.anuncios": {"fqn": ["houm", "staging", "airbyte_gspread", "anuncios"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.anuncios", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "anuncios", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "anuncios", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "created_at": 1675970038.888056}, "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_24_horas_tenant"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_24_horas_tenant", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_24_horas_tenant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_24_horas_tenant\"", "created_at": 1675970038.888118}, "source.houm.airbyte_gspread.new_nps_rentals_new_listing": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_new_listing"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_new_listing", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_new_listing", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_new_listing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_new_listing\"", "created_at": 1675970038.8881788}, "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_propietary_poscontract"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_propietary_poscontract", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_propietary_poscontract", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_propietary_poscontract\"", "created_at": 1675970038.888242}, "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_landlord_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_landlord_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_landlord_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_3_meses\"", "created_at": 1675970038.888303}, "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_landlord_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_landlord_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_landlord_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_6_meses\"", "created_at": 1675970038.888364}, "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_tenant_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_tenant_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_tenant_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_3_meses\"", "created_at": 1675970038.8884249}, "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_tenant_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_tenant_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_tenant_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_6_meses\"", "created_at": 1675970038.888486}, "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_buyer_posventa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_buyer_posventa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_buyer_posventa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_posventa\"", "created_at": 1675970038.8885472}, "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_buyer_promesa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_buyer_promesa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_buyer_promesa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_promesa\"", "created_at": 1675970038.888608}, "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_landlord_posventa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_landlord_posventa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_landlord_posventa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_posventa\"", "created_at": 1675970038.8886871}, "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_landlord_promesa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_landlord_promesa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_landlord_promesa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_promesa\"", "created_at": 1675970038.888747}, "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_cancel_visit"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_cancel_visit", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_cancel_visit", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_cancel_visit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_cancel_visit\"", "created_at": 1675970038.888809}, "source.houm.airbyte_gspread.new_nps_visit_photo_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_photo_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_photo_done", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_photo_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_photo_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_photo_done\"", "created_at": 1675970038.88887}, "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_rental_visit_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_rental_visit_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_rental_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_rental_visit_done\"", "created_at": 1675970038.888932}, "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_sales_visit_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_sales_visit_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_sales_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_sales_visit_done\"", "created_at": 1675970038.8889952}, "source.houm.survicate.nps_landlord_satisfaction_6months_cl": {"fqn": ["houm", "staging", "survicate", "nps_landlord_satisfaction_6months_cl"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_satisfaction_6months_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_satisfaction_6months_cl", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_satisfaction_6months_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "created_at": 1675970038.889057}, "source.houm.survicate.nps_landlord_listing": {"fqn": ["houm", "staging", "survicate", "nps_landlord_listing"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_listing", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_listing", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_listing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "created_at": 1675970038.889118}, "source.houm.survicate.nps_landlord_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_landlord_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_new_sub", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "created_at": 1675970038.889181}, "source.houm.survicate.nps_tennant_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_tennant_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tennant_new_sub", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tennant_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tennant_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "created_at": 1675970038.889243}, "source.houm.survicate.photo_done": {"fqn": ["houm", "staging", "survicate", "photo_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.photo_done", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "photo_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "photo_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"photo_done\"", "created_at": 1675970038.889303}, "source.houm.survicate.nps_tenant_satisfaction_24hrs": {"fqn": ["houm", "staging", "survicate", "nps_tenant_satisfaction_24hrs"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tenant_satisfaction_24hrs", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tenant_satisfaction_24hrs", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tenant_satisfaction_24hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "created_at": 1675970038.889365}, "source.houm.survicate.nps_visit_done": {"fqn": ["houm", "staging", "survicate", "nps_visit_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_visit_done", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_visit_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "created_at": 1675970038.889426}, "source.houm.survicate.nps_sac_surveys": {"fqn": ["houm", "staging", "survicate", "nps_sac_surveys"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_sac_surveys", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sac_surveys", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_sac_surveys", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_sac_surveys\"", "created_at": 1675970038.889489}, "source.houm.survicate.nps_sac_answers": {"fqn": ["houm", "staging", "survicate", "nps_sac_answers"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_sac_answers", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sac_answers", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_sac_answers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_sac_answers\"", "created_at": 1675970038.88955}, "source.houm.survicate.nps_admin_surveys": {"fqn": ["houm", "staging", "survicate", "nps_admin_surveys"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_admin_surveys", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_admin_surveys", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_admin_surveys", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_admin_surveys\"", "created_at": 1675970038.889611}, "source.houm.survicate.nps_admin_answers": {"fqn": ["houm", "staging", "survicate", "nps_admin_answers"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_admin_answers", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_admin_answers", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_admin_answers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_admin_answers\"", "created_at": 1675970038.889672}, "source.houm.supermetrics.googleads_conversion": {"fqn": ["houm", "staging", "supermetrics", "googleads_conversion"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_conversion", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_conversion", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_conversion", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_conversion\"", "created_at": 1675970038.8897338}, "source.houm.supermetrics.googleads_campaign": {"fqn": ["houm", "staging", "supermetrics", "googleads_campaign"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_campaign", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_campaign", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_campaign\"", "created_at": 1675970038.8897998}, "source.houm.supermetrics.googleads_ad": {"fqn": ["houm", "staging", "supermetrics", "googleads_ad"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_ad", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_ad", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_ad", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_ad\"", "created_at": 1675970038.8898618}, "source.houm.supermetrics.fbads_campaign": {"fqn": ["houm", "staging", "supermetrics", "fbads_campaign"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_campaign", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_campaign", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_campaign\"", "created_at": 1675970038.889923}, "source.houm.supermetrics.fbads_ad": {"fqn": ["houm", "staging", "supermetrics", "fbads_ad"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_ad", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_ad", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_ad", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_ad\"", "created_at": 1675970038.889986}, "source.houm.supermetrics.fbads_geo": {"fqn": ["houm", "staging", "supermetrics", "fbads_geo"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_geo", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_geo", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_geo", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_geo\"", "created_at": 1675970038.890049}, "source.houm.supermetrics.fbads_conversion": {"fqn": ["houm", "staging", "supermetrics", "fbads_conversion"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_conversion", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_conversion", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_conversion", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_conversion\"", "created_at": 1675970038.89011}, "source.houm.supermetrics.fbads_age_gender": {"fqn": ["houm", "staging", "supermetrics", "fbads_age_gender"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_age_gender", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_age_gender", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_age_gender", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_age_gender\"", "created_at": 1675970038.890172}, "source.houm.supermetrics.fbads_video": {"fqn": ["houm", "staging", "supermetrics", "fbads_video"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_video", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_video", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_video", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_video\"", "created_at": 1675970038.890232}, "source.houm.supermetrics.linkedinads_ad": {"fqn": ["houm", "staging", "supermetrics", "linkedinads_ad"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.linkedinads_ad", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "linkedinads_ad", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "linkedinads_ad", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"linkedinads_ad\"", "created_at": 1675970038.890293}, "source.houm.supermetrics.linkedinads_campaign": {"fqn": ["houm", "staging", "supermetrics", "linkedinads_campaign"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.linkedinads_campaign", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "linkedinads_campaign", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "linkedinads_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"linkedinads_campaign\"", "created_at": 1675970038.8903549}, "source.houm.raw_stage_analytics.property__rent_recommended_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__rent_recommended_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__rent_recommended_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__rent_recommended_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__rent_recommended_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__rent_recommended_properties\"", "created_at": 1675970038.8904152}, "source.houm.raw_stage_analytics.property__sale_recommended_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__sale_recommended_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__sale_recommended_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__sale_recommended_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__sale_recommended_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__sale_recommended_properties\"", "created_at": 1675970038.890476}, "source.houm.raw_stage_analytics.property__recommended_new_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__recommended_new_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__recommended_new_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__recommended_new_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__recommended_new_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__recommended_new_properties\"", "created_at": 1675970038.890537}, "source.houm.bidding_app.bid": {"fqn": ["houm", "staging", "bidding_app", "bid"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.bid", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "bid", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"bid\"", "created_at": 1675970038.8905978}, "source.houm.bidding_app.bid_response": {"fqn": ["houm", "staging", "bidding_app", "bid_response"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.bid_response", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid_response", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "bid_response", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"bid_response\"", "created_at": 1675970038.890659}, "source.houm.bidding_app.negotiation": {"fqn": ["houm", "staging", "bidding_app", "negotiation"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.negotiation", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "negotiation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"negotiation\"", "created_at": 1675970038.89072}, "source.houm.bidding_app.negotiation_user": {"fqn": ["houm", "staging", "bidding_app", "negotiation_user"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.negotiation_user", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation_user", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "negotiation_user", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"negotiation_user\"", "created_at": 1675970038.89078}, "source.houm.bidding_app.identification": {"fqn": ["houm", "staging", "bidding_app", "identification"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.identification", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "identification", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"identification\"", "created_at": 1675970038.890841}, "source.houm.bidding_app.identification_type": {"fqn": ["houm", "staging", "bidding_app", "identification_type"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.identification_type", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification_type", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "identification_type", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"identification_type\"", "created_at": 1675970038.890902}, "source.houm.bidding_app.property": {"fqn": ["houm", "staging", "bidding_app", "property"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.property", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "property", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"property\"", "created_at": 1675970038.890964}, "source.houm.bidding_app.user": {"fqn": ["houm", "staging", "bidding_app", "user"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.user", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "user", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "user", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"user\"", "created_at": 1675970038.8910239}, "source.houm.scraped_data_ops.scraped_properties_melico": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_melico"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_melico", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_melico", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_melico", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_melico\"", "created_at": 1675970038.8910851}, "source.houm.scraped_data_ops.scraped_properties_fincaraiz": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_fincaraiz"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_fincaraiz", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_fincaraiz", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_fincaraiz", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_fincaraiz\"", "created_at": 1675970038.891146}, "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_goplaceit_cl"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_goplaceit_cl", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_goplaceit_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_goplaceit_cl\"", "created_at": 1675970038.8912241}, "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_portalinmobiliario"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_portalinmobiliario", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_portalinmobiliario", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_portalinmobiliario\"", "created_at": 1675970038.891285}, "source.houm.scraped_data_ops.scraped_properties_segundamano": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_segundamano"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_segundamano", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_segundamano", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_segundamano", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_segundamano\"", "created_at": 1675970038.891346}, "source.houm.scraped_data_ops.scraped_properties_melimx": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_melimx"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_melimx", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_melimx", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_melimx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_melimx\"", "created_at": 1675970038.891408}, "source.houm.scraped_data_ops.scraped_properties_yapo": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_yapo"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_yapo", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_yapo", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_yapo", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_yapo\"", "created_at": 1675970038.891468}, "source.houm.kustomer.conversations": {"fqn": ["houm", "staging", "kustomer", "conversations"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.conversations", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "conversations", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "conversations", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"conversations\"", "created_at": 1675970038.89153}, "source.houm.kustomer.customers": {"fqn": ["houm", "staging", "kustomer", "customers"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.customers", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "customers", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "customers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"customers\"", "created_at": 1675970038.891592}, "source.houm.kustomer.messages": {"fqn": ["houm", "staging", "kustomer", "messages"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.messages", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messages", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "messages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"messages\"", "created_at": 1675970038.891653}, "source.houm.kustomer.tags": {"fqn": ["houm", "staging", "kustomer", "tags"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.tags", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "tags", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "tags", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"tags\"", "created_at": 1675970038.891714}, "source.houm.kustomer.users": {"fqn": ["houm", "staging", "kustomer", "users"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.users", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"users\"", "created_at": 1675970038.891775}, "source.houm.kustomer.teams": {"fqn": ["houm", "staging", "kustomer", "teams"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.teams", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "teams", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "teams", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"teams\"", "created_at": 1675970038.891836}, "source.houm.kustomer.queues": {"fqn": ["houm", "staging", "kustomer", "queues"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.queues", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "queues", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "queues", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"queues\"", "created_at": 1675970038.8918998}, "source.houm.kustomer.teams_routing": {"fqn": ["houm", "staging", "kustomer", "teams_routing"], "database": "houmdw_prod", "schema": "kustomer", "unique_id": "source.houm.kustomer.teams_routing", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "teams_routing", "source_name": "kustomer", "source_description": "Data extracted from Meltano such as Kustomer data.", "loader": "", "identifier": "teams_routing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"kustomer\".\"teams_routing\"", "created_at": 1675970038.8919601}, "source.houm.comm_raw_stage.messagebird_flow": {"fqn": ["houm", "staging", "comm_raw_stage", "messagebird_flow"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.messagebird_flow", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messagebird_flow", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "messagebird_flow", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow\"", "created_at": 1675970038.892021}, "source.houm.comm_raw_stage.messagebird_logs": {"fqn": ["houm", "staging", "comm_raw_stage", "messagebird_logs"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.messagebird_logs", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messagebird_logs", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "messagebird_logs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"messagebird_logs\"", "created_at": 1675970038.892082}, "source.houm.comm_raw_stage.messagebird_flow_response_schema": {"fqn": ["houm", "staging", "comm_raw_stage", "messagebird_flow_response_schema"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.messagebird_flow_response_schema", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messagebird_flow_response_schema", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "messagebird_flow_response_schema", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow_response_schema\"", "created_at": 1675970038.892143}, "source.houm.comm_raw_stage.messagebird_flow_response_values": {"fqn": ["houm", "staging", "comm_raw_stage", "messagebird_flow_response_values"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.messagebird_flow_response_values", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messagebird_flow_response_values", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "messagebird_flow_response_values", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"messagebird_flow_response_values\"", "created_at": 1675970038.892204}, "source.houm.comm_raw_stage.messagebird_dlq_flow_response_values": {"fqn": ["houm", "staging", "comm_raw_stage", "messagebird_dlq_flow_response_values"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.messagebird_dlq_flow_response_values", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "messagebird_dlq_flow_response_values", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "messagebird_dlq_flow_response_values", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"messagebird_dlq_flow_response_values\"", "created_at": 1675970038.892266}, "source.houm.comm_raw_stage.sendinblue_flow": {"fqn": ["houm", "staging", "comm_raw_stage", "sendinblue_flow"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.sendinblue_flow", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "sendinblue_flow", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "sendinblue_flow", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"sendinblue_flow\"", "created_at": 1675970038.8923259}, "source.houm.comm_raw_stage.sendinblue_logs": {"fqn": ["houm", "staging", "comm_raw_stage", "sendinblue_logs"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.sendinblue_logs", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "sendinblue_logs", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "sendinblue_logs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"sendinblue_logs\"", "created_at": 1675970038.8923872}, "source.houm.comm_raw_stage.kustomer_logs": {"fqn": ["houm", "staging", "comm_raw_stage", "kustomer_logs"], "database": "houmdw_prod", "schema": "comm_raw_stage", "unique_id": "source.houm.comm_raw_stage.kustomer_logs", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "kustomer_logs", "source_name": "comm_raw_stage", "source_description": "Data collected through from node start/end in messagebird, sendinblue and kustomer flows", "loader": "", "identifier": "kustomer_logs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', updated_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', updated_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"comm_raw_stage\".\"kustomer_logs\"", "created_at": 1675970038.892448}}, "macros": {"macro.houm.create_track_historical_changes": {"unique_id": "macro.houm.create_track_historical_changes", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_track_historical_changes.sql", "original_file_path": "macros/create_track_historical_changes.sql", "name": "create_track_historical_changes", "macro_sql": "\n\n\n{%- macro create_track_historical_changes( \n        table_to_track = [{'table_name':'historical.historical_contracts', 'is_historical':'TRUE' , 'has_stg':'FALSE' } ,\n                          {'table_name':'stg_contracts'                  , 'is_historical':'FALSE', 'has_stg':'TRUE'  }  ]  ,\n        columns = [{'column_name':'readjust', 'is_boolean':'FALSE' },\n                   {'column_name':'amount'  , 'is_boolean':'FALSE' }  ]  ,  \n        id_columns = 'id' ,\n        needs_post_process = 'FALSE' ) -%}   \nWITH current_values AS (\n    SELECT \n        *\n    FROM {% for table in table_to_track -%} \n    {%- if loop.last -%} \n            \n    {%- if table['has_stg'] == 'FALSE' %}\n    {{ table['table_name'] }}\n    {% else -%} \n    {{ ref( table['table_name'] ) }}\n    {%- endif %} AS table_temp\n\n    {%- if table['is_historical'] == 'TRUE' %}\n    WHERE TRUE \n        AND table_temp.audit_action != 'D'\n        OR  table_temp.audit_end_dt IS NOT NULL\n    {%- endif -%}\n    {%- endif -%}\n    {%- endfor %}\n)\n\n, update_columns_to_track AS (\n    SELECT  \n        historical.{{ id_columns }} ,\n        historical.audit_start_dt ,\n        historical.audit_end_dt ,\n        {%- for column in columns %} \n        {%- if column['is_boolean'] == 'FALSE' %}\n        CASE \n            WHEN historical.{{ column['column_name'] }}::TEXT IS NULL THEN 'NonValue' \n            ELSE historical.{{ column['column_name'] }}::TEXT \n        END AS {{ column['column_name'] }}  \n        {%- else %}\n        CASE \n            WHEN historical.{{ column['column_name'] }} THEN 'TRUE' \n            ELSE 'FALSE' \n        END AS {{ column['column_name'] }}  \n        {%- endif -%} \n        {%- if not loop.last -%} \n        , \n        {%- endif -%}\n        {% endfor %} \n    FROM current_values\n        LEFT JOIN \n        {%- if table_to_track[0]['has_stg']  == 'FALSE' %} {{ table_to_track[0]['table_name'] }}  \n        {%- else %} {{ ref( table_to_track[0]['table_name'] ) }} \n        {%- endif %} AS historical\n        ON current_values.{{id_columns}} = historical.{{id_columns}}\n)\n\n, create_key_to_track AS (\n    SELECT \n        * , \n        {% for column in columns -%}\n        {{ column['column_name'] }} \n        {%- if not loop.last -%} \n           ||  \n        {%- endif -%} \n        {%- endfor %} \n         AS key_track \n    FROM update_columns_to_track\n)\n\n, has_change AS (\nSELECT \n    * , \n    CASE\n        WHEN  ( (LAG(key_track) OVER (PARTITION BY {{ id_columns }}  ORDER BY audit_start_dt ASC ) ) = key_track ) THEN 0 \n        ELSE 1 \n    END AS key_track_count \nFROM create_key_to_track\n)\n\n, create_index AS (\n    SELECT \n        {{id_columns}} , \n        audit_start_dt , \n        COALESCE( audit_end_dt , '{{ var(\"processed_time\") }}' ) AS audit_end_dt , \n        key_track , \n        {%- for column in columns %}\n        {{ column['column_name'] }}  , \n        {%- endfor %} \n        SUM(key_track_count) OVER (PARTITION BY {{ id_columns }} ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS index_track\n    FROM has_change\n)\n\n, group_period AS (\n    SELECT  \n        {{ id_columns }} , \n        index_track , \n        key_track , \n        {%- for column in columns %}\n        {{ column['column_name'] }}  , \n        {%- endfor %} \n        MIN(audit_start_dt) audit_start_dt , \n        NULLIF( MAX(audit_end_dt) , '{{ var(\"processed_time\") }}' ) AS audit_end_dt \n    FROM create_index\n    GROUP BY {{ id_columns }}, index_track, key_track, \n    {%- for column in columns -%} \n    {{ column['column_name'] }} \n    {%- if not loop.last -%}\n    , \n    {%- endif -%}\n    {%- endfor %} \n)\n{% if needs_post_process  == 'FALSE' %} \nSELECT \n    *\nFROM group_period  \n{%- else -%}\n{%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.342032, "supported_languages": null}, "macro.houm.split_movements": {"unique_id": "macro.houm.split_movements", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/split_movements.sql", "original_file_path": "macros/split_movements.sql", "name": "split_movements", "macro_sql": "{%- macro split_movements( column_name = 'discounts', breakdown_type = 'descuento' , N = 2 ) -%}   \n    \n {% for i in range(1, N + 1) %}\n, {{ column_name }}_breakdown_{{i}} AS (\nSELECT   \n    _id AS movement_id,\n    country,\n    property_id, \n    agreed_date,\n    '{{breakdown_type}}' AS breakdown_type,\n    {{ column_name }}_breakdown AS breakdowns,\n    SPLIT_PART(REPLACE( REPLACE( REPLACE(REPLACE({{ column_name }}_breakdown , '''' , '\"' ), ']' , '' ), '[' , '' ) , '}, {' , '}\u2606{') , '\u2606' , {{i}} ) AS breakdown\nFROM {{ column_name }}\nWHERE TRUE\n    AND breakdown is not null\n    AND breakdown <> ''\n)\n{% endfor %}\n, {{ column_name }}_union AS (\n{%- for i in range(1, N + 1) %}\nSELECT \n    *\nFROM {{ column_name }}_breakdown_{{i}}\n{% if not loop.last %}UNION ALL {% endif %} {% endfor %}\n) \n{% endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3436852, "supported_languages": null}, "macro.houm.create_metric_ratio": {"unique_id": "macro.houm.create_metric_ratio", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_metric_ratio.sql", "original_file_path": "macros/create_metric_ratio.sql", "name": "create_metric_ratio", "macro_sql": "{%- macro create_metric_ratio( ratio_name, numerator_table, denominator_table ) -%}\nWITH ratio AS (\nSELECT \n    '{{ratio_name}}'::TEXT AS metric_name,\n    denominator.country,\n    denominator.location_type,\n    denominator.location_name,\n    denominator.thedate_type,\n    denominator.thedate_start,\n    ROUND(numerator.total::FLOAT/NULLIF(denominator.total::FLOAT,0),2) AS total\nFROM {{ ref(denominator_table) }} AS denominator\nLEFT JOIN {{ ref(numerator_table) }} AS numerator\n    ON numerator.location_type = denominator.location_type AND numerator.location_name = denominator.location_name\n    AND numerator.thedate_type = denominator.thedate_type AND numerator.thedate_start = denominator.thedate_start\n)\n\nSELECT \n    ratio.metric_name,\n    metric_order.metric_id,\n    country,\n    location_type,\n    location_name,\n    thedate_type,\n    thedate_start,\n    total\nFROM ratio\nLEFT JOIN {{ref('metrics_name')}} AS metric_name\n   ON metric_name.metric = ratio.metric_name\nLEFT JOIN {{ref('metrics_order')}} AS metric_order\n   ON metric_order.metric_id = metric_name.id\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3445811, "supported_languages": null}, "macro.houm.create_base_metric": {"unique_id": "macro.houm.create_base_metric", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_base_metric.sql", "original_file_path": "macros/create_base_metric.sql", "name": "create_base_metric", "macro_sql": "{%- macro create_base_metric( metric_name ) -%}   \nWITH base AS (\nSELECT \n    '{{ metric_name }}'::TEXT AS metric_name,\n    country,\n    region,\n    city,\n    full_date\nFROM {{ref('dim_base_metrics')}}\n)\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.344983, "supported_languages": null}, "macro.houm.create_date_aggregate_columns": {"unique_id": "macro.houm.create_date_aggregate_columns", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_date_aggregate_columns.sql", "original_file_path": "macros/create_date_aggregate_columns.sql", "name": "create_date_aggregate_columns", "macro_sql": "{%- macro create_date_aggregate_columns( thedate = 'created_at') -%}   \n    CASE \n        WHEN {{ thedate }} = DATEADD(DAY,-1,'{{ var(\"processed_time\") }}'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN {{ thedate }} = DATEADD(DAY,-2,'{{ var(\"processed_time\") }}'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', {{ thedate }} ) = DATEADD(WEEK,-1, DATE_TRUNC('week','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',{{ thedate }}) = DATEADD(WEEK,-2, DATE_TRUNC('week','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',{{ thedate }}) = DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) \n            AND {{ thedate }} <= DATEADD(DAY,-1,'{{ var(\"processed_time\") }}'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',{{ thedate }}) = DATEADD(MONTH,-1, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            AND {{ thedate }} <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '{{ var(\"processed_time\") }}'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }}) = DATEADD(MONTH,-1, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }} ) = DATEADD(MONTH,-2, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }} ) = DATEADD(MONTH,-3, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.348177, "supported_languages": null}, "macro.houm.create_aggregate_metric": {"unique_id": "macro.houm.create_aggregate_metric", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_aggregate_metric.sql", "original_file_path": "macros/create_aggregate_metric.sql", "name": "create_aggregate_metric", "macro_sql": "{%- macro create_aggregate_metric( to_aggregate = 'id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) -%}   \n    {%- set columns = [ 'yesterday' , 'daybeforeyesterday' , 'LastWeek'  , 'PastLastWeek' , 'ThisMonthtoday' , 'LastMonthtoday' , 'LastMonth' , 'LasttwoMonth' , 'LastthreeMonth' ] -%}\n\t    SELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        {% for column in columns -%}\n        {%- if is_distinct ==  'TRUE' -%}\n        {{ agregation_func }}(DISTINCT CASE WHEN {{ column }} = 1 THEN {{to_aggregate}} END ) {{ column }}\n        {%- else -%}\n        {{ agregation_func }}(CASE WHEN {{ column }} = 1 THEN {{to_aggregate}} END ) {{ column }}\n        {%- endif  -%}\n        {%- if not loop.last -%}\n        ,  \n        {% endif -%}\n        {%- endfor %} \n    from metric \n    group by 1,2,3 \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.349644, "supported_languages": null}, "macro.houm.create_metric_avg": {"unique_id": "macro.houm.create_metric_avg", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_metric_avg.sql", "original_file_path": "macros/create_metric_avg.sql", "name": "create_metric_avg", "macro_sql": "{%- macro create_metric_avg( to_aggregate = 'sum_aggregate', agregation_func = 'AVG', is_distinct = 'FALSE' ) -%}\n\n{%- set dates = [{'agreagtion_type':'week' , 'agregation_name':'week'}, \n                 {'agreagtion_type':'month' , 'agregation_name':'month'},\n                 {'agreagtion_type':'month' , 'agregation_name':'month to day'},\n                 {'agreagtion_type':'month' , 'agregation_name':'month to end'}] -%}\n{%- set locations = [ 'country' , 'region' , 'city' ] -%} \n\n{%- for dat in dates %}\nSELECT \n    metric_name,\n    metric_id,\n    country, \n    location_type, \n    location_name,  \n    '{{dat['agregation_name']}}' AS thedate_type, \n    date_trunc('{{dat['agreagtion_type']}}', full_date) AS thedate_start,\n    {% if is_distinct ==  'TRUE' -%} \n    {{ agregation_func }}(DISTINCT {{ to_aggregate }}) AS total\n    {% else -%}\n    {{ agregation_func }}({{ to_aggregate }}) AS total\n    {%- endif  %}\nFROM day_metric_houm\n{% if dat['agregation_name'] == 'month to day' -%}\nWHERE date_part(day, full_date) < date_part(day, '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month to end' -%}\nWHERE date_part(day, full_date) > date_part(day, '{{ var(\"processed_date\") }}'::DATE)\nAND full_date < '{{ var(\"processed_date\") }}'::DATE\n{% endif -%}\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n{% for loc in locations %}\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    location_type, \n    location_name, \n    '{{dat['agregation_name']}}' AS thedate_type, \n    date_trunc('{{dat['agreagtion_type']}}', full_date) AS thedate_start,\n    {% if is_distinct ==  'TRUE' -%} \n    {{ agregation_func }}(DISTINCT {{ sum_aggregate }}) AS total\n    {% else -%}\n    {{ agregation_func }}(sum_aggregate) AS total\n    {%- endif  %}\nFROM (\nSELECT\n    metric_name,\n    metric_id,\n    country,\n    '{{ loc }}' AS location_type, \n    {{ loc }} AS location_name, \n    'day' AS thedate_type, \n    date_trunc('day', full_date) AS thedate_start,\n    full_date,\n    SUM(total) AS sum_aggregate\nFROM metric\nGROUP BY 1,2,3,4,5,6,7,8\n) AS day_metric\n{% if dat['agregation_name'] == 'month to day' -%}\nWHERE date_part(day, full_date) < date_part(day, '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month to end' -%}\nWHERE date_part(day, full_date) > date_part(day, '{{ var(\"processed_date\") }}'::DATE)\nAND full_date < '{{ var(\"processed_date\") }}'::DATE\n{% endif -%}\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n{% if not loop.last %}\nUNION ALL\n{%- endif -%}\n{%- endfor -%}\n{% if not loop.last %}\nUNION ALL \n{%- endif -%}\n{%- endfor %}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3541172, "supported_languages": null}, "macro.houm.create_metric": {"unique_id": "macro.houm.create_metric", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/create_metric.sql", "original_file_path": "macros/create_metric.sql", "name": "create_metric", "macro_sql": "{%- macro create_metric( to_aggregate = 'id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) -%}  \n\n{%- set dates = [{'agreagtion_type':'day' , 'agregation_name' :'day'},\n                 {'agreagtion_type':'week' , 'agregation_name':'week'}, \n                 {'agreagtion_type':'month' , 'agregation_name':'month'},\n                 {'agreagtion_type':'month' , 'agregation_name':'month to day'},\n                 {'agreagtion_type':'month' , 'agregation_name':'month to end'}] -%}\n{%- set locations = [ 'country' , 'region' , 'city' ] -%} \n\n{%- for dat in dates %}\nSELECT \n    metric_name,\n    metric_id,\n    'Houm' AS country, \n    'country' AS location_type, \n    'Houm' AS location_name,  \n    '{{dat['agregation_name']}}' AS thedate_type, \n    date_trunc('{{dat['agreagtion_type']}}', full_date) AS thedate_start,\n    {% if is_distinct ==  'TRUE' -%} \n    {{ agregation_func }}(DISTINCT {{ to_aggregate }}) AS total\n    {% else -%}\n    {{ agregation_func }}({{ to_aggregate }}) AS total\n    {%- endif  %}\nFROM metric \n{% if dat['agregation_name'] == 'day' -%}\nWHERE date_trunc('day', full_date) < date_trunc('day', '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month to day' -%}\nWHERE date_part(day, full_date) < date_part(day, '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month' -%}\nWHERE date_trunc('day', full_date) < date_trunc('day', '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month to end' -%}\nWHERE date_part(day, full_date) > date_part(day, '{{ var(\"processed_date\") }}'::DATE)\nAND full_date < '{{ var(\"processed_date\") }}'::DATE\n{% endif -%}\nGROUP BY 1, 2, 3, 4, 5, 6, 7\nUNION ALL\n{% for loc in locations %}\nSELECT \n    metric_name,\n    metric_id,\n    country,\n    '{{ loc }}' AS location_type, \n    {{ loc }} AS location_name, \n    '{{dat['agregation_name']}}' AS thedate_type, \n    date_trunc('{{dat['agreagtion_type']}}', full_date) AS thedate_start,\n    {% if is_distinct ==  'TRUE' -%} \n    {{ agregation_func }}(DISTINCT {{ to_aggregate }}) AS total\n    {% else -%}\n    {{ agregation_func }}({{ to_aggregate }}) AS total\n    {%- endif  %}\nFROM metric \n{% if dat['agregation_name'] == 'month to day' -%}\nWHERE date_part(day, full_date) < date_part(day, '{{ var(\"processed_date\") }}'::DATE)\n{% elif dat['agregation_name'] == 'month to end' -%}\nWHERE date_part(day, full_date) > date_part(day, '{{ var(\"processed_date\") }}'::DATE)\nAND full_date < '{{ var(\"processed_date\") }}'::DATE\n{% endif -%}\nGROUP BY 1, 2, 3, 4, 5, 6, 7\n{% if not loop.last %}\nUNION ALL\n{%- endif -%}\n{%- endfor -%}\n{% if not loop.last %}\nUNION ALL \n{%- endif -%}\n{%- endfor %}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.359104, "supported_languages": null}, "macro.houm.generate_schema_name": {"unique_id": "macro.houm.generate_schema_name", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n\n    {%- if target.name[-3:] == 'dev' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif target.schema[:9] == 'dbt_cloud' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.360197, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3606389, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_get_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_get_time", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__snapshot_get_time", "macro_sql": "{% macro redshift__snapshot_get_time() -%}\n    {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.360787, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_string_as_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_string_as_time", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__snapshot_string_as_time", "macro_sql": "{% macro redshift__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3610501, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp_backcompat": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp_backcompat", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp_backcompat", "macro_sql": "{% macro redshift__current_timestamp_backcompat() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.361155, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro redshift__current_timestamp_in_utc_backcompat() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.361265, "supported_languages": null}, "macro.dbt_redshift.redshift__get_base_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_base_catalog", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_base_catalog", "macro_sql": "{% macro redshift__get_base_catalog(information_schema, schemas) -%}\n  {%- call statement('base_catalog', fetch_result=True) -%}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    with late_binding as (\n      select\n        '{{ database }}'::varchar as table_database,\n        table_schema,\n        table_name,\n        'LATE BINDING VIEW'::varchar as table_type,\n        null::text as table_comment,\n\n        column_name,\n        column_index,\n        column_type,\n        null::text as column_comment\n      from pg_get_late_binding_view_cols()\n        cols(table_schema name, table_name name, column_name name,\n             column_type varchar,\n             column_index int)\n        order by \"column_index\"\n    ),\n\n    early_binding as (\n        select\n            '{{ database }}'::varchar as table_database,\n            sch.nspname as table_schema,\n            tbl.relname as table_name,\n            case tbl.relkind\n                when 'v' then 'VIEW'\n                else 'BASE TABLE'\n            end as table_type,\n            tbl_desc.description as table_comment,\n            col.attname as column_name,\n            col.attnum as column_index,\n            pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n            col_desc.description as column_comment\n\n        from pg_catalog.pg_namespace sch\n        join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n        join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n        left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n        left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n        where (\n            {%- for schema in schemas -%}\n              upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n            {%- endfor -%}\n          )\n            and tbl.relkind in ('r', 'v', 'f', 'p')\n            and col.attnum > 0\n            and not col.attisdropped\n    ),\n\n    table_owners as (\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            tablename as table_name,\n            tableowner as table_owner\n\n        from pg_tables\n\n        union all\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            viewname as table_name,\n            viewowner as table_owner\n\n        from pg_views\n\n    ),\n\n    unioned as (\n\n        select *\n        from early_binding\n\n        union all\n\n        select *\n        from late_binding\n\n    )\n\n    select *,\n        table_database || '.' || table_schema || '.' || table_name as table_id\n\n    from unioned\n    join table_owners using (table_database, table_schema, table_name)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n\n    order by \"column_index\"\n  {%- endcall -%}\n\n  {{ return(load_result('base_catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.368764, "supported_languages": null}, "macro.dbt_redshift.redshift__get_extended_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_extended_catalog", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_extended_catalog", "macro_sql": "{% macro redshift__get_extended_catalog(schemas) %}\n  {%- call statement('extended_catalog', fetch_result=True) -%}\n\n    select\n        \"database\" || '.' || \"schema\" || '.' || \"table\" as table_id,\n\n        'Encoded'::text as \"stats:encoded:label\",\n        encoded as \"stats:encoded:value\",\n        'Indicates whether any column in the table has compression encoding defined.'::text as \"stats:encoded:description\",\n        true as \"stats:encoded:include\",\n\n        'Dist Style' as \"stats:diststyle:label\",\n        diststyle as \"stats:diststyle:value\",\n        'Distribution style or distribution key column, if key distribution is defined.'::text as \"stats:diststyle:description\",\n        true as \"stats:diststyle:include\",\n\n        'Sort Key 1' as \"stats:sortkey1:label\",\n        -- handle 0xFF byte in response for interleaved sort styles\n        case\n            when sortkey1 like 'INTERLEAVED%' then 'INTERLEAVED'::text\n            else sortkey1\n        end as \"stats:sortkey1:value\",\n        'First column in the sort key.'::text as \"stats:sortkey1:description\",\n        (sortkey1 is not null) as \"stats:sortkey1:include\",\n\n        'Max Varchar' as \"stats:max_varchar:label\",\n        max_varchar as \"stats:max_varchar:value\",\n        'Size of the largest column that uses a VARCHAR data type.'::text as \"stats:max_varchar:description\",\n        true as \"stats:max_varchar:include\",\n\n        -- exclude this, as the data is strangely returned with null-byte characters\n        'Sort Key 1 Encoding' as \"stats:sortkey1_enc:label\",\n        sortkey1_enc as \"stats:sortkey1_enc:value\",\n        'Compression encoding of the first column in the sort key.' as \"stats:sortkey1_enc:description\",\n        false as \"stats:sortkey1_enc:include\",\n\n        '# Sort Keys' as \"stats:sortkey_num:label\",\n        sortkey_num as \"stats:sortkey_num:value\",\n        'Number of columns defined as sort keys.' as \"stats:sortkey_num:description\",\n        (sortkey_num > 0) as \"stats:sortkey_num:include\",\n\n        'Approximate Size' as \"stats:size:label\",\n        size * 1000000 as \"stats:size:value\",\n        'Approximate size of the table, calculated from a count of 1MB blocks'::text as \"stats:size:description\",\n        true as \"stats:size:include\",\n\n        'Disk Utilization' as \"stats:pct_used:label\",\n        pct_used / 100.0 as \"stats:pct_used:value\",\n        'Percent of available space that is used by the table.'::text as \"stats:pct_used:description\",\n        true as \"stats:pct_used:include\",\n\n        'Unsorted %' as \"stats:unsorted:label\",\n        unsorted / 100.0 as \"stats:unsorted:value\",\n        'Percent of unsorted rows in the table.'::text as \"stats:unsorted:description\",\n        (unsorted is not null) as \"stats:unsorted:include\",\n\n        'Stats Off' as \"stats:stats_off:label\",\n        stats_off as \"stats:stats_off:value\",\n        'Number that indicates how stale the table statistics are; 0 is current, 100 is out of date.'::text as \"stats:stats_off:description\",\n        true as \"stats:stats_off:include\",\n\n        'Approximate Row Count' as \"stats:rows:label\",\n        tbl_rows as \"stats:rows:value\",\n        'Approximate number of rows in the table. This value includes rows marked for deletion, but not yet vacuumed.'::text as \"stats:rows:description\",\n        true as \"stats:rows:include\",\n\n        'Sort Key Skew' as \"stats:skew_sortkey1:label\",\n        skew_sortkey1 as \"stats:skew_sortkey1:value\",\n        'Ratio of the size of the largest non-sort key column to the size of the first column of the sort key.'::text as \"stats:skew_sortkey1:description\",\n        (skew_sortkey1 is not null) as \"stats:skew_sortkey1:include\",\n\n        'Skew Rows' as \"stats:skew_rows:label\",\n        skew_rows as \"stats:skew_rows:value\",\n        'Ratio of the number of rows in the slice with the most rows to the number of rows in the slice with the fewest rows.'::text as \"stats:skew_rows:description\",\n        (skew_rows is not null) as \"stats:skew_rows:include\"\n\n    from svv_table_info\n    where (\n        {%- for schema in schemas -%}\n          upper(schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n\n  {%- endcall -%}\n\n  {{ return(load_result('extended_catalog').table) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.369708, "supported_languages": null}, "macro.dbt_redshift.redshift__can_select_from": {"unique_id": "macro.dbt_redshift.redshift__can_select_from", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__can_select_from", "macro_sql": "{% macro redshift__can_select_from(table_name) %}\n\n  {%- call statement('has_table_privilege', fetch_result=True) -%}\n\n    select has_table_privilege(current_user, '{{ table_name }}', 'SELECT') as can_select\n\n  {%- endcall -%}\n\n  {% set can_select = load_result('has_table_privilege').table[0]['can_select'] %}\n  {{ return(can_select) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.370191, "supported_languages": null}, "macro.dbt_redshift.redshift__no_svv_table_info_warning": {"unique_id": "macro.dbt_redshift.redshift__no_svv_table_info_warning", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__no_svv_table_info_warning", "macro_sql": "{% macro redshift__no_svv_table_info_warning() %}\n\n    {% set msg %}\n\n    Warning: The database user \"{{ target.user }}\" has insufficient permissions to\n    query the \"svv_table_info\" table. Please grant SELECT permissions on this table\n    to the \"{{ target.user }}\" user to fetch extended table details from Redshift.\n\n    {% endset %}\n\n    {{ log(msg, info=True) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3705559, "supported_languages": null}, "macro.dbt_redshift.redshift__get_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_catalog", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_catalog", "macro_sql": "{% macro redshift__get_catalog(information_schema, schemas) %}\n\n    {#-- Compute a left-outer join in memory. Some Redshift queries are\n      -- leader-only, and cannot be joined to other compute-based queries #}\n\n    {% set catalog = redshift__get_base_catalog(information_schema, schemas) %}\n\n    {% set select_extended =  redshift__can_select_from('svv_table_info') %}\n    {% if select_extended %}\n        {% set extended_catalog = redshift__get_extended_catalog(schemas) %}\n        {% set catalog = catalog.join(extended_catalog, 'table_id') %}\n    {% else %}\n        {{ redshift__no_svv_table_info_warning() }}\n    {% endif %}\n\n    {{ return(catalog.exclude(['table_id'])) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_base_catalog", "macro.dbt_redshift.redshift__can_select_from", "macro.dbt_redshift.redshift__get_extended_catalog", "macro.dbt_redshift.redshift__no_svv_table_info_warning"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.371356, "supported_languages": null}, "macro.dbt_redshift.redshift__get_relations": {"unique_id": "macro.dbt_redshift.redshift__get_relations", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "redshift__get_relations", "macro_sql": "{% macro redshift__get_relations () -%}\n  {{ return(dbt.postgres__get_relations()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.371704, "supported_languages": null}, "macro.dbt_redshift.dist": {"unique_id": "macro.dbt_redshift.dist", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "dist", "macro_sql": "{% macro dist(dist) %}\n  {%- if dist is not none -%}\n      {%- set dist = dist.strip().lower() -%}\n\n      {%- if dist in ['all', 'even'] -%}\n        diststyle {{ dist }}\n      {%- elif dist == \"auto\" -%}\n      {%- else -%}\n        diststyle key distkey ({{ dist }})\n      {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.384803, "supported_languages": null}, "macro.dbt_redshift.sort": {"unique_id": "macro.dbt_redshift.sort", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "sort", "macro_sql": "{% macro sort(sort_type, sort) %}\n  {%- if sort is not none %}\n      {{ sort_type | default('compound', boolean=true) }} sortkey(\n      {%- if sort is string -%}\n        {%- set sort = [sort] -%}\n      {%- endif -%}\n      {%- for item in sort -%}\n        {{ item }}\n        {%- if not loop.last -%},{%- endif -%}\n      {%- endfor -%}\n      )\n  {%- endif %}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3854442, "supported_languages": null}, "macro.dbt_redshift.redshift__create_table_as": {"unique_id": "macro.dbt_redshift.redshift__create_table_as", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_table_as", "macro_sql": "{% macro redshift__create_table_as(temporary, relation, sql) -%}\n\n  {%- set _dist = config.get('dist') -%}\n  {%- set _sort_type = config.get(\n          'sort_type',\n          validator=validation.any['compound', 'interleaved']) -%}\n  {%- set _sort = config.get(\n          'sort',\n          validator=validation.any[list, basestring]) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {%- set backup = config.get('backup') -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n    {% if backup == false -%}backup no{%- endif %}\n    {{ dist(_dist) }}\n    {{ sort(_sort_type, _sort) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.dist", "macro.dbt_redshift.sort"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.386816, "supported_languages": null}, "macro.dbt_redshift.redshift__create_view_as": {"unique_id": "macro.dbt_redshift.redshift__create_view_as", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_view_as", "macro_sql": "{% macro redshift__create_view_as(relation, sql) -%}\n  {%- set binding = config.get('bind', default=True) -%}\n\n  {% set bind_qualifier = '' if binding else 'with no schema binding' %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create view {{ relation }} as (\n    {{ sql }}\n  ) {{ bind_qualifier }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.387438, "supported_languages": null}, "macro.dbt_redshift.redshift__create_schema": {"unique_id": "macro.dbt_redshift.redshift__create_schema", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_schema", "macro_sql": "{% macro redshift__create_schema(relation) -%}\n  {{ postgres__create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3876128, "supported_languages": null}, "macro.dbt_redshift.redshift__drop_schema": {"unique_id": "macro.dbt_redshift.redshift__drop_schema", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__drop_schema", "macro_sql": "{% macro redshift__drop_schema(relation) -%}\n  {{ postgres__drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.387777, "supported_languages": null}, "macro.dbt_redshift.redshift__get_columns_in_relation": {"unique_id": "macro.dbt_redshift.redshift__get_columns_in_relation", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__get_columns_in_relation", "macro_sql": "{% macro redshift__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      with bound_views as (\n        select\n          ordinal_position,\n          table_schema,\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n        from information_schema.\"columns\"\n        where table_name = '{{ relation.identifier }}'\n    ),\n\n    unbound_views as (\n      select\n        ordinal_position,\n        view_schema,\n        col_name,\n        case\n          when col_type ilike 'character varying%' then\n            'character varying'\n          when col_type ilike 'numeric%' then 'numeric'\n          else col_type\n        end as col_type,\n        case\n          when col_type like 'character%'\n          then nullif(REGEXP_SUBSTR(col_type, '[0-9]+'), '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n\n      from pg_get_late_binding_view_cols()\n      cols(view_schema name, view_name name, col_name name,\n           col_type varchar, ordinal_position int)\n      where view_name = '{{ relation.identifier }}'\n    ),\n\n    external_views as (\n      select\n        columnnum,\n        schemaname,\n        columnname,\n        case\n          when external_type ilike 'character varying%' or external_type ilike 'varchar%'\n          then 'character varying'\n          when external_type ilike 'numeric%' then 'numeric'\n          else external_type\n        end as external_type,\n        case\n          when external_type like 'character%' or external_type like 'varchar%'\n          then nullif(\n            REGEXP_SUBSTR(external_type, '[0-9]+'),\n            '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n      from\n        pg_catalog.svv_external_columns\n      where\n        schemaname = '{{ relation.schema }}'\n        and tablename = '{{ relation.identifier }}'\n\n    ),\n\n    unioned as (\n      select * from bound_views\n      union all\n      select * from unbound_views\n      union all\n      select * from external_views\n    )\n\n    select\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n    from unioned\n    {% if relation.schema %}\n    where table_schema = '{{ relation.schema }}'\n    {% endif %}\n    order by ordinal_position\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.38873, "supported_languages": null}, "macro.dbt_redshift.redshift__list_relations_without_caching": {"unique_id": "macro.dbt_redshift.redshift__list_relations_without_caching", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_relations_without_caching", "macro_sql": "{% macro redshift__list_relations_without_caching(schema_relation) %}\n  {{ return(postgres__list_relations_without_caching(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.388939, "supported_languages": null}, "macro.dbt_redshift.redshift__information_schema_name": {"unique_id": "macro.dbt_redshift.redshift__information_schema_name", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__information_schema_name", "macro_sql": "{% macro redshift__information_schema_name(database) -%}\n  {{ return(postgres__information_schema_name(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.389128, "supported_languages": null}, "macro.dbt_redshift.redshift__list_schemas": {"unique_id": "macro.dbt_redshift.redshift__list_schemas", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_schemas", "macro_sql": "{% macro redshift__list_schemas(database) -%}\n  {{ return(postgres__list_schemas(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.389316, "supported_languages": null}, "macro.dbt_redshift.redshift__check_schema_exists": {"unique_id": "macro.dbt_redshift.redshift__check_schema_exists", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__check_schema_exists", "macro_sql": "{% macro redshift__check_schema_exists(information_schema, schema) -%}\n  {{ return(postgres__check_schema_exists(information_schema, schema)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3895402, "supported_languages": null}, "macro.dbt_redshift.redshift__persist_docs": {"unique_id": "macro.dbt_redshift.redshift__persist_docs", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__persist_docs", "macro_sql": "{% macro redshift__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {# Override: do not set column comments for LBVs #}\n  {% set is_lbv = config.get('materialized') == 'view' and config.get('bind') == false %}\n  {% if for_columns and config.persist_column_docs() and model.columns and not is_lbv %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3904839, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_relation_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_comment", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_comment", "macro_sql": "{% macro redshift__alter_relation_comment(relation, comment) %}\n  {% do return(postgres__alter_relation_comment(relation, comment)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.390831, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_column_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_column_comment", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_column_comment", "macro_sql": "{% macro redshift__alter_column_comment(relation, column_dict) %}\n  {% do return(postgres__alter_column_comment(relation, column_dict)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.39108, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_relation_add_remove_columns": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_add_remove_columns", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_add_remove_columns", "macro_sql": "{% macro redshift__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns %}\n\n    {% for column in add_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} add column {{ column.name }} {{ column.data_type }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n  {% if remove_columns %}\n\n    {% for column in remove_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} drop column {{ column.name }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3920372, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_merge_sql": {"unique_id": "macro.dbt_redshift.redshift__snapshot_merge_sql", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "redshift__snapshot_merge_sql", "macro_sql": "{% macro redshift__snapshot_merge_sql(target, source, insert_cols) -%}\n    {{ postgres__snapshot_merge_sql(target, source, insert_cols) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3924632, "supported_languages": null}, "macro.dbt_redshift.redshift__length": {"unique_id": "macro.dbt_redshift.redshift__length", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.39276, "supported_languages": null}, "macro.dbt_redshift.redshift__dateadd": {"unique_id": "macro.dbt_redshift.redshift__dateadd", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.393174, "supported_languages": null}, "macro.dbt_redshift.redshift__listagg": {"unique_id": "macro.dbt_redshift.redshift__listagg", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "redshift__listagg", "macro_sql": "{% macro redshift__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    {% set ns = namespace() %}\n    {% set ns.delimiter_text_regex = delimiter_text|trim(\"'\") %}\n    {% set special_chars %}\\,^,$,.,|,?,*,+,(,),[,],{,}{% endset %}\n    {%- for char in special_chars.split(',') -%}\n        {% set escape_char %}\\\\{{ char }}{% endset %}\n        {% set ns.delimiter_text_regex = ns.delimiter_text_regex|replace(char,escape_char) %}\n    {%- endfor -%}\n\n    {% set regex %}'([^{{ ns.delimiter_text_regex }}]+{{ ns.delimiter_text_regex }}){1,{{ limit_num - 1}}}[^{{ ns.delimiter_text_regex }}]+'{% endset %}\n    regexp_substr(\n        listagg(\n            {{ measure }},\n            {{ delimiter_text }}\n            )\n            {% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n        ,{{ regex }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3955898, "supported_languages": null}, "macro.dbt_redshift.redshift__datediff": {"unique_id": "macro.dbt_redshift.redshift__datediff", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.396014, "supported_languages": null}, "macro.dbt_redshift.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_redshift.redshift__cast_bool_to_text", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.396353, "supported_languages": null}, "macro.dbt_redshift.redshift__array_concat": {"unique_id": "macro.dbt_redshift.redshift__array_concat", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "redshift__array_concat", "macro_sql": "{% macro redshift__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.396684, "supported_languages": null}, "macro.dbt_redshift.redshift__last_day": {"unique_id": "macro.dbt_redshift.redshift__last_day", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.3972402, "supported_languages": null}, "macro.dbt_redshift.redshift__split_part": {"unique_id": "macro.dbt_redshift.redshift__split_part", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "redshift__split_part", "macro_sql": "{% macro redshift__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.397911, "supported_languages": null}, "macro.dbt_redshift.redshift__array_construct": {"unique_id": "macro.dbt_redshift.redshift__array_construct", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "redshift__array_construct", "macro_sql": "{% macro redshift__array_construct(inputs, data_type) -%}\n    array( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.398256, "supported_languages": null}, "macro.dbt_redshift.redshift__array_append": {"unique_id": "macro.dbt_redshift.redshift__array_append", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "redshift__array_append", "macro_sql": "{% macro redshift__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.array_concat", "macro.dbt.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.39873, "supported_languages": null}, "macro.dbt_redshift.redshift__get_show_grant_sql": {"unique_id": "macro.dbt_redshift.redshift__get_show_grant_sql", "package_name": "dbt_redshift", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "redshift__get_show_grant_sql", "macro_sql": "{% macro redshift__get_show_grant_sql(relation) %}\n\nwith privileges as (\n\n    -- valid options per https://docs.aws.amazon.com/redshift/latest/dg/r_HAS_TABLE_PRIVILEGE.html\n    select 'select' as privilege_type\n    union all\n    select 'insert' as privilege_type\n    union all\n    select 'update' as privilege_type\n    union all\n    select 'delete' as privilege_type\n    union all\n    select 'references' as privilege_type\n\n)\n\nselect\n    u.usename as grantee,\n    p.privilege_type\nfrom pg_user u\ncross join privileges p\nwhere has_table_privilege(u.usename, '{{ relation }}', privilege_type)\n    and u.usename != current_user\n    and not u.usesuper\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.399171, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n    now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.399677, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.399939, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.400089, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_backcompat": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp_backcompat", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp_backcompat", "macro_sql": "{% macro postgres__current_timestamp_backcompat() %}\n    current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4002419, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro postgres__current_timestamp_in_utc_backcompat() %}\n    (current_timestamp at time zone 'utc')::{{ type_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.400395, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.40207, "supported_languages": null}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.403054, "supported_languages": null}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.411187, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4118972, "supported_languages": null}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4123552, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4128041, "supported_languages": null}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.413472, "supported_languages": null}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.414003, "supported_languages": null}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4142458, "supported_languages": null}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.414739, "supported_languages": null}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4152908, "supported_languages": null}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = base_relation.relation_max_name_length() %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4164832, "supported_languages": null}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.416764, "supported_languages": null}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.417218, "supported_languages": null}, "macro.dbt_postgres.postgres__make_backup_relation": {"unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.417616, "supported_languages": null}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.418224, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.418551, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.419486, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.419777, "supported_languages": null}, "macro.dbt_postgres.postgres__copy_grants": {"unique_id": "macro.dbt_postgres.postgres__copy_grants", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.419942, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_default_sql": {"unique_id": "macro.dbt_postgres.postgres__get_incremental_default_sql", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/materializations/incremental_strategies.sql", "original_file_path": "macros/materializations/incremental_strategies.sql", "name": "postgres__get_incremental_default_sql", "macro_sql": "{% macro postgres__get_incremental_default_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n  {% else %}\n    {% do return(get_incremental_append_sql(arg_dict)) %}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql", "macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.420584, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.421695, "supported_languages": null}, "macro.dbt_postgres.postgres__dateadd": {"unique_id": "macro.dbt_postgres.postgres__dateadd", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4220889, "supported_languages": null}, "macro.dbt_postgres.postgres__listagg": {"unique_id": "macro.dbt_postgres.postgres__listagg", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4230762, "supported_languages": null}, "macro.dbt_postgres.postgres__datediff": {"unique_id": "macro.dbt_postgres.postgres__datediff", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4276512, "supported_languages": null}, "macro.dbt_postgres.postgres__any_value": {"unique_id": "macro.dbt_postgres.postgres__any_value", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.427961, "supported_languages": null}, "macro.dbt_postgres.postgres__last_day": {"unique_id": "macro.dbt_postgres.postgres__last_day", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.428768, "supported_languages": null}, "macro.dbt_postgres.postgres__split_part": {"unique_id": "macro.dbt_postgres.postgres__split_part", "package_name": "dbt_postgres", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4294431, "supported_languages": null}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.431065, "supported_languages": null}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.431347, "supported_languages": null}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.43155, "supported_languages": null}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4317482, "supported_languages": null}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.431943, "supported_languages": null}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.432558, "supported_languages": null}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.432993, "supported_languages": null}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.433425, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.43413, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.434518, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4396212, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.439863, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4401789, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4412138, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.441448, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.441695, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n          select {{ check_cols_config | join(', ') }} from ({{ node['compiled_code'] }}) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.443691, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.445747, "supported_languages": null}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.451512, "supported_languages": null}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.451921, "supported_languages": null}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.452163, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4522848, "supported_languages": null}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.452495, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.452658, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.452947, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.454221, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4544919, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.454853, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.455461, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.464326, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4673522, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.468083, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4685261, "supported_languages": null}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4691541, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4696991, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.471999, "supported_languages": null}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.472793, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.473759, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"unique_id": "macro.dbt.get_merge_update_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.474102, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"unique_id": "macro.dbt.default__get_merge_update_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.475138, "supported_languages": null}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4816298, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.483962, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.484319, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.48541, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.485801, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.486741, "supported_languages": null}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.487755, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"unique_id": "macro.dbt.get_incremental_append_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4890938, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"unique_id": "macro.dbt.default__get_incremental_append_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4894369, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.489714, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.490099, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"unique_id": "macro.dbt.get_incremental_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.490371, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"unique_id": "macro.dbt.default__get_incremental_merge_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.490748, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.491012, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"predicates\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4913988, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"unique_id": "macro.dbt.get_incremental_default_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4916701, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"unique_id": "macro.dbt.default__get_incremental_default_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.491883, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"unique_id": "macro.dbt.get_insert_into_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.4922822, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.499564, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.507416, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.509187, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.510911, "supported_languages": null}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5121322, "supported_languages": null}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.515865, "supported_languages": ["sql"]}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.516671, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.516939, "supported_languages": null}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.517558, "supported_languages": null}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.518153, "supported_languages": null}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5218601, "supported_languages": ["sql"]}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5224042, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.522721, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=True) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5249321, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.525525, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5257611, "supported_languages": null}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.526019, "supported_languages": null}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.526386, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5310872, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.538131, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.53942, "supported_languages": null}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.539756, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5404449, "supported_languages": null}, "macro.dbt.get_csv_sql": {"unique_id": "macro.dbt.get_csv_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.540719, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"unique_id": "macro.dbt.default__get_csv_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5409029, "supported_languages": null}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5411, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.54126, "supported_languages": null}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.541482, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.541643, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.542316, "supported_languages": null}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.54258, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.544399, "supported_languages": null}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5450408, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5453708, "supported_languages": null}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.546201, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5465758, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.546976, "supported_languages": null}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.547626, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.547986, "supported_languages": null}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5485702, "supported_languages": null}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.549082, "supported_languages": null}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5495172, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.550411, "supported_languages": null}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.552583, "supported_languages": null}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5534961, "supported_languages": null}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5539148, "supported_languages": null}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.55658, "supported_languages": null}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5582771, "supported_languages": null}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.559357, "supported_languages": null}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5596879, "supported_languages": null}, "macro.dbt.except": {"unique_id": "macro.dbt.except", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.560111, "supported_languages": null}, "macro.dbt.default__except": {"unique_id": "macro.dbt.default__except", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.560221, "supported_languages": null}, "macro.dbt.replace": {"unique_id": "macro.dbt.replace", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.560777, "supported_languages": null}, "macro.dbt.default__replace": {"unique_id": "macro.dbt.default__replace", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.561012, "supported_languages": null}, "macro.dbt.concat": {"unique_id": "macro.dbt.concat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.561449, "supported_languages": null}, "macro.dbt.default__concat": {"unique_id": "macro.dbt.default__concat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5616262, "supported_languages": null}, "macro.dbt.length": {"unique_id": "macro.dbt.length", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5620759, "supported_languages": null}, "macro.dbt.default__length": {"unique_id": "macro.dbt.default__length", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.562227, "supported_languages": null}, "macro.dbt.dateadd": {"unique_id": "macro.dbt.dateadd", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.562797, "supported_languages": null}, "macro.dbt.default__dateadd": {"unique_id": "macro.dbt.default__dateadd", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.563027, "supported_languages": null}, "macro.dbt.intersect": {"unique_id": "macro.dbt.intersect", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5634382, "supported_languages": null}, "macro.dbt.default__intersect": {"unique_id": "macro.dbt.default__intersect", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.563543, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"unique_id": "macro.dbt.escape_single_quotes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.564008, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"unique_id": "macro.dbt.default__escape_single_quotes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5642052, "supported_languages": null}, "macro.dbt.right": {"unique_id": "macro.dbt.right", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5647209, "supported_languages": null}, "macro.dbt.default__right": {"unique_id": "macro.dbt.default__right", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5649972, "supported_languages": null}, "macro.dbt.listagg": {"unique_id": "macro.dbt.listagg", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.565995, "supported_languages": null}, "macro.dbt.default__listagg": {"unique_id": "macro.dbt.default__listagg", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.56657, "supported_languages": null}, "macro.dbt.datediff": {"unique_id": "macro.dbt.datediff", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.567136, "supported_languages": null}, "macro.dbt.default__datediff": {"unique_id": "macro.dbt.default__datediff", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.567366, "supported_languages": null}, "macro.dbt.safe_cast": {"unique_id": "macro.dbt.safe_cast", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5678568, "supported_languages": null}, "macro.dbt.default__safe_cast": {"unique_id": "macro.dbt.default__safe_cast", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.568054, "supported_languages": null}, "macro.dbt.hash": {"unique_id": "macro.dbt.hash", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.568511, "supported_languages": null}, "macro.dbt.default__hash": {"unique_id": "macro.dbt.default__hash", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.568736, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"unique_id": "macro.dbt.cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.569171, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"unique_id": "macro.dbt.default__cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5693948, "supported_languages": null}, "macro.dbt.any_value": {"unique_id": "macro.dbt.any_value", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.569835, "supported_languages": null}, "macro.dbt.default__any_value": {"unique_id": "macro.dbt.default__any_value", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.569982, "supported_languages": null}, "macro.dbt.position": {"unique_id": "macro.dbt.position", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.570501, "supported_languages": null}, "macro.dbt.default__position": {"unique_id": "macro.dbt.default__position", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.570689, "supported_languages": null}, "macro.dbt.string_literal": {"unique_id": "macro.dbt.string_literal", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.571121, "supported_languages": null}, "macro.dbt.default__string_literal": {"unique_id": "macro.dbt.default__string_literal", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.571264, "supported_languages": null}, "macro.dbt.type_string": {"unique_id": "macro.dbt.type_string", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5738041, "supported_languages": null}, "macro.dbt.default__type_string": {"unique_id": "macro.dbt.default__type_string", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.574037, "supported_languages": null}, "macro.dbt.type_timestamp": {"unique_id": "macro.dbt.type_timestamp", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.574362, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"unique_id": "macro.dbt.default__type_timestamp", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.574582, "supported_languages": null}, "macro.dbt.type_float": {"unique_id": "macro.dbt.type_float", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.574817, "supported_languages": null}, "macro.dbt.default__type_float": {"unique_id": "macro.dbt.default__type_float", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5750332, "supported_languages": null}, "macro.dbt.type_numeric": {"unique_id": "macro.dbt.type_numeric", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.57527, "supported_languages": null}, "macro.dbt.default__type_numeric": {"unique_id": "macro.dbt.default__type_numeric", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.575531, "supported_languages": null}, "macro.dbt.type_bigint": {"unique_id": "macro.dbt.type_bigint", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5757592, "supported_languages": null}, "macro.dbt.default__type_bigint": {"unique_id": "macro.dbt.default__type_bigint", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.57599, "supported_languages": null}, "macro.dbt.type_int": {"unique_id": "macro.dbt.type_int", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.576221, "supported_languages": null}, "macro.dbt.default__type_int": {"unique_id": "macro.dbt.default__type_int", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.576425, "supported_languages": null}, "macro.dbt.type_boolean": {"unique_id": "macro.dbt.type_boolean", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.57665, "supported_languages": null}, "macro.dbt.default__type_boolean": {"unique_id": "macro.dbt.default__type_boolean", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.576852, "supported_languages": null}, "macro.dbt.array_concat": {"unique_id": "macro.dbt.array_concat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.577386, "supported_languages": null}, "macro.dbt.default__array_concat": {"unique_id": "macro.dbt.default__array_concat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.577573, "supported_languages": null}, "macro.dbt.bool_or": {"unique_id": "macro.dbt.bool_or", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5780349, "supported_languages": null}, "macro.dbt.default__bool_or": {"unique_id": "macro.dbt.default__bool_or", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.578182, "supported_languages": null}, "macro.dbt.last_day": {"unique_id": "macro.dbt.last_day", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5787678, "supported_languages": null}, "macro.dbt.default_last_day": {"unique_id": "macro.dbt.default_last_day", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.579147, "supported_languages": null}, "macro.dbt.default__last_day": {"unique_id": "macro.dbt.default__last_day", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.57936, "supported_languages": null}, "macro.dbt.split_part": {"unique_id": "macro.dbt.split_part", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5802062, "supported_languages": null}, "macro.dbt.default__split_part": {"unique_id": "macro.dbt.default__split_part", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.58044, "supported_languages": null}, "macro.dbt._split_part_negative": {"unique_id": "macro.dbt._split_part_negative", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.580846, "supported_languages": null}, "macro.dbt.date_trunc": {"unique_id": "macro.dbt.date_trunc", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.581336, "supported_languages": null}, "macro.dbt.default__date_trunc": {"unique_id": "macro.dbt.default__date_trunc", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.581515, "supported_languages": null}, "macro.dbt.array_construct": {"unique_id": "macro.dbt.array_construct", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.582135, "supported_languages": null}, "macro.dbt.default__array_construct": {"unique_id": "macro.dbt.default__array_construct", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.582483, "supported_languages": null}, "macro.dbt.array_append": {"unique_id": "macro.dbt.array_append", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.582981, "supported_languages": null}, "macro.dbt.default__array_append": {"unique_id": "macro.dbt.default__array_append", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.583167, "supported_languages": null}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5837781, "supported_languages": null}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.58405, "supported_languages": null}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5842812, "supported_languages": null}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5845408, "supported_languages": null}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5853078, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.585519, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.585717, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.585865, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"unique_id": "macro.dbt.current_timestamp_backcompat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.586097, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_backcompat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.586205, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.586439, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_redshift.redshift__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5866828, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5874188, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.587691, "supported_languages": null}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.587918, "supported_languages": null}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.588494, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"unique_id": "macro.dbt.make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.593112, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"unique_id": "macro.dbt.default__make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5933492, "supported_languages": null}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.593664, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.594084, "supported_languages": null}, "macro.dbt.make_backup_relation": {"unique_id": "macro.dbt.make_backup_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5944371, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"unique_id": "macro.dbt.default__make_backup_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.5948899, "supported_languages": null}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.595144, "supported_languages": null}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.595447, "supported_languages": null}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.595705, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.595927, "supported_languages": null}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.596218, "supported_languages": null}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.596611, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.59696, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.597749, "supported_languages": null}, "macro.dbt.load_cached_relation": {"unique_id": "macro.dbt.load_cached_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.598159, "supported_languages": null}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.598357, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.598628, "supported_languages": null}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.599314, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.599909, "supported_languages": null}, "macro.dbt.copy_grants": {"unique_id": "macro.dbt.copy_grants", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.602368, "supported_languages": null}, "macro.dbt.default__copy_grants": {"unique_id": "macro.dbt.default__copy_grants", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.602536, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6027782, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.602936, "supported_languages": null}, "macro.dbt.should_revoke": {"unique_id": "macro.dbt.should_revoke", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.603422, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"unique_id": "macro.dbt.get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.603693, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"unique_id": "macro.dbt.default__get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6038349, "supported_languages": null}, "macro.dbt.get_grant_sql": {"unique_id": "macro.dbt.get_grant_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.604154, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"unique_id": "macro.dbt.default__get_grant_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6044219, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"unique_id": "macro.dbt.get_revoke_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.604744, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"unique_id": "macro.dbt.default__get_revoke_sql", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6050072, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"unique_id": "macro.dbt.get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.605336, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"unique_id": "macro.dbt.default__get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.606293, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"unique_id": "macro.dbt.call_dcl_statements", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6067998, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"unique_id": "macro.dbt.default__call_dcl_statements", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6071522, "supported_languages": null}, "macro.dbt.apply_grants": {"unique_id": "macro.dbt.apply_grants", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6074848, "supported_languages": null}, "macro.dbt.default__apply_grants": {"unique_id": "macro.dbt.default__apply_grants", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6091, "supported_languages": null}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.610146, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.610385, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.610673, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6109161, "supported_languages": null}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.611305, "supported_languages": null}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.612075, "supported_languages": null}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.61423, "supported_languages": null}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.614602, "supported_languages": null}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.614866, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.615089, "supported_languages": null}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.615349, "supported_languages": null}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.615693, "supported_languages": null}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.615988, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6164238, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.61669, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6169212, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.619374, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.619693, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.620141, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.620407, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.620894, "supported_languages": null}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.621218, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.622126, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.622516, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.6236422, "supported_languages": null}, "macro.dbt.build_ref_function": {"unique_id": "macro.dbt.build_ref_function", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {%- set resolved = ref(*_ref) -%}\n        {%- do ref_dict.update({_ref | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef ref(*args,dbt_load_df_function):\n    refs = {{ ref_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.625775, "supported_languages": null}, "macro.dbt.build_source_function": {"unique_id": "macro.dbt.build_source_function", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.626461, "supported_languages": null}, "macro.dbt.build_config_dict": {"unique_id": "macro.dbt.build_config_dict", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {%- for key in model.config.config_keys_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == 'language' -%}\n          {%- set value = 'python' -%}\n        {%- endif -%}\n        {%- set value = model.config[key] -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.62711, "supported_languages": null}, "macro.dbt.py_script_postfix": {"unique_id": "macro.dbt.py_script_postfix", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = '{{ this.database }}'\n    schema = '{{ this.schema }}'\n    identifier = '{{ this.identifier }}'\n    def __repr__(self):\n        return '{{ this }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args: ref(*args, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.627702, "supported_languages": null}, "macro.dbt.py_script_comment": {"unique_id": "macro.dbt.py_script_comment", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.627806, "supported_languages": null}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.628609, "supported_languages": null}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.628938, "supported_languages": null}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.629351, "supported_languages": null}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1675970035.629735, "supported_languages": null}}, "docs": {"houm.__overview__": {"unique_id": "houm.__overview__", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "overview.md", "original_file_path": "models/overview.md", "name": "__overview__", "block_contents": "# Data Documentation for GitLab\n\nAll other documentation is in our handbook in the following links:\n\n* [Data Team Handbook](https://wiki.houm.com/doc/recursos-data-engineer-qbDEpLU3Vc)\n* [dbt Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/dbt-guide/)\n* [SQL Style  Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/sql-style-guide)\n* [Slack Channel for questions](https://houmteam.slack.com/archives/CG9ND40K0) \n\n\n\nThe data in any of our projects has four distinct checkpoints:\n\n- ** 1. Sources ** : Schemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.\n\n\n- ** 2. Staging models ** : The atomic unit of data modeling. Each model bears a one-to-one relationship with the source data table it represents. It has the same granularity, but the columns have been renamed, recast, or usefully reconsidered into a consistent format.\n\n\n- ** 3. Processing models ** : This is a enrich and cleaning process of the transformations \n\n\n- ** 4.1 Facts models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.2 Dims models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.3 Marts models ** : Models that represent **aggregated** business processes and entities, abstracted from the data sources that they are based on"}, "houm.historical": {"unique_id": "houm.historical", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "historical", "block_contents": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt"}, "houm.raw_stage": {"unique_id": "houm.raw_stage", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "raw_stage", "block_contents": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location"}, "houm.staging_buk": {"unique_id": "houm.staging_buk", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "staging_buk", "block_contents": "This information is collected by the current Human Resources System: BUK"}, "houm.airbyte_zendesk": {"unique_id": "houm.airbyte_zendesk", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "airbyte_zendesk", "block_contents": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool."}, "houm.bidding_app": {"unique_id": "houm.bidding_app", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "bidding_app", "block_contents": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382"}, "houm.stg_properties": {"unique_id": "houm.stg_properties", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_properties_id": {"unique_id": "houm.stg_properties_id", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties_id", "block_contents": "This is a unique identifier for the properties at Houm."}, "houm.stg_propertydetails": {"unique_id": "houm.stg_propertydetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_propertydetails_id": {"unique_id": "houm.stg_propertydetails_id", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails_id", "block_contents": "This is a unique identifier for the properties details at Houm."}, "houm.stg_property_salesdetails": {"unique_id": "houm.stg_property_salesdetails", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_property_salesdetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_zendesk_users": {"unique_id": "houm.stg_zendesk_users", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users", "block_contents": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut"}, "houm.stg_zendesk_users_id": {"unique_id": "houm.stg_zendesk_users_id", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users_id", "block_contents": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id"}, "houm.stg_zendesk_tickets": {"unique_id": "houm.stg_zendesk_tickets", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets", "block_contents": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket."}, "houm.stg_zendesk_tickets_audits": {"unique_id": "houm.stg_zendesk_tickets_audits", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets_audits", "block_contents": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *"}, "houm.stg_zendesk_metrics": {"unique_id": "houm.stg_zendesk_metrics", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_metrics", "block_contents": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**"}, "houm.stg_employees": {"unique_id": "houm.stg_employees", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_employees", "block_contents": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link"}, "houm.stg_roles": {"unique_id": "houm.stg_roles", "package_name": "houm", "root_path": "/Users/usuariohoum/Documents/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_roles", "block_contents": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/opt/anaconda3/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.houm.property__recommended_new_properties": ["model.houm.stg_property__recommended_new_properties"], "model.houm.property__sale_recommended_properties": ["model.houm.property__published_properties", "model.houm.stg_property__sale_recommended_properties"], "model.houm.property__rent_recommended_properties": ["model.houm.property__published_properties", "model.houm.stg_property__rent_recommended_properties"], "model.houm.property__rev_kpi_recommendation_performance": ["model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio"], "model.houm.goals_current": ["model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue", "model.houm.cum_sales_units", "model.houm.eop_subs", "model.houm.rentals_units", "model.houm.sales_local_revenue", "model.houm.sales_units"], "model.houm.cum_rentals_units": ["model.houm.rentals_units"], "model.houm.cum_sales_units": ["model.houm.sales_units"], "model.houm.cum_sales_local_revenue": ["model.houm.sales_local_revenue"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_metric_details_leads"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_metric_details_paid_media_cost"], "model.houm.rental_landlord_metric_renewal_subs": ["model.houm.rental_landlord_metric_details_renewal_subs"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_republished_subs": ["model.houm.rental_landlord_metric_details_republished_subs"], "model.houm.rental_landlord_metric_new_subs_brokerage": ["model.houm.rental_landlord_metric_details_new_subs_brokerage"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_metric_details_photo_done"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_metric_details_new_sale_listing"], "model.houm.sales_company_metric_new_units_listing": ["model.houm.sales_company_metric_details_new_units_listing"], "model.houm.sales_company_metric_new_unittypes_listing": ["model.houm.sales_company_metric_details_new_unittypes_listing"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.sales_company_metric_new_project_listing": ["model.houm.sales_company_metric_details_new_project_listing"], "model.houm.properties_published": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_property_salesdetails", "model.houm.stg_propertydetails"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_metric_details_leads_qualified"], "model.houm.rental_landlord_metric_subs": ["model.houm.rental_landlord_metric_details_subs"], "model.houm.property_finder_rentals": ["model.houm.dim_macrozones", "model.houm.proc_core_properties"], "model.houm.property_finder_sales": ["model.houm.dim_macrozones", "model.houm.proc_core_properties"], "model.houm.rental_landlord_metric_new_subs": ["model.houm.rental_landlord_metric_details_new_subs"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_metric_details_leads_qualified_date"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_metric_details_photo_created"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_metric_details_paid_media_cost"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_metric_details_leads"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_metric_details_photo_created"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_metric_details_photo_done"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_metric_details_new_rental_listing"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_metric_details_leads_qualified"], "model.houm.rental_landlord_metric_new_subs_non_brokerage": ["model.houm.rental_landlord_metric_details_new_subs_non_brokerage"], "model.houm.temp_rental_tenant_metric_leads": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_lead_activities"], "model.houm.temp_rental_tenant_metric_reservations": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_reservations"], "model.houm.temp_rental_tenant_metric_paid_media_cost": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_marketing_paid_media"], "model.houm.temp_rental_tenant_metric_schedules_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_schedules"], "model.houm.temp_rental_landlord_metric_leads_qualified_date": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_landlord_leads"], "model.houm.temp_rental_tenant_metric_new_tenant": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_subs"], "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_schedules_timing"], "model.houm.metrics": ["model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled", "model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "model.houm.temp_rental_tenant_metric_reservations_refunded", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled", "model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "model.houm.temp_rental_tenant_metric_total_eval", "model.houm.temp_sales_seller_metric_properties_stock"], "model.houm.temp_rental_tenant_metric_new_subs": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_subs"], "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_reservations_effective"], "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_scheduled"], "model.houm.temp_rental_landlord_metric_photo_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_schedules"], "model.houm.temp_rental_tenant_metric_reservations_effective": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_reservations"], "model.houm.metrics_order": ["seed.houm.seed_metrics_order"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_paid_media_cost"], "model.houm.temp_rental_landlord_metric_photo_scheduled": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_schedules"], "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified"], "model.houm.temp_rental_tenant_metric_approved_eval": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_evaluations"], "model.houm.metrics_name": ["seed.houm.seed_metrics"], "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_scheduled"], "model.houm.temp_sales_seller_metric_properties_stock": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_marketplace_published_properties"], "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective"], "model.houm.temp_rental_landlord_metric_leads": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_landlord_leads"], "model.houm.temp_rental_tenant_metric_reservations_refunded": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_reservations"], "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_schedules_done"], "model.houm.temp_rental_tenant_metric_schedules_second_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.temp_rental_tenant_metric_total_eval": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_evaluations"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_paid_media_cost"], "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_lead_activities"], "model.houm.temp_rental_tenant_metric_ongoing_eval": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_evaluations"], "model.houm.temp_rental_tenant_metric_rejected_eval": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_evaluations"], "model.houm.temp_rental_landlord_metric_leads_qualified": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_landlord_leads"], "model.houm.trans_macrozone_to_location": ["seed.houm.seed_dim_locations_houm_traduccion_1"], "model.houm.temp_rental_tenant_metric_schedules_scheduled": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_schedules"], "model.houm.temp_rental_tenant_metric_lost_eval": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_closure_evaluations"], "model.houm.temp_rental_tenant_metric_schedules_third_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.temp_rental_landlord_metric_photo_created": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_supply_schedules"], "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_lead_activities"], "model.houm.temp_rental_tenant_metric_leads_interactions": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_lead_activities"], "model.houm.temp_rental_landlord_metric_properties_stock": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_marketplace_published_properties"], "model.houm.temp_rental_tenant_metric_schedules_first_done": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.temp_rental_tenant_metric_schedules_created": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_schedules"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done": ["model.houm.metrics_name", "model.houm.metrics_order", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_schedules_done"], "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants": ["model.houm.dim_base_metrics", "model.houm.metrics_name", "model.houm.metrics_order", "model.houm.proc_demand_lead_activities"], "model.houm.sales_investor_metric_leads_qualified_date": ["model.houm.sales_investor_metric_details_leads_qualified_date"], "model.houm.rental_tenant_metric_schedules_cancelled": ["model.houm.rental_tenant_metric_details_schedules_cancelled"], "model.houm.sales_buyer_metric_leads_qualified": ["model.houm.sales_buyer_metric_details_leads_qualified"], "model.houm.rental_tenant_metric_total_evaluations": ["model.houm.rental_tenant_metric_details_total_eval"], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_metric_details_leads_interactions"], "model.houm.rental_tenant_metric_correct_visit_done": ["model.houm.rental_tenant_metric_details_correct_visit_done"], "model.houm.sales_buyer_metric_leads_qualified_date": ["model.houm.sales_buyer_metric_details_leads_qualified_date"], "model.houm.sales_demand_metric_paid_media_cost": ["model.houm.sales_demand_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_schedules_scheduled_organic": ["model.houm.rental_tenant_metric_details_schedules_scheduled_organic"], "model.houm.rental_tenant_metric_lost_eval": ["model.houm.rental_tenant_metric_details_lost_eval"], "model.houm.rental_tenant_metric_schedules_first_done": ["model.houm.rental_tenant_metric_details_schedules_first_done"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_tenant_metric_details_schedules_created"], "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum": ["model.houm.rental_tenant_metric_details_leads_interactions_markethoum"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_metric_details_schedules_created"], "model.houm.rental_tenant_metric_correct_visit_finished": ["model.houm.rental_tenant_metric_details_correct_visit_finished"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_metric_details_schedules_done"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_metric_details_leads"], "model.houm.rental_tenant_metric_schedules_second_done": ["model.houm.rental_tenant_metric_details_schedules_second_done"], "model.houm.sales_buyer_metric_bid_realized": ["model.houm.sales_buyer_metric_details_bid_realized"], "model.houm.sales_buyer_metric_schedules_third_done": ["model.houm.sales_buyer_metric_details_schedules_third_done"], "model.houm.sales_buyer_metric_bid_without_response": ["model.houm.sales_buyer_metric_details_bid_without_response"], "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": ["model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_tenant_metric_details_reservations_refunded"], "model.houm.sales_buyer_metric_generated_links": ["model.houm.sales_buyer_metric_details_generated_links"], "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants": ["model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants"], "model.houm.sales_demand_metric_leads": ["model.houm.sales_demand_metric_details_leads"], "model.houm.rental_tenant_metric_schedules_scheduled_admin": ["model.houm.rental_tenant_metric_details_schedules_scheduled_admin"], "model.houm.sales_buyer_metric_leads": ["model.houm.sales_buyer_metric_details_leads"], "model.houm.rental_tenant_metric_rejected_eval": ["model.houm.rental_tenant_metric_details_rejected_eval"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_metric_details_schedules_scheduled"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp": ["model.houm.rental_tenant_metric_details_leads_interactions_whatsapp"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_metric_details_new_tenant"], "model.houm.sales_buyer_metric_schedules_first_done": ["model.houm.sales_buyer_metric_details_schedules_first_done"], "model.houm.rental_tenant_metric_schedules_third_done": ["model.houm.rental_tenant_metric_details_schedules_third_done"], "model.houm.sales_investor_metric_leads": ["model.houm.sales_investor_metric_details_leads"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_tenant_metric_details_reservations"], "model.houm.rental_tenant_metric_schedules_unfinished": ["model.houm.rental_tenant_metric_details_schedules_unfinished"], "model.houm.sales_buyer_metric_bid_rejected": ["model.houm.sales_buyer_metric_details_bid_rejected"], "model.houm.sales_investor_metric_schedules_created": ["model.houm.sales_investor_metric_details_schedules_created"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_tenant_metric_details_schedules_done"], "model.houm.sales_investor_metric_paid_media_cost": ["model.houm.sales_investor_metric_details_paid_media_cost"], "model.houm.sales_investor_metric_schedules_done": ["model.houm.sales_investor_metric_details_schedules_done"], "model.houm.rental_tenant_metric_approved_eval": ["model.houm.rental_tenant_metric_details_approved_eval"], "model.houm.rental_tenant_metric_done_time": ["model.houm.rental_tenant_metric_details_done_time"], "model.houm.rental_tenant_metric_arrived_on_time": ["model.houm.rental_tenant_metric_details_arrived_on_time"], "model.houm.rental_tenant_metric_total_eval": ["model.houm.rental_tenant_metric_details_total_eval"], "model.houm.sales_buyer_metric_bid_accepted": ["model.houm.sales_buyer_metric_details_bid_accepted"], "model.houm.sales_buyer_metric_correct_visit_done": ["model.houm.sales_buyer_metric_details_correct_visit_done"], "model.houm.sales_buyer_metric_bid_with_counter_bid": ["model.houm.sales_buyer_metric_details_bid_with_counter_bid"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_metric_details_new_subs"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_tenant_metric_details_schedules_scheduled"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_tenant_metric_details_reservations_effective"], "model.houm.sales_investor_metric_leads_qualified": ["model.houm.sales_investor_metric_details_leads_qualified"], "model.houm.rental_tenant_metric_ongoing_eval": ["model.houm.rental_tenant_metric_details_ongoing_eval"], "model.houm.sales_investor_metric_schedules_scheduled": ["model.houm.sales_investor_metric_details_schedules_scheduled"], "model.houm.sales_buyer_metric_schedules_second_done": ["model.houm.sales_buyer_metric_details_schedules_second_done"], "model.houm.rental_tenant_metric_schedules_cancelled_at": ["model.houm.rental_tenant_metric_details_schedules_cancelled_at"], "model.houm.rental_tenant_funnel": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_approved_eval", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_lost_eval", "model.houm.rental_tenant_metric_new_subs", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_ongoing_eval", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum", "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants", "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp", "model.houm.rental_tenant_metric_rejected_eval", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_first_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_schedules_second_done", "model.houm.rental_tenant_metric_schedules_third_done", "model.houm.rental_tenant_metric_total_eval"], "model.houm.rental_real_time_ops_funnel": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_schedules_cancelled", "model.houm.rental_tenant_metric_schedules_cancelled_at", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_schedules_scheduled_admin", "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_schedules_scheduled_organic", "model.houm.rental_tenant_metric_schedules_unfinished"], "model.houm.rental_landlord_funnel": ["model.houm.dim_macrozones", "model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.rental_landlord_metric_new_subs", "model.houm.rental_landlord_metric_new_subs_brokerage", "model.houm.rental_landlord_metric_new_subs_non_brokerage", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled", "model.houm.rental_landlord_metric_renewal_subs", "model.houm.rental_landlord_metric_republished_subs", "model.houm.rental_landlord_metric_subs"], "model.houm.rental_real_time_ops_funnel_timing": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_arrived_on_time", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_correct_visit_finished", "model.houm.rental_tenant_metric_done_time"], "model.houm.sales_buyer_funnel": ["model.houm.dim_macrozones", "model.houm.sales_buyer_metric_bid_accepted", "model.houm.sales_buyer_metric_bid_realized", "model.houm.sales_buyer_metric_bid_rejected", "model.houm.sales_buyer_metric_bid_with_counter_bid", "model.houm.sales_buyer_metric_bid_without_response", "model.houm.sales_buyer_metric_correct_visit_done", "model.houm.sales_buyer_metric_generated_links", "model.houm.sales_buyer_metric_leads", "model.houm.sales_buyer_metric_leads_qualified", "model.houm.sales_buyer_metric_leads_qualified_date", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_first_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.sales_buyer_metric_schedules_second_done", "model.houm.sales_buyer_metric_schedules_third_done", "model.houm.sales_demand_metric_leads", "model.houm.sales_demand_metric_paid_media_cost"], "model.houm.sales_company_funnel": ["model.houm.dim_macrozones", "model.houm.sales_company_metric_new_project_listing", "model.houm.sales_company_metric_new_units_listing", "model.houm.sales_company_metric_new_unittypes_listing"], "model.houm.sales_seller_funnel": ["model.houm.dim_macrozones", "model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled"], "model.houm.sales_investor_funnel": ["model.houm.dim_macrozones", "model.houm.sales_demand_metric_leads", "model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_investor_metric_leads", "model.houm.sales_investor_metric_leads_qualified", "model.houm.sales_investor_metric_leads_qualified_date", "model.houm.sales_investor_metric_paid_media_cost", "model.houm.sales_investor_metric_schedules_created", "model.houm.sales_investor_metric_schedules_done", "model.houm.sales_investor_metric_schedules_scheduled"], "model.houm.dim_currency": [], "model.houm.dim_properties": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.dim_macrozones": ["model.houm.proc_macrozone"], "model.houm.dim_locations_houm": ["seed.houm.seed_dim_locations_houm"], "model.houm.dim_ipc": [], "model.houm.dim_base_metrics": ["model.houm.dim_dates", "model.houm.dim_locations_houm"], "model.houm.dim_cities": ["model.houm.proc_macrozone"], "model.houm.dim_dates": ["seed.houm.seed_dim_dates"], "model.houm.dim_uf_cl": ["model.houm.dim_dates"], "model.houm.dim_locations": ["source.houm.public.dim_polygons"], "model.houm.dim_portafolio_purchase": ["seed.houm.seed_propiedades_axion"], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_new_subs": ["model.houm.proc_closure_subs"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.rental_landlord_metric_details_republished_subs": ["model.houm.proc_closure_subs"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.sales_company_metric_details_new_units_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_units"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.sales_company_metric_details_new_unittypes_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_unittypes"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.proc_supply_landlord_leads"], "model.houm.rental_landlord_metric_details_new_subs_brokerage": ["model.houm.proc_closure_subs"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_renewal_subs": ["model.houm.proc_closure_subs"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_leads": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_new_subs_non_brokerage": ["model.houm.proc_closure_subs"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.proc_supply_landlord_leads"], "model.houm.rental_landlord_metric_details_subs": ["model.houm.proc_closure_subs"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.proc_supply_landlord_leads"], "model.houm.sales_company_metric_details_new_project_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_projects"], "model.houm.fact_daily_virtual_uf_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.fact_daily_virtual_uf_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.fact_daily_virtual_uf_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.sales_investor_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_bid_with_counter_bid": ["model.houm.proc_bid"], "model.houm.rental_tenant_metric_details_rejected_eval": ["model.houm.proc_closure_evaluations"], "model.houm.rental_tenant_metric_details_schedules_unfinished": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.proc_demand_reservations"], "model.houm.rental_tenant_metric_details_lost_eval": ["model.houm.proc_closure_evaluations"], "model.houm.rental_tenant_metric_details_schedules_second_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_ongoing_eval": ["model.houm.proc_closure_evaluations"], "model.houm.sales_buyer_metric_details_bid_rejected": ["model.houm.proc_bid"], "model.houm.sales_demand_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_correct_visit_done": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_correct_visit_finished": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants": ["model.houm.proc_demand_lead_activities"], "model.houm.rental_tenant_metric_details_leads_interactions_markethoum": ["model.houm.proc_demand_lead_activities"], "model.houm.rental_tenant_metric_details_arrived_on_time": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_total_eval": ["model.houm.proc_closure_evaluations"], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_leads_qualified": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_buyer_metric_details_bid_accepted": ["model.houm.proc_bid"], "model.houm.sales_investor_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_correct_visit_done": ["model.houm.proc_demand_schedules_timing"], "model.houm.sales_investor_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_schedules_cancelled_at": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_schedules_first_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.sales_buyer_metric_details_generated_links": ["model.houm.proc_negotiation"], "model.houm.rental_tenant_metric_details_leads_interactions_whatsapp": ["model.houm.proc_demand_lead_activities"], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metric_details_bid_realized": ["model.houm.proc_bid"], "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_done_time": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.proc_demand_lead_activities"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.proc_closure_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metric_details_leads_qualified": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_schedules_first_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_cancelled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_schedules_second_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.proc_demand_lead_activities"], "model.houm.sales_investor_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_buyer_metric_details_schedules_third_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.proc_closure_subs"], "model.houm.sales_buyer_metric_details_bid_without_response": ["model.houm.proc_bid"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.rental_tenant_metric_details_schedules_third_done": ["model.houm.proc_core_scheduler_schedules", "seed.houm.seed_test_email"], "model.houm.rental_tenant_metric_details_approved_eval": ["model.houm.proc_closure_evaluations"], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_leads_qualified_date": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_demand_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_leads_qualified_date": ["model.houm.proc_demand_sales_leads"], "model.houm.property__published_properties_rev_suggested_prices": ["model.houm.proc_properties_rev_suggested_prices", "model.houm.property__published_properties"], "model.houm.property__external_properties_rent": ["model.houm.proc_external_properties_rent"], "model.houm.property__houm_properties": ["model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.property__rev_ratio_country_city": ["model.houm.property__published_properties", "model.houm.property__published_properties_rev_suggested_prices"], "model.houm.property__published_properties": ["model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.property__rev_kpi_ratio": ["model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties", "model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties"], "model.houm.property__external_properties_sales": ["model.houm.proc_external_properties_sales"], "model.houm.property__published_new_properties": ["model.houm.proc_new_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails", "model.houm.stg_properties_associationamenities", "model.houm.stg_real_estate_developments_developmentdetails", "model.houm.stg_real_estate_developments_developments", "model.houm.stg_real_estate_developments_units", "model.houm.stg_real_estate_developments_unittypes", "model.houm.stg_users"], "model.houm.stg_survicate_nps_sac_surveys": ["source.houm.survicate.nps_sac_surveys"], "model.houm.stg_survicate_nps_sac_bi_executives": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"], "model.houm.stg_survicate_nps_admin_surveys": ["source.houm.survicate.nps_admin_surveys"], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"], "model.houm.stg_survicate_nps_admin_executives": ["model.houm.stg_survicate_nps_admin_answers", "model.houm.stg_survicate_nps_admin_surveys"], "model.houm.stg_survicate_nps_visit_done": ["source.houm.survicate.nps_visit_done"], "model.houm.stg_survicate_nps_admin_answers": ["source.houm.survicate.nps_admin_answers"], "model.houm.stg_survicate_nps_sac_executives": ["model.houm.stg_survicate_nps_sac_answers", "model.houm.stg_survicate_nps_sac_surveys"], "model.houm.stg_survicate_nps_sac_answers": ["source.houm.survicate.nps_sac_answers"], "model.houm.stg_survicate_nps_landlord_listing": ["source.houm.survicate.nps_landlord_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": ["source.houm.survicate.nps_landlord_new_sub"], "model.houm.stg_survicate_nps_photo_done": ["source.houm.survicate.photo_done"], "model.houm.stg_survicate_nps_tenant_new_sub": ["source.houm.survicate.nps_tennant_new_sub"], "model.houm.stg_supermetrics_fbads_video": ["source.houm.supermetrics.fbads_video"], "model.houm.stg_supermetrics_fbads_geo": ["source.houm.supermetrics.fbads_geo"], "model.houm.stg_supermetrics_googleads_campaign": ["source.houm.supermetrics.googleads_campaign"], "model.houm.stg_supermetrics_fbads_conversion": ["source.houm.supermetrics.fbads_conversion"], "model.houm.stg_supermetrics_googleads_ad": ["source.houm.supermetrics.googleads_ad"], "model.houm.stg_supermetrics_linkedinads_ad": ["source.houm.supermetrics.linkedinads_ad"], "model.houm.stg_supermetrics_fbads_campaign": ["source.houm.supermetrics.fbads_campaign"], "model.houm.stg_supermetrics_linkedinads_campaign": ["source.houm.supermetrics.linkedinads_campaign"], "model.houm.stg_supermetrics_googleads_conversion": ["source.houm.supermetrics.googleads_conversion"], "model.houm.stg_supermetrics_fbads_age_gender": ["source.houm.supermetrics.fbads_age_gender"], "model.houm.stg_supermetrics_fbads_ad": ["source.houm.supermetrics.fbads_ad"], "model.houm.stg_sales_negotiation": ["source.houm.bidding_app.negotiation"], "model.houm.stg_sales_negotiation_user": ["source.houm.bidding_app.negotiation_user"], "model.houm.stg_sales_bid": ["source.houm.bidding_app.bid"], "model.houm.stg_sales_identification": ["source.houm.bidding_app.identification"], "model.houm.stg_sales_property": ["source.houm.bidding_app.property"], "model.houm.stg_sales_bid_response": ["source.houm.bidding_app.bid_response"], "model.houm.stg_sales_identification_type": ["source.houm.bidding_app.identification_type"], "model.houm.stg_sales_user": ["source.houm.bidding_app.user"], "model.houm.stg_whatsapp_ces_sales_promises": ["source.houm.airbyte_gspread.new_nps_sales_buyer_promesa", "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa"], "model.houm.stg_whatsapp_nps_photo": ["source.houm.airbyte_gspread.nps_chile_foto", "source.houm.airbyte_gspread.nps_colombia_foto", "source.houm.airbyte_gspread.nps_mexico_foto"], "model.houm.stg_whatsapp_nps_automatic_tenant_24_horas": ["source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs"], "model.houm.stg_whatsapp_nps_rentas_new_listing": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx"], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": ["source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx"], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["source.houm.airbyte_gspread.nps_automatic_landlord_3_meses"], "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": ["source.houm.airbyte_gspread.nps_automatic_tenant_6_meses"], "model.houm.stg_whatsapp_nps_visits_done": ["source.houm.airbyte_gspread.nps_chile_renta", "source.houm.airbyte_gspread.nps_colombia_renta", "source.houm.airbyte_gspread.nps_mexico_renta"], "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": ["source.houm.airbyte_gspread.nps_automatic_tenant_3_meses"], "model.houm.stg_whatsapp_nps_sales_promises": ["source.houm.airbyte_gspread.new_nps_sales_buyer_posventa", "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "source.houm.airbyte_gspread.nps_sales_post_venta_seller", "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "source.houm.airbyte_gspread.nps_sales_promesa_seller"], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"], "model.houm.stg_whatsapp_nps_visits_cancelled": ["source.houm.airbyte_gspread.nps_cancel_visit"], "model.houm.stg_whatsapp_nps_rentas_tenant_pc": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"], "model.houm.stg_new_nps_automatic_landlord_6_meses": ["source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses"], "model.houm.stg_new_nps_automatic_tenant_6_meses": ["source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses"], "model.houm.stg_new_nps_rentals_propietary_poscontract": ["source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract"], "model.houm.stg_new_nps_rentals_24_horas_tenant": ["source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant"], "model.houm.stg_new_nps_visit_rental_visit_done": ["source.houm.airbyte_gspread.new_nps_visit_rental_visit_done"], "model.houm.stg_new_nps_visit_photo_done": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"], "model.houm.stg_new_nps_visit_sales_visit_done": ["source.houm.airbyte_gspread.new_nps_visit_sales_visit_done"], "model.houm.stg_new_nps_rentals_new_listing": ["source.houm.airbyte_gspread.new_nps_rentals_new_listing"], "model.houm.stg_new_nps_visit_cancel_visit": ["source.houm.airbyte_gspread.new_nps_visit_cancel_visit"], "model.houm.stg_new_nps_automatic_tenant_3_meses": ["source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses"], "model.houm.stg_new_nps_automatic_landlord_3_meses": ["source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses"], "model.houm.stg_activies": ["source.houm.pipedrive.activities"], "model.houm.stg_pipelines": ["source.houm.pipedrive.pipelines"], "model.houm.stg_bi_persons": ["source.houm.pipedrive.bi_persons"], "model.houm.stg_stages": ["source.houm.pipedrive.stages"], "model.houm.stg_bi_deals": ["source.houm.pipedrive.bi_deals"], "model.houm.stg_deals": ["source.houm.pipedrive.deals"], "model.houm.stg_scheduler_appraiserworkingmacrozone": ["source.houm.raw_stage.scheduler_appraiserworkingmacrozone"], "model.houm.stg_subscription_subscription": ["source.houm.raw_stage.subscription_subscription"], "model.houm.stg_demand_calls": ["source.houm.raw_stage.demand_calls"], "model.houm.stg_demand_portalhoum": ["source.houm.raw_stage.demand_portalhoum"], "model.houm.stg_scheduler_cancelreasontypes": ["source.houm.raw_stage.scheduler_cancelreasontypes"], "model.houm.stg_billing_adjustment": ["source.houm.raw_stage.billing_adjustment"], "model.houm.stg_payment_orders": ["source.houm.raw_stage.payment_orders"], "model.houm.stg_properties_associationamenities": ["source.houm.raw_stage.properties_associationamenities"], "model.houm.stg_scheduler_appraiseravailability": ["source.houm.raw_stage.scheduler_appraiseravailability"], "model.houm.stg_external_portal_integrations_publicationurl": ["source.houm.raw_stage.external_portal_integrations_publicationurl"], "model.houm.stg_contracts_scd": ["source.houm.historical.historical_contracts"], "model.houm.stg_contracts": ["source.houm.raw_stage.contracts"], "model.houm.stg_arriendoasegurado_rentfeedback": ["source.houm.raw_stage.arriendoasegurado_rentfeedback"], "model.houm.stg_demand_marketingapplicant": ["source.houm.raw_stage.demand_marketingapplicant"], "model.houm.stg_external_portal_integrations_publication": ["source.houm.raw_stage.external_portal_integrations_publication"], "model.houm.stg_arriendoasegurado_applicant": ["source.houm.raw_stage.arriendoasegurado_applicant"], "model.houm.stg_scheduler_schedules": ["source.houm.raw_stage.scheduler_schedules"], "model.houm.stg_external_portal_integrations_externalportals": ["source.houm.raw_stage.external_portal_integrations_externalportals"], "model.houm.stg_demand_portalapplicant": ["source.houm.raw_stage.demand_portalapplicant"], "model.houm.stg_external_portal_integrations_loadstatus": ["source.houm.raw_stage.external_portal_integrations_loadstatus"], "model.houm.stg_subscription_subscriptionevent": ["source.houm.raw_stage.subscription_subscriptionevent"], "model.houm.stg_users": ["source.houm.raw_stage.users"], "model.houm.stg_external_portal_integrations_country": ["source.houm.raw_stage.external_portal_integrations_country"], "model.houm.stg_real_estate_developments_units": ["source.houm.raw_stage.real_estate_developments_units"], "model.houm.stg_real_estate_developments_developmentdetails": ["source.houm.raw_stage.real_estate_developments_developmentdetails"], "model.houm.stg_scheduler_scheduletypes": ["source.houm.raw_stage.scheduler_scheduletypes"], "model.houm.stg_properties_location": ["source.houm.raw_stage.properties_location"], "model.houm.stg_scheduler_schedulehasapplicant": ["source.houm.raw_stage.scheduler_schedulehasapplicant"], "model.houm.stg_scheduler_macrozone": ["source.houm.raw_stage.scheduler_macrozone"], "model.houm.stg_external_portal_integrations_macrozoneportalplan": ["source.houm.raw_stage.external_portal_integrations_macrozoneportalplan"], "model.houm.stg_subscription_subscriptiondiscount": ["source.houm.raw_stage.subscription_subscriptiondiscount"], "model.houm.stg_demand_eventleadprofile": ["source.houm.raw_stage.demand_eventleadprofile"], "model.houm.stg_properties": ["source.houm.raw_stage.properties"], "model.houm.stg_demand_leadhasappraiser": ["source.houm.raw_stage.demand_leadhasappraiser"], "model.houm.stg_plans_cities": ["source.houm.raw_stage.plans_cities"], "model.houm.stg_real_estate_developments_unittypes": ["source.houm.raw_stage.real_estate_developments_unittypes"], "model.houm.stg_external_portal_integrations_publication_scd": ["source.houm.historical.historical_external_portal_integrations_publication"], "model.houm.stg_scheduler_scheduleevent": ["source.houm.raw_stage.scheduler_scheduleevent"], "model.houm.stg_demand_lead": ["source.houm.raw_stage.demand_lead"], "model.houm.stg_scheduler_applicanthasappraiser": ["source.houm.raw_stage.scheduler_applicanthasappraiser"], "model.houm.stg_external_portal_integrations_publicationtype": ["source.houm.raw_stage.external_portal_integrations_publicationtype"], "model.houm.stg_demand_eventleadhasappraiser": ["source.houm.raw_stage.demand_eventleadhasappraiser"], "model.houm.stg_arriendoasegurado_contractperson": ["source.houm.raw_stage.arriendoasegurado_contractperson"], "model.houm.stg_external_portal_integrations_portalplan": ["source.houm.raw_stage.external_portal_integrations_portalplan"], "model.houm.stg_contracts_codebtors": ["source.houm.raw_stage.contracts_codebtors"], "model.houm.stg_property_salesdetails": ["source.houm.raw_stage.properties_salesdetails"], "model.houm.stg_homecheckerdetails": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"], "model.houm.stg_arriendoasegurado_city": ["source.houm.raw_stage.arriendoasegurado_city"], "model.houm.stg_arriendoasegurado_planmonth": ["source.houm.raw_stage.arriendoasegurado_planmonth"], "model.houm.stg_scheduler_appraiserevent": ["source.houm.raw_stage.scheduler_appraiserevent"], "model.houm.stg_macrozone": ["source.houm.raw_stage.scheduler_macrozone"], "model.houm.stg_real_estate_developments_developments": ["source.houm.raw_stage.real_estate_developments_developments"], "model.houm.stg_scheduler_cancelreasons": ["source.houm.raw_stage.scheduler_cancelreasons"], "model.houm.stg_properties_inspectionreport": ["source.houm.raw_stage.properties_inspectionreport"], "model.houm.stg_plans": ["source.houm.raw_stage.plans"], "model.houm.stg_demand_whatsapp": ["source.houm.raw_stage.demand_whatsapp"], "model.houm.stg_properties_basicservice": ["source.houm.raw_stage.properties_basicservice"], "model.houm.stg_scheduler_appraisers": ["source.houm.raw_stage.scheduler_appraisers"], "model.houm.stg_arriendoasegurado_propertydetails": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_propertydetails": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_paid_media_google_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_gg"], "model.houm.stg_tmp_marketing_pipedrive_data": ["source.houm.airbyte_gspread.data"], "model.houm.stg_paid_media_facebook_campaigns": ["source.houm.airbyte_gspread.bb_fb"], "model.houm.stg_paid_media_google_campaigns_co_mx": ["source.houm.airbyte_gspread.gg_mxco"], "model.houm.stg_paid_media_ad_groups": ["source.houm.airbyte_gspread.anuncios"], "model.houm.stg_paid_media_facebook_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_fb"], "model.houm.stg_paid_media_google_campaigns_cl": ["source.houm.airbyte_gspread.gg_cl"], "model.houm.stg_external_properties_sales_colombia": ["source.houm.raw_stage.external_properties_sales_colombia"], "model.houm.stg_external_properties_sales_chile": ["source.houm.raw_stage.external_properties_sales_chile"], "model.houm.stg_external_properties_sales_mexico": ["source.houm.raw_stage.external_properties_sales_mexico"], "model.houm.stg_external_properties_rent_colombia": ["source.houm.raw_stage.external_properties_rent_colombia"], "model.houm.stg_external_properties_rent_chile": ["source.houm.raw_stage.external_properties_rent_chile"], "model.houm.stg_external_properties_rent_mexico": ["source.houm.raw_stage.external_properties_rent_mexico"], "model.houm.stg_rev_kpi_rented_properties": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_rev_houm_properties": ["source.houm.public.rev_houm_properties"], "model.houm.stg_rev_kpi_published_properties": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_kustomer_users": ["source.houm.kustomer.users"], "model.houm.stg_kustomer_messages": ["source.houm.kustomer.messages"], "model.houm.stg_kustomer_queues": ["source.houm.kustomer.queues"], "model.houm.stg_kustomer_tags": ["source.houm.kustomer.tags"], "model.houm.stg_kustomer_customers_active_users": ["source.houm.kustomer.customers"], "model.houm.stg_kustomer_customers_emails": ["source.houm.kustomer.customers"], "model.houm.stg_kustomer_customers_phones": ["source.houm.kustomer.customers"], "model.houm.stg_kustomer_customers": ["source.houm.kustomer.customers"], "model.houm.stg_kustomer_customers_locations": ["source.houm.kustomer.customers"], "model.houm.stg_kustomer_teams_members": ["source.houm.kustomer.teams"], "model.houm.stg_kustomer_teams_routing": ["source.houm.kustomer.teams_routing"], "model.houm.stg_kustomer_teams_routing_queues": ["source.houm.kustomer.teams_routing"], "model.houm.stg_kustomer_teams": ["source.houm.kustomer.teams"], "model.houm.stg_kustomer_conversations": ["source.houm.kustomer.conversations"], "model.houm.stg_kustomer_conversations_assigned_users": ["source.houm.kustomer.conversations"], "model.houm.stg_kustomer_conversations_tags": ["source.houm.kustomer.conversations"], "model.houm.stg_zendesk_metrics": ["source.houm.airbyte_zendesk.ticket_metrics"], "model.houm.stg_zendesk_tickets_audits_events": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_events"], "model.houm.stg_zendesk_users": ["source.houm.airbyte_zendesk.users"], "model.houm.stg_zendesk_tickets_audits_via": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via", "source.houm.airbyte_zendesk.ticket_audits_via_source", "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "source.houm.airbyte_zendesk.ticket_audits_via_source_to"], "model.houm.stg_zendesk_tickets_comments": ["source.houm.airbyte_zendesk.ticket_comments"], "model.houm.stg_zendesk_tickets_audits": ["source.houm.airbyte_zendesk.ticket_audits"], "model.houm.stg_zendesk_tickets": ["source.houm.airbyte_zendesk.tickets"], "model.houm.stg_property__rent_recommended_properties": [], "model.houm.stg_property__sale_recommended_properties": [], "model.houm.stg_property__recommended_new_properties": ["source.houm.raw_stage_analytics.property__recommended_new_properties"], "model.houm.stg_evaluations_scd": ["source.houm.historical.historical_evaluation"], "model.houm.stg_monthly_inflation_mx": ["source.houm.raw_stage.series_ipc_mx"], "model.houm.stg_monthly_inflation_co": ["source.houm.raw_stage.series_ipc_co"], "model.houm.stg_monthly_inflation_cl": ["source.houm.raw_stage.series_ipc_cl"], "model.houm.stg_economic_indicator_uf": ["source.houm.public.economic_indicator_uf"], "model.houm.stg_kustomer_logs": ["source.houm.comm_raw_stage.kustomer_logs"], "model.houm.stg_sendinblue_flow": ["source.houm.comm_raw_stage.sendinblue_flow"], "model.houm.stg_messagebird_flow": ["source.houm.comm_raw_stage.messagebird_flow"], "model.houm.stg_messagebird_flow_response_schema": ["source.houm.comm_raw_stage.messagebird_flow_response_schema"], "model.houm.stg_sendinblue_logs": ["source.houm.comm_raw_stage.sendinblue_logs"], "model.houm.stg_messagebird_logs": ["source.houm.comm_raw_stage.messagebird_logs"], "model.houm.stg_messagebird_flow_response_values": ["source.houm.comm_raw_stage.messagebird_flow_response_values"], "model.houm.stg_messagebird_dlq_flow_response_values": ["source.houm.comm_raw_stage.messagebird_dlq_flow_response_values"], "model.houm.stg_payments_cl_db_movements": ["source.houm.mongo_tables.payments_cl_db_movements"], "model.houm.stg_payments_mx_db_movements": ["source.houm.mongo_tables.payments_mx_db_movements"], "model.houm.stg_payments_co_db_movements": ["source.houm.mongo_tables.payments_co_db_movements"], "model.houm.stg_propertyduty_company": ["source.houm.mongo_tables.propertyduty_company"], "model.houm.stg_propertyduty_detail": ["source.houm.mongo_tables.propertyduty_detail"], "model.houm.stg_propertyduty_info": ["source.houm.mongo_tables.propertyduty_info"], "model.houm.stg_departments": ["source.houm.staging_buk.departments_chile", "source.houm.staging_buk.departments_colombia"], "model.houm.stg_payrolls": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_companies": ["source.houm.staging_buk.companies_chile", "source.houm.staging_buk.companies_colombia"], "model.houm.stg_accounting": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_jobs": ["source.houm.staging_buk.jobs_chile", "source.houm.staging_buk.jobs_colombia"], "model.houm.stg_areas": ["source.houm.staging_buk.areas_chile", "source.houm.staging_buk.areas_colombia"], "model.houm.stg_line_settlements": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"], "model.houm.stg_employees": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"], "model.houm.stg_roles": ["source.houm.staging_buk.roles_chile", "source.houm.staging_buk.roles_colombia"], "model.houm.proc_bid": ["model.houm.proc_negotiation", "model.houm.proc_properties_mz", "model.houm.stg_sales_bid"], "model.houm.proc_closure_subs": ["model.houm.dim_locations_houm", "model.houm.proc_closure_contracts", "model.houm.proc_closure_plans", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.stg_subscription_subscription", "model.houm.trans_macrozone_to_location"], "model.houm.proc_finance_plans": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"], "model.houm.proc_negotiation": ["model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.stg_sales_negotiation", "model.houm.stg_sales_property", "seed.houm.seed_test_email"], "model.houm.proc_closure_evaluation_has_a_contract": [], "model.houm.proc_closure_plans_taxes_region": ["model.houm.proc_properties", "model.houm.stg_plans", "model.houm.stg_subscription_subscription", "seed.houm.seed_plan_legacy_taxes"], "model.houm.proc_closure_plans": ["model.houm.stg_plans", "model.houm.stg_plans", "model.houm.stg_plans"], "model.houm.proc_closure_evaluations": ["model.houm.dim_locations_houm", "model.houm.proc_properties_mz", "model.houm.stg_evaluations_scd", "model.houm.stg_scheduler_macrozone", "model.houm.stg_users", "model.houm.stg_users", "model.houm.stg_users", "model.houm.trans_macrozone_to_location"], "model.houm.proc_negotiation_buyers": ["model.houm.dim_macrozones", "model.houm.proc_bid", "model.houm.proc_negotiation", "model.houm.proc_properties_mz", "model.houm.stg_property_salesdetails", "model.houm.stg_sales_bid_response", "model.houm.stg_sales_negotiation_user", "model.houm.stg_sales_negotiation_user", "model.houm.stg_sales_property", "model.houm.stg_sales_user", "model.houm.stg_sales_user", "model.houm.stg_scheduler_appraisers"], "model.houm.proc_closure_contracts": ["model.houm.stg_contracts"], "model.houm.proc_evaluation": ["model.houm.proc_properties_mz", "model.houm.stg_evaluations_scd"], "model.houm.proc_closure_contract_historical_status": ["model.houm.stg_contracts"], "model.houm.proc_movements_originals": ["model.houm.proc_movements"], "model.houm.proc_movements_mx": ["model.houm.stg_payments_mx_db_movements"], "model.houm.proc_movements_details": ["model.houm.proc_movements"], "model.houm.proc_movements_co": ["model.houm.stg_payments_co_db_movements"], "model.houm.proc_movements_cl": ["model.houm.stg_payments_cl_db_movements"], "model.houm.proc_movements": ["model.houm.proc_movements_cl", "model.houm.proc_movements_co", "model.houm.proc_movements_mx"], "model.houm.proc_pipedrive_leads": ["model.houm.dim_locations_houm", "model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_labels", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_pipelines", "model.houm.proc_pipedrive_stages", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.proc_pipedrive_pipelines": ["model.houm.stg_pipelines"], "model.houm.proc_kustomer_customers": ["model.houm.proc_kustomer_customers_emails", "model.houm.proc_kustomer_customers_phones", "model.houm.stg_kustomer_customers"], "model.houm.proc_pipedrive_persons": ["model.houm.proc_pipedrive_persons_emails", "model.houm.proc_pipedrive_persons_phones", "model.houm.stg_deals"], "model.houm.proc_pipedrive_cities": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_deals"], "model.houm.proc_kustomer_queues": ["model.houm.stg_kustomer_queues", "seed.houm.seed_kustomer_queues"], "model.houm.proc_kustomer_conversations": ["model.houm.proc_kustomer_customers", "model.houm.proc_kustomer_queues", "model.houm.stg_kustomer_conversations"], "model.houm.proc_pipedrive_persons_phones": ["model.houm.stg_deals"], "model.houm.proc_pipedrive_persons_emails": ["model.houm.stg_deals"], "model.houm.proc_pipedrive_deals": ["model.houm.stg_deals"], "model.houm.proc_pipedrive_labels": ["model.houm.proc_pipedrive_deals"], "model.houm.proc_kustomer_customers_emails": ["model.houm.stg_kustomer_customers_emails"], "model.houm.proc_pipedrive_stages": ["model.houm.stg_stages", "seed.houm.seed_unified_stages_pipedrive"], "model.houm.proc_kustomer_customers_phones": ["model.houm.stg_kustomer_customers_phones"], "model.houm.proc_core_cancelations": ["model.houm.proc_app_cancelations", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.proc_core_scheduler_schedules": ["model.houm.dim_locations_houm", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_macrozone", "model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.trans_macrozone_to_location"], "model.houm.proc_core_appraisers": ["model.houm.stg_scheduler_appraisers", "seed.houm.seed_test_email"], "model.houm.proc_core_users": ["model.houm.stg_users"], "model.houm.proc_app_cancelations": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_schedules"], "model.houm.proc_core_applicant": ["model.houm.proc_core_users", "model.houm.stg_arriendoasegurado_applicant"], "model.houm.proc_core_schedules": ["model.houm.dim_locations_houm", "model.houm.proc_core_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_macrozone", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.trans_macrozone_to_location"], "model.houm.proc_core_properties": ["model.houm.proc_properties_amenities", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics"], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.stg_zendesk_tickets_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.properties_hist_rentals_price": ["model.houm.stg_arriendoasegurado_propertydetails"], "model.houm.proc_properties_amenities": ["model.houm.stg_homecheckerdetails", "model.houm.stg_properties_associationamenities", "model.houm.stg_propertydetails"], "model.houm.proc_supply_seller_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_property_salesdetails": ["model.houm.stg_property_salesdetails"], "model.houm.proc_supply_unittypes": ["model.houm.proc_supply_projects", "model.houm.stg_real_estate_developments_unittypes"], "model.houm.proc_hist_prop_sales_status": ["model.houm.stg_property_salesdetails"], "model.houm.proc_properties_mz": ["model.houm.proc_macrozone", "model.houm.stg_propertydetails"], "model.houm.proc_hist_prop_business_rentals": ["model.houm.stg_properties"], "model.houm.proc_supply_schedules": ["model.houm.dim_locations_houm", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_macrozone", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.trans_macrozone_to_location"], "model.houm.proc_hist_properties_rentals_published": ["model.houm.proc_hist_prop_business_rentals", "model.houm.proc_hist_prop_rentals_status"], "model.houm.properties_rentals_prices_change": ["model.houm.properties_hist_rentals_price", "model.houm.properties_published"], "model.houm.proc_supply_landlord_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_supply_units": ["model.houm.proc_supply_unittypes", "model.houm.stg_real_estate_developments_units"], "model.houm.proc_hist_prop_business_sales": ["model.houm.stg_properties"], "model.houm.proc_propertydetails": ["model.houm.stg_propertydetails"], "model.houm.proc_new_properties": ["model.houm.proc_properties"], "model.houm.proc_hist_properties_sales_published": ["model.houm.proc_hist_prop_business_sales", "model.houm.proc_hist_prop_sales_status"], "model.houm.proc_hist_prop_rentals_status": ["model.houm.stg_arriendoasegurado_propertydetails"], "model.houm.proc_macrozone": ["model.houm.stg_arriendoasegurado_city", "model.houm.stg_scheduler_macrozone"], "model.houm.proc_properties": ["model.houm.stg_properties", "model.houm.stg_users"], "model.houm.properties_hist_sales_price": ["model.houm.stg_arriendoasegurado_propertydetails"], "model.houm.properties_sales_prices_change": ["model.houm.properties_hist_sales_price", "model.houm.properties_published"], "model.houm.proc_properties_characteristics": ["model.houm.dim_locations", "model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.stg_homecheckerdetails", "model.houm.stg_properties", "model.houm.stg_properties_associationamenities", "model.houm.stg_properties_location", "model.houm.stg_property_salesdetails", "model.houm.stg_propertydetails", "model.houm.stg_propertydetails"], "model.houm.proc_marketplace_published_properties": ["model.houm.dim_dates", "model.houm.dim_dates", "model.houm.dim_locations_houm", "model.houm.proc_core_properties", "model.houm.proc_hist_properties_rentals_published", "model.houm.proc_hist_properties_sales_published", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.proc_supply_projects": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.stg_real_estate_developments_developments"], "model.houm.proc_properties_business": ["model.houm.dim_uf_cl", "model.houm.proc_properties_mz", "model.houm.proc_properties_rev_suggested_prices", "model.houm.properties_published", "model.houm.stg_homecheckerdetails", "model.houm.stg_properties", "model.houm.stg_property_salesdetails", "model.houm.stg_propertydetails", "model.houm.stg_users", "model.houm.stg_users"], "model.houm.proc_external_portal_historical_publications": ["model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_publicationtype"], "model.houm.proc_properties_location": ["model.houm.stg_properties_location"], "model.houm.proc_external_properties_rent": ["model.houm.stg_economic_indicator_uf", "model.houm.stg_external_properties_rent_chile", "model.houm.stg_external_properties_rent_colombia", "model.houm.stg_external_properties_rent_mexico"], "model.houm.proc_external_properties_sales": ["model.houm.stg_economic_indicator_uf", "model.houm.stg_external_properties_sales_chile", "model.houm.stg_external_properties_sales_colombia", "model.houm.stg_external_properties_sales_mexico"], "model.houm.proc_rev_properties": ["model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.proc_properties_rev_suggested_prices": ["model.houm.stg_rev_houm_properties", "model.houm.stg_rev_houm_properties"], "model.houm.proc_rev_rental_last_months_properties": ["model.houm.proc_rev_rental_properties"], "model.houm.proc_rev_rental_published_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_rental_rented_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_rental_properties": ["model.houm.proc_rev_properties"], "model.houm.proc_rev_sales_properties": ["model.houm.proc_rev_properties"], "model.houm.proc_rev_sales_sold_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_rev_sales_last_months_properties": ["model.houm.proc_rev_sales_properties"], "model.houm.proc_rev_sales_published_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_marketing_paid_media": ["model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_marketing_paid_media_executions"], "model.houm.proc_marketing_paid_media_campaign": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_executions", "model.houm.trans_macrozone_to_location"], "model.houm.proc_googleads_campaign_ad_union": ["model.houm.stg_supermetrics_googleads_ad", "model.houm.stg_supermetrics_googleads_campaign"], "model.houm.proc_marketing_paid_media_executions": ["model.houm.proc_googleads_campaign_ad_union", "model.houm.stg_supermetrics_fbads_ad", "model.houm.stg_supermetrics_linkedinads_ad"], "model.houm.sales_local_revenue": [], "model.houm.rentals_units": [], "model.houm.eop_subs": [], "model.houm.sales_units": [], "model.houm.proc_nps_landlord_6_months": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_landlord_6_meses", "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "model.houm.proc_survey_details": ["seed.houm.seed_survey_details"], "model.houm.proc_nps_tenant_6_months": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_tenant_6_meses", "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses"], "model.houm.proc_ces_landlord_poscontract": ["model.houm.proc_communications", "model.houm.stg_new_nps_rentals_propietary_poscontract"], "model.houm.proc_ces_landlord": ["model.houm.proc_ces_landlord_poscontract", "model.houm.proc_survey_details"], "model.houm.proc_surveys_landlord": ["model.houm.proc_ces_landlord", "model.houm.proc_csat_landlord", "model.houm.proc_nps_landlord"], "model.houm.proc_nps_tenant_3_months": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_tenant_3_meses", "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses"], "model.houm.proc_nps_landlord_3_months": ["model.houm.proc_communications", "model.houm.stg_new_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"], "model.houm.proc_nps_landlord_new_listing": ["model.houm.proc_communications", "model.houm.stg_new_nps_rentals_new_listing", "model.houm.stg_survicate_nps_landlord_listing", "model.houm.stg_whatsapp_nps_rentas_new_listing"], "model.houm.proc_ces_tenant": ["model.houm.proc_ces_tenant_poscontract", "model.houm.proc_survey_details"], "model.houm.proc_nps_tenant_24_horas": ["model.houm.stg_survicate_nps_tenant_satisfaction_24hrs", "model.houm.stg_whatsapp_nps_automatic_tenant_24_horas"], "model.houm.proc_surveys_tenant": ["model.houm.proc_ces_tenant", "model.houm.proc_csat_tenant", "model.houm.proc_nps_tenant"], "model.houm.proc_csat_tenant": ["model.houm.proc_csat_tenant_visit_done", "model.houm.proc_survey_details"], "model.houm.proc_nps_landlord": ["model.houm.proc_nps_landlord_3_months", "model.houm.proc_nps_landlord_6_months", "model.houm.proc_nps_landlord_new_listing", "model.houm.proc_nps_landlord_photo", "model.houm.proc_nps_landlord_poscontract", "model.houm.proc_survey_details"], "model.houm.proc_nps_tenant": ["model.houm.proc_nps_tenant_24_horas", "model.houm.proc_nps_tenant_3_months", "model.houm.proc_nps_tenant_6_months", "model.houm.proc_nps_tenant_visit_cancel", "model.houm.proc_nps_tenant_visit_done", "model.houm.proc_survey_details"], "model.houm.proc_csat_landlord_photo": ["model.houm.proc_communications", "model.houm.proc_supply_schedules", "model.houm.stg_new_nps_visit_photo_done"], "model.houm.proc_nps_tenant_visit_cancel": ["model.houm.proc_communications", "model.houm.stg_new_nps_visit_cancel_visit", "model.houm.stg_whatsapp_nps_visits_cancelled"], "model.houm.proc_nps_landlord_poscontract": ["model.houm.stg_survicate_nps_landlord_new_sub", "model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "model.houm.proc_communications": ["model.houm.stg_messagebird_flow_response_schema", "model.houm.stg_messagebird_flow_response_values"], "model.houm.proc_csat_tenant_visit_done": ["model.houm.proc_communications", "model.houm.proc_demand_schedules", "model.houm.stg_new_nps_visit_rental_visit_done"], "model.houm.proc_nps_landlord_photo": ["model.houm.stg_survicate_nps_photo_done", "model.houm.stg_whatsapp_nps_photo"], "model.houm.proc_nps_tenant_visit_done": ["model.houm.stg_survicate_nps_visit_done", "model.houm.stg_whatsapp_nps_visits_done"], "model.houm.proc_ces_tenant_poscontract": ["model.houm.proc_communications"], "model.houm.proc_csat_landlord": ["model.houm.proc_csat_landlord_photo", "model.houm.proc_survey_details"], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.stg_monthly_inflation_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.stg_monthly_inflation_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.stg_monthly_inflation_cl"], "model.houm.proc_demand_schedules_timing": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_appraiserevent", "model.houm.proc_properties_mz", "model.houm.stg_propertydetails", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_macrozone", "model.houm.stg_scheduler_schedules", "model.houm.trans_macrozone_to_location", "seed.houm.seed_test_email"], "model.houm.proc_external_portal_leads_per_publication": ["model.houm.proc_properties", "model.houm.stg_demand_portalapplicant", "model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_publicationtype"], "model.houm.proc_demand_schedules": ["model.houm.dim_locations_houm", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_macrozone", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.trans_macrozone_to_location"], "model.houm.proc_demand_schedules_appraiserevent": ["model.houm.stg_scheduler_appraiserevent"], "model.houm.proc_first_cancelation": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_scheduleevent"], "model.houm.proc_demand_lead_activities": ["model.houm.dim_macrozones", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_whatsapp", "model.houm.proc_marketing_paid_media_campaign"], "model.houm.proc_demand_whatsapp": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_whatsapp", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.proc_others_cancelations": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_schedules"], "model.houm.proc_demand_portalapplicant": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_properties", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalapplicant", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.proc_demand_marketingapplicant": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_campaign", "model.houm.stg_demand_lead", "model.houm.stg_demand_marketingapplicant", "model.houm.trans_macrozone_to_location"], "model.houm.proc_demand_sales_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_demand_reservations": ["model.houm.dim_locations_houm", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_payments_cl_db_movements", "model.houm.stg_payments_co_db_movements", "model.houm.stg_payments_mx_db_movements", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.proc_demand_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.stg_demand_portalhoum"], "model.houm.proc_demand_portalhoum": ["model.houm.dim_locations_houm", "model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalhoum", "model.houm.stg_scheduler_macrozone", "model.houm.trans_macrozone_to_location"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "snapshot.houm.stg_macrozoneportalplan_snapshot": ["model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_macrozoneportalplan", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publicationtype"], "test.houm.assert_properties_rent_prices_chile": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "seed.houm.seed_plan_legacy_details": [], "seed.houm.seed_propiedades_axion": [], "seed.houm.seed_plan_legacy_taxes": [], "seed.houm.seed_metrics_order": [], "seed.houm.seed_test_email": [], "seed.houm.seed_movements_methods": [], "seed.houm.seed_kustomer_queues": [], "seed.houm.seed_dim_locations_houm_traduccion_1": [], "seed.houm.seed_unified_stages_pipedrive": [], "seed.houm.seed_dim_locations_houm": [], "seed.houm.seed_metrics": [], "seed.houm.country-codes": [], "seed.houm.seed_survey_details": [], "seed.houm.seed_dim_dates": [], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "operation.houm.houm-on-run-end-22": [], "operation.houm.houm-on-run-end-23": [], "operation.houm.houm-on-run-end-24": [], "operation.houm.houm-on-run-end-25": [], "operation.houm.houm-on-run-end-26": [], "operation.houm.houm-on-run-end-27": [], "operation.houm.houm-on-run-end-28": [], "operation.houm.houm-on-run-end-29": [], "operation.houm.houm-on-run-end-30": [], "operation.houm.houm-on-run-end-31": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": ["model.houm.properties_published"], "test.houm.not_null_properties_published_property_id.cfd67d7b86": ["model.houm.properties_published"], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": ["model.houm.dim_macrozones"], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": ["model.houm.dim_macrozones"], "test.houm.unique_stg_properties_id.c012ce6a29": ["model.houm.stg_properties"], "test.houm.not_null_stg_properties_id.d43465ee9b": ["model.houm.stg_properties"], "test.houm.unique_stg_propertydetails_property_id.3d72328240": ["model.houm.stg_propertydetails"], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": ["model.houm.stg_propertydetails"], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": ["model.houm.stg_property_salesdetails"], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": ["model.houm.stg_property_salesdetails"], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": ["model.houm.stg_employees"], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": ["model.houm.stg_employees"], "test.houm.unique_stg_zendesk_users_id.e79d686872": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": ["model.houm.stg_zendesk_users"], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "source.houm.public.dim_polygons": [], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.public.rev_houm_properties": [], "source.houm.public.economic_indicator_uf": [], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": [], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": [], "source.houm.historical.historical_plans": [], "source.houm.historical.historical_external_portal_integrations_publication": [], "source.houm.historical.historical_evaluation": [], "source.houm.raw_stage.series_ipc_cl": [], "source.houm.raw_stage.series_ipc_mx": [], "source.houm.raw_stage.series_ipc_co": [], "source.houm.raw_stage.properties": [], "source.houm.raw_stage.properties_salesdetails": [], "source.houm.raw_stage.properties_location": [], "source.houm.raw_stage.properties_associationamenities": [], "source.houm.raw_stage.properties_inspectionreport": [], "source.houm.raw_stage.properties_basicservice": [], "source.houm.raw_stage.arriendoasegurado_propertydetails": [], "source.houm.raw_stage.arriendoasegurado_city": [], "source.houm.raw_stage.arriendoasegurado_applicant": [], "source.houm.raw_stage.arriendoasegurado_contractperson": [], "source.houm.raw_stage.arriendoasegurado_planmonth": [], "source.houm.raw_stage.arriendoasegurado_rentfeedback": [], "source.houm.raw_stage.users": [], "source.houm.raw_stage.subscription_subscription": [], "source.houm.raw_stage.real_estate_developments_developments": [], "source.houm.raw_stage.real_estate_developments_developmentdetails": [], "source.houm.raw_stage.real_estate_developments_unittypes": [], "source.houm.raw_stage.real_estate_developments_units": [], "source.houm.raw_stage.demand_lead": [], "source.houm.raw_stage.demand_portalhoum": [], "source.houm.raw_stage.demand_portalapplicant": [], "source.houm.raw_stage.demand_marketingapplicant": [], "source.houm.raw_stage.demand_whatsapp": [], "source.houm.raw_stage.demand_calls": [], "source.houm.raw_stage.demand_eventleadhasappraiser": [], "source.houm.raw_stage.demand_leadhasappraiser": [], "source.houm.raw_stage.demand_eventleadprofile": [], "source.houm.raw_stage.scheduler_schedules": [], "source.houm.raw_stage.scheduler_scheduletypes": [], "source.houm.raw_stage.scheduler_appraisers": [], "source.houm.raw_stage.scheduler_schedulehasapplicant": [], "source.houm.raw_stage.scheduler_applicanthasappraiser": [], "source.houm.raw_stage.scheduler_appraiseravailability": [], "source.houm.raw_stage.scheduler_appraiserevent": [], "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": [], "source.houm.raw_stage.scheduler_cancelreasons": [], "source.houm.raw_stage.scheduler_cancelreasontypes": [], "source.houm.raw_stage.scheduler_macrozone": [], "source.houm.raw_stage.scheduler_scheduleevent": [], "source.houm.raw_stage.subscription_subscriptiondiscount": [], "source.houm.raw_stage.subscription_subscriptionevent": [], "source.houm.raw_stage.bid": [], "source.houm.raw_stage.negotiation": [], "source.houm.raw_stage.identification": [], "source.houm.raw_stage.identification_type": [], "source.houm.raw_stage.contracts_codebtors": [], "source.houm.raw_stage.plans_cities": [], "source.houm.raw_stage.billing_adjustment": [], "source.houm.raw_stage.payment_orders": [], "source.houm.raw_stage.plans": [], "source.houm.raw_stage.contracts": [], "source.houm.raw_stage.external_portal_integrations_country": [], "source.houm.raw_stage.external_portal_integrations_publication": [], "source.houm.raw_stage.external_portal_integrations_publicationtype": [], "source.houm.raw_stage.external_portal_integrations_portalplan": [], "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": [], "source.houm.raw_stage.external_portal_integrations_loadstatus": [], "source.houm.raw_stage.external_portal_integrations_externalportals": [], "source.houm.raw_stage.external_portal_integrations_publicationurl": [], "source.houm.raw_stage.external_properties_rent_chile": [], "source.houm.raw_stage.external_properties_rent_colombia": [], "source.houm.raw_stage.external_properties_rent_mexico": [], "source.houm.raw_stage.external_properties_sales_chile": [], "source.houm.raw_stage.external_properties_sales_colombia": [], "source.houm.raw_stage.external_properties_sales_mexico": [], "source.houm.staging_buk.employees_chile": [], "source.houm.staging_buk.employees_colombia": [], "source.houm.staging_buk.roles_chile": [], "source.houm.staging_buk.roles_colombia": [], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": [], "source.houm.staging_buk.areas_colombia": [], "source.houm.staging_buk.companies_chile": [], "source.houm.staging_buk.companies_colombia": [], "source.houm.staging_buk.departments_chile": [], "source.houm.staging_buk.departments_colombia": [], "source.houm.staging_buk.jobs_chile": [], "source.houm.staging_buk.jobs_colombia": [], "source.houm.staging_buk.payrolls_chile": [], "source.houm.staging_buk.payrolls_colombia": [], "source.houm.staging_buk.line_settlements_chile": [], "source.houm.staging_buk.line_settlements_colombia": [], "source.houm.airbyte_zendesk.users": [], "source.houm.airbyte_zendesk.tickets": [], "source.houm.airbyte_zendesk.ticket_audits": [], "source.houm.airbyte_zendesk.ticket_audits_events": [], "source.houm.airbyte_zendesk.ticket_audits_via": [], "source.houm.airbyte_zendesk.ticket_audits_via_source": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": [], "source.houm.airbyte_zendesk.ticket_metrics": [], "source.houm.airbyte_zendesk.ticket_comments": [], "source.houm.pipedrive.activities": [], "source.houm.pipedrive.deals": [], "source.houm.pipedrive.pipelines": [], "source.houm.pipedrive.stages": [], "source.houm.pipedrive.bi_persons": [], "source.houm.pipedrive.bi_deals": [], "source.houm.mongo_tables.payments_cl_db_movements": [], "source.houm.mongo_tables.payments_co_db_movements": [], "source.houm.mongo_tables.payments_mx_db_movements": [], "source.houm.mongo_tables.propertyduty_info": [], "source.houm.mongo_tables.propertyduty_detail": [], "source.houm.mongo_tables.propertyduty_company": [], "source.houm.airbyte_gspread.bb_fb": [], "source.houm.airbyte_gspread.gg_cl": [], "source.houm.airbyte_gspread.gg_mxco": [], "source.houm.airbyte_gspread.campaign_keys_fb": [], "source.houm.airbyte_gspread.campaign_keys_gg": [], "source.houm.airbyte_gspread.data": [], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": [], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": [], "source.houm.airbyte_gspread.nps_cancel_visit": [], "source.houm.airbyte_gspread.nps_chile_foto": [], "source.houm.airbyte_gspread.nps_chile_renta": [], "source.houm.airbyte_gspread.nps_chile_sales": [], "source.houm.airbyte_gspread.nps_colombia_foto": [], "source.houm.airbyte_gspread.nps_colombia_renta": [], "source.houm.airbyte_gspread.nps_colombia_sales": [], "source.houm.airbyte_gspread.nps_mexico_foto": [], "source.houm.airbyte_gspread.nps_mexico_renta": [], "source.houm.airbyte_gspread.nps_mexico_sales": [], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": [], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": [], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": [], "source.houm.airbyte_gspread.nps_sales_promesa_seller": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": [], "source.houm.airbyte_gspread.anuncios": [], "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": [], "source.houm.airbyte_gspread.new_nps_rentals_new_listing": [], "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": [], "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": [], "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": [], "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": [], "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": [], "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": [], "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": [], "source.houm.airbyte_gspread.new_nps_visit_photo_done": [], "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": [], "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": [], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": [], "source.houm.survicate.nps_landlord_listing": [], "source.houm.survicate.nps_landlord_new_sub": [], "source.houm.survicate.nps_tennant_new_sub": [], "source.houm.survicate.photo_done": [], "source.houm.survicate.nps_tenant_satisfaction_24hrs": [], "source.houm.survicate.nps_visit_done": [], "source.houm.survicate.nps_sac_surveys": [], "source.houm.survicate.nps_sac_answers": [], "source.houm.survicate.nps_admin_surveys": [], "source.houm.survicate.nps_admin_answers": [], "source.houm.supermetrics.googleads_conversion": [], "source.houm.supermetrics.googleads_campaign": [], "source.houm.supermetrics.googleads_ad": [], "source.houm.supermetrics.fbads_campaign": [], "source.houm.supermetrics.fbads_ad": [], "source.houm.supermetrics.fbads_geo": [], "source.houm.supermetrics.fbads_conversion": [], "source.houm.supermetrics.fbads_age_gender": [], "source.houm.supermetrics.fbads_video": [], "source.houm.supermetrics.linkedinads_ad": [], "source.houm.supermetrics.linkedinads_campaign": [], "source.houm.raw_stage_analytics.property__rent_recommended_properties": [], "source.houm.raw_stage_analytics.property__sale_recommended_properties": [], "source.houm.raw_stage_analytics.property__recommended_new_properties": [], "source.houm.bidding_app.bid": [], "source.houm.bidding_app.bid_response": [], "source.houm.bidding_app.negotiation": [], "source.houm.bidding_app.negotiation_user": [], "source.houm.bidding_app.identification": [], "source.houm.bidding_app.identification_type": [], "source.houm.bidding_app.property": [], "source.houm.bidding_app.user": [], "source.houm.scraped_data_ops.scraped_properties_melico": [], "source.houm.scraped_data_ops.scraped_properties_fincaraiz": [], "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": [], "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": [], "source.houm.scraped_data_ops.scraped_properties_segundamano": [], "source.houm.scraped_data_ops.scraped_properties_melimx": [], "source.houm.scraped_data_ops.scraped_properties_yapo": [], "source.houm.kustomer.conversations": [], "source.houm.kustomer.customers": [], "source.houm.kustomer.messages": [], "source.houm.kustomer.tags": [], "source.houm.kustomer.users": [], "source.houm.kustomer.teams": [], "source.houm.kustomer.queues": [], "source.houm.kustomer.teams_routing": [], "source.houm.comm_raw_stage.messagebird_flow": [], "source.houm.comm_raw_stage.messagebird_logs": [], "source.houm.comm_raw_stage.messagebird_flow_response_schema": [], "source.houm.comm_raw_stage.messagebird_flow_response_values": [], "source.houm.comm_raw_stage.messagebird_dlq_flow_response_values": [], "source.houm.comm_raw_stage.sendinblue_flow": [], "source.houm.comm_raw_stage.sendinblue_logs": [], "source.houm.comm_raw_stage.kustomer_logs": []}, "child_map": {"model.houm.property__recommended_new_properties": [], "model.houm.property__sale_recommended_properties": [], "model.houm.property__rent_recommended_properties": [], "model.houm.property__rev_kpi_recommendation_performance": [], "model.houm.goals_current": [], "model.houm.cum_rentals_units": ["model.houm.goals_current"], "model.houm.cum_sales_units": ["model.houm.goals_current"], "model.houm.cum_sales_local_revenue": ["model.houm.goals_current"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_renewal_subs": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_republished_subs": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_new_subs_brokerage": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_funnel"], "model.houm.sales_company_metric_new_units_listing": ["model.houm.sales_company_funnel"], "model.houm.sales_company_metric_new_unittypes_listing": ["model.houm.sales_company_funnel"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_funnel"], "model.houm.sales_company_metric_new_project_listing": ["model.houm.sales_company_funnel"], "model.houm.properties_published": ["model.houm.proc_properties_business", "model.houm.properties_rentals_prices_change", "model.houm.properties_sales_prices_change", "test.houm.not_null_properties_published_property_id.cfd67d7b86", "test.houm.unique_properties_published_property_id.3fc869c6e4"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_subs": ["model.houm.rental_landlord_funnel"], "model.houm.property_finder_rentals": [], "model.houm.property_finder_sales": [], "model.houm.rental_landlord_metric_new_subs": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_new_subs_non_brokerage": ["model.houm.rental_landlord_funnel"], "model.houm.temp_rental_tenant_metric_leads": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads"], "model.houm.temp_rental_tenant_metric_reservations": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done"], "model.houm.temp_rental_tenant_metric_paid_media_cost": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done"], "model.houm.temp_rental_tenant_metric_schedules_done": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled"], "model.houm.temp_rental_landlord_metric_leads_qualified_date": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_new_tenant": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation"], "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done": ["model.houm.metrics"], "model.houm.metrics": [], "model.houm.temp_rental_tenant_metric_new_subs": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs"], "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_photo_done": ["model.houm.metrics", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled"], "model.houm.temp_rental_tenant_metric_reservations_effective": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation"], "model.houm.metrics_order": ["model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled", "model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "model.houm.temp_rental_tenant_metric_reservations_refunded", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled", "model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "model.houm.temp_rental_tenant_metric_total_eval", "model.houm.temp_sales_seller_metric_properties_stock"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_photo_scheduled": ["model.houm.metrics", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled"], "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_approved_eval": ["model.houm.metrics"], "model.houm.metrics_name": ["model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_ratio_done_scheduled", "model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_new_subs", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads", "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total", "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done", "model.houm.temp_rental_tenant_metric_reservations_refunded", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled", "model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done", "model.houm.temp_rental_tenant_metric_subs_ratio_new_tenat_effective_reservation", "model.houm.temp_rental_tenant_metric_total_eval", "model.houm.temp_sales_seller_metric_properties_stock"], "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled": ["model.houm.metrics"], "model.houm.temp_sales_seller_metric_properties_stock": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_reservations_ratio_effective_total": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_leads": ["model.houm.metrics", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads"], "model.houm.temp_rental_tenant_metric_reservations_refunded": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_reservations_ratio_total_visit_done": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_schedules_second_done": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_total_eval": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_unique_leads": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_ongoing_eval": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_rejected_eval": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_leads_qualified": ["model.houm.metrics", "model.houm.temp_rental_landlord_metric_leads_ratio_qualified_leads"], "model.houm.trans_macrozone_to_location": ["model.houm.proc_closure_evaluations", "model.houm.proc_closure_subs", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_marketplace_published_properties", "model.houm.proc_pipedrive_leads", "model.houm.proc_supply_schedules"], "model.houm.temp_rental_tenant_metric_schedules_scheduled": ["model.houm.metrics", "model.houm.temp_rental_tenant_metric_schedules_ratio_done_scheduled"], "model.houm.temp_rental_tenant_metric_lost_eval": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_schedules_third_done": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_photo_created": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_leads_interactions": ["model.houm.metrics"], "model.houm.temp_rental_landlord_metric_properties_stock": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_schedules_first_done": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_schedules_created": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_mkt_ratio_pmc_visit_done": ["model.houm.metrics"], "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants": ["model.houm.metrics"], "model.houm.sales_investor_metric_leads_qualified_date": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_cancelled": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_buyer_metric_leads_qualified": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_total_evaluations": [], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_correct_visit_done": ["model.houm.rental_real_time_ops_funnel_timing", "model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_leads_qualified_date": ["model.houm.sales_buyer_funnel"], "model.houm.sales_demand_metric_paid_media_cost": ["model.houm.sales_buyer_funnel", "model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_organic": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_metric_lost_eval": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_first_done": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_portal_leads_interactions_markethoum": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_correct_visit_finished": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_second_done": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_bid_realized": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_schedules_third_done": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_bid_without_response": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_generated_links": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants": ["model.houm.rental_tenant_funnel"], "model.houm.sales_demand_metric_leads": ["model.houm.sales_buyer_funnel", "model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_admin": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_buyer_metric_leads": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_rejected_eval": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_first_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_schedules_third_done": ["model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_leads": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_unfinished": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_buyer_metric_bid_rejected": ["model.houm.sales_buyer_funnel"], "model.houm.sales_investor_metric_schedules_created": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_paid_media_cost": ["model.houm.sales_investor_funnel"], "model.houm.sales_investor_metric_schedules_done": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_approved_eval": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_done_time": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.rental_tenant_metric_arrived_on_time": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.rental_tenant_metric_total_eval": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_bid_accepted": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_correct_visit_done": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_bid_with_counter_bid": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_leads_qualified": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_ongoing_eval": ["model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_schedules_scheduled": ["model.houm.sales_investor_funnel"], "model.houm.sales_buyer_metric_schedules_second_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_schedules_cancelled_at": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_funnel": [], "model.houm.rental_real_time_ops_funnel": [], "model.houm.rental_landlord_funnel": [], "model.houm.rental_real_time_ops_funnel_timing": [], "model.houm.sales_buyer_funnel": [], "model.houm.sales_company_funnel": [], "model.houm.sales_seller_funnel": [], "model.houm.sales_investor_funnel": [], "model.houm.dim_currency": [], "model.houm.dim_properties": [], "model.houm.dim_macrozones": ["model.houm.proc_demand_lead_activities", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_negotiation", "model.houm.proc_negotiation_buyers", "model.houm.proc_properties_characteristics", "model.houm.property_finder_rentals", "model.houm.property_finder_sales", "model.houm.rental_landlord_funnel", "model.houm.rental_real_time_ops_funnel", "model.houm.rental_real_time_ops_funnel_timing", "model.houm.rental_tenant_funnel", "model.houm.sales_buyer_funnel", "model.houm.sales_company_funnel", "model.houm.sales_investor_funnel", "model.houm.sales_seller_funnel", "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "test.houm.unique_dim_macrozones_macrozone.99a7937a3d"], "model.houm.dim_locations_houm": ["model.houm.dim_base_metrics", "model.houm.proc_closure_evaluations", "model.houm.proc_closure_subs", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_marketplace_published_properties", "model.houm.proc_pipedrive_leads", "model.houm.proc_supply_schedules"], "model.houm.dim_ipc": [], "model.houm.dim_base_metrics": ["model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_scheduled", "model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_new_tenant", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_paid_media_cost", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_refunded", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done", "model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done", "model.houm.temp_rental_tenant_metric_total_eval", "model.houm.temp_sales_seller_metric_properties_stock"], "model.houm.dim_cities": [], "model.houm.dim_dates": ["model.houm.dim_base_metrics", "model.houm.dim_uf_cl", "model.houm.proc_marketplace_published_properties", "model.houm.proc_marketplace_published_properties"], "model.houm.dim_uf_cl": ["model.houm.proc_properties_business"], "model.houm.dim_locations": ["model.houm.proc_properties_characteristics"], "model.houm.dim_portafolio_purchase": [], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.rental_landlord_metric_paid_media_cost"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.sales_seller_metric_leads_qualified_date"], "model.houm.rental_landlord_metric_details_new_subs": ["model.houm.rental_landlord_metric_new_subs"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.sales_seller_metric_paid_media_cost"], "model.houm.rental_landlord_metric_details_republished_subs": ["model.houm.rental_landlord_metric_republished_subs"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.sales_seller_metric_new_sale_listing"], "model.houm.sales_company_metric_details_new_units_listing": ["model.houm.sales_company_metric_new_units_listing"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.sales_seller_metric_photo_done"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.rental_landlord_metric_photo_done"], "model.houm.sales_company_metric_details_new_unittypes_listing": ["model.houm.sales_company_metric_new_unittypes_listing"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.rental_landlord_metric_leads_qualified"], "model.houm.rental_landlord_metric_details_new_subs_brokerage": ["model.houm.rental_landlord_metric_new_subs_brokerage"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.sales_seller_metric_leads_qualified"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.rental_landlord_metric_new_rental_listing"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.sales_seller_metric_photo_scheduled"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.rental_landlord_metric_photo_scheduled"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.sales_seller_metric_photo_created"], "model.houm.rental_landlord_metric_details_renewal_subs": ["model.houm.rental_landlord_metric_renewal_subs"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.sales_seller_metric_new_sale_listing_b2c"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.rental_landlord_metric_photo_created"], "model.houm.sales_seller_metric_details_leads": ["model.houm.sales_seller_metric_leads"], "model.houm.rental_landlord_metric_details_new_subs_non_brokerage": ["model.houm.rental_landlord_metric_new_subs_non_brokerage"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.rental_landlord_metric_leads_qualified_date"], "model.houm.rental_landlord_metric_details_subs": ["model.houm.rental_landlord_metric_subs"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.rental_landlord_metric_leads"], "model.houm.sales_company_metric_details_new_project_listing": ["model.houm.sales_company_metric_new_project_listing"], "model.houm.fact_daily_virtual_uf_cl": [], "model.houm.fact_daily_virtual_uf_co": [], "model.houm.fact_daily_virtual_uf_mx": [], "model.houm.sales_investor_metric_details_paid_media_cost": ["model.houm.sales_investor_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_bid_with_counter_bid": ["model.houm.sales_buyer_metric_bid_with_counter_bid"], "model.houm.rental_tenant_metric_details_rejected_eval": ["model.houm.rental_tenant_metric_rejected_eval"], "model.houm.rental_tenant_metric_details_schedules_unfinished": ["model.houm.rental_tenant_metric_schedules_unfinished"], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.rental_tenant_metric_reservations_refunded"], "model.houm.rental_tenant_metric_details_lost_eval": ["model.houm.rental_tenant_metric_lost_eval"], "model.houm.rental_tenant_metric_details_schedules_second_done": ["model.houm.rental_tenant_metric_schedules_second_done"], "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": ["model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled"], "model.houm.rental_tenant_metric_details_ongoing_eval": ["model.houm.rental_tenant_metric_ongoing_eval"], "model.houm.sales_buyer_metric_details_bid_rejected": ["model.houm.sales_buyer_metric_bid_rejected"], "model.houm.sales_demand_metric_details_leads": ["model.houm.sales_demand_metric_leads"], "model.houm.rental_tenant_metric_details_correct_visit_done": ["model.houm.rental_tenant_metric_correct_visit_done"], "model.houm.rental_tenant_metric_details_correct_visit_finished": ["model.houm.rental_tenant_metric_correct_visit_finished"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.rental_tenant_metric_schedules_scheduled"], "model.houm.sales_investor_metric_details_schedules_created": ["model.houm.sales_investor_metric_schedules_created"], "model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants": ["model.houm.rental_tenant_metric_portal_leads_interactions_portalapplicants"], "model.houm.rental_tenant_metric_details_leads_interactions_markethoum": ["model.houm.rental_tenant_metric_portal_leads_interactions_markethoum"], "model.houm.rental_tenant_metric_details_arrived_on_time": ["model.houm.rental_tenant_metric_arrived_on_time"], "model.houm.rental_tenant_metric_details_total_eval": ["model.houm.rental_tenant_metric_total_eval", "model.houm.rental_tenant_metric_total_evaluations"], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.rental_tenant_metric_schedules_done"], "model.houm.sales_investor_metric_details_leads_qualified": ["model.houm.sales_investor_metric_leads_qualified"], "model.houm.sales_buyer_metric_details_bid_accepted": ["model.houm.sales_buyer_metric_bid_accepted"], "model.houm.sales_investor_metric_details_schedules_scheduled": ["model.houm.sales_investor_metric_schedules_scheduled"], "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": ["model.houm.rental_tenant_metric_schedules_scheduled_organic"], "model.houm.sales_buyer_metric_details_correct_visit_done": ["model.houm.sales_buyer_metric_correct_visit_done"], "model.houm.sales_investor_metric_details_leads": ["model.houm.sales_investor_metric_leads"], "model.houm.rental_tenant_metric_details_schedules_cancelled_at": ["model.houm.rental_tenant_metric_schedules_cancelled_at"], "model.houm.sales_buyer_metric_details_schedules_first_done": ["model.houm.sales_buyer_metric_schedules_first_done"], "model.houm.sales_buyer_metric_details_generated_links": ["model.houm.sales_buyer_metric_generated_links"], "model.houm.rental_tenant_metric_details_leads_interactions_whatsapp": ["model.houm.rental_tenant_metric_portal_leads_interactions_whatsapp"], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.rental_tenant_metric_reservations_effective"], "model.houm.sales_buyer_metric_details_bid_realized": ["model.houm.sales_buyer_metric_bid_realized"], "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": ["model.houm.rental_tenant_metric_schedules_scheduled_admin"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.sales_buyer_metric_schedules_scheduled"], "model.houm.rental_tenant_metric_details_done_time": ["model.houm.rental_tenant_metric_done_time"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.rental_tenant_metric_portal_leads"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.rental_tenant_metric_new_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.rental_tenant_metric_reservations"], "model.houm.sales_buyer_metric_details_leads_qualified": ["model.houm.sales_buyer_metric_leads_qualified"], "model.houm.rental_tenant_metric_details_schedules_first_done": ["model.houm.rental_tenant_metric_schedules_first_done"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.sales_buyer_metric_schedules_created"], "model.houm.rental_tenant_metric_details_schedules_cancelled": ["model.houm.rental_tenant_metric_schedules_cancelled"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.rental_tenant_metric_schedules_created"], "model.houm.sales_buyer_metric_details_schedules_second_done": ["model.houm.sales_buyer_metric_schedules_second_done"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.rental_tenant_metric_portal_leads_interactions"], "model.houm.sales_investor_metric_details_schedules_done": ["model.houm.sales_investor_metric_schedules_done"], "model.houm.sales_buyer_metric_details_leads": ["model.houm.sales_buyer_metric_leads"], "model.houm.sales_buyer_metric_details_schedules_third_done": ["model.houm.sales_buyer_metric_schedules_third_done"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.rental_tenant_metric_new_tenant"], "model.houm.sales_buyer_metric_details_bid_without_response": ["model.houm.sales_buyer_metric_bid_without_response"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.rental_tenant_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.sales_buyer_metric_paid_media_cost"], "model.houm.rental_tenant_metric_details_schedules_third_done": ["model.houm.rental_tenant_metric_schedules_third_done"], "model.houm.rental_tenant_metric_details_approved_eval": ["model.houm.rental_tenant_metric_approved_eval"], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.sales_buyer_metric_schedules_done"], "model.houm.sales_investor_metric_details_leads_qualified_date": ["model.houm.sales_investor_metric_leads_qualified_date"], "model.houm.sales_demand_metric_details_paid_media_cost": ["model.houm.sales_demand_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_leads_qualified_date": ["model.houm.sales_buyer_metric_leads_qualified_date"], "model.houm.property__published_properties_rev_suggested_prices": ["model.houm.property__rev_ratio_country_city"], "model.houm.property__external_properties_rent": [], "model.houm.property__houm_properties": [], "model.houm.property__rev_ratio_country_city": [], "model.houm.property__published_properties": ["model.houm.property__published_properties_rev_suggested_prices", "model.houm.property__rent_recommended_properties", "model.houm.property__rev_ratio_country_city", "model.houm.property__sale_recommended_properties"], "model.houm.property__rev_kpi_ratio": ["model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance"], "model.houm.property__external_properties_sales": [], "model.houm.property__published_new_properties": [], "model.houm.stg_survicate_nps_sac_surveys": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_sac_bi_executives": [], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": ["model.houm.proc_nps_tenant_24_horas"], "model.houm.stg_survicate_nps_admin_surveys": ["model.houm.stg_survicate_nps_admin_executives"], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["model.houm.proc_nps_landlord_6_months"], "model.houm.stg_survicate_nps_admin_executives": [], "model.houm.stg_survicate_nps_visit_done": ["model.houm.proc_nps_tenant_visit_done"], "model.houm.stg_survicate_nps_admin_answers": ["model.houm.stg_survicate_nps_admin_executives"], "model.houm.stg_survicate_nps_sac_executives": ["model.houm.stg_survicate_nps_sac_bi_executives"], "model.houm.stg_survicate_nps_sac_answers": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_landlord_listing": ["model.houm.proc_nps_landlord_new_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": ["model.houm.proc_nps_landlord_poscontract"], "model.houm.stg_survicate_nps_photo_done": ["model.houm.proc_nps_landlord_photo"], "model.houm.stg_survicate_nps_tenant_new_sub": [], "model.houm.stg_supermetrics_fbads_video": [], "model.houm.stg_supermetrics_fbads_geo": [], "model.houm.stg_supermetrics_googleads_campaign": ["model.houm.proc_googleads_campaign_ad_union"], "model.houm.stg_supermetrics_fbads_conversion": [], "model.houm.stg_supermetrics_googleads_ad": ["model.houm.proc_googleads_campaign_ad_union"], "model.houm.stg_supermetrics_linkedinads_ad": ["model.houm.proc_marketing_paid_media_executions"], "model.houm.stg_supermetrics_fbads_campaign": [], "model.houm.stg_supermetrics_linkedinads_campaign": [], "model.houm.stg_supermetrics_googleads_conversion": [], "model.houm.stg_supermetrics_fbads_age_gender": [], "model.houm.stg_supermetrics_fbads_ad": ["model.houm.proc_marketing_paid_media_executions"], "model.houm.stg_sales_negotiation": ["model.houm.proc_negotiation"], "model.houm.stg_sales_negotiation_user": ["model.houm.proc_negotiation_buyers", "model.houm.proc_negotiation_buyers"], "model.houm.stg_sales_bid": ["model.houm.proc_bid"], "model.houm.stg_sales_identification": [], "model.houm.stg_sales_property": ["model.houm.proc_negotiation", "model.houm.proc_negotiation_buyers"], "model.houm.stg_sales_bid_response": ["model.houm.proc_negotiation_buyers"], "model.houm.stg_sales_identification_type": [], "model.houm.stg_sales_user": ["model.houm.proc_negotiation_buyers", "model.houm.proc_negotiation_buyers"], "model.houm.stg_whatsapp_ces_sales_promises": [], "model.houm.stg_whatsapp_nps_photo": ["model.houm.proc_nps_landlord_photo"], "model.houm.stg_whatsapp_nps_automatic_tenant_24_horas": ["model.houm.proc_nps_tenant_24_horas"], "model.houm.stg_whatsapp_nps_rentas_new_listing": ["model.houm.proc_nps_landlord_new_listing"], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": ["model.houm.proc_nps_landlord_poscontract"], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["model.houm.proc_nps_landlord_3_months"], "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": ["model.houm.proc_nps_tenant_6_months"], "model.houm.stg_whatsapp_nps_visits_done": ["model.houm.proc_nps_tenant_visit_done"], "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": ["model.houm.proc_nps_tenant_3_months"], "model.houm.stg_whatsapp_nps_sales_promises": [], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["model.houm.proc_nps_landlord_6_months"], "model.houm.stg_whatsapp_nps_visits_cancelled": ["model.houm.proc_nps_tenant_visit_cancel"], "model.houm.stg_whatsapp_nps_rentas_tenant_pc": [], "model.houm.stg_new_nps_automatic_landlord_6_meses": ["model.houm.proc_nps_landlord_6_months"], "model.houm.stg_new_nps_automatic_tenant_6_meses": ["model.houm.proc_nps_tenant_6_months"], "model.houm.stg_new_nps_rentals_propietary_poscontract": ["model.houm.proc_ces_landlord_poscontract"], "model.houm.stg_new_nps_rentals_24_horas_tenant": [], "model.houm.stg_new_nps_visit_rental_visit_done": ["model.houm.proc_csat_tenant_visit_done"], "model.houm.stg_new_nps_visit_photo_done": ["model.houm.proc_csat_landlord_photo"], "model.houm.stg_new_nps_visit_sales_visit_done": [], "model.houm.stg_new_nps_rentals_new_listing": ["model.houm.proc_nps_landlord_new_listing"], "model.houm.stg_new_nps_visit_cancel_visit": ["model.houm.proc_nps_tenant_visit_cancel"], "model.houm.stg_new_nps_automatic_tenant_3_meses": ["model.houm.proc_nps_tenant_3_months"], "model.houm.stg_new_nps_automatic_landlord_3_meses": ["model.houm.proc_nps_landlord_3_months"], "model.houm.stg_activies": [], "model.houm.stg_pipelines": ["model.houm.proc_pipedrive_pipelines"], "model.houm.stg_bi_persons": [], "model.houm.stg_stages": ["model.houm.proc_pipedrive_stages"], "model.houm.stg_bi_deals": [], "model.houm.stg_deals": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_persons_emails", "model.houm.proc_pipedrive_persons_phones"], "model.houm.stg_scheduler_appraiserworkingmacrozone": [], "model.houm.stg_subscription_subscription": ["model.houm.proc_closure_plans_taxes_region", "model.houm.proc_closure_subs"], "model.houm.stg_demand_calls": [], "model.houm.stg_demand_portalhoum": ["model.houm.proc_demand_leads", "model.houm.proc_demand_portalhoum"], "model.houm.stg_scheduler_cancelreasontypes": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations"], "model.houm.stg_billing_adjustment": [], "model.houm.stg_payment_orders": [], "model.houm.stg_properties_associationamenities": ["model.houm.proc_properties_amenities", "model.houm.proc_properties_characteristics", "model.houm.property__published_new_properties"], "model.houm.stg_scheduler_appraiseravailability": [], "model.houm.stg_external_portal_integrations_publicationurl": [], "model.houm.stg_contracts_scd": [], "model.houm.stg_contracts": ["model.houm.proc_closure_contract_historical_status", "model.houm.proc_closure_contracts"], "model.houm.stg_arriendoasegurado_rentfeedback": [], "model.houm.stg_demand_marketingapplicant": ["model.houm.proc_demand_marketingapplicant"], "model.houm.stg_external_portal_integrations_publication": [], "model.houm.stg_arriendoasegurado_applicant": ["model.houm.proc_core_applicant", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules"], "model.houm.stg_scheduler_schedules": ["model.houm.proc_app_cancelations", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_others_cancelations", "model.houm.proc_supply_schedules"], "model.houm.stg_external_portal_integrations_externalportals": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_demand_portalapplicant": ["model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_external_portal_leads_per_publication"], "model.houm.stg_external_portal_integrations_loadstatus": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication"], "model.houm.stg_subscription_subscriptionevent": [], "model.houm.stg_users": ["model.houm.proc_closure_evaluations", "model.houm.proc_closure_evaluations", "model.houm.proc_closure_evaluations", "model.houm.proc_core_users", "model.houm.proc_properties", "model.houm.proc_properties_business", "model.houm.proc_properties_business", "model.houm.property__published_new_properties"], "model.houm.stg_external_portal_integrations_country": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_real_estate_developments_units": ["model.houm.proc_supply_units", "model.houm.property__published_new_properties"], "model.houm.stg_real_estate_developments_developmentdetails": ["model.houm.property__published_new_properties"], "model.houm.stg_scheduler_scheduletypes": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules"], "model.houm.stg_properties_location": ["model.houm.proc_properties_characteristics", "model.houm.proc_properties_location"], "model.houm.stg_scheduler_schedulehasapplicant": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules"], "model.houm.stg_scheduler_macrozone": ["model.houm.proc_closure_evaluations", "model.houm.proc_closure_subs", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_macrozone", "model.houm.proc_marketplace_published_properties", "model.houm.proc_pipedrive_leads", "model.houm.proc_supply_schedules"], "model.houm.stg_external_portal_integrations_macrozoneportalplan": ["snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_subscription_subscriptiondiscount": [], "model.houm.stg_demand_eventleadprofile": [], "model.houm.stg_properties": ["model.houm.proc_hist_prop_business_rentals", "model.houm.proc_hist_prop_business_sales", "model.houm.proc_properties", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_properties_id.d43465ee9b", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_properties_id.c012ce6a29"], "model.houm.stg_demand_leadhasappraiser": [], "model.houm.stg_plans_cities": [], "model.houm.stg_real_estate_developments_unittypes": ["model.houm.proc_supply_unittypes", "model.houm.property__published_new_properties"], "model.houm.stg_external_portal_integrations_publication_scd": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication"], "model.houm.stg_scheduler_scheduleevent": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.stg_demand_lead": ["model.houm.proc_demand_leads", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_whatsapp"], "model.houm.stg_scheduler_applicanthasappraiser": [], "model.houm.stg_external_portal_integrations_publicationtype": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_demand_eventleadhasappraiser": [], "model.houm.stg_arriendoasegurado_contractperson": [], "model.houm.stg_external_portal_integrations_portalplan": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_contracts_codebtors": [], "model.houm.stg_property_salesdetails": ["model.houm.proc_hist_prop_sales_status", "model.houm.proc_negotiation_buyers", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics", "model.houm.proc_property_salesdetails", "model.houm.properties_published", "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6"], "model.houm.stg_homecheckerdetails": ["model.houm.proc_properties_amenities", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics"], "model.houm.stg_arriendoasegurado_city": ["model.houm.proc_macrozone"], "model.houm.stg_arriendoasegurado_planmonth": [], "model.houm.stg_scheduler_appraiserevent": ["model.houm.proc_app_cancelations", "model.houm.proc_demand_schedules_appraiserevent", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.stg_macrozone": [], "model.houm.stg_real_estate_developments_developments": ["model.houm.proc_supply_projects", "model.houm.property__published_new_properties"], "model.houm.stg_scheduler_cancelreasons": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations"], "model.houm.stg_properties_inspectionreport": [], "model.houm.stg_plans": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans", "model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"], "model.houm.stg_demand_whatsapp": ["model.houm.proc_demand_whatsapp"], "model.houm.stg_properties_basicservice": [], "model.houm.stg_scheduler_appraisers": ["model.houm.proc_app_cancelations", "model.houm.proc_core_appraisers", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_negotiation_buyers", "model.houm.proc_others_cancelations"], "model.houm.stg_arriendoasegurado_propertydetails": ["model.houm.proc_hist_prop_rentals_status", "model.houm.properties_hist_rentals_price", "model.houm.properties_hist_sales_price"], "model.houm.stg_propertydetails": ["model.houm.proc_demand_schedules_timing", "model.houm.proc_properties_amenities", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics", "model.houm.proc_properties_characteristics", "model.houm.proc_properties_mz", "model.houm.proc_propertydetails", "model.houm.properties_published", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_propertydetails_property_id.3d72328240"], "model.houm.stg_paid_media_google_campaign_keys": [], "model.houm.stg_tmp_marketing_pipedrive_data": [], "model.houm.stg_paid_media_facebook_campaigns": [], "model.houm.stg_paid_media_google_campaigns_co_mx": [], "model.houm.stg_paid_media_ad_groups": [], "model.houm.stg_paid_media_facebook_campaign_keys": [], "model.houm.stg_paid_media_google_campaigns_cl": [], "model.houm.stg_external_properties_sales_colombia": ["model.houm.proc_external_properties_sales"], "model.houm.stg_external_properties_sales_chile": ["model.houm.proc_external_properties_sales"], "model.houm.stg_external_properties_sales_mexico": ["model.houm.proc_external_properties_sales"], "model.houm.stg_external_properties_rent_colombia": ["model.houm.proc_external_properties_rent"], "model.houm.stg_external_properties_rent_chile": ["model.houm.proc_external_properties_rent"], "model.houm.stg_external_properties_rent_mexico": ["model.houm.proc_external_properties_rent"], "model.houm.stg_rev_kpi_rented_properties": [], "model.houm.stg_rev_houm_properties": ["model.houm.proc_properties_rev_suggested_prices", "model.houm.proc_properties_rev_suggested_prices"], "model.houm.stg_rev_kpi_published_properties": [], "model.houm.stg_kustomer_users": [], "model.houm.stg_kustomer_messages": [], "model.houm.stg_kustomer_queues": ["model.houm.proc_kustomer_queues"], "model.houm.stg_kustomer_tags": [], "model.houm.stg_kustomer_customers_active_users": [], "model.houm.stg_kustomer_customers_emails": ["model.houm.proc_kustomer_customers_emails"], "model.houm.stg_kustomer_customers_phones": ["model.houm.proc_kustomer_customers_phones"], "model.houm.stg_kustomer_customers": ["model.houm.proc_kustomer_customers"], "model.houm.stg_kustomer_customers_locations": [], "model.houm.stg_kustomer_teams_members": [], "model.houm.stg_kustomer_teams_routing": [], "model.houm.stg_kustomer_teams_routing_queues": [], "model.houm.stg_kustomer_teams": [], "model.houm.stg_kustomer_conversations": ["model.houm.proc_kustomer_conversations"], "model.houm.stg_kustomer_conversations_assigned_users": [], "model.houm.stg_kustomer_conversations_tags": [], "model.houm.stg_zendesk_metrics": [], "model.houm.stg_zendesk_tickets_audits_events": [], "model.houm.stg_zendesk_users": ["test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_users_id.e79d686872"], "model.houm.stg_zendesk_tickets_audits_via": [], "model.houm.stg_zendesk_tickets_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.stg_zendesk_tickets_audits": [], "model.houm.stg_zendesk_tickets": ["test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52"], "model.houm.stg_property__rent_recommended_properties": ["model.houm.property__rent_recommended_properties"], "model.houm.stg_property__sale_recommended_properties": ["model.houm.property__sale_recommended_properties"], "model.houm.stg_property__recommended_new_properties": ["model.houm.property__recommended_new_properties"], "model.houm.stg_evaluations_scd": ["model.houm.proc_closure_evaluations", "model.houm.proc_evaluation"], "model.houm.stg_monthly_inflation_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.stg_monthly_inflation_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.stg_monthly_inflation_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.stg_economic_indicator_uf": ["model.houm.proc_external_properties_rent", "model.houm.proc_external_properties_sales"], "model.houm.stg_kustomer_logs": [], "model.houm.stg_sendinblue_flow": [], "model.houm.stg_messagebird_flow": [], "model.houm.stg_messagebird_flow_response_schema": ["model.houm.proc_communications"], "model.houm.stg_sendinblue_logs": [], "model.houm.stg_messagebird_logs": [], "model.houm.stg_messagebird_flow_response_values": ["model.houm.proc_communications"], "model.houm.stg_messagebird_dlq_flow_response_values": [], "model.houm.stg_payments_cl_db_movements": ["model.houm.proc_demand_reservations", "model.houm.proc_movements_cl"], "model.houm.stg_payments_mx_db_movements": ["model.houm.proc_demand_reservations", "model.houm.proc_movements_mx"], "model.houm.stg_payments_co_db_movements": ["model.houm.proc_demand_reservations", "model.houm.proc_movements_co"], "model.houm.stg_propertyduty_company": [], "model.houm.stg_propertyduty_detail": [], "model.houm.stg_propertyduty_info": [], "model.houm.stg_departments": [], "model.houm.stg_payrolls": [], "model.houm.stg_companies": [], "model.houm.stg_accounting": [], "model.houm.stg_jobs": [], "model.houm.stg_areas": [], "model.houm.stg_line_settlements": [], "model.houm.stg_employees": ["test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced"], "model.houm.stg_roles": [], "model.houm.proc_bid": ["model.houm.proc_negotiation_buyers", "model.houm.sales_buyer_metric_details_bid_accepted", "model.houm.sales_buyer_metric_details_bid_realized", "model.houm.sales_buyer_metric_details_bid_rejected", "model.houm.sales_buyer_metric_details_bid_with_counter_bid", "model.houm.sales_buyer_metric_details_bid_without_response"], "model.houm.proc_closure_subs": ["model.houm.rental_landlord_metric_details_new_subs", "model.houm.rental_landlord_metric_details_new_subs_brokerage", "model.houm.rental_landlord_metric_details_new_subs_non_brokerage", "model.houm.rental_landlord_metric_details_renewal_subs", "model.houm.rental_landlord_metric_details_republished_subs", "model.houm.rental_landlord_metric_details_subs", "model.houm.rental_tenant_metric_details_new_subs", "model.houm.rental_tenant_metric_details_new_tenant", "model.houm.temp_rental_tenant_metric_new_subs", "model.houm.temp_rental_tenant_metric_new_tenant"], "model.houm.proc_finance_plans": [], "model.houm.proc_negotiation": ["model.houm.proc_bid", "model.houm.proc_negotiation_buyers", "model.houm.sales_buyer_metric_details_generated_links"], "model.houm.proc_closure_evaluation_has_a_contract": [], "model.houm.proc_closure_plans_taxes_region": ["model.houm.proc_finance_plans"], "model.houm.proc_closure_plans": ["model.houm.proc_closure_subs", "model.houm.proc_finance_plans"], "model.houm.proc_closure_evaluations": ["model.houm.rental_tenant_metric_details_approved_eval", "model.houm.rental_tenant_metric_details_lost_eval", "model.houm.rental_tenant_metric_details_ongoing_eval", "model.houm.rental_tenant_metric_details_rejected_eval", "model.houm.rental_tenant_metric_details_total_eval", "model.houm.temp_rental_tenant_metric_approved_eval", "model.houm.temp_rental_tenant_metric_lost_eval", "model.houm.temp_rental_tenant_metric_ongoing_eval", "model.houm.temp_rental_tenant_metric_rejected_eval", "model.houm.temp_rental_tenant_metric_total_eval"], "model.houm.proc_negotiation_buyers": [], "model.houm.proc_closure_contracts": ["model.houm.proc_closure_subs"], "model.houm.proc_evaluation": [], "model.houm.proc_closure_contract_historical_status": [], "model.houm.proc_movements_originals": [], "model.houm.proc_movements_mx": ["model.houm.proc_movements"], "model.houm.proc_movements_details": [], "model.houm.proc_movements_co": ["model.houm.proc_movements"], "model.houm.proc_movements_cl": ["model.houm.proc_movements"], "model.houm.proc_movements": ["model.houm.proc_movements_details", "model.houm.proc_movements_originals"], "model.houm.proc_pipedrive_leads": ["model.houm.proc_demand_sales_leads", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_seller_leads"], "model.houm.proc_pipedrive_pipelines": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_kustomer_customers": ["model.houm.proc_kustomer_conversations"], "model.houm.proc_pipedrive_persons": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_pipedrive_cities": ["model.houm.proc_pipedrive_leads", "model.houm.proc_pipedrive_leads"], "model.houm.proc_kustomer_queues": ["model.houm.proc_kustomer_conversations"], "model.houm.proc_kustomer_conversations": [], "model.houm.proc_pipedrive_persons_phones": ["model.houm.proc_pipedrive_persons"], "model.houm.proc_pipedrive_persons_emails": ["model.houm.proc_pipedrive_persons"], "model.houm.proc_pipedrive_deals": ["model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_labels", "model.houm.proc_pipedrive_leads"], "model.houm.proc_pipedrive_labels": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_kustomer_customers_emails": ["model.houm.proc_kustomer_customers"], "model.houm.proc_pipedrive_stages": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_kustomer_customers_phones": ["model.houm.proc_kustomer_customers"], "model.houm.proc_core_cancelations": [], "model.houm.proc_core_scheduler_schedules": ["model.houm.rental_tenant_metric_details_schedules_first_done", "model.houm.rental_tenant_metric_details_schedules_second_done", "model.houm.rental_tenant_metric_details_schedules_third_done", "model.houm.sales_buyer_metric_details_schedules_first_done", "model.houm.sales_buyer_metric_details_schedules_second_done", "model.houm.sales_buyer_metric_details_schedules_third_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done"], "model.houm.proc_core_appraisers": [], "model.houm.proc_core_users": ["model.houm.proc_core_applicant"], "model.houm.proc_app_cancelations": ["model.houm.proc_core_cancelations"], "model.houm.proc_core_applicant": [], "model.houm.proc_core_schedules": [], "model.houm.proc_core_properties": ["model.houm.proc_core_schedules", "model.houm.proc_marketplace_published_properties", "model.houm.property_finder_rentals", "model.houm.property_finder_sales"], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.proc_cx_zendesk_first_clean_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": [], "model.houm.properties_hist_rentals_price": ["model.houm.properties_rentals_prices_change"], "model.houm.proc_properties_amenities": ["model.houm.proc_core_properties"], "model.houm.proc_supply_seller_leads": ["model.houm.sales_seller_metric_details_leads", "model.houm.sales_seller_metric_details_leads_qualified", "model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.proc_property_salesdetails": ["model.houm.dim_properties", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.property__houm_properties", "model.houm.property__published_new_properties", "model.houm.property__published_properties", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_supply_unittypes": ["model.houm.proc_supply_units", "model.houm.sales_company_metric_details_new_unittypes_listing"], "model.houm.proc_hist_prop_sales_status": ["model.houm.proc_hist_properties_sales_published"], "model.houm.proc_properties_mz": ["model.houm.proc_bid", "model.houm.proc_closure_evaluations", "model.houm.proc_closure_subs", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_core_schedules", "model.houm.proc_demand_leads", "model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_evaluation", "model.houm.proc_marketplace_published_properties", "model.houm.proc_negotiation", "model.houm.proc_negotiation_buyers", "model.houm.proc_pipedrive_leads", "model.houm.proc_properties_business", "model.houm.proc_properties_characteristics", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.proc_supply_schedules", "model.houm.properties_published", "model.houm.property__houm_properties", "model.houm.property__published_properties", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_company_metric_details_new_project_listing", "model.houm.sales_company_metric_details_new_units_listing", "model.houm.sales_company_metric_details_new_unittypes_listing", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_hist_prop_business_rentals": ["model.houm.proc_hist_properties_rentals_published"], "model.houm.proc_supply_schedules": ["model.houm.proc_csat_landlord_photo", "model.houm.rental_landlord_metric_details_photo_created", "model.houm.rental_landlord_metric_details_photo_done", "model.houm.rental_landlord_metric_details_photo_scheduled", "model.houm.sales_seller_metric_details_photo_created", "model.houm.sales_seller_metric_details_photo_done", "model.houm.sales_seller_metric_details_photo_scheduled", "model.houm.temp_rental_landlord_metric_photo_created", "model.houm.temp_rental_landlord_metric_photo_done", "model.houm.temp_rental_landlord_metric_photo_scheduled"], "model.houm.proc_hist_properties_rentals_published": ["model.houm.proc_marketplace_published_properties"], "model.houm.properties_rentals_prices_change": [], "model.houm.proc_supply_landlord_leads": ["model.houm.rental_landlord_metric_details_leads", "model.houm.rental_landlord_metric_details_leads_qualified", "model.houm.rental_landlord_metric_details_leads_qualified_date", "model.houm.temp_rental_landlord_metric_leads", "model.houm.temp_rental_landlord_metric_leads_qualified", "model.houm.temp_rental_landlord_metric_leads_qualified_date"], "model.houm.proc_supply_units": ["model.houm.sales_company_metric_details_new_units_listing"], "model.houm.proc_hist_prop_business_sales": ["model.houm.proc_hist_properties_sales_published"], "model.houm.proc_propertydetails": ["model.houm.dim_properties", "model.houm.proc_rev_properties", "model.houm.property__houm_properties", "model.houm.property__published_new_properties", "model.houm.property__published_properties"], "model.houm.proc_new_properties": ["model.houm.property__published_new_properties"], "model.houm.proc_hist_properties_sales_published": ["model.houm.proc_marketplace_published_properties"], "model.houm.proc_hist_prop_rentals_status": ["model.houm.proc_hist_properties_rentals_published"], "model.houm.proc_macrozone": ["model.houm.dim_cities", "model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.proc_rev_properties", "model.houm.property__houm_properties", "model.houm.property__published_properties"], "model.houm.proc_properties": ["model.houm.dim_properties", "model.houm.proc_closure_plans_taxes_region", "model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_schedules", "model.houm.proc_external_portal_leads_per_publication", "model.houm.proc_new_properties", "model.houm.proc_pipedrive_leads", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.proc_supply_schedules", "model.houm.properties_published", "model.houm.property__houm_properties", "model.houm.property__published_properties", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.properties_hist_sales_price": ["model.houm.properties_sales_prices_change"], "model.houm.properties_sales_prices_change": [], "model.houm.proc_properties_characteristics": ["model.houm.proc_core_properties"], "model.houm.proc_marketplace_published_properties": ["model.houm.temp_rental_landlord_metric_properties_stock", "model.houm.temp_sales_seller_metric_properties_stock"], "model.houm.proc_supply_projects": ["model.houm.proc_supply_unittypes", "model.houm.sales_company_metric_details_new_project_listing"], "model.houm.proc_properties_business": ["model.houm.proc_core_properties"], "model.houm.proc_external_portal_historical_publications": [], "model.houm.proc_properties_location": ["model.houm.proc_rev_properties", "model.houm.property__houm_properties", "model.houm.property__published_properties"], "model.houm.proc_external_properties_rent": ["model.houm.property__external_properties_rent"], "model.houm.proc_external_properties_sales": ["model.houm.property__external_properties_sales"], "model.houm.proc_rev_properties": ["model.houm.proc_rev_rental_properties", "model.houm.proc_rev_sales_properties"], "model.houm.proc_properties_rev_suggested_prices": ["model.houm.proc_properties_business", "model.houm.property__published_properties_rev_suggested_prices"], "model.houm.proc_rev_rental_last_months_properties": ["model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties"], "model.houm.proc_rev_rental_published_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_rental_rented_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_rental_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_sales_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_rev_sales_sold_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_sales_last_months_properties": ["model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties"], "model.houm.proc_rev_sales_published_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_marketing_paid_media": ["model.houm.rental_landlord_metric_details_paid_media_cost", "model.houm.rental_tenant_metric_details_paid_media_cost", "model.houm.sales_buyer_metric_details_paid_media_cost", "model.houm.sales_demand_metric_details_paid_media_cost", "model.houm.sales_investor_metric_details_paid_media_cost", "model.houm.sales_seller_metric_details_paid_media_cost", "model.houm.temp_rental_tenant_metric_paid_media_cost"], "model.houm.proc_marketing_paid_media_campaign": ["model.houm.proc_demand_lead_activities", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_marketing_paid_media", "model.houm.proc_pipedrive_leads"], "model.houm.proc_googleads_campaign_ad_union": ["model.houm.proc_marketing_paid_media_executions"], "model.houm.proc_marketing_paid_media_executions": ["model.houm.proc_marketing_paid_media", "model.houm.proc_marketing_paid_media_campaign"], "model.houm.sales_local_revenue": ["model.houm.cum_sales_local_revenue", "model.houm.goals_current"], "model.houm.rentals_units": ["model.houm.cum_rentals_units", "model.houm.goals_current"], "model.houm.eop_subs": ["model.houm.goals_current"], "model.houm.sales_units": ["model.houm.cum_sales_units", "model.houm.goals_current"], "model.houm.proc_nps_landlord_6_months": ["model.houm.proc_nps_landlord"], "model.houm.proc_survey_details": ["model.houm.proc_ces_landlord", "model.houm.proc_ces_tenant", "model.houm.proc_csat_landlord", "model.houm.proc_csat_tenant", "model.houm.proc_nps_landlord", "model.houm.proc_nps_tenant"], "model.houm.proc_nps_tenant_6_months": ["model.houm.proc_nps_tenant"], "model.houm.proc_ces_landlord_poscontract": ["model.houm.proc_ces_landlord"], "model.houm.proc_ces_landlord": ["model.houm.proc_surveys_landlord"], "model.houm.proc_surveys_landlord": [], "model.houm.proc_nps_tenant_3_months": ["model.houm.proc_nps_tenant"], "model.houm.proc_nps_landlord_3_months": ["model.houm.proc_nps_landlord"], "model.houm.proc_nps_landlord_new_listing": ["model.houm.proc_nps_landlord"], "model.houm.proc_ces_tenant": ["model.houm.proc_surveys_tenant"], "model.houm.proc_nps_tenant_24_horas": ["model.houm.proc_nps_tenant"], "model.houm.proc_surveys_tenant": [], "model.houm.proc_csat_tenant": ["model.houm.proc_surveys_tenant"], "model.houm.proc_nps_landlord": ["model.houm.proc_surveys_landlord"], "model.houm.proc_nps_tenant": ["model.houm.proc_surveys_tenant"], "model.houm.proc_csat_landlord_photo": ["model.houm.proc_csat_landlord"], "model.houm.proc_nps_tenant_visit_cancel": ["model.houm.proc_nps_tenant"], "model.houm.proc_nps_landlord_poscontract": ["model.houm.proc_nps_landlord"], "model.houm.proc_communications": ["model.houm.proc_ces_landlord_poscontract", "model.houm.proc_ces_tenant_poscontract", "model.houm.proc_csat_landlord_photo", "model.houm.proc_csat_tenant_visit_done", "model.houm.proc_nps_landlord_3_months", "model.houm.proc_nps_landlord_6_months", "model.houm.proc_nps_landlord_new_listing", "model.houm.proc_nps_tenant_3_months", "model.houm.proc_nps_tenant_6_months", "model.houm.proc_nps_tenant_visit_cancel"], "model.houm.proc_csat_tenant_visit_done": ["model.houm.proc_csat_tenant"], "model.houm.proc_nps_landlord_photo": ["model.houm.proc_nps_landlord"], "model.houm.proc_nps_tenant_visit_done": ["model.houm.proc_nps_tenant"], "model.houm.proc_ces_tenant_poscontract": ["model.houm.proc_ces_tenant"], "model.houm.proc_csat_landlord": ["model.houm.proc_surveys_landlord"], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.fact_daily_virtual_uf_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.fact_daily_virtual_uf_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.fact_daily_virtual_uf_cl"], "model.houm.proc_demand_schedules_timing": ["model.houm.rental_tenant_metric_details_arrived_on_time", "model.houm.rental_tenant_metric_details_correct_visit_done", "model.houm.rental_tenant_metric_details_correct_visit_finished", "model.houm.rental_tenant_metric_details_done_time", "model.houm.sales_buyer_metric_details_correct_visit_done", "model.houm.temp_rental_tenant_metric_schedules_correct_visit_done"], "model.houm.proc_external_portal_leads_per_publication": [], "model.houm.proc_demand_schedules": ["model.houm.proc_csat_tenant_visit_done", "model.houm.proc_demand_schedules_timing", "model.houm.rental_tenant_metric_details_schedules_cancelled", "model.houm.rental_tenant_metric_details_schedules_cancelled_at", "model.houm.rental_tenant_metric_details_schedules_created", "model.houm.rental_tenant_metric_details_schedules_done", "model.houm.rental_tenant_metric_details_schedules_scheduled", "model.houm.rental_tenant_metric_details_schedules_scheduled_admin", "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_details_schedules_scheduled_organic", "model.houm.rental_tenant_metric_details_schedules_unfinished", "model.houm.sales_buyer_metric_details_schedules_created", "model.houm.sales_buyer_metric_details_schedules_done", "model.houm.sales_buyer_metric_details_schedules_scheduled", "model.houm.sales_investor_metric_details_schedules_created", "model.houm.sales_investor_metric_details_schedules_done", "model.houm.sales_investor_metric_details_schedules_scheduled", "model.houm.temp_rental_tenant_metric_schedules_created", "model.houm.temp_rental_tenant_metric_schedules_done", "model.houm.temp_rental_tenant_metric_schedules_scheduled"], "model.houm.proc_demand_schedules_appraiserevent": ["model.houm.proc_demand_schedules_timing"], "model.houm.proc_first_cancelation": ["model.houm.proc_core_cancelations"], "model.houm.proc_demand_lead_activities": ["model.houm.rental_tenant_metric_details_leads", "model.houm.rental_tenant_metric_details_leads_interactions", "model.houm.rental_tenant_metric_details_leads_interactions_markethoum", "model.houm.rental_tenant_metric_details_leads_interactions_portalapplicants", "model.houm.rental_tenant_metric_details_leads_interactions_whatsapp", "model.houm.temp_rental_tenant_metric_leads", "model.houm.temp_rental_tenant_metric_leads_interactions", "model.houm.temp_rental_tenant_metric_leads_interactions_markethoum", "model.houm.temp_rental_tenant_metric_leads_interactions_portalapplicants", "model.houm.temp_rental_tenant_metric_leads_interactions_whatsapp"], "model.houm.proc_demand_whatsapp": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_others_cancelations": ["model.houm.proc_core_cancelations"], "model.houm.proc_demand_portalapplicant": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_demand_marketingapplicant": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_demand_sales_leads": ["model.houm.sales_buyer_metric_details_leads", "model.houm.sales_buyer_metric_details_leads_qualified", "model.houm.sales_buyer_metric_details_leads_qualified_date", "model.houm.sales_demand_metric_details_leads", "model.houm.sales_investor_metric_details_leads", "model.houm.sales_investor_metric_details_leads_qualified", "model.houm.sales_investor_metric_details_leads_qualified_date"], "model.houm.proc_demand_reservations": ["model.houm.rental_tenant_metric_details_reservations", "model.houm.rental_tenant_metric_details_reservations_effective", "model.houm.rental_tenant_metric_details_reservations_refunded", "model.houm.temp_rental_tenant_metric_reservations", "model.houm.temp_rental_tenant_metric_reservations_effective", "model.houm.temp_rental_tenant_metric_reservations_refunded"], "model.houm.proc_demand_leads": [], "model.houm.proc_demand_portalhoum": ["model.houm.proc_demand_lead_activities"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "snapshot.houm.stg_macrozoneportalplan_snapshot": [], "test.houm.assert_properties_rent_prices_chile": [], "seed.houm.seed_plan_legacy_details": [], "seed.houm.seed_propiedades_axion": ["model.houm.dim_portafolio_purchase"], "seed.houm.seed_plan_legacy_taxes": ["model.houm.proc_closure_plans_taxes_region"], "seed.houm.seed_metrics_order": ["model.houm.metrics_order"], "seed.houm.seed_test_email": ["model.houm.proc_core_appraisers", "model.houm.proc_demand_schedules_timing", "model.houm.proc_negotiation", "model.houm.rental_tenant_metric_details_schedules_first_done", "model.houm.rental_tenant_metric_details_schedules_second_done", "model.houm.rental_tenant_metric_details_schedules_third_done", "model.houm.sales_buyer_metric_details_schedules_first_done", "model.houm.sales_buyer_metric_details_schedules_second_done", "model.houm.sales_buyer_metric_details_schedules_third_done", "model.houm.temp_rental_tenant_metric_schedules_first_done", "model.houm.temp_rental_tenant_metric_schedules_second_done", "model.houm.temp_rental_tenant_metric_schedules_third_done"], "seed.houm.seed_movements_methods": [], "seed.houm.seed_kustomer_queues": ["model.houm.proc_kustomer_queues"], "seed.houm.seed_dim_locations_houm_traduccion_1": ["model.houm.trans_macrozone_to_location"], "seed.houm.seed_unified_stages_pipedrive": ["model.houm.proc_pipedrive_stages"], "seed.houm.seed_dim_locations_houm": ["model.houm.dim_locations_houm"], "seed.houm.seed_metrics": ["model.houm.metrics_name"], "seed.houm.country-codes": [], "seed.houm.seed_survey_details": ["model.houm.proc_survey_details"], "seed.houm.seed_dim_dates": ["model.houm.dim_dates"], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "operation.houm.houm-on-run-end-22": [], "operation.houm.houm-on-run-end-23": [], "operation.houm.houm-on-run-end-24": [], "operation.houm.houm-on-run-end-25": [], "operation.houm.houm-on-run-end-26": [], "operation.houm.houm-on-run-end-27": [], "operation.houm.houm-on-run-end-28": [], "operation.houm.houm-on-run-end-29": [], "operation.houm.houm-on-run-end-30": [], "operation.houm.houm-on-run-end-31": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": [], "test.houm.not_null_properties_published_property_id.cfd67d7b86": [], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": [], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": [], "test.houm.unique_stg_properties_id.c012ce6a29": [], "test.houm.not_null_stg_properties_id.d43465ee9b": [], "test.houm.unique_stg_propertydetails_property_id.3d72328240": [], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": [], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": [], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": [], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": [], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": [], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": [], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": [], "test.houm.unique_stg_zendesk_users_id.e79d686872": [], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": [], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": [], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": [], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": [], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": [], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": [], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": [], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": [], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": [], "source.houm.public.dim_polygons": ["model.houm.dim_locations"], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.public.rev_houm_properties": ["model.houm.stg_rev_houm_properties"], "source.houm.public.economic_indicator_uf": ["model.houm.stg_economic_indicator_uf"], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": ["model.houm.stg_homecheckerdetails"], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": ["model.houm.stg_contracts_scd"], "source.houm.historical.historical_plans": [], "source.houm.historical.historical_external_portal_integrations_publication": ["model.houm.stg_external_portal_integrations_publication_scd"], "source.houm.historical.historical_evaluation": ["model.houm.stg_evaluations_scd"], "source.houm.raw_stage.series_ipc_cl": ["model.houm.stg_monthly_inflation_cl"], "source.houm.raw_stage.series_ipc_mx": ["model.houm.stg_monthly_inflation_mx"], "source.houm.raw_stage.series_ipc_co": ["model.houm.stg_monthly_inflation_co"], "source.houm.raw_stage.properties": ["model.houm.stg_properties"], "source.houm.raw_stage.properties_salesdetails": ["model.houm.stg_property_salesdetails"], "source.houm.raw_stage.properties_location": ["model.houm.stg_properties_location"], "source.houm.raw_stage.properties_associationamenities": ["model.houm.stg_properties_associationamenities"], "source.houm.raw_stage.properties_inspectionreport": ["model.houm.stg_properties_inspectionreport"], "source.houm.raw_stage.properties_basicservice": ["model.houm.stg_properties_basicservice"], "source.houm.raw_stage.arriendoasegurado_propertydetails": ["model.houm.stg_arriendoasegurado_propertydetails", "model.houm.stg_propertydetails", "model.houm.stg_rev_kpi_published_properties", "model.houm.stg_rev_kpi_rented_properties"], "source.houm.raw_stage.arriendoasegurado_city": ["model.houm.stg_arriendoasegurado_city"], "source.houm.raw_stage.arriendoasegurado_applicant": ["model.houm.stg_arriendoasegurado_applicant"], "source.houm.raw_stage.arriendoasegurado_contractperson": ["model.houm.stg_arriendoasegurado_contractperson"], "source.houm.raw_stage.arriendoasegurado_planmonth": ["model.houm.stg_arriendoasegurado_planmonth"], "source.houm.raw_stage.arriendoasegurado_rentfeedback": ["model.houm.stg_arriendoasegurado_rentfeedback"], "source.houm.raw_stage.users": ["model.houm.stg_users"], "source.houm.raw_stage.subscription_subscription": ["model.houm.stg_subscription_subscription"], "source.houm.raw_stage.real_estate_developments_developments": ["model.houm.stg_real_estate_developments_developments"], "source.houm.raw_stage.real_estate_developments_developmentdetails": ["model.houm.stg_real_estate_developments_developmentdetails"], "source.houm.raw_stage.real_estate_developments_unittypes": ["model.houm.stg_real_estate_developments_unittypes"], "source.houm.raw_stage.real_estate_developments_units": ["model.houm.stg_real_estate_developments_units"], "source.houm.raw_stage.demand_lead": ["model.houm.stg_demand_lead"], "source.houm.raw_stage.demand_portalhoum": ["model.houm.stg_demand_portalhoum"], "source.houm.raw_stage.demand_portalapplicant": ["model.houm.stg_demand_portalapplicant"], "source.houm.raw_stage.demand_marketingapplicant": ["model.houm.stg_demand_marketingapplicant"], "source.houm.raw_stage.demand_whatsapp": ["model.houm.stg_demand_whatsapp"], "source.houm.raw_stage.demand_calls": ["model.houm.stg_demand_calls"], "source.houm.raw_stage.demand_eventleadhasappraiser": ["model.houm.stg_demand_eventleadhasappraiser"], "source.houm.raw_stage.demand_leadhasappraiser": ["model.houm.stg_demand_leadhasappraiser"], "source.houm.raw_stage.demand_eventleadprofile": ["model.houm.stg_demand_eventleadprofile"], "source.houm.raw_stage.scheduler_schedules": ["model.houm.stg_scheduler_schedules"], "source.houm.raw_stage.scheduler_scheduletypes": ["model.houm.stg_scheduler_scheduletypes"], "source.houm.raw_stage.scheduler_appraisers": ["model.houm.stg_scheduler_appraisers"], "source.houm.raw_stage.scheduler_schedulehasapplicant": ["model.houm.stg_scheduler_schedulehasapplicant"], "source.houm.raw_stage.scheduler_applicanthasappraiser": ["model.houm.stg_scheduler_applicanthasappraiser"], "source.houm.raw_stage.scheduler_appraiseravailability": ["model.houm.stg_scheduler_appraiseravailability"], "source.houm.raw_stage.scheduler_appraiserevent": ["model.houm.stg_scheduler_appraiserevent"], "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": ["model.houm.stg_scheduler_appraiserworkingmacrozone"], "source.houm.raw_stage.scheduler_cancelreasons": ["model.houm.stg_scheduler_cancelreasons"], "source.houm.raw_stage.scheduler_cancelreasontypes": ["model.houm.stg_scheduler_cancelreasontypes"], "source.houm.raw_stage.scheduler_macrozone": ["model.houm.stg_macrozone", "model.houm.stg_scheduler_macrozone"], "source.houm.raw_stage.scheduler_scheduleevent": ["model.houm.stg_scheduler_scheduleevent"], "source.houm.raw_stage.subscription_subscriptiondiscount": ["model.houm.stg_subscription_subscriptiondiscount"], "source.houm.raw_stage.subscription_subscriptionevent": ["model.houm.stg_subscription_subscriptionevent"], "source.houm.raw_stage.bid": [], "source.houm.raw_stage.negotiation": [], "source.houm.raw_stage.identification": [], "source.houm.raw_stage.identification_type": [], "source.houm.raw_stage.contracts_codebtors": ["model.houm.stg_contracts_codebtors"], "source.houm.raw_stage.plans_cities": ["model.houm.stg_plans_cities"], "source.houm.raw_stage.billing_adjustment": ["model.houm.stg_billing_adjustment"], "source.houm.raw_stage.payment_orders": ["model.houm.stg_payment_orders"], "source.houm.raw_stage.plans": ["model.houm.stg_plans"], "source.houm.raw_stage.contracts": ["model.houm.stg_contracts"], "source.houm.raw_stage.external_portal_integrations_country": ["model.houm.stg_external_portal_integrations_country"], "source.houm.raw_stage.external_portal_integrations_publication": ["model.houm.stg_external_portal_integrations_publication"], "source.houm.raw_stage.external_portal_integrations_publicationtype": ["model.houm.stg_external_portal_integrations_publicationtype"], "source.houm.raw_stage.external_portal_integrations_portalplan": ["model.houm.stg_external_portal_integrations_portalplan"], "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": ["model.houm.stg_external_portal_integrations_macrozoneportalplan"], "source.houm.raw_stage.external_portal_integrations_loadstatus": ["model.houm.stg_external_portal_integrations_loadstatus"], "source.houm.raw_stage.external_portal_integrations_externalportals": ["model.houm.stg_external_portal_integrations_externalportals"], "source.houm.raw_stage.external_portal_integrations_publicationurl": ["model.houm.stg_external_portal_integrations_publicationurl"], "source.houm.raw_stage.external_properties_rent_chile": ["model.houm.stg_external_properties_rent_chile"], "source.houm.raw_stage.external_properties_rent_colombia": ["model.houm.stg_external_properties_rent_colombia"], "source.houm.raw_stage.external_properties_rent_mexico": ["model.houm.stg_external_properties_rent_mexico"], "source.houm.raw_stage.external_properties_sales_chile": ["model.houm.stg_external_properties_sales_chile"], "source.houm.raw_stage.external_properties_sales_colombia": ["model.houm.stg_external_properties_sales_colombia"], "source.houm.raw_stage.external_properties_sales_mexico": ["model.houm.stg_external_properties_sales_mexico"], "source.houm.staging_buk.employees_chile": ["model.houm.stg_employees"], "source.houm.staging_buk.employees_colombia": ["model.houm.stg_employees"], "source.houm.staging_buk.roles_chile": ["model.houm.stg_roles"], "source.houm.staging_buk.roles_colombia": ["model.houm.stg_roles"], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": ["model.houm.stg_areas"], "source.houm.staging_buk.areas_colombia": ["model.houm.stg_areas"], "source.houm.staging_buk.companies_chile": ["model.houm.stg_companies"], "source.houm.staging_buk.companies_colombia": ["model.houm.stg_companies"], "source.houm.staging_buk.departments_chile": ["model.houm.stg_departments"], "source.houm.staging_buk.departments_colombia": ["model.houm.stg_departments"], "source.houm.staging_buk.jobs_chile": ["model.houm.stg_jobs"], "source.houm.staging_buk.jobs_colombia": ["model.houm.stg_jobs"], "source.houm.staging_buk.payrolls_chile": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.payrolls_colombia": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.line_settlements_chile": ["model.houm.stg_line_settlements"], "source.houm.staging_buk.line_settlements_colombia": ["model.houm.stg_line_settlements"], "source.houm.airbyte_zendesk.users": ["model.houm.stg_zendesk_users"], "source.houm.airbyte_zendesk.tickets": ["model.houm.stg_zendesk_tickets"], "source.houm.airbyte_zendesk.ticket_audits": ["model.houm.stg_zendesk_tickets_audits", "model.houm.stg_zendesk_tickets_audits_events", "model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_events": ["model.houm.stg_zendesk_tickets_audits_events"], "source.houm.airbyte_zendesk.ticket_audits_via": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_metrics": ["model.houm.stg_zendesk_metrics"], "source.houm.airbyte_zendesk.ticket_comments": ["model.houm.stg_zendesk_tickets_comments"], "source.houm.pipedrive.activities": ["model.houm.stg_activies"], "source.houm.pipedrive.deals": ["model.houm.stg_deals"], "source.houm.pipedrive.pipelines": ["model.houm.stg_pipelines"], "source.houm.pipedrive.stages": ["model.houm.stg_stages"], "source.houm.pipedrive.bi_persons": ["model.houm.stg_bi_persons"], "source.houm.pipedrive.bi_deals": ["model.houm.stg_bi_deals"], "source.houm.mongo_tables.payments_cl_db_movements": ["model.houm.stg_payments_cl_db_movements"], "source.houm.mongo_tables.payments_co_db_movements": ["model.houm.stg_payments_co_db_movements"], "source.houm.mongo_tables.payments_mx_db_movements": ["model.houm.stg_payments_mx_db_movements"], "source.houm.mongo_tables.propertyduty_info": ["model.houm.stg_propertyduty_info"], "source.houm.mongo_tables.propertyduty_detail": ["model.houm.stg_propertyduty_detail"], "source.houm.mongo_tables.propertyduty_company": ["model.houm.stg_propertyduty_company"], "source.houm.airbyte_gspread.bb_fb": ["model.houm.stg_paid_media_facebook_campaigns"], "source.houm.airbyte_gspread.gg_cl": ["model.houm.stg_paid_media_google_campaigns_cl"], "source.houm.airbyte_gspread.gg_mxco": ["model.houm.stg_paid_media_google_campaigns_co_mx"], "source.houm.airbyte_gspread.campaign_keys_fb": ["model.houm.stg_paid_media_facebook_campaign_keys"], "source.houm.airbyte_gspread.campaign_keys_gg": ["model.houm.stg_paid_media_google_campaign_keys"], "source.houm.airbyte_gspread.data": ["model.houm.stg_tmp_marketing_pipedrive_data"], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": ["model.houm.stg_whatsapp_nps_automatic_tenant_24_horas"], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": ["model.houm.stg_whatsapp_nps_automatic_tenant_3_meses"], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": ["model.houm.stg_whatsapp_nps_automatic_tenant_6_meses"], "source.houm.airbyte_gspread.nps_cancel_visit": ["model.houm.stg_whatsapp_nps_visits_cancelled"], "source.houm.airbyte_gspread.nps_chile_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_chile_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_chile_sales": [], "source.houm.airbyte_gspread.nps_colombia_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_colombia_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_colombia_sales": [], "source.houm.airbyte_gspread.nps_mexico_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_mexico_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_mexico_sales": [], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_promesa_seller": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.anuncios": ["model.houm.stg_paid_media_ad_groups"], "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": ["model.houm.stg_new_nps_rentals_24_horas_tenant"], "source.houm.airbyte_gspread.new_nps_rentals_new_listing": ["model.houm.stg_new_nps_rentals_new_listing"], "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": ["model.houm.stg_new_nps_rentals_propietary_poscontract"], "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": ["model.houm.stg_new_nps_automatic_landlord_3_meses"], "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": ["model.houm.stg_new_nps_automatic_landlord_6_meses"], "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": ["model.houm.stg_new_nps_automatic_tenant_3_meses"], "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": ["model.houm.stg_new_nps_automatic_tenant_6_meses"], "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": ["model.houm.stg_whatsapp_ces_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": ["model.houm.stg_whatsapp_ces_sales_promises"], "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": ["model.houm.stg_new_nps_visit_cancel_visit"], "source.houm.airbyte_gspread.new_nps_visit_photo_done": ["model.houm.stg_new_nps_visit_photo_done"], "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": ["model.houm.stg_new_nps_visit_rental_visit_done"], "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": ["model.houm.stg_new_nps_visit_sales_visit_done"], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": ["model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"], "source.houm.survicate.nps_landlord_listing": ["model.houm.stg_survicate_nps_landlord_listing"], "source.houm.survicate.nps_landlord_new_sub": ["model.houm.stg_survicate_nps_landlord_new_sub"], "source.houm.survicate.nps_tennant_new_sub": ["model.houm.stg_survicate_nps_tenant_new_sub"], "source.houm.survicate.photo_done": ["model.houm.stg_survicate_nps_photo_done"], "source.houm.survicate.nps_tenant_satisfaction_24hrs": ["model.houm.stg_survicate_nps_tenant_satisfaction_24hrs"], "source.houm.survicate.nps_visit_done": ["model.houm.stg_survicate_nps_visit_done"], "source.houm.survicate.nps_sac_surveys": ["model.houm.stg_survicate_nps_sac_surveys"], "source.houm.survicate.nps_sac_answers": ["model.houm.stg_survicate_nps_sac_answers"], "source.houm.survicate.nps_admin_surveys": ["model.houm.stg_survicate_nps_admin_surveys"], "source.houm.survicate.nps_admin_answers": ["model.houm.stg_survicate_nps_admin_answers"], "source.houm.supermetrics.googleads_conversion": ["model.houm.stg_supermetrics_googleads_conversion"], "source.houm.supermetrics.googleads_campaign": ["model.houm.stg_supermetrics_googleads_campaign"], "source.houm.supermetrics.googleads_ad": ["model.houm.stg_supermetrics_googleads_ad"], "source.houm.supermetrics.fbads_campaign": ["model.houm.stg_supermetrics_fbads_campaign"], "source.houm.supermetrics.fbads_ad": ["model.houm.stg_supermetrics_fbads_ad"], "source.houm.supermetrics.fbads_geo": ["model.houm.stg_supermetrics_fbads_geo"], "source.houm.supermetrics.fbads_conversion": ["model.houm.stg_supermetrics_fbads_conversion"], "source.houm.supermetrics.fbads_age_gender": ["model.houm.stg_supermetrics_fbads_age_gender"], "source.houm.supermetrics.fbads_video": ["model.houm.stg_supermetrics_fbads_video"], "source.houm.supermetrics.linkedinads_ad": ["model.houm.stg_supermetrics_linkedinads_ad"], "source.houm.supermetrics.linkedinads_campaign": ["model.houm.stg_supermetrics_linkedinads_campaign"], "source.houm.raw_stage_analytics.property__rent_recommended_properties": [], "source.houm.raw_stage_analytics.property__sale_recommended_properties": [], "source.houm.raw_stage_analytics.property__recommended_new_properties": ["model.houm.stg_property__recommended_new_properties"], "source.houm.bidding_app.bid": ["model.houm.stg_sales_bid"], "source.houm.bidding_app.bid_response": ["model.houm.stg_sales_bid_response"], "source.houm.bidding_app.negotiation": ["model.houm.stg_sales_negotiation"], "source.houm.bidding_app.negotiation_user": ["model.houm.stg_sales_negotiation_user"], "source.houm.bidding_app.identification": ["model.houm.stg_sales_identification"], "source.houm.bidding_app.identification_type": ["model.houm.stg_sales_identification_type"], "source.houm.bidding_app.property": ["model.houm.stg_sales_property"], "source.houm.bidding_app.user": ["model.houm.stg_sales_user"], "source.houm.scraped_data_ops.scraped_properties_melico": [], "source.houm.scraped_data_ops.scraped_properties_fincaraiz": [], "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": [], "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": [], "source.houm.scraped_data_ops.scraped_properties_segundamano": [], "source.houm.scraped_data_ops.scraped_properties_melimx": [], "source.houm.scraped_data_ops.scraped_properties_yapo": [], "source.houm.kustomer.conversations": ["model.houm.stg_kustomer_conversations", "model.houm.stg_kustomer_conversations_assigned_users", "model.houm.stg_kustomer_conversations_tags"], "source.houm.kustomer.customers": ["model.houm.stg_kustomer_customers", "model.houm.stg_kustomer_customers_active_users", "model.houm.stg_kustomer_customers_emails", "model.houm.stg_kustomer_customers_locations", "model.houm.stg_kustomer_customers_phones"], "source.houm.kustomer.messages": ["model.houm.stg_kustomer_messages"], "source.houm.kustomer.tags": ["model.houm.stg_kustomer_tags"], "source.houm.kustomer.users": ["model.houm.stg_kustomer_users"], "source.houm.kustomer.teams": ["model.houm.stg_kustomer_teams", "model.houm.stg_kustomer_teams_members"], "source.houm.kustomer.queues": ["model.houm.stg_kustomer_queues"], "source.houm.kustomer.teams_routing": ["model.houm.stg_kustomer_teams_routing", "model.houm.stg_kustomer_teams_routing_queues"], "source.houm.comm_raw_stage.messagebird_flow": ["model.houm.stg_messagebird_flow"], "source.houm.comm_raw_stage.messagebird_logs": ["model.houm.stg_messagebird_logs"], "source.houm.comm_raw_stage.messagebird_flow_response_schema": ["model.houm.stg_messagebird_flow_response_schema"], "source.houm.comm_raw_stage.messagebird_flow_response_values": ["model.houm.stg_messagebird_flow_response_values"], "source.houm.comm_raw_stage.messagebird_dlq_flow_response_values": ["model.houm.stg_messagebird_dlq_flow_response_values"], "source.houm.comm_raw_stage.sendinblue_flow": ["model.houm.stg_sendinblue_flow"], "source.houm.comm_raw_stage.sendinblue_logs": ["model.houm.stg_sendinblue_logs"], "source.houm.comm_raw_stage.kustomer_logs": ["model.houm.stg_kustomer_logs"]}}