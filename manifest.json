{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v6.json", "dbt_version": "1.2.0", "generated_at": "2022-10-11T21:29:46.781387Z", "invocation_id": "f7e3cc85-82b5-4cd8-8f54-bee2e7eb1465", "env": {}, "project_id": "1b762dd680b567002d7cabc78313a399", "user_id": "ed514f9c-6130-4b47-9666-359c81e3cde9", "send_anonymous_usage_stats": true, "adapter_type": "redshift"}, "nodes": {"model.houm.property__recommended_new_properties": {"raw_sql": "SELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__recommended_new_properties') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_property__recommended_new_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__recommended_new_properties"], "unique_id": "model.houm.property__recommended_new_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__recommended_new_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__recommended_new_properties.sql", "name": "property__recommended_new_properties", "alias": "property__recommended_new_properties", "checksum": {"name": "sha256", "checksum": "b615775c4e9250d591b064503c8edcb24aec7630e4fe28873b84ba576bc33fa2"}, "tags": ["dw", "ml", "feature_store"], "refs": [["stg_property__recommended_new_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__recommended_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1664825036.351275, "compiled_sql": "SELECT  \n        '2022-10-11 18:29:46.503778-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__recommended_new_properties\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__recommended_new_properties\""}, "model.houm.property__sale_recommended_properties": {"raw_sql": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM {{ ref('property__published_properties') }} \n)\n\nSELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__sale_recommended_properties') }} a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Sale','Rental & Sale') and b.sales_status in ('published','republished')\nAND c.business_type in ('Sale','Rental & Sale') and c.sales_status in ('published','republished')\nAND a.service_type = 'sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.stg_property__sale_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__sale_recommended_properties"], "unique_id": "model.houm.property__sale_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__sale_recommended_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__sale_recommended_properties.sql", "name": "property__sale_recommended_properties", "alias": "property__sale_recommended_properties", "checksum": {"name": "sha256", "checksum": "579460af400fb80ddadb5ec82b985561d400b55a95fffd442c857aeba769de65"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__published_properties"], ["stg_property__sale_recommended_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__sale_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1664825036.3632839, "compiled_sql": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" \n)\n\nSELECT  \n        '2022-10-11 18:29:46.503778-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__sale_recommended_properties\" a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Sale','Rental & Sale') and b.sales_status in ('published','republished')\nAND c.business_type in ('Sale','Rental & Sale') and c.sales_status in ('published','republished')\nAND a.service_type = 'sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__sale_recommended_properties\""}, "model.houm.property__rent_recommended_properties": {"raw_sql": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM {{ ref('property__published_properties') }} \n)\n\nSELECT  \n        '{{ var(\"processed_time\") }}' AS processed_time\n        ,a.*\nFROM {{ ref('stg_property__rent_recommended_properties') }} a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Rental','Rental & Sale') and b.rental_status in ('published','republished')\nAND c.business_type in ('Rental','Rental & Sale') and c.rental_status in ('published','republished')\nAND a.service_type = 'rent'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.stg_property__rent_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__rent_recommended_properties"], "unique_id": "model.houm.property__rent_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__rent_recommended_properties.sql", "original_file_path": "models/dwh/analytics_deliver/property__rent_recommended_properties.sql", "name": "property__rent_recommended_properties", "alias": "property__rent_recommended_properties", "checksum": {"name": "sha256", "checksum": "6cee3ba28aaf16c8b6270b1e6165c4dfd7f2cdd14ebd705b0b953b751dff06a8"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__published_properties"], ["stg_property__rent_recommended_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__rent_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1664825036.366882, "compiled_sql": "with published_properties as (\n    SELECT property_id\n            ,business_type\n            ,rental_status\n            ,sales_status\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" \n)\n\nSELECT  \n        '2022-10-11 18:29:46.503778-03:00' AS processed_time\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_property__rent_recommended_properties\" a\nLEFT JOIN published_properties b ON a.property_1 = b.property_id\nLEFT JOIN published_properties c ON a.property_2 = c.property_id\nWHERE b.business_type in ('Rental','Rental & Sale') and b.rental_status in ('published','republished')\nAND c.business_type in ('Rental','Rental & Sale') and c.rental_status in ('published','republished')\nAND a.service_type = 'rent'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__rent_recommended_properties\""}, "model.houm.property__rev_kpi_recommendation_performance": {"raw_sql": "WITH median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY recommended_price_ratio) as median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    min_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY min_recommended_price_ratio) as min_median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    max_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY max_recommended_price_ratio) as max_median_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ), \n    average_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        COUNT(*) as properties_counted,\n        AVG(recommended_price_ratio) as average_price_ratio,\n        AVG(min_recommended_price_ratio) as average_min_price_ratio,\n        AVG(max_recommended_price_ratio) as average_max_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }} average_ratio\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    stdev_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        STDDEV(recommended_price_ratio) as stdev_price_ratio,\n        STDDEV(min_recommended_price_ratio) as stdev_min_price_ratio,\n        STDDEV(max_recommended_price_ratio) as stdev_max_price_ratio\n    FROM {{ ref('property__rev_kpi_ratio') }}\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    rev_kpi AS (\n    SELECT average_ratio.service_type,\n    average_ratio.country,\n    average_ratio.city_marketplace,\n    average_ratio.status,\n    average_ratio.properties_counted,\n    average_price_ratio,\n    stdev_ratio.stdev_price_ratio,\n    average_min_price_ratio,\n    stdev_ratio.stdev_min_price_ratio,\n    average_max_price_ratio,\n    stdev_ratio.stdev_max_price_ratio,\n    median_price_ratio,\n    min_median_price_ratio,\n    max_median_price_ratio\n    FROM (average_ratio\n        LEFT JOIN median_ratio\n        ON (average_ratio.service_type = median_ratio.service_type\n        AND average_ratio.status = median_ratio.status\n        AND average_ratio.country = median_ratio.country\n        AND average_ratio.city_marketplace = median_ratio.city_marketplace\n        )\n        LEFT JOIN min_median_ratio\n        ON (average_ratio.service_type = min_median_ratio.service_type\n        AND average_ratio.status = min_median_ratio.status\n        AND average_ratio.country = min_median_ratio.country\n        AND average_ratio.city_marketplace = min_median_ratio.city_marketplace\n        )\n        LEFT JOIN max_median_ratio\n        ON (average_ratio.service_type = max_median_ratio.service_type\n        AND average_ratio.status = max_median_ratio.status\n        AND average_ratio.country = max_median_ratio.country\n        AND average_ratio.city_marketplace = max_median_ratio.city_marketplace\n        )\n        LEFT JOIN stdev_ratio\n        ON (average_ratio.service_type = stdev_ratio.service_type\n        AND average_ratio.status = stdev_ratio.status\n        AND average_ratio.country = stdev_ratio.country\n        AND average_ratio.city_marketplace = stdev_ratio.city_marketplace\n        )\n        )\n    )\n\n    SELECT *\n    FROM rev_kpi\n    ORDER BY service_type,\n             country,\n             city_marketplace,\n             status", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics_deliver", "database": null, "tags": ["dw", "ml", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics_deliver", "fqn": ["houm", "dwh", "analytics_deliver", "property__rev_kpi_recommendation_performance"], "unique_id": "model.houm.property__rev_kpi_recommendation_performance", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "original_file_path": "models/dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "name": "property__rev_kpi_recommendation_performance", "alias": "property__rev_kpi_recommendation_performance", "checksum": {"name": "sha256", "checksum": "0b394490824dc364b855e947044f974242e5ee6a5f7ce0e8b1f7d7f43c4e7c6e"}, "tags": ["dw", "ml", "feature_store"], "refs": [["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"], ["property__rev_kpi_ratio"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics_deliver/property__rev_kpi_recommendation_performance.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics_deliver", "materialized": "table", "tags": ["dw", "ml", "feature_store"]}, "created_at": 1664825036.37055, "compiled_sql": "WITH median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY recommended_price_ratio) as median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    min_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY min_recommended_price_ratio) as min_median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    max_median_ratio AS (SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY max_recommended_price_ratio) as max_median_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ), \n    average_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        COUNT(*) as properties_counted,\n        AVG(recommended_price_ratio) as average_price_ratio,\n        AVG(min_recommended_price_ratio) as average_min_price_ratio,\n        AVG(max_recommended_price_ratio) as average_max_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\" average_ratio\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    stdev_ratio AS (\n        SELECT\n        service_type,\n        status,\n        country,\n        city_marketplace,\n        STDDEV(recommended_price_ratio) as stdev_price_ratio,\n        STDDEV(min_recommended_price_ratio) as stdev_min_price_ratio,\n        STDDEV(max_recommended_price_ratio) as stdev_max_price_ratio\n    FROM \"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\"\n    GROUP BY service_type, status, country, city_marketplace\n    ),\n    rev_kpi AS (\n    SELECT average_ratio.service_type,\n    average_ratio.country,\n    average_ratio.city_marketplace,\n    average_ratio.status,\n    average_ratio.properties_counted,\n    average_price_ratio,\n    stdev_ratio.stdev_price_ratio,\n    average_min_price_ratio,\n    stdev_ratio.stdev_min_price_ratio,\n    average_max_price_ratio,\n    stdev_ratio.stdev_max_price_ratio,\n    median_price_ratio,\n    min_median_price_ratio,\n    max_median_price_ratio\n    FROM (average_ratio\n        LEFT JOIN median_ratio\n        ON (average_ratio.service_type = median_ratio.service_type\n        AND average_ratio.status = median_ratio.status\n        AND average_ratio.country = median_ratio.country\n        AND average_ratio.city_marketplace = median_ratio.city_marketplace\n        )\n        LEFT JOIN min_median_ratio\n        ON (average_ratio.service_type = min_median_ratio.service_type\n        AND average_ratio.status = min_median_ratio.status\n        AND average_ratio.country = min_median_ratio.country\n        AND average_ratio.city_marketplace = min_median_ratio.city_marketplace\n        )\n        LEFT JOIN max_median_ratio\n        ON (average_ratio.service_type = max_median_ratio.service_type\n        AND average_ratio.status = max_median_ratio.status\n        AND average_ratio.country = max_median_ratio.country\n        AND average_ratio.city_marketplace = max_median_ratio.city_marketplace\n        )\n        LEFT JOIN stdev_ratio\n        ON (average_ratio.service_type = stdev_ratio.service_type\n        AND average_ratio.status = stdev_ratio.status\n        AND average_ratio.country = stdev_ratio.country\n        AND average_ratio.city_marketplace = stdev_ratio.city_marketplace\n        )\n        )\n    )\n\n    SELECT *\n    FROM rev_kpi\n    ORDER BY service_type,\n             country,\n             city_marketplace,\n             status", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics_deliver\".\"property__rev_kpi_recommendation_performance\""}, "model.houm.goals_current": {"raw_sql": "WITH GoalsCurrent AS (\nSELECT *\nFROM {{ ref('rentals_units') }}\nUNION ALL\nSELECT *\nFROM {{ ref('sales_units') }}\nUNION ALL\nSELECT *\nFROM {{ref('sales_local_revenue')}}\nUNION ALL\nSELECT *\nFROM {{ref('eop_subs')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_rentals_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_local_revenue')}})\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units", "model.houm.sales_units", "model.houm.sales_local_revenue", "model.houm.eop_subs", "model.houm.cum_sales_units", "model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "goals_current"], "unique_id": "model.houm.goals_current", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/goals_current.sql", "original_file_path": "models/dwh/marts/core/finance/goals_current.sql", "name": "goals_current", "alias": "goals_current", "checksum": {"name": "sha256", "checksum": "23317083206c46e8e8d8c544cb8b431810b4fc08b8b2d17e69dba0915e9b83a4"}, "tags": [], "refs": [["rentals_units"], ["sales_units"], ["sales_local_revenue"], ["eop_subs"], ["cum_sales_units"], ["cum_rentals_units"], ["cum_sales_local_revenue"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/goals_current.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825036.3718688, "compiled_sql": "WITH GoalsCurrent AS (\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"eop_subs\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_sales_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_rentals_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"analytics_team\".\"cum_sales_local_revenue\")\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"goals_current\""}, "model.houm.cum_rentals_units": {"raw_sql": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('rentals_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_rentals_units"], "unique_id": "model.houm.cum_rentals_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_rentals_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_rentals_units.sql", "name": "cum_rentals_units", "alias": "cum_rentals_units", "checksum": {"name": "sha256", "checksum": "b57592818d6920d917a5a7d191773833f0052a04488fe59b114871f3b3c303d0"}, "tags": [], "refs": [["rentals_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825036.373174, "compiled_sql": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_rentals_units\""}, "model.houm.cum_sales_units": {"raw_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('sales_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_units"], "unique_id": "model.houm.cum_sales_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_units.sql", "name": "cum_sales_units", "alias": "cum_sales_units", "checksum": {"name": "sha256", "checksum": "84a8f919c91fb3b354ac880eb7ef3c42870af9a1de67d62bc7508d944e5e9a00"}, "tags": [], "refs": [["sales_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825036.374337, "compiled_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_sales_units\""}, "model.houm.cum_sales_local_revenue": {"raw_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    {{ ref('sales_local_revenue') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_local_revenue"], "unique_id": "model.houm.cum_sales_local_revenue", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_local_revenue.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "name": "cum_sales_local_revenue", "alias": "cum_sales_local_revenue", "checksum": {"name": "sha256", "checksum": "a394ed7fc2202cccf0378864df609e448a6a6cebad9c23c559de6d86bb4de73c"}, "tags": [], "refs": [["sales_local_revenue"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825036.375343, "compiled_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"cum_sales_local_revenue\""}, "model.houm.sales_seller_metric_leads": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads"], "unique_id": "model.houm.sales_seller_metric_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads.sql", "name": "sales_seller_metric_leads", "alias": "sales_seller_metric_leads", "checksum": {"name": "sha256", "checksum": "b0db4978aa91622ff5ed1dfb0a1393deada4b86aaa2a54c0bf8f55303de1734a"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.376478, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\""}, "model.houm.rental_landlord_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "name": "rental_landlord_metric_paid_media_cost", "alias": "rental_landlord_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4ec3cea3ff46c4c3498f6b68955ed87fc5acccd4b7575b874748b36ee5c33ba6"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.381118, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\""}, "model.houm.sales_seller_metric_photo_scheduled": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "name": "sales_seller_metric_photo_scheduled", "alias": "sales_seller_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "6aa940f76677aa9565cd466477aa4daf72509825b44a44ecdd63d1de2b24251f"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.384259, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_photo_done": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_done"], "unique_id": "model.houm.rental_landlord_metric_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "name": "rental_landlord_metric_photo_done", "alias": "rental_landlord_metric_photo_done", "checksum": {"name": "sha256", "checksum": "45a5785f0a180b847167b08050e694aa3cfb2f1ca38356a48316640807c0071c"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.387327, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\""}, "model.houm.sales_seller_metric_new_sale_listing": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_new_sale_listing') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "name": "sales_seller_metric_new_sale_listing", "alias": "sales_seller_metric_new_sale_listing", "checksum": {"name": "sha256", "checksum": "9563888b2dac40d8a4db78bd8c687cd46fb2f34f569fd34756a0586637f26570"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.39053, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\""}, "model.houm.sales_company_metric_new_units_listing": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_units_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'unit_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_units_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_units_listing"], "unique_id": "model.houm.sales_company_metric_new_units_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_units_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_units_listing.sql", "name": "sales_company_metric_new_units_listing", "alias": "sales_company_metric_new_units_listing", "checksum": {"name": "sha256", "checksum": "8064ea47d952412e5c880bc63e3b598c2d2c6983fd466c72d40ae3559415e0da"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_units_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_units_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.393863, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_units_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN unit_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN unit_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN unit_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN unit_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN unit_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN unit_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN unit_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN unit_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN unit_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_units_listing\""}, "model.houm.sales_company_metric_new_unittypes_listing": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_unittypes_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'unit_type_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_unittypes_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_unittypes_listing"], "unique_id": "model.houm.sales_company_metric_new_unittypes_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "name": "sales_company_metric_new_unittypes_listing", "alias": "sales_company_metric_new_unittypes_listing", "checksum": {"name": "sha256", "checksum": "f89c8c1ef17a927bcea010fa3a48e5f08fd3979e52e8f48c14060e3678616daf"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_unittypes_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_unittypes_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.396754, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_unittypes_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN unit_type_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN unit_type_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN unit_type_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN unit_type_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN unit_type_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN unit_type_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN unit_type_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN unit_type_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN unit_type_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_unittypes_listing\""}, "model.houm.sales_seller_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "name": "sales_seller_metric_leads_qualified_date", "alias": "sales_seller_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "609b61ba4f0b62f1aefdb0f635a7dce230ce6c158bb5bb8f5f5012741c790d17"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.399745, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\""}, "model.houm.sales_company_metric_new_project_listing": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_company_metric_details_new_project_listing') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_company_metric_details_new_project_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_company_metric_new_project_listing"], "unique_id": "model.houm.sales_company_metric_new_project_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_company_metric_new_project_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_company_metric_new_project_listing.sql", "name": "sales_company_metric_new_project_listing", "alias": "sales_company_metric_new_project_listing", "checksum": {"name": "sha256", "checksum": "1c42f8ff411e7b104ed24b04ad0197e576bfec22c02bfd0804e3ef520c3fbb20"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_company_metric_details_new_project_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_company_metric_new_project_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.403718, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_project_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_project_listing\""}, "model.houm.properties_published": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT \r\n        a.id as property_id\r\n        ,b.status as rental_status\r\n        ,c.status as sales_status\r\n        ,a.*\r\nFROM {{ ref('proc_properties') }} a\r\nleft join {{ ref('proc_propertydetails') }} b on a.id = b.property_id \r\nleft join {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id\r\nwhere b.status in ('published','republished') or c.status in ('published','republished')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "properties_published"], "unique_id": "model.houm.properties_published", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/properties_published.sql", "original_file_path": "models/dwh/marts/supply/properties_published.sql", "name": "properties_published", "alias": "properties_published", "checksum": {"name": "sha256", "checksum": "70d753482cbbc37f43199b3a9d0615c53ac843bb07ad4367f786cd68ebc4ec34"}, "tags": ["dw", "marts", "supply"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/dwh/marts/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/marts/supply/properties_published.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825037.661205, "compiled_sql": "\n\nSELECT \n        a.id as property_id\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id\nwhere b.status in ('published','republished') or c.status in ('published','republished')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"properties_published\""}, "model.houm.rental_landlord_metric_leads_qualified": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "name": "rental_landlord_metric_leads_qualified", "alias": "rental_landlord_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "da7a2dbc304913b8c1e526ca186dd73975fb818b5a26ca5fa804e1998dc8a672"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.409166, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\""}, "model.houm.rental_landlord_metric_photo_scheduled": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "name": "rental_landlord_metric_photo_scheduled", "alias": "rental_landlord_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "716c9f1df6fe59f5813be45d1fddb7988ba57f928f3624f729974a807e37a3d7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.41215, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "name": "rental_landlord_metric_leads_qualified_date", "alias": "rental_landlord_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "faa76e50a08b88bc88c1b0e2050dca429f4a008c1950674e548c49d633e50896"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.415092, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\""}, "model.houm.rental_landlord_metric_new_rental_listing_b2c": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_new_rental_listing_b2c') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing_b2c", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_new_rental_listing_b2c", "alias": "rental_landlord_metric_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "ce73738ae3ab5aba8ce47dbdd779517fdf3e4374510e637f2ffc006ad8161bdf"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing_b2c"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.417802, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_photo_created": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_photo_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_created"], "unique_id": "model.houm.rental_landlord_metric_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "name": "rental_landlord_metric_photo_created", "alias": "rental_landlord_metric_photo_created", "checksum": {"name": "sha256", "checksum": "a24242cd5867cad2b23065a963b2a6818d77e2ba96e2d7e83d2ff174e14871f7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.420633, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\""}, "model.houm.sales_seller_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "name": "sales_seller_metric_paid_media_cost", "alias": "sales_seller_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "30e0eeb6863267621866dfbbc57bb8250b8210225f289e4df20df7fd488f1ef7"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.423657, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\""}, "model.houm.rental_landlord_metric_leads": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_landlord_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads"], "unique_id": "model.houm.rental_landlord_metric_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads.sql", "name": "rental_landlord_metric_leads", "alias": "rental_landlord_metric_leads", "checksum": {"name": "sha256", "checksum": "73ad210bc9700df23a7cf7648fe735a2b864c3718ae4fe024778e6289e9514d7"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.4267058, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\""}, "model.houm.sales_seller_metric_photo_created": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_created"], "unique_id": "model.houm.sales_seller_metric_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "name": "sales_seller_metric_photo_created", "alias": "sales_seller_metric_photo_created", "checksum": {"name": "sha256", "checksum": "fe30d1e68a6bb3c84a9dab8084c529d7cd1bb2bbef21056abefa26df2a5ffafe"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.4294279, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\""}, "model.houm.sales_seller_metric_photo_done": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_seller_metric_details_photo_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_done"], "unique_id": "model.houm.sales_seller_metric_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "name": "sales_seller_metric_photo_done", "alias": "sales_seller_metric_photo_done", "checksum": {"name": "sha256", "checksum": "aac3108cac20c82a2b35bd2a0f5e21e225914d064fdf23f8b75c79f7e9611057"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.432787, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\""}, "model.houm.rental_landlord_metric_new_rental_listing": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_landlord_metric_details_new_rental_listing') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "name": "rental_landlord_metric_new_rental_listing", "alias": "rental_landlord_metric_new_rental_listing", "checksum": {"name": "sha256", "checksum": "c769749d5de2e85a0b80a720038f452f31741e973877e9870afbba7600940f22"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.4357572, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\""}, "model.houm.sales_seller_metric_new_sale_listing_b2c": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_new_sale_listing_b2c') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'property_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing_b2c", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "name": "sales_seller_metric_new_sale_listing_b2c", "alias": "sales_seller_metric_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "01ea04b555aadf666080d9ba75ff13ab1cda3fef9b082c7f178d86edd1c5f78f"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing_b2c"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.438739, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\""}, "model.houm.sales_seller_metric_leads_qualified": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_seller_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "name": "sales_seller_metric_leads_qualified", "alias": "sales_seller_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "ef7da62573562bff04d0ef5b25197256eaa96830b6f560c693785c775ee18fc2"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "supply"]}, "created_at": 1664825036.441837, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\""}, "model.houm.kpi_landlord_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_scheduled"], "unique_id": "model.houm.kpi_landlord_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "name": "kpi_landlord_photo_scheduled", "alias": "kpi_landlord_photo_scheduled", "checksum": {"name": "sha256", "checksum": "f2eae21934374c333ca540049e3c8c4f7133189a00e27729d4e4ece3e14c8072"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.444824, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_scheduled\""}, "model.houm.kpi_tenant_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_done"], "unique_id": "model.houm.kpi_tenant_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "name": "kpi_tenant_visit_done", "alias": "kpi_tenant_visit_done", "checksum": {"name": "sha256", "checksum": "6848672d8ba7b20b3c5cdb105a571a50bd017d8bbd364366a86cb9ef5a352dac"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.446143, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_done\""}, "model.houm.kpi_landlord_nrl": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date), --Aqui encontre inconsistencias en Macrozones (props sin geo_id, revisar)\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_properties_macrozone')}}\nwhere business like 'Rental%'\nand first_publication_date is not null\norder by 2 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_nrl"], "unique_id": "model.houm.kpi_landlord_nrl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "name": "kpi_landlord_nrl", "alias": "kpi_landlord_nrl", "checksum": {"name": "sha256", "checksum": "b95d5298995825a722e08bd8c587f5014e68ea041b6d7d3d2c8a3fe3e858ad28"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_properties_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.447362, "compiled_sql": "\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date), --Aqui encontre inconsistencias en Macrozones (props sin geo_id, revisar)\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\"\nwhere business like 'Rental%'\nand first_publication_date is not null\norder by 2 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_nrl\""}, "model.houm.kpi_landlord_photo_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_created"], "unique_id": "model.houm.kpi_landlord_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "name": "kpi_landlord_photo_created", "alias": "kpi_landlord_photo_created", "checksum": {"name": "sha256", "checksum": "a4a06a66bad678f240b3f7061a50be467db1b76d1cb4ae2d2700a4933177f50b"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.448707, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_created\""}, "model.houm.kpi_landlord_photo_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_done"], "unique_id": "model.houm.kpi_landlord_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "name": "kpi_landlord_photo_done", "alias": "kpi_landlord_photo_done", "checksum": {"name": "sha256", "checksum": "05f051703997de2af5788d3077767df49c987f12d2b78bc610080ed3f0715acb"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.4499168, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_done\""}, "model.houm.kpi_tenant_visit_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_created"], "unique_id": "model.houm.kpi_tenant_visit_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "name": "kpi_tenant_visit_created", "alias": "kpi_tenant_visit_created", "checksum": {"name": "sha256", "checksum": "c7f45097c8c5e6f3f218d612e005b67ff132a7f3f0c7133ce74662e6bcf76208"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.451345, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_created\""}, "model.houm.kpi_tenant_visit_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_scheduled"], "unique_id": "model.houm.kpi_tenant_visit_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "name": "kpi_tenant_visit_scheduled", "alias": "kpi_tenant_visit_scheduled", "checksum": {"name": "sha256", "checksum": "b175fff035b68de2d27677dbecefd4e882dc387a83541af8aa0004ff26917b5e"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.453013, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_scheduled\""}, "model.houm.kpi_seller_photo_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_created"], "unique_id": "model.houm.kpi_seller_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "name": "kpi_seller_photo_created", "alias": "kpi_seller_photo_created", "checksum": {"name": "sha256", "checksum": "88e8b5ad6f189f6aa8a6d3172d67dae2587644b6f4ec01f368970384d76463c3"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.454636, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_created\""}, "model.houm.kpi_seller_nsl": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date),\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_properties_macrozone')}}\nwhere business like '%Sale'\nand first_publication_date is not null\norder by 2 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_nsl"], "unique_id": "model.houm.kpi_seller_nsl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_nsl.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_nsl.sql", "name": "kpi_seller_nsl", "alias": "kpi_seller_nsl", "checksum": {"name": "sha256", "checksum": "0553f011394010ddbd5ed8d303aa93967047a3192505451c5769a11b1aa946e5"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_properties_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_nsl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.457691, "compiled_sql": "\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date),\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\"\nwhere business like '%Sale'\nand first_publication_date is not null\norder by 2 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_nsl\""}, "model.houm.kpi_seller_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_scheduled"], "unique_id": "model.houm.kpi_seller_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "name": "kpi_seller_photo_scheduled", "alias": "kpi_seller_photo_scheduled", "checksum": {"name": "sha256", "checksum": "ff6c40ace42d330eef680e16e8f7cfce61a27f9bfe892b869d35c5933e8c18fe"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.459737, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_scheduled\""}, "model.houm.kpi_buyer_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_done"], "unique_id": "model.houm.kpi_buyer_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "name": "kpi_buyer_visit_done", "alias": "kpi_buyer_visit_done", "checksum": {"name": "sha256", "checksum": "59a5446d2a525284cd7ebe69b3d646f3b4f1497db31f3a24ef7c55f8e146bd26"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.468694, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_done\""}, "model.houm.kpi_buyer_visit_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_created"], "unique_id": "model.houm.kpi_buyer_visit_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "name": "kpi_buyer_visit_created", "alias": "kpi_buyer_visit_created", "checksum": {"name": "sha256", "checksum": "156997cf390f480615a7288028119b38f70e7697d6bbc663e131764f46039a54"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.4707682, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_created\""}, "model.houm.kpi_seller_photo_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_done"], "unique_id": "model.houm.kpi_seller_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "name": "kpi_seller_photo_done", "alias": "kpi_seller_photo_done", "checksum": {"name": "sha256", "checksum": "22422bae33909bff3819ee4520131eb90a72e4a98c885bdb03bd0a92d3f106e5"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.473512, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_done\""}, "model.houm.kpi_buyer_visit_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_scheduled"], "unique_id": "model.houm.kpi_buyer_visit_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "name": "kpi_buyer_visit_scheduled", "alias": "kpi_buyer_visit_scheduled", "checksum": {"name": "sha256", "checksum": "12b2288f1922d5e568579c0e8115048da0eed1129a48ab37184c65441c9422f3"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1664825036.476388, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_scheduled\""}, "model.houm.sales_investor_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads_qualified_date"], "unique_id": "model.houm.sales_investor_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "name": "sales_investor_metric_leads_qualified_date", "alias": "sales_investor_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "7c3a2127d8d531a7c6ae6d6e54512d907f026d683af5601a5069490cc53a0ad3"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.479223, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified_date\""}, "model.houm.rental_tenant_metric_schedules_cancelled": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_cancelled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_cancelled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_cancelled"], "unique_id": "model.houm.rental_tenant_metric_schedules_cancelled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "name": "rental_tenant_metric_schedules_cancelled", "alias": "rental_tenant_metric_schedules_cancelled", "checksum": {"name": "sha256", "checksum": "2400f665c155032bf433077ded38563a1f427c1b27c45860f6eaf8504e381ed6"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_cancelled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.483409, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled\""}, "model.houm.sales_buyer_metric_leads_qualified": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads_qualified"], "unique_id": "model.houm.sales_buyer_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "name": "sales_buyer_metric_leads_qualified", "alias": "sales_buyer_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "f1ff9f7186146c837da00d8072f9f2a4a1ac09adb0847753fcbcd8f060b8f8dc"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.487474, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified\""}, "model.houm.rental_tenant_metric_portal_leads_interactions": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_leads_interactions') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'activity_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "name": "rental_tenant_metric_portal_leads_interactions", "alias": "rental_tenant_metric_portal_leads_interactions", "checksum": {"name": "sha256", "checksum": "433a2867587eb2ddf9633908ae8be1206029b2355ec16cdae05d7e0a5d63fb0d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.490721, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN activity_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN activity_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN activity_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN activity_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN activity_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN activity_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN activity_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN activity_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN activity_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\""}, "model.houm.rental_tenant_metric_correct_visit_done": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_correct_visit_done') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_correct_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_correct_visit_done"], "unique_id": "model.houm.rental_tenant_metric_correct_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "name": "rental_tenant_metric_correct_visit_done", "alias": "rental_tenant_metric_correct_visit_done", "checksum": {"name": "sha256", "checksum": "274f9236ff6208964265a9e98964d158fa298803e070c686e0c721e9f31a2d1d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_correct_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.4953952, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_done\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\""}, "model.houm.sales_buyer_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads_qualified_date') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads_qualified_date"], "unique_id": "model.houm.sales_buyer_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "name": "sales_buyer_metric_leads_qualified_date", "alias": "sales_buyer_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "ea71a9728e31e4915bed23c6dd3fe3e4d4eea8a7c7b26c8acfef0dfac7e974a3"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads_qualified_date"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.498432, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified_date\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified_date\""}, "model.houm.sales_demand_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n  * \nFROM {{ ref('sales_demand_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_demand_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_demand_metric_paid_media_cost"], "unique_id": "model.houm.sales_demand_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "name": "sales_demand_metric_paid_media_cost", "alias": "sales_demand_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "2dfd7b117e70323019dcfcc73cf8a46e20a3ae6956ac232631a92d0768ba2213"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_demand_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_demand_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.501361, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n  * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_schedules_scheduled_organic": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_organic') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_organic"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_organic"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_organic", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "name": "rental_tenant_metric_schedules_scheduled_organic", "alias": "rental_tenant_metric_schedules_scheduled_organic", "checksum": {"name": "sha256", "checksum": "87f10cbb1c356146198c1fb26d5caea9eefb3fa8880a889cea9e4ed6064b2f44"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_organic"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_organic.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.504319, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_organic\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_organic\""}, "model.houm.rental_tenant_metric_schedules_created": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "name": "rental_tenant_metric_schedules_created", "alias": "rental_tenant_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "072d60a2610bc4d054e4cab933dbbf298294b91d5b89a3542d4e4acb4217b13e"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.50734, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\""}, "model.houm.sales_buyer_metric_schedules_created": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_created') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "name": "sales_buyer_metric_schedules_created", "alias": "sales_buyer_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "7d0aaf6e49c17bf9779577761deec712ec6bb89682a767ae64e79a3296a01a63"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.510915, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\""}, "model.houm.rental_tenant_metric_correct_visit_finished": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_correct_visit_finished') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_correct_visit_finished"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_correct_visit_finished"], "unique_id": "model.houm.rental_tenant_metric_correct_visit_finished", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "name": "rental_tenant_metric_correct_visit_finished", "alias": "rental_tenant_metric_correct_visit_finished", "checksum": {"name": "sha256", "checksum": "371426e23c3851dcfc331a71b15b5b9206241827644c42701256fd1fee356187"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_correct_visit_finished"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_correct_visit_finished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5138922, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_finished\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_finished\""}, "model.houm.sales_buyer_metric_schedules_done": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "name": "sales_buyer_metric_schedules_done", "alias": "sales_buyer_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "b4e3bd54afb0fa0974f4d224803355e5fa5d9f4d6959a580365a6b69b1629233"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.517767, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\""}, "model.houm.rental_tenant_metric_portal_leads": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_leads') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'lead_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads"], "unique_id": "model.houm.rental_tenant_metric_portal_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "name": "rental_tenant_metric_portal_leads", "alias": "rental_tenant_metric_portal_leads", "checksum": {"name": "sha256", "checksum": "be2e8d042d040c7588963ce157dae6805ebed42728a953ba421ab7b32ae186e2"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.520753, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN lead_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN lead_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN lead_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN lead_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN lead_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN lead_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN lead_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN lead_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN lead_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\""}, "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_autoscheduled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_autoscheduled"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "name": "rental_tenant_metric_schedules_scheduled_autoscheduled", "alias": "rental_tenant_metric_schedules_scheduled_autoscheduled", "checksum": {"name": "sha256", "checksum": "e9ec00db32be4dfa104f194ac7b95872c3ae9f5509bc6fbdcfbcafad137c7b08"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_autoscheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_autoscheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.523822, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_autoscheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_autoscheduled\""}, "model.houm.rental_tenant_metric_reservations_refunded": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations_refunded') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations_refunded"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_reservations_refunded", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "name": "rental_tenant_metric_reservations_refunded", "alias": "rental_tenant_metric_reservations_refunded", "checksum": {"name": "sha256", "checksum": "aa4e07d10bf7fc82e94172a1a4b261448817019509332d4fd33271cbc05e93d0"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_refunded"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.528086, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\""}, "model.houm.sales_demand_metric_leads": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n   * \nFROM {{ ref('sales_demand_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_demand_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_demand_metric_leads"], "unique_id": "model.houm.sales_demand_metric_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_demand_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_demand_metric_leads.sql", "name": "sales_demand_metric_leads", "alias": "sales_demand_metric_leads", "checksum": {"name": "sha256", "checksum": "5cf8e76d891693b278535a942ab735679f0d7187a251a47dd5b68177ebb68782"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_demand_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_demand_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5310779, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n   * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\""}, "model.houm.rental_tenant_metric_schedules_scheduled_admin": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled_admin') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled_admin"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled_admin"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled_admin", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "name": "rental_tenant_metric_schedules_scheduled_admin", "alias": "rental_tenant_metric_schedules_scheduled_admin", "checksum": {"name": "sha256", "checksum": "fa00fb360e39eed72ef6b1ada37ea986bb79d3fe734097a2578685b64f176448"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled_admin"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled_admin.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.533943, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_admin\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_admin\""}, "model.houm.sales_buyer_metric_leads": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_leads"], "unique_id": "model.houm.sales_buyer_metric_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_leads.sql", "name": "sales_buyer_metric_leads", "alias": "sales_buyer_metric_leads", "checksum": {"name": "sha256", "checksum": "88bbd234b1896b13903d44d150c6d7622d99d0a3a8bda8de3f27d9f0b47a04c1"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5370822, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads\""}, "model.houm.sales_buyer_metric_schedules_scheduled": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('sales_buyer_metric_details_schedules_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "name": "sales_buyer_metric_schedules_scheduled", "alias": "sales_buyer_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "2541a2e1eca253fa156bab75fb173bbe3b929cebbd185e1ff4875a129a92c028"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.540034, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\""}, "model.houm.sales_buyer_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "name": "sales_buyer_metric_paid_media_cost", "alias": "sales_buyer_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "e815fb4f4b270c8f2a934e9abce792465f2d8fb1a209b6084285533f0540f851"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.543707, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_new_tenant": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_new_tenant') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_new_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_new_tenant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "name": "rental_tenant_metric_new_tenant", "alias": "rental_tenant_metric_new_tenant", "checksum": {"name": "sha256", "checksum": "0a762078e5712f3603981b20ccc0f1953c566b1506e6f3e0b8e4d2dcdbce3edf"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_tenant"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.546711, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\""}, "model.houm.sales_investor_metric_leads": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads"], "unique_id": "model.houm.sales_investor_metric_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads.sql", "name": "sales_investor_metric_leads", "alias": "sales_investor_metric_leads", "checksum": {"name": "sha256", "checksum": "f3fbafedb73ca97c763392016adf4148744a1d1a882734fd2be16ce042a8f2b0"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.550436, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads\""}, "model.houm.rental_tenant_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "name": "rental_tenant_metric_paid_media_cost", "alias": "rental_tenant_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4b461dca80920707f9abd87e812d5eb5463ebd0154aa853a29cabe7270b0b538"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.553097, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_reservations": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations"], "unique_id": "model.houm.rental_tenant_metric_reservations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "name": "rental_tenant_metric_reservations", "alias": "rental_tenant_metric_reservations", "checksum": {"name": "sha256", "checksum": "04f120cf9f93ddcd93ecf37eff2f0ab3cae3acd1cda5fd5cf5c90859f922f235"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.555786, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\""}, "model.houm.rental_tenant_metric_schedules_unfinished": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_unfinished') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_unfinished"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_unfinished"], "unique_id": "model.houm.rental_tenant_metric_schedules_unfinished", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "name": "rental_tenant_metric_schedules_unfinished", "alias": "rental_tenant_metric_schedules_unfinished", "checksum": {"name": "sha256", "checksum": "8c2e049fc07dea3c068c78fca00e55ad78845767e4c543fad09997234d9579f9"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_unfinished"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_unfinished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.559364, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_unfinished\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_unfinished\""}, "model.houm.sales_investor_metric_schedules_created": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n   * \nFROM {{ ref('sales_investor_metric_details_schedules_created') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_created"], "unique_id": "model.houm.sales_investor_metric_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_created.sql", "name": "sales_investor_metric_schedules_created", "alias": "sales_investor_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "39d941d4c08b637469b38ab75182f52a8aa3bc5e6edadae2d42e3db063075ab2"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_created"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.562422, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n   * \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_created\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_created\""}, "model.houm.rental_tenant_metric_schedules_done": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_done') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "name": "rental_tenant_metric_schedules_done", "alias": "rental_tenant_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "d9f89e115f9c3c887a359a816e87b80ea070feabaae8feca0328681ca8cc93e8"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5696309, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\""}, "model.houm.sales_investor_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_paid_media_cost') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'day_cost_usd', agregation_func = 'SUM', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_paid_media_cost"], "unique_id": "model.houm.sales_investor_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "name": "sales_investor_metric_paid_media_cost", "alias": "sales_investor_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "5aa62489d4b0f729fa2b196cdcec71c1318bb172027f875cda7a858f816ead17"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_paid_media_cost"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.572497, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_paid_media_cost\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        SUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost_usd END ) yesterday,  \n        SUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost_usd END ) daybeforeyesterday,  \n        SUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost_usd END ) LastWeek,  \n        SUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost_usd END ) PastLastWeek,  \n        SUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost_usd END ) ThisMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost_usd END ) LastMonthtoday,  \n        SUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost_usd END ) LastMonth,  \n        SUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost_usd END ) LasttwoMonth,  \n        SUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost_usd END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_paid_media_cost\""}, "model.houm.sales_investor_metric_schedules_done": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_schedules_done') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_done"], "unique_id": "model.houm.sales_investor_metric_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_done.sql", "name": "sales_investor_metric_schedules_done", "alias": "sales_investor_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "aff8bdc885c31ecd8d12879b8ba716d50b1e57d253070fc5cfabee7b59490d2e"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.576232, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_done\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_done\""}, "model.houm.rental_tenant_metric_done_time": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_done_time') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_done_time"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_done_time"], "unique_id": "model.houm.rental_tenant_metric_done_time", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_done_time.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_done_time.sql", "name": "rental_tenant_metric_done_time", "alias": "rental_tenant_metric_done_time", "checksum": {"name": "sha256", "checksum": "87e2d8895239d6158cc49760fbf714258d3194f99dbe87e2ad8fafe5e55b088a"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_done_time"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_done_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.579647, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_done_time\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_done_time\""}, "model.houm.rental_tenant_metric_arrived_on_time": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_arrived_on_time') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_arrived_on_time"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_arrived_on_time"], "unique_id": "model.houm.rental_tenant_metric_arrived_on_time", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "name": "rental_tenant_metric_arrived_on_time", "alias": "rental_tenant_metric_arrived_on_time", "checksum": {"name": "sha256", "checksum": "ecb0d149b41a4d1321b5bb98774ea735964df62bcf0ca945188970042127159d"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_arrived_on_time"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_arrived_on_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.584097, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_arrived_on_time\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_arrived_on_time\""}, "model.houm.sales_buyer_metric_correct_visit_done": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_buyer_metric_details_correct_visit_done') }}\nWHERE is_test = FALSE\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_buyer_metric_details_correct_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_correct_visit_done"], "unique_id": "model.houm.sales_buyer_metric_correct_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "name": "sales_buyer_metric_correct_visit_done", "alias": "sales_buyer_metric_correct_visit_done", "checksum": {"name": "sha256", "checksum": "5b275fd99385a6dabe65060ece34c52c118cf68d177b510829ea797a92f5f949"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_correct_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.587601, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_correct_visit_done\"\nWHERE is_test = FALSE\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_correct_visit_done\""}, "model.houm.rental_tenant_metric_new_subs": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_new_subs') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'sub_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_new_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_subs"], "unique_id": "model.houm.rental_tenant_metric_new_subs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_subs.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "name": "rental_tenant_metric_new_subs", "alias": "rental_tenant_metric_new_subs", "checksum": {"name": "sha256", "checksum": "407cd3f91d7c64a0931d619478d124a240083630e14d27b04e8c65cc9d4ee932"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5919092, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\""}, "model.houm.rental_tenant_metric_schedules_scheduled": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nWITH metric AS (\r\nSELECT \r\n\t* \r\nFROM {{ ref('rental_tenant_metric_details_schedules_scheduled') }}\r\n)\r\n\r\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "name": "rental_tenant_metric_schedules_scheduled", "alias": "rental_tenant_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "e227f76e393eeba2eac39a6eaef0bee93895cc74e7b4f588723f5bc12db0e267"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.5973089, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\""}, "model.houm.rental_tenant_metric_reservations_effective": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_reservations_effective') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'reservation_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_reservations_effective"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_reservations_effective", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "name": "rental_tenant_metric_reservations_effective", "alias": "rental_tenant_metric_reservations_effective", "checksum": {"name": "sha256", "checksum": "805df390ecbe26aeab9814d2deaeb38359a08e71f9a5720b26cb025fe6fed034"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_effective"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.600847, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN reservation_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN reservation_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN reservation_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN reservation_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN reservation_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN reservation_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN reservation_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN reservation_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN reservation_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\""}, "model.houm.sales_investor_metric_leads_qualified": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_leads_qualified') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'person_email', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_leads_qualified"], "unique_id": "model.houm.sales_investor_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "name": "sales_investor_metric_leads_qualified", "alias": "sales_investor_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "27d8d442c392edae39ba94ad0c70110ef98c57f96804b5e623d53ae988ae4709"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_leads_qualified"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.6040041, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN person_email END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN person_email END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN person_email END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN person_email END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN person_email END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN person_email END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN person_email END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN person_email END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN person_email END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified\""}, "model.houm.sales_investor_metric_schedules_scheduled": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('sales_investor_metric_details_schedules_scheduled') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.sales_investor_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_investor_metric_schedules_scheduled"], "unique_id": "model.houm.sales_investor_metric_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "name": "sales_investor_metric_schedules_scheduled", "alias": "sales_investor_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "b7bd6c07a74706d1a625a3f6119df21557a4df03b0db8918cecbff3fada14b89"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_investor_metric_details_schedules_scheduled"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_investor_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.607511, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_scheduled\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_scheduled\""}, "model.houm.rental_tenant_metric_schedules_cancelled_at": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH metric AS (\nSELECT \n\t* \nFROM {{ ref('rental_tenant_metric_details_schedules_cancelled_at') }}\n)\n\n{{ create_aggregate_metric( to_aggregate = 'schedule_id', agregation_func = 'COUNT', is_distinct = 'TRUE' )}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_aggregate_metric"], "nodes": ["model.houm.rental_tenant_metric_details_schedules_cancelled_at"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_cancelled_at"], "unique_id": "model.houm.rental_tenant_metric_schedules_cancelled_at", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "name": "rental_tenant_metric_schedules_cancelled_at", "alias": "rental_tenant_metric_schedules_cancelled_at", "checksum": {"name": "sha256", "checksum": "22a30967e9429ef1fb5d3422556f6ea03859eccdae7c3b3c690f43f9000625a6"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_cancelled_at"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_cancelled_at.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "view", "tags": ["dw", "marts", "demand"]}, "created_at": 1664825036.611861, "compiled_sql": "\n\nWITH metric AS (\nSELECT \n\t* \nFROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled_at\"\n)\n\nSELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        COUNT(DISTINCT CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday,  \n        COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday,  \n        COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek,  \n        COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek,  \n        COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday,  \n        COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN schedule_id END ) LastMonth,  \n        COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth,  \n        COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \n    from metric \n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled_at\""}, "model.houm.rental_tenant_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_effective') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_refunded') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_tenant') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_subs') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_done') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_new_subs", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_tenant_funnel"], "unique_id": "model.houm.rental_tenant_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "name": "rental_tenant_funnel", "alias": "rental_tenant_funnel", "checksum": {"name": "sha256", "checksum": "a62453ecd89c9af0e9327b33ca5b4262287426eeb05ce9596063776c42164d2b"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_portal_leads"], ["rental_tenant_metric_portal_leads_interactions"], ["rental_tenant_metric_paid_media_cost"], ["rental_tenant_metric_schedules_created"], ["rental_tenant_metric_schedules_done"], ["rental_tenant_metric_schedules_scheduled"], ["rental_tenant_metric_reservations"], ["rental_tenant_metric_reservations_effective"], ["rental_tenant_metric_reservations_refunded"], ["rental_tenant_metric_new_tenant"], ["rental_tenant_metric_new_subs"], ["rental_tenant_metric_correct_visit_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.615181, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2022-10-11 18:29:46.503778-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_funnel\""}, "model.houm.rental_real_time_ops_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_organic') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_autoscheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled_admin') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_cancelled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_cancelled_at') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_unfinished') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_effective') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_refunded') }}\n    \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_schedules_scheduled_organic", "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_schedules_scheduled_admin", "model.houm.rental_tenant_metric_schedules_cancelled", "model.houm.rental_tenant_metric_schedules_cancelled_at", "model.houm.rental_tenant_metric_schedules_unfinished", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_real_time_ops_funnel"], "unique_id": "model.houm.rental_real_time_ops_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "name": "rental_real_time_ops_funnel", "alias": "rental_real_time_ops_funnel", "checksum": {"name": "sha256", "checksum": "0dd24e8d6f44b25b797c7d7fce3a728f61dfb7bcae6bbdb1e358b300fbd63ab9"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_schedules_created"], ["rental_tenant_metric_schedules_scheduled"], ["rental_tenant_metric_schedules_scheduled_organic"], ["rental_tenant_metric_schedules_scheduled_autoscheduled"], ["rental_tenant_metric_schedules_scheduled_admin"], ["rental_tenant_metric_schedules_cancelled"], ["rental_tenant_metric_schedules_cancelled_at"], ["rental_tenant_metric_schedules_unfinished"], ["rental_tenant_metric_schedules_done"], ["rental_tenant_metric_reservations"], ["rental_tenant_metric_reservations_effective"], ["rental_tenant_metric_reservations_refunded"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.6217978, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_organic\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_autoscheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled_admin\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_cancelled_at\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_unfinished\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\"\n    \n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2022-10-11 18:29:46.503778-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_real_time_ops_funnel\""}, "model.houm.rental_landlord_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_paid_media_cost') }}\n    UNION ALL    \n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing_b2c') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_landlord_funnel"], "unique_id": "model.houm.rental_landlord_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "name": "rental_landlord_funnel", "alias": "rental_landlord_funnel", "checksum": {"name": "sha256", "checksum": "8b0ecc343f6daeac0daddb5811c018e19959d5bfa2a6753bf6dddd8f75f4b442"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_landlord_metric_leads"], ["rental_landlord_metric_leads_qualified"], ["rental_landlord_metric_leads_qualified_date"], ["rental_landlord_metric_paid_media_cost"], ["rental_landlord_metric_photo_created"], ["rental_landlord_metric_photo_done"], ["rental_landlord_metric_photo_scheduled"], ["rental_landlord_metric_new_rental_listing"], ["rental_landlord_metric_new_rental_listing_b2c"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.6280682, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\"\n    UNION ALL    \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2022-10-11 18:29:46.503778-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_funnel\""}, "model.houm.rental_real_time_ops_funnel_timing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_arrived_on_time') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_correct_visit_finished') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_done_time') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '{{ var(\"processed_time\") }}' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_arrived_on_time", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_correct_visit_finished", "model.houm.rental_tenant_metric_done_time", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_real_time_ops_funnel_timing"], "unique_id": "model.houm.rental_real_time_ops_funnel_timing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "name": "rental_real_time_ops_funnel_timing", "alias": "rental_real_time_ops_funnel_timing", "checksum": {"name": "sha256", "checksum": "55dec969762fb81998e624f05a3277b51fc0e4f4e304c597afec957994e86bb4"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_arrived_on_time"], ["rental_tenant_metric_correct_visit_done"], ["rental_tenant_metric_correct_visit_finished"], ["rental_tenant_metric_done_time"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_real_time_ops_funnel_timing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.6324391, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_arrived_on_time\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_correct_visit_finished\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_done_time\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , '2022-10-11 18:29:46.503778-03:00' AS processed_time \n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_real_time_ops_funnel_timing\""}, "model.houm.sales_buyer_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_buyer_metric_correct_visit_done') }}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n   '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_demand_metric_leads", "model.houm.sales_buyer_metric_leads", "model.houm.sales_buyer_metric_leads_qualified", "model.houm.sales_buyer_metric_leads_qualified_date", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.sales_buyer_metric_correct_visit_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_buyer_funnel"], "unique_id": "model.houm.sales_buyer_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_buyer_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "name": "sales_buyer_funnel", "alias": "sales_buyer_funnel", "checksum": {"name": "sha256", "checksum": "3baf749babbd070e78df01b22b71e0eed01d1e17b505c3e4aa6381ec9f105362"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_demand_metric_paid_media_cost"], ["sales_buyer_metric_paid_media_cost"], ["sales_demand_metric_leads"], ["sales_buyer_metric_leads"], ["sales_buyer_metric_leads_qualified"], ["sales_buyer_metric_leads_qualified_date"], ["sales_buyer_metric_schedules_created"], ["sales_buyer_metric_schedules_done"], ["sales_buyer_metric_schedules_scheduled"], ["sales_buyer_metric_correct_visit_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.636302, "compiled_sql": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_correct_visit_done\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_funnel\""}, "model.houm.sales_company_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_project_listing') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_units_listing') }}\n    UNION ALL\n    SELECT *\n    FROM {{ ref('sales_company_metric_new_unittypes_listing')}}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,  \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_company_metric_new_project_listing", "model.houm.sales_company_metric_new_units_listing", "model.houm.sales_company_metric_new_unittypes_listing", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_company_funnel"], "unique_id": "model.houm.sales_company_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_company_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_company_funnel.sql", "name": "sales_company_funnel", "alias": "sales_company_funnel", "checksum": {"name": "sha256", "checksum": "b72b79ee3bf5622d4708fea6b59317a97abf631fd896e48dffbe64ce49161394"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_company_metric_new_project_listing"], ["sales_company_metric_new_units_listing"], ["sales_company_metric_new_unittypes_listing"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_company_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.6411579, "compiled_sql": "\n\nWITH metrics AS (\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_project_listing\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_units_listing\"\n    UNION ALL\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_marts\".\"sales_company_metric_new_unittypes_listing\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,  \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_company_funnel\""}, "model.houm.sales_seller_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_seller_metric_paid_media_cost') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified_date') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_created') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_done') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_scheduled') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing_b2c') }}\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_seller_funnel"], "unique_id": "model.houm.sales_seller_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_seller_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "name": "sales_seller_funnel", "alias": "sales_seller_funnel", "checksum": {"name": "sha256", "checksum": "fc45c59693b6e252b336fd6b0967ef262784f34d70031a9c3b8ca9d70d769546"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_seller_metric_paid_media_cost"], ["sales_seller_metric_leads"], ["sales_seller_metric_leads_qualified"], ["sales_seller_metric_leads_qualified_date"], ["sales_seller_metric_photo_created"], ["sales_seller_metric_photo_done"], ["sales_seller_metric_photo_scheduled"], ["sales_seller_metric_new_sale_listing"], ["sales_seller_metric_new_sale_listing_b2c"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.64561, "compiled_sql": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\"\n)\n\nSELECT \n    dim_geo.country ,\n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_funnel\""}, "model.houm.sales_investor_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_demand_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_investor_metric_schedules_done') }}\n)\n\nSELECT \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_investor_metric_paid_media_cost", "model.houm.sales_demand_metric_leads", "model.houm.sales_investor_metric_leads", "model.houm.sales_investor_metric_leads_qualified", "model.houm.sales_investor_metric_leads_qualified_date", "model.houm.sales_investor_metric_schedules_created", "model.houm.sales_investor_metric_schedules_scheduled", "model.houm.sales_investor_metric_schedules_done", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_investor_funnel"], "unique_id": "model.houm.sales_investor_funnel", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_investor_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_investor_funnel.sql", "name": "sales_investor_funnel", "alias": "sales_investor_funnel", "checksum": {"name": "sha256", "checksum": "0932d7c320bcbf859176268fdb89882aa8a043c8a8a3a209399eb7a1d6b8b941"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_demand_metric_paid_media_cost"], ["sales_investor_metric_paid_media_cost"], ["sales_demand_metric_leads"], ["sales_investor_metric_leads"], ["sales_investor_metric_leads_qualified"], ["sales_investor_metric_leads_qualified_date"], ["sales_investor_metric_schedules_created"], ["sales_investor_metric_schedules_scheduled"], ["sales_investor_metric_schedules_done"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_investor_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1664825036.650383, "compiled_sql": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_demand_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_investor_metric_schedules_done\"\n)\n\nSELECT \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \n    ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_investor_funnel\""}, "model.houm.dim_currency": {"raw_sql": "{{ config(materialized='incremental') }}\r\n\r\nwith usd_etl as (\r\n        SELECT getdate()::timestamp  as etl_time,\r\n                current_date::date as date \r\n                ,'USD' as currency_type\r\n                ,'US Dollar' as currency_name \r\n                ,'United State' as currency_country\r\n                ,'1'::float as value_usd\r\n)\r\n, clp_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,  current_date::date as date \r\n            ,'CLP' as currency_type\r\n            ,'Chilean Peso' as currency_name\r\n            ,'Chile' as currency_country\r\n            ,'813.01'::float as value_usd\r\n)\r\n, cop_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,current_date::date as date\r\n            ,'COP' as currency_type\r\n            ,'Colombian Peso' as currency_name\r\n            ,'Colombia' as currency_country\r\n            ,'3826.18'::float as value_usd\r\n)\r\nSELECT * FROM usd_etl\r\nUNION ALL\r\nSELECT * FROM clp_etl\r\nUNION ALL\r\nSELECT * FROM cop_etl", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_currency"], "unique_id": "model.houm.dim_currency", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_currency.sql", "original_file_path": "models/dwh/dims/dim_currency.sql", "name": "dim_currency", "alias": "dim_currency", "checksum": {"name": "sha256", "checksum": "383421fddc67e09b62b3c907bc80ee24f31c20988fd632745d781e5e7619a18f"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_currency.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "incremental"}, "created_at": 1664825036.657595, "compiled_sql": "\n\nwith usd_etl as (\n        SELECT getdate()::timestamp  as etl_time,\n                current_date::date as date \n                ,'USD' as currency_type\n                ,'US Dollar' as currency_name \n                ,'United State' as currency_country\n                ,'1'::float as value_usd\n)\n, clp_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,  current_date::date as date \n            ,'CLP' as currency_type\n            ,'Chilean Peso' as currency_name\n            ,'Chile' as currency_country\n            ,'813.01'::float as value_usd\n)\n, cop_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,current_date::date as date\n            ,'COP' as currency_type\n            ,'Colombian Peso' as currency_name\n            ,'Colombia' as currency_country\n            ,'3826.18'::float as value_usd\n)\nSELECT * FROM usd_etl\nUNION ALL\nSELECT * FROM clp_etl\nUNION ALL\nSELECT * FROM cop_etl", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_currency\""}, "model.houm.dim_properties": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT \r\n        a.id as property_id \r\n        ,b.status as rental_status\r\n        ,c.status as sales_status\r\n        ,a.*\r\nFROM {{ ref('proc_properties') }} a\r\nleft join {{ ref('proc_propertydetails') }} b on a.id = b.property_id \r\nleft join {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_properties"], "unique_id": "model.houm.dim_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_properties.sql", "original_file_path": "models/dwh/dims/dim_properties.sql", "name": "dim_properties", "alias": "dim_properties", "checksum": {"name": "sha256", "checksum": "9b4b06890a7b2da5f9a4594d11b30f141a01610acc2f20c839e61a9c7f3ec9da"}, "tags": ["dw", "dims"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1664825036.658974, "compiled_sql": "\n\nSELECT \n        a.id as property_id \n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_properties\""}, "model.houm.dim_macrozones": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT geo_id,\r\n        created_at,\r\n        updated_at,\r\n        name,\r\n        description,\r\n        country,\r\n        polygon,\r\n        city,\r\n        city_marketplace_id,\r\n        timezone,\r\n        country_sufix,\r\n        Region_Houm,\r\n        City_Houm\r\nFROM {{ ref('proc_macrozone') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_macrozones"], "unique_id": "model.houm.dim_macrozones", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_macrozones.sql", "original_file_path": "models/dwh/dims/dim_macrozones.sql", "name": "dim_macrozones", "alias": "dim_macrozones", "checksum": {"name": "sha256", "checksum": "8d644027b51244696cc665eec890721817240f02ed50f7a17ac66e9d9f599a09"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {"macrozone": {"name": "macrozone", "description": "This is operational name of a polygon at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/dwh/dims/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/dims/dim_macrozones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1664825037.666753, "compiled_sql": "\n\nSELECT geo_id,\n        created_at,\n        updated_at,\n        name,\n        description,\n        country,\n        polygon,\n        city,\n        city_marketplace_id,\n        timezone,\n        country_sufix,\n        Region_Houm,\n        City_Houm\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\""}, "model.houm.dim_cities": {"raw_sql": "{{ config(materialized='table') }}\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom {{ref('proc_macrozone')}}\ngroup by 1,2", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_cities"], "unique_id": "model.houm.dim_cities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_cities.sql", "original_file_path": "models/dwh/dims/dim_cities.sql", "name": "dim_cities", "alias": "dim_cities", "checksum": {"name": "sha256", "checksum": "b2d0f115acfcfeaf4da8889b97333a93c416e21fb4006f35e2572bbe8c107935"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1664825036.6622772, "compiled_sql": "\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_cities\""}, "model.houm.dim_dates": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\n\r\n SELECT\r\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\r\n-- DATE\r\n    datum                                                         AS full_date,\r\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\r\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\r\n-- YEAR\r\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\r\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\r\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\r\n-- QUARTER\r\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\r\n-- MONTH\r\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\r\n    to_char(datum, 'Month')                                       AS month_name,\r\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\r\n-- WEEK\r\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\r\n-- DAY\r\n    to_char(datum, 'Day')                                         AS day_name,\r\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\r\n      THEN 0\r\n    ELSE 1 END                                                    AS day_is_weekday,\r\n    CASE WHEN\r\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\r\n                        INTERVAL '1' MONTH) :: DATE -\r\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\r\n      THEN 1\r\n    ELSE 0 END                                                    AS day_is_last_of_month\r\n  FROM\r\n    (\r\n      SELECT\r\n        '2018-01-01' :: DATE + generate_series AS datum,\r\n        generate_series                        AS seq\r\n      FROM generate_series(0, 7 * 365, 1)\r\n    ) DQ\r\n  ORDER BY 1 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_dates"], "unique_id": "model.houm.dim_dates", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_dates.sql", "original_file_path": "models/dwh/dims/dim_dates.sql", "name": "dim_dates", "alias": "dim_dates", "checksum": {"name": "sha256", "checksum": "ff81a580689617f2dd2e80437c26f12b2f0a906b026c7553ff47506a01d290c1"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_dates.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "view"}, "created_at": 1664825036.66351, "compiled_sql": "\n\n\n SELECT\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\n-- DATE\n    datum                                                         AS full_date,\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\n-- YEAR\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\n-- QUARTER\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\n-- MONTH\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\n    to_char(datum, 'Month')                                       AS month_name,\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\n-- WEEK\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\n-- DAY\n    to_char(datum, 'Day')                                         AS day_name,\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\n      THEN 0\n    ELSE 1 END                                                    AS day_is_weekday,\n    CASE WHEN\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\n                        INTERVAL '1' MONTH) :: DATE -\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\n      THEN 1\n    ELSE 0 END                                                    AS day_is_last_of_month\n  FROM\n    (\n      SELECT\n        '2018-01-01' :: DATE + generate_series AS datum,\n        generate_series                        AS seq\n      FROM generate_series(0, 7 * 365, 1)\n    ) DQ\n  ORDER BY 1 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_dates\""}, "model.houm.dim_locations": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT  \r\n        id,\r\n        created_at,\r\n        updated_at,\r\n        macrozone,\r\n        city,\r\n        region,\r\n        country,\r\n        description,\r\n        granularity,\r\n        polygon\r\nFROM {{ source('public', 'dim_polygons') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.dim_polygons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_locations"], "unique_id": "model.houm.dim_locations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/dims/dim_locations.sql", "original_file_path": "models/dwh/dims/dim_locations.sql", "name": "dim_locations", "alias": "dim_locations", "checksum": {"name": "sha256", "checksum": "18addb582786d064e0b3f85ff42e8c3dab011dd6c8a38cf1308694217a2fe426"}, "tags": ["dw", "dims"], "refs": [], "sources": [["public", "dim_polygons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_locations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1664825036.665693, "compiled_sql": "\n\nSELECT  \n        id,\n        created_at,\n        updated_at,\n        macrozone,\n        city,\n        region,\n        country,\n        description,\n        granularity,\n        polygon\nFROM \"houmdw_prod\".\"public\".\"dim_polygons\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_locations\""}, "model.houm.rental_landlord_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "name": "rental_landlord_metric_details_paid_media_cost", "alias": "rental_landlord_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "019f304f9a1ae14d7cd10913de86a2bc03cb246b1de5ac4bc3477ee9279b187d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.6670022, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\""}, "model.houm.sales_seller_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( supply_qualification in (3,4,5,6) )\n  AND ( supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'supply_qualification_date') }}\nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "name": "sales_seller_metric_details_leads_qualified_date", "alias": "sales_seller_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "95cdaf1f4cc383aac3ac2019a1a739994fb7376f1e9c21ea502eeb7cd61cf442"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.678426, "compiled_sql": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( supply_qualification in (3,4,5,6) )\n  AND ( supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', supply_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',supply_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',supply_qualification_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND supply_qualification_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND supply_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\""}, "model.houm.sales_seller_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10 AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n     {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "name": "sales_seller_metric_details_paid_media_cost", "alias": "sales_seller_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "fffcda39ae6896487da4299e8bc9de250bc236bd078d6298d0dee85aef9cf88d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.687166, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    10 AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n     CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\""}, "model.houm.sales_seller_metric_details_new_sale_listing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sale_properties as (\r\nSELECT \r\n    properties.id AS property_id ,\r\n    properties.country ,\r\n    properties.for_sale ,\r\n    salesdetails.first_publication_date AS date_sales \r\nFROM {{ ref('proc_properties') }} AS properties\r\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS salesdetails ON properties.id =salesdetails.property_id\r\nWHERE TRUE\r\n        AND salesdetails.first_publication_date IS NOT NULL \r\n        AND properties.is_deleted = FALSE  \r\n        AND properties.supply_relation != 'New Properties'\r\n)\r\n\r\n, date_tranformation AS (\r\nSELECT\r\n    80::INT AS orden ,\r\n    'New Sale Listing'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\r\n    sale_properties.property_id \r\nFROM sale_properties\r\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \r\n        ON sale_properties.property_id = prop_mz.property_id \r\nORDER BY date_sales DESC\r\n)\r\n\r\nSELECT\r\n       * , \r\n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\r\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "name": "sales_seller_metric_details_new_sale_listing", "alias": "sales_seller_metric_details_new_sale_listing", "checksum": {"name": "sha256", "checksum": "724e7070fec1b90d3006811367206c7bbe16bf947b97e9616fa425fdbdd8b116"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.6957371, "compiled_sql": "\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS salesdetails ON properties.id =salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n)\n\n, date_tranformation AS (\nSELECT\n    80::INT AS orden ,\n    'New Sale Listing'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\""}, "model.houm.sales_company_metric_details_new_units_listing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_units_listing AS (\nSELECT  \n    property_id  , \n    unit_id ,\n    unit_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unit_created_at::date , date_sales::date) AS units_publication_date \nFROM  {{ ref('proc_supply_units') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unit_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'New Units Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_units_listing.property_id ,\n    new_units_listing.unit_id \nFROM new_units_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_units_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n       * , \n       {{ create_date_aggregate_columns(thedate = 'units_publication_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_units", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_units_listing"], "unique_id": "model.houm.sales_company_metric_details_new_units_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "name": "sales_company_metric_details_new_units_listing", "alias": "sales_company_metric_details_new_units_listing", "checksum": {"name": "sha256", "checksum": "e3203cc7f8c115569f8412762e3b6a2747cefa1551698fb3622104f447dcd204"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_units"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_units_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.704614, "compiled_sql": "\n\nWITH new_units_listing AS (\nSELECT  \n    property_id  , \n    unit_id ,\n    unit_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unit_created_at::date , date_sales::date) AS units_publication_date \nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_units\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unit_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'New Units Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_units_listing.property_id ,\n    new_units_listing.unit_id \nFROM new_units_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_units_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n       * , \n       CASE \n        WHEN units_publication_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', units_publication_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',units_publication_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',units_publication_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND units_publication_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND units_publication_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_units_listing\""}, "model.houm.sales_seller_metric_details_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT  \r\n    70::INT AS orden , \r\n    'SalesPhoto Done'::TEXT AS metric , \r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_done"], "unique_id": "model.houm.sales_seller_metric_details_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "name": "sales_seller_metric_details_photo_done", "alias": "sales_seller_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "94bb0ed15a856c7f21ef08b84cf90b436e8b5ee7378e305cade2a75bcf2bd361"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.713342, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n   AND status = 'Done'\n)\n\nSELECT  \n    70::INT AS orden , \n    'SalesPhoto Done'::TEXT AS metric , \n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\""}, "model.houm.rental_landlord_metric_details_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT  \r\n    70::INT AS orden , \r\n    'Photo Done'::TEXT AS metric , \r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_done"], "unique_id": "model.houm.rental_landlord_metric_details_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "name": "rental_landlord_metric_details_photo_done", "alias": "rental_landlord_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "4337f954f1efa5203ab9d719dce37cbea1c640274cb28555f8900d758d93f513"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.722251, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n   AND status = 'Done'\n)\n\nSELECT  \n    70::INT AS orden , \n    'Photo Done'::TEXT AS metric , \n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\""}, "model.houm.sales_company_metric_details_new_unittypes_listing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_unittypes_listing AS (\nSELECT  \n    property_id  , \n    unit_type_id ,\n    unittype_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unittype_created_at::date , date_sales::date) AS units_publication_date \nFROM  {{ ref('proc_supply_unittypes') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unittype_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'New Unit Types Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_unittypes_listing.property_id ,\n    new_unittypes_listing.unit_type_id\nFROM new_unittypes_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_unittypes_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n    * , \n    {{ create_date_aggregate_columns(thedate = 'units_publication_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_unittypes", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_unittypes_listing"], "unique_id": "model.houm.sales_company_metric_details_new_unittypes_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "name": "sales_company_metric_details_new_unittypes_listing", "alias": "sales_company_metric_details_new_unittypes_listing", "checksum": {"name": "sha256", "checksum": "8ca580400fae0235c351e5ad25d16e52e772a0c09fcc2383a4c1d799a4681780"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_unittypes"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_unittypes_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.730974, "compiled_sql": "\n\nWITH new_unittypes_listing AS (\nSELECT  \n    property_id  , \n    unit_type_id ,\n    unittype_created_at ,\n    geo_id ,\n    date_sales ,\n    GREATEST( unittype_created_at::date , date_sales::date) AS units_publication_date \nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n        AND unittype_created_at IS NOT NULL\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'New Unit Types Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, units_publication_date)::TIMESTAMP WITH TIME ZONE)::DATE ,units_publication_date::DATE) AS units_publication_date ,\n    new_unittypes_listing.property_id ,\n    new_unittypes_listing.unit_type_id\nFROM new_unittypes_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_unittypes_listing.property_id = prop_mz.property_id \nORDER BY units_publication_date DESC\n)\n\nSElECT \n    * , \n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN units_publication_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', units_publication_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',units_publication_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',units_publication_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND units_publication_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND units_publication_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', units_publication_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_unittypes_listing\""}, "model.houm.rental_landlord_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Landlord Hot Qualified Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::date as add_date ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "name": "rental_landlord_metric_details_leads_qualified", "alias": "rental_landlord_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "355fe774c28943023d7667cb394c318bd4174d8b7e3d14f23cad91416cc1a657"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.7398632, "compiled_sql": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Landlord Hot Qualified Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::date as add_date ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\""}, "model.houm.sales_seller_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND (supply_qualification in (3,4,5,6) )\n  AND (add_time IS NOT NULL)\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "name": "sales_seller_metric_details_leads_qualified", "alias": "sales_seller_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "7d3f51b8b67d1e317afc2379b28691d628f7e890fcb2c853f0a3074de115dc7f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.748587, "compiled_sql": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND (supply_qualification in (3,4,5,6) )\n  AND (add_time IS NOT NULL)\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'Created Unique Seller Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_seller_leads_clean\nORDER BY supply_qualification_date DESC \n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\""}, "model.houm.rental_landlord_metric_details_new_rental_listing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rental_properties AS (\r\nSELECT\r\n    id AS property_id ,\r\n    country ,\r\n    for_rental ,\r\n    first_publication_date AS date_rentals\r\nFROM {{ ref('proc_properties') }} \r\nWHERE TRUE \r\n        AND first_publication_date IS NOT NULL \r\n        AND is_deleted = FALSE \r\n)\r\n\r\n, date_tranformation AS (\r\nSELECT     \r\n    80::INT AS orden ,\r\n    'New Rental Listing'::TEXT AS metric , \r\n    geo_id , \r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\r\n    rental_properties.property_id \r\nFROM rental_properties\r\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz \r\n        ON rental_properties.property_id = prop_mz.property_id \r\nORDER BY date_rentals DESC\r\n)\r\n\r\nSELECT \r\n       * , \r\n       {{ create_date_aggregate_columns(thedate = 'date_rentals') }}\r\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "name": "rental_landlord_metric_details_new_rental_listing", "alias": "rental_landlord_metric_details_new_rental_listing", "checksum": {"name": "sha256", "checksum": "17df1a3c35a9f7aadac7662411cc7c81fc8680bc1590a2919fef929083c28cfb"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.7573628, "compiled_sql": "\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT     \n    80::INT AS orden ,\n    'New Rental Listing'::TEXT AS metric , \n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id \nFROM rental_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT \n       * , \n       CASE \n        WHEN date_rentals = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_rentals = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_rentals ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_rentals) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_rentals) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND date_rentals <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND date_rentals <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\""}, "model.houm.sales_seller_metric_details_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n)\r\n\r\nSELECT  \r\n    60::INT AS orden , \r\n    'SalesPhoto Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id ,\r\n     {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_details_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "name": "sales_seller_metric_details_photo_scheduled", "alias": "sales_seller_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "79fc24dd7b1e3ffcfc1b319676d0daa5501dbd2df0479bc740c2414dbcfcb948"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.766102, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n)\n\nSELECT  \n    60::INT AS orden , \n    'SalesPhoto Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n     CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\""}, "model.houm.rental_landlord_metric_details_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT \r\n    *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT  \r\n    60::INT AS orden ,\r\n    'Photo Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    begin_date ,\r\n    schedule_id , \r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_details_photo_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "name": "rental_landlord_metric_details_photo_scheduled", "alias": "rental_landlord_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "0b09a7101bdbba9990226cf29e192e2f9e72628dffa013aca12470359b304792"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.7754261, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n)\n\nSELECT  \n    60::INT AS orden ,\n    'Photo Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    begin_date ,\n    schedule_id , \n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\""}, "model.houm.sales_seller_metric_details_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean as (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesPhoto' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND  supply_relation != 'New Properties'\r\n)\r\n\r\nSELECT  \r\n    50::INT AS orden , \r\n    'SalesPhoto Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_photo_clean\r\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_created"], "unique_id": "model.houm.sales_seller_metric_details_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "name": "sales_seller_metric_details_photo_created", "alias": "sales_seller_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "e79496c2f4a697b7e600ac73e6939456d94ad5ef0829e296bf52ef5be56cb4b7"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.784173, "compiled_sql": "\n\nWITH schedules_photo_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesPhoto' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND  supply_relation != 'New Properties'\n)\n\nSELECT  \n    50::INT AS orden , \n    'SalesPhoto Created'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\""}, "model.houm.sales_seller_metric_details_new_sale_listing_b2c": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM {{ ref('proc_properties') }} AS properties\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS salesdetails ON properties.id = salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n        AND properties.supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Sale Listing B2C'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\nFROM  date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing_b2c", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "name": "sales_seller_metric_details_new_sale_listing_b2c", "alias": "sales_seller_metric_details_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "b762bf39fe69a203a3020bf54c267d36924b2203a3011cc8a338ddbe0192e34c"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.7927291, "compiled_sql": "\n\nWITH sale_properties as (\nSELECT \n    properties.id AS property_id ,\n    properties.country ,\n    properties.for_sale ,\n    salesdetails.first_publication_date AS date_sales \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS salesdetails ON properties.id = salesdetails.property_id\nWHERE TRUE\n        AND salesdetails.first_publication_date IS NOT NULL \n        AND properties.is_deleted = FALSE  \n        AND properties.supply_relation != 'New Properties'\n        AND properties.supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Sale Listing B2C'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    sale_properties.property_id \nFROM sale_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT\n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM  date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\""}, "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM {{ ref('proc_properties') }} \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n        AND supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Rental Listing B2C'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id\nFROM rental_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT  \n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_rentals') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_details_new_rental_listing_b2c", "alias": "rental_landlord_metric_details_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "9c2215879077dda82c379209697d0f272abbf77ca68adc9400694670e9a95beb"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.801877, "compiled_sql": "\n\nWITH rental_properties AS (\nSELECT\n    id AS property_id ,\n    country ,\n    for_rental ,\n    first_publication_date AS date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE TRUE \n        AND first_publication_date IS NOT NULL \n        AND is_deleted = FALSE \n        AND supply_source = 'B2C'\n)\n\n, date_tranformation AS (\nSELECT     \n    90::INT AS orden ,\n    'New Rental Listing B2C'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_rentals)::TIMESTAMP WITH TIME ZONE)::DATE,date_rentals::DATE) AS date_rentals ,\n    rental_properties.property_id\nFROM rental_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \n        ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n)\n\nSELECT  \n       * , \n       CASE \n        WHEN date_rentals = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_rentals = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_rentals ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_rentals) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_rentals) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND date_rentals <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND date_rentals <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_rentals ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_details_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Photo' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT  \r\n    50::INT AS orden , \r\n    'Photo Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_photo_clean\r\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_created"], "unique_id": "model.houm.rental_landlord_metric_details_photo_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "name": "rental_landlord_metric_details_photo_created", "alias": "rental_landlord_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "e53f3108ec18731b9bcb45c2ca8214014016e1885cf1b74d3739963577a28980"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.810862, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Photo' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL )\n)\n\nSELECT  \n    50::INT AS orden , \n    'Photo Created'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\""}, "model.houm.sales_seller_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden , \n    'Created Unique Seller Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id\nFROM supply_seller_leads_clean \nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads"], "unique_id": "model.houm.sales_seller_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "name": "sales_seller_metric_details_leads", "alias": "sales_seller_metric_details_leads", "checksum": {"name": "sha256", "checksum": "e7572709e76462c807cfde06a1d945001f3475e13a283cbefe12cc4b807a829f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.82002, "compiled_sql": "\n\nWITH  supply_seller_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden , \n    'Created Unique Seller Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id\nFROM supply_seller_leads_clean \nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\""}, "model.houm.rental_landlord_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND (supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Landlord Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'supply_qualification_date') }}\nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "name": "rental_landlord_metric_details_leads_qualified_date", "alias": "rental_landlord_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "da022899b47792e77f30717b6f7d8394cc5c6dbcee66bb4ce12dabe53d3a915f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.830612, "compiled_sql": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE )\n  AND ( is_deleted = FALSE )\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND supply_qualification in (3,4,5,6)\n  AND (supply_qualification_date IS NOT NULL)\n)\n\nSELECT \n    40::INT AS orden ,\n    'Unique Landlord Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN supply_qualification_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', supply_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',supply_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',supply_qualification_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND supply_qualification_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND supply_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', supply_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM supply_landlord_leads_clean\nORDER BY supply_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\""}, "model.houm.rental_landlord_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden ,\n    'Created Unique Landlord Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::date AS add_date , \n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads"], "unique_id": "model.houm.rental_landlord_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "name": "rental_landlord_metric_details_leads", "alias": "rental_landlord_metric_details_leads", "checksum": {"name": "sha256", "checksum": "34b44543ba14cb8530825431e16f03ec5db1e11e0a25005b4061bcf3dae0098b"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.840179, "compiled_sql": "\n\nWITH supply_landlord_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( property_supply_source != 'B2B' OR property_supply_source IS NULL)\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    20::INT AS orden ,\n    'Created Unique Landlord Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::date AS add_date , \n    add_time_utc ,\n    supply_qualification_date , \n    supply_qualification , \n    lost_reason ,\n    lost_time , \n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM supply_landlord_leads_clean\nORDER BY add_time DESC\n)\n\nSELECT  \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\""}, "model.houm.sales_company_metric_details_new_project_listing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_project_listing AS (\nSELECT \n       *\nFROM  {{ ref('proc_supply_projects') }} \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'New Project Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    new_project_listing.property_id \nFROM new_project_listing\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON new_project_listing.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT \n       * , \n       {{ create_date_aggregate_columns(thedate = 'date_sales') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_supply_projects", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_company_metric_details_new_project_listing"], "unique_id": "model.houm.sales_company_metric_details_new_project_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "name": "sales_company_metric_details_new_project_listing", "alias": "sales_company_metric_details_new_project_listing", "checksum": {"name": "sha256", "checksum": "e17317031c03d7e1029903726e3d10251bb9880f99798b7f8346d28062ce20a3"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_projects"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_company_metric_details_new_project_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1664825036.8496482, "compiled_sql": "\n\nWITH new_project_listing AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\" \nWHERE TRUE  \n        AND date_sales IS NOT NULL\n        AND is_deleted = FALSE \n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden ,\n    'New Project Listing'::TEXT AS metric ,\n    prop_mz.geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    COALESCE((TIMEZONE( prop_mz.timezone, date_sales)::TIMESTAMP WITH TIME ZONE)::DATE ,date_sales::DATE) AS date_sales ,\n    new_project_listing.property_id \nFROM new_project_listing\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON new_project_listing.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n)\n\nSELECT \n       * , \n       CASE \n        WHEN date_sales = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN date_sales = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', date_sales ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',date_sales) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',date_sales) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND date_sales <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND date_sales <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', date_sales ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_company_metric_details_new_project_listing\""}, "model.houm.fact_daily_virtual_uf_cl": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_cl') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_cl"], "unique_id": "model.houm.fact_daily_virtual_uf_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "name": "fact_daily_virtual_uf_cl", "alias": "fact_daily_virtual_uf_cl", "checksum": {"name": "sha256", "checksum": "4fd1b2adb692cb8b7ea1aa71462e75567e117ccc974e98eaf0986f0784e739dd"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1664825036.858358, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_cl\""}, "model.houm.fact_daily_virtual_uf_co": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_co') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_co"], "unique_id": "model.houm.fact_daily_virtual_uf_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "name": "fact_daily_virtual_uf_co", "alias": "fact_daily_virtual_uf_co", "checksum": {"name": "sha256", "checksum": "e3949025b3ff978828964228c357f5833abf99f04c1f200db61a4c4a75c49c7b"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_co"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1664825036.859586, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_co\""}, "model.houm.fact_daily_virtual_uf_mx": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_mx') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_mx"], "unique_id": "model.houm.fact_daily_virtual_uf_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "name": "fact_daily_virtual_uf_mx", "alias": "fact_daily_virtual_uf_mx", "checksum": {"name": "sha256", "checksum": "e76f8c6fda5323ce42f067da226b422ecc4dfd24137d0f0c90396b4df27574ec"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_mx"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1664825036.860736, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_mx\""}, "model.houm.sales_investor_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer New Properties'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost NP (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_investor_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "name": "sales_investor_metric_details_paid_media_cost", "alias": "sales_investor_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "12508cf8ce1dd356cd736b4b768be184362036f7005548696263e48e8002fcdc"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.862296, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer New Properties'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost NP (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_paid_media_cost\""}, "model.houm.rental_tenant_metric_details_schedules_unfinished": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status IN ('Scheduled', 'Confirmed') )\n   AND '{{ var(\"processed_time\") }}' >= end_date\n)\n\nSELECT \n    59::INT AS orden , \n    'Visit Unfinished'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_unfinished"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_unfinished", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "name": "rental_tenant_metric_details_schedules_unfinished", "alias": "rental_tenant_metric_details_schedules_unfinished", "checksum": {"name": "sha256", "checksum": "5e06bc2d8548b057dce2619f4cc5e9444a6c62f8ad5c382432a15ee27e0da37b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_unfinished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.870815, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status IN ('Scheduled', 'Confirmed') )\n   AND '2022-10-11 18:29:46.503778-03:00' >= end_date\n)\n\nSELECT \n    59::INT AS orden , \n    'Visit Unfinished'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_unfinished\""}, "model.houm.rental_tenant_metric_details_reservations_refunded": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH refunded_reservations AS (\nSELECT \n    *\nFROM {{ ref('proc_demand_reservations') }}\nWHERE TRUE \n    AND status = 'REFUNDED' \n)\n, date_transformation AS (\nSELECT    \n    90::INT AS orden ,\n    'Refunded Reservations'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local ::DATE ,\n    reservation_id ,\n    status \nFROM refunded_reservations \nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_refunded", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "name": "rental_tenant_metric_details_reservations_refunded", "alias": "rental_tenant_metric_details_reservations_refunded", "checksum": {"name": "sha256", "checksum": "668957fee8af6f2107d3d36b83312a2238a2388422d72a7a86ab64709e8ed487"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1664825036.880976, "compiled_sql": "\n\nWITH refunded_reservations AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE \n    AND status = 'REFUNDED' \n)\n, date_transformation AS (\nSELECT    \n    90::INT AS orden ,\n    'Refunded Reservations'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local ::DATE ,\n    reservation_id ,\n    status \nFROM refunded_reservations \nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%App%'\n)\n\n\nSELECT \n    52::INT AS orden , \n    'Visit Scheduled Autoscheduled'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_autoscheduled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "name": "rental_tenant_metric_details_schedules_scheduled_autoscheduled", "alias": "rental_tenant_metric_details_schedules_scheduled_autoscheduled", "checksum": {"name": "sha256", "checksum": "c10a7d5fdf2e7b6600c59c933f05ad53c3a46c3ff9be73a17e8bc2fe64a8b5fa"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_autoscheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.889766, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%App%'\n)\n\n\nSELECT \n    52::INT AS orden , \n    'Visit Scheduled Autoscheduled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_autoscheduled\""}, "model.houm.sales_demand_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden , \n    'Created Unique NP & SH Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone , \n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_demand_metric_details_leads"], "unique_id": "model.houm.sales_demand_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_demand_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_demand_metric_details_leads.sql", "name": "sales_demand_metric_details_leads", "alias": "sales_demand_metric_details_leads", "checksum": {"name": "sha256", "checksum": "0f6cbc97e96c70f3471c73dc170390338a9d2bdee20c6d8d235ced6ee28cfcac"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_demand_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.8985898, "compiled_sql": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    30::INT AS orden , \n    'Created Unique NP & SH Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone , \n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_correct_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    65::INT AS orden , \n    'Correct Visit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_correct_visit_done"], "unique_id": "model.houm.rental_tenant_metric_details_correct_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "name": "rental_tenant_metric_details_correct_visit_done", "alias": "rental_tenant_metric_details_correct_visit_done", "checksum": {"name": "sha256", "checksum": "a1d465328321ca7f5fd9dd21d7ea3942aaf4cf79a2b20b571ce67bca11578b40"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.908401, "compiled_sql": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    65::INT AS orden , \n    'Correct Visit Done'::TEXT AS metric , \n    geo_id ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_done\""}, "model.houm.rental_tenant_metric_details_correct_visit_finished": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND end_date >= done_date\n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    120::INT AS orden , \n    'Correct Visit Finished'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_correct_visit_finished"], "unique_id": "model.houm.rental_tenant_metric_details_correct_visit_finished", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "name": "rental_tenant_metric_details_correct_visit_finished", "alias": "rental_tenant_metric_details_correct_visit_finished", "checksum": {"name": "sha256", "checksum": "5c1bb5c8b7da79f635c762a11edfffa4cbad1b77fa14d2111fbe2a0ce31b1785"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_correct_visit_finished.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.917464, "compiled_sql": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND end_date >= done_date\n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    120::INT AS orden , \n    'Correct Visit Finished'::TEXT AS metric , \n    geo_id ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_correct_visit_finished\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\n\r\nSELECT \r\n    50::INT AS orden , \r\n    'Visit Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \r\nFROM schedules_visit_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "name": "rental_tenant_metric_details_schedules_scheduled", "alias": "rental_tenant_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "40d2ee39f2f5cb8b77844d72e54d07d16640b90794f353d985e322607dab8963"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.926165, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\n\nSELECT \n    50::INT AS orden , \n    'Visit Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\""}, "model.houm.sales_investor_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    70::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_at ,\n    schedule_id ,\n   {{ create_date_aggregate_columns(thedate = 'created_at') }}\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_created"], "unique_id": "model.houm.sales_investor_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "name": "sales_investor_metric_details_schedules_created", "alias": "sales_investor_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "c23b855caadee8fed2f7c107a8259267d0521c53fdacb84c1c6a38abc6f0e937"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.93582, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    70::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n   CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_arrived_on_time": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500\n)\n\nSELECT  \n    110::INT AS orden , \n    'Arrived On Time'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_arrived_on_time"], "unique_id": "model.houm.rental_tenant_metric_details_arrived_on_time", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "name": "rental_tenant_metric_details_arrived_on_time", "alias": "rental_tenant_metric_details_arrived_on_time", "checksum": {"name": "sha256", "checksum": "ddfda885846c5234bcfc044e71b962e34d2cbf075b018d4e6f0012b32ee3e432"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_arrived_on_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.94475, "compiled_sql": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500\n)\n\nSELECT  \n    110::INT AS orden , \n    'Arrived On Time'::TEXT AS metric , \n    geo_id ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_arrived_on_time\""}, "model.houm.rental_tenant_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT \r\n    60::INT AS orden ,\r\n    'Visit Done'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \r\nFROM schedules_visit_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "name": "rental_tenant_metric_details_schedules_done", "alias": "rental_tenant_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "f3a2b001aebb80f6f151b8859045709625a9d246840f4f149e06f5431f670b33"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.953217, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    60::INT AS orden ,\n    'Visit Done'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\""}, "model.houm.sales_investor_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads_qualified"], "unique_id": "model.houm.sales_investor_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "name": "sales_investor_metric_details_leads_qualified", "alias": "sales_investor_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "05fdbdb93fb171beb0bf397c8fcbd6fbb2813263520724afd2703e56a73cd8ea"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.9620538, "compiled_sql": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified\""}, "model.houm.sales_investor_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    80::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\n\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_investor_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "name": "sales_investor_metric_details_schedules_scheduled", "alias": "sales_investor_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "aa20cd321b76d2608445f69828a58c06cf2ce92c1d0054142cd1803319241bb1"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.970479, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n)\n\nSELECT \n    80::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\n\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (origin like '%Marketplace%')\n)\n\n\nSELECT \n    51::INT AS orden , \n    'Visit Scheduled Organic'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_organic"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_organic", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "name": "rental_tenant_metric_details_schedules_scheduled_organic", "alias": "rental_tenant_metric_details_schedules_scheduled_organic", "checksum": {"name": "sha256", "checksum": "0e661deeaabe65108c078beb9705fa2ae0c209f5b0306127574209e6c31f316d"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_organic.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.9796858, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (origin like '%Marketplace%')\n)\n\n\nSELECT \n    51::INT AS orden , \n    'Visit Scheduled Organic'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_organic\""}, "model.houm.sales_buyer_metric_details_correct_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='SalesVisit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%SalesGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    100::INT AS orden , \n    'Correct SalesVisit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_correct_visit_done"], "unique_id": "model.houm.sales_buyer_metric_details_correct_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "name": "sales_buyer_metric_details_correct_visit_done", "alias": "sales_buyer_metric_details_correct_visit_done", "checksum": {"name": "sha256", "checksum": "eb773d4ef0fe4511e22b7d3554b27727cb45d18c5b8cd358748e6d8431fe7541"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_correct_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825036.991981, "compiled_sql": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='SalesVisit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%SalesGuide%'\n    AND status='Done'\n    --puntualidad\n    AND begin_date >= arrived_date\n    AND arrived_date >= DATEADD(min, -30, begin_date::timestamp)\n    AND ST_Distance(property_point , arrived_point) <=500  \n    AND end_date >= done_date\n    --terminada a la hora \n    AND done_date >= DATEADD(min, 5, start_date::timestamp)\n    AND done_date <= DATEADD(min, 120, start_date::timestamp)\n    AND ST_Distance(property_point , done_point) <=500\n)\n\nSELECT  \n    100::INT AS orden , \n    'Correct SalesVisit Done'::TEXT AS metric , \n    geo_id ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_correct_visit_done\""}, "model.houm.sales_investor_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_sales_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_demand_sales_leads') }}\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads"], "unique_id": "model.houm.sales_investor_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads.sql", "name": "sales_investor_metric_details_leads", "alias": "sales_investor_metric_details_leads", "checksum": {"name": "sha256", "checksum": "fbede9509d2a3a776af6794d74db8fa795fdece03e1ef54f3c5d2d813c67dad6"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.006582, "compiled_sql": "\n\nWITH  demand_sales_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\"\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * , \n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_schedules_cancelled_at": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties' )\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    58::INT AS orden , \n    'Visit Cancelled At'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    updated_at begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'updated_at') }}\nFROM schedules_visit_clean\nORDER BY updated_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_cancelled_at"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_cancelled_at", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "name": "rental_tenant_metric_details_schedules_cancelled_at", "alias": "rental_tenant_metric_details_schedules_cancelled_at", "checksum": {"name": "sha256", "checksum": "4e5264e522684837de88868c8aca1de637d0d33374f494e354981dace082a1b9"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled_at.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.016491, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties' )\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    58::INT AS orden , \n    'Visit Cancelled At'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    updated_at begin_date ,\n    schedule_id ,\n    CASE \n        WHEN updated_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN updated_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', updated_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',updated_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',updated_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND updated_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',updated_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND updated_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', updated_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', updated_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY updated_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled_at\""}, "model.houm.rental_tenant_metric_details_reservations_effective": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH paid_reservations AS (\nSELECT \n    *\nFROM {{ ref('proc_demand_reservations') }}\nWHERE TRUE \n    AND status = 'PAID' \n)\n\n, date_transformation AS (\nSELECT    \n    80::INT AS orden ,\n    'Effective Reservations'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE , \n    reservation_id ,\n    status \nFROM paid_reservations\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_effective", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "name": "rental_tenant_metric_details_reservations_effective", "alias": "rental_tenant_metric_details_reservations_effective", "checksum": {"name": "sha256", "checksum": "904fb4c4f277c8557f2efc8446ddc1dc9f243d900ed6ed705c1b212b9d5c97b2"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1664825037.0261278, "compiled_sql": "\n\nWITH paid_reservations AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE TRUE \n    AND status = 'PAID' \n)\n\n, date_transformation AS (\nSELECT    \n    80::INT AS orden ,\n    'Effective Reservations'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE , \n    reservation_id ,\n    status \nFROM paid_reservations\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%Admin%'\n)\n\n\nSELECT \n    53::INT AS orden , \n    'Visit Scheduled Admin'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }} \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled_admin"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled_admin", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "name": "rental_tenant_metric_details_schedules_scheduled_admin", "alias": "rental_tenant_metric_details_schedules_scheduled_admin", "checksum": {"name": "sha256", "checksum": "9b5bc2a9773cd1b5fab5173b1d9657fa3db4b905c2c1329486dd5ff31e4d549f"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled_admin.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.034842, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND origin like '%Admin%'\n)\n\n\nSELECT \n    53::INT AS orden , \n    'Visit Scheduled Admin'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth \nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled_admin\""}, "model.houm.sales_buyer_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    80::int AS orden ,\r\n    'SalesVisit Scheduled'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "name": "sales_buyer_metric_details_schedules_scheduled", "alias": "sales_buyer_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "f8e74ec4cd2e42065c29fe67cb41b1aff5673254fc86963d1ad3656c66f92d9b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.043492, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    80::int AS orden ,\n    'SalesVisit Scheduled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_done_time": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM {{ ref('proc_demand_schedules_timing')}}\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n)\n\nSELECT  \n    100::INT AS orden , \n    'Visit Done'::TEXT AS metric , \n    geo_id ,\n   '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    {{ create_date_aggregate_columns(thedate = 'begin_date_agg')  }}\nFROM visit_done\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules_timing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_done_time"], "unique_id": "model.houm.rental_tenant_metric_details_done_time", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "name": "rental_tenant_metric_details_done_time", "alias": "rental_tenant_metric_details_done_time", "checksum": {"name": "sha256", "checksum": "e7cd730239b3474cef90a2cdf3d87e8379581fb3f92c5ffae9d03863c99c22cd"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules_timing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_done_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.0518458, "compiled_sql": "\n\nWITH \nvisit_done AS (\n    SELECT \n        *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\"\n    WHERE schedule_type_name='Visit'\n    AND is_dummy = FALSE\n    AND roles::text LIKE '%RentGuide%'\n    AND status='Done'\n)\n\nSELECT  \n    100::INT AS orden , \n    'Visit Done'::TEXT AS metric , \n    geo_id ,\n   '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    begin_date::DATE begin_date_agg,\n    schedule_id ,\n    is_test,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date_agg = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date_agg ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date_agg) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date_agg) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date_agg <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date_agg <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date_agg ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM visit_done\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_done_time\""}, "model.houm.rental_tenant_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT \n    30::INT AS orden , \n    'Unique Tenant Lead'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_at ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_at')  }}\nFROM {{ ref('proc_demand_leads') }}\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads"], "unique_id": "model.houm.rental_tenant_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "name": "rental_tenant_metric_details_leads", "alias": "rental_tenant_metric_details_leads", "checksum": {"name": "sha256", "checksum": "4090563d805a5242c54c357e2eab7e1243a8dd5659a17fafb180945da9202141"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.061079, "compiled_sql": "\n\nSELECT \n    30::INT AS orden , \n    'Unique Tenant Lead'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\"\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_new_subs": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH new_subs AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM new_subs\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_subs"], "unique_id": "model.houm.rental_tenant_metric_details_new_subs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "name": "rental_tenant_metric_details_new_subs", "alias": "rental_tenant_metric_details_new_subs", "checksum": {"name": "sha256", "checksum": "3245d46f40a4db1c94297bc056b34efac51f4d2457bc60074ca735cb2167d215"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1664825037.069856, "compiled_sql": "\n\nWITH new_subs AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n    AND sub_init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE')\n    AND plan_has_management = TRUE \n    AND is_test = FALSE\n)\n\nSELECT    \n    110::INT AS orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM new_subs\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\""}, "model.houm.rental_tenant_metric_details_reservations": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH date_transformation AS (\nSELECT    \n    70::INT AS orden ,\n    'Reservations'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE ,\n    reservation_id ,\n    status \nFROM {{ ref('proc_demand_reservations') }}\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * , \n    {{ create_date_aggregate_columns(thedate = 'payment_date_local') }}\nFROM date_transformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations"], "unique_id": "model.houm.rental_tenant_metric_details_reservations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "name": "rental_tenant_metric_details_reservations", "alias": "rental_tenant_metric_details_reservations", "checksum": {"name": "sha256", "checksum": "47a97b566fc1dfa968e9ba0587b60ff50b6f2420cbd7a75fb870b28790f0affb"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1664825037.07872, "compiled_sql": "\n\nWITH date_transformation AS (\nSELECT    \n    70::INT AS orden ,\n    'Reservations'::TEXT AS metric , \n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    payment_date ,\n    payment_date_local::DATE ,\n    reservation_id ,\n    status \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nORDER BY payment_date_local DESC\n)\n\nSELECT \n    * , \n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN payment_date_local = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',payment_date_local) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND payment_date_local <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_transformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\""}, "model.houm.sales_buyer_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads_qualified"], "unique_id": "model.houm.sales_buyer_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "name": "sales_buyer_metric_details_leads_qualified", "alias": "sales_buyer_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "be5922ed8757e171e851286b96c5c6c97d1d7027b83b6272f9e89c1eddcf8f3a"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.087457, "compiled_sql": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    50::INT AS orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date , \n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified\""}, "model.houm.sales_buyer_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    70::int AS orden , \r\n    'SalesVisit Created'::TEXT AS metric , \r\n    geo_id , \r\n    '{{ var(\"processed_time\") }}' AS processed_time , \r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "name": "sales_buyer_metric_details_schedules_created", "alias": "sales_buyer_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "395b9f68ee1fa8a9f018ff838a9fac7a7a4fc277e64b727faa1eca02605ff39c"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.096144, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    70::int AS orden , \n    'SalesVisit Created'::TEXT AS metric , \n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time , \n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_schedules_cancelled": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    57::INT AS orden , \n    'Visit Cancelled'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_cancelled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_cancelled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "name": "rental_tenant_metric_details_schedules_cancelled", "alias": "rental_tenant_metric_details_schedules_cancelled", "checksum": {"name": "sha256", "checksum": "31ebcfb73efa116178d6058c505c9caf593c4480fa9de72fa3d3cc015a6410d0"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.104529, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND (status = 'Cancelled')\n)\n\n\nSELECT \n    57::INT AS orden , \n    'Visit Cancelled'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_cancelled\""}, "model.houm.rental_tenant_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'Visit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    40::INT AS orden, \r\n    'Visit Created'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    created_at ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'created_at') }}\r\nFROM schedules_visit_clean\r\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "name": "rental_tenant_metric_details_schedules_created", "alias": "rental_tenant_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "409bb86562191e535049214bac0e592e8a82ab909426e52269cafd8ddc0ff374"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.114049, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'Visit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n)\n\nSELECT \n    40::INT AS orden, \n    'Visit Created'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_visit_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_leads_interactions": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT\n    20::INT AS orden ,\n    'Interaction Tenant Lead'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_at ,\n    lead_id ,\n    activity_id ,\n    {{ create_date_aggregate_columns(thedate = 'created_at')  }}\nFROM {{ ref('proc_demand_leads') }}\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "name": "rental_tenant_metric_details_leads_interactions", "alias": "rental_tenant_metric_details_leads_interactions", "checksum": {"name": "sha256", "checksum": "207de2ab7baaa40cd86e54bd7f73e90636370e9ee41546756ef47e6ffd550e5a"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.122205, "compiled_sql": "\n\nSELECT\n    20::INT AS orden ,\n    'Interaction Tenant Lead'::TEXT AS metric , \n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    created_at ,\n    lead_id ,\n    activity_id ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN created_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', created_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',created_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',created_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND created_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND created_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', created_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', created_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\"\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\""}, "model.houm.sales_investor_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_done"], "unique_id": "model.houm.sales_investor_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "name": "sales_investor_metric_details_schedules_done", "alias": "sales_investor_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "905fa79314429dbdf905a5bf6f05a8d2c7f4f7b249637c668bcc5f40a6ff0f26"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.131199, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation = 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_done\""}, "model.houm.sales_buyer_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean as (\nSELECT *\nFROM {{ ref('proc_demand_sales_leads') }}\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'Created Unique SH Buyer Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  {{ create_date_aggregate_columns(thedate = 'add_date') }}\nFROM date_tranformation", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads"], "unique_id": "model.houm.sales_buyer_metric_details_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads.sql", "name": "sales_buyer_metric_details_leads", "alias": "sales_buyer_metric_details_leads", "checksum": {"name": "sha256", "checksum": "bb89551d918daccfb3f6355f3f457dcd6a8fc3f7600dc7202e7ea0de7779ce01"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.139831, "compiled_sql": "\n\nWITH demand_sales_leads_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\"\nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( add_time IS NOT NULL )\n)\n\n, date_tranformation AS (\nSELECT \n    40::INT AS orden ,\n    'Created Unique SH Buyer Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    add_time::DATE AS add_date ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id \nFROM demand_sales_leads_clean\nORDER BY add_time DESC \n)\n\nSELECT \n  * ,\n  CASE \n        WHEN add_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN add_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', add_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',add_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',add_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND add_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND add_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', add_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', add_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM date_tranformation", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads\""}, "model.houm.rental_tenant_metric_details_new_tenant": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH new_tenant AS (\nSELECT \n    * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    plan_has_management , \n    {{ create_date_aggregate_columns(thedate = 'sub_payment_date_local')  }}\nFROM new_tenant\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_details_new_tenant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "name": "rental_tenant_metric_details_new_tenant", "alias": "rental_tenant_metric_details_new_tenant", "checksum": {"name": "sha256", "checksum": "a7f4d6c88799793eaf208dd0b7549221e0453c2be86d6d2f75c846623df16764"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "view"}, "created_at": 1664825037.148997, "compiled_sql": "\n\nWITH new_tenant AS (\nSELECT \n    * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n   AND sub_init_reason IN ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n   AND is_test = FALSE\n)\n\nSELECT    \n    100::INT AS orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    sub_payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    plan_has_management , \n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN sub_payment_date_local = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', sub_payment_date_local ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',sub_payment_date_local) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',sub_payment_date_local) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND sub_payment_date_local <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND sub_payment_date_local <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', sub_payment_date_local ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM new_tenant\nORDER BY sub_payment_date_local DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\""}, "model.houm.rental_tenant_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at')  }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "name": "rental_tenant_metric_details_paid_media_cost", "alias": "rental_tenant_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "4e48bf861ba37089f56fa76f5b01959124114712ae814404e9f6c0a4e06ebbfa"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.157985, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "name": "sales_buyer_metric_details_paid_media_cost", "alias": "sales_buyer_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "9775026cc115836bfde3e4956888548342175aa8d83bd33bf282e7779861a26b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.1664798, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    20::INT AS orden ,\n    'Paid Media Cost SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE TRUE \r\n   AND schedule_type_name = 'SalesVisit' \r\n   AND (\r\n      ( email NOT LIKE '%test.test' \r\n      AND email NOT LIKE '%test.com')  \r\n      OR applicant_id IS NULL  )\r\n   AND (supply_relation != 'New Properties')\r\n   AND status = 'Done'\r\n)\r\n\r\nSELECT \r\n    90::int AS orden , \r\n    'SalesVisit Done'::TEXT AS metric ,\r\n    geo_id ,\r\n    '{{ var(\"processed_time\") }}' AS processed_time ,\r\n    begin_date ,\r\n    schedule_id ,\r\n    {{ create_date_aggregate_columns(thedate = 'begin_date') }}\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "name": "sales_buyer_metric_details_schedules_done", "alias": "sales_buyer_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "659f3ab442517135d75aa1f86e619bf243c2ad45d2f87f54ed3dfaee70269aa2"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.17571, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE TRUE \n   AND schedule_type_name = 'SalesVisit' \n   AND (\n      ( email NOT LIKE '%test.test' \n      AND email NOT LIKE '%test.com')  \n      OR applicant_id IS NULL  )\n   AND (supply_relation != 'New Properties')\n   AND status = 'Done'\n)\n\nSELECT \n    90::int AS orden , \n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN begin_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', begin_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',begin_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',begin_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND begin_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND begin_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', begin_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\""}, "model.houm.sales_investor_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL )\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'buyer_qualification_date') }}\nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY buyer_qualification_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_investor_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "name": "sales_investor_metric_details_leads_qualified_date", "alias": "sales_investor_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "9cab70505a43af3e30aac0c77d6edd09352e0d8591d4ca6c6c02ab17eea57e74"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.184059, "compiled_sql": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'New Properties' )\n  AND ( buyer_qualification IN (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL )\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', buyer_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',buyer_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',buyer_qualification_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND buyer_qualification_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND buyer_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM demand_sales_leads_clean\nWHERE TRUE \nORDER BY buyer_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_leads_qualified_date\""}, "model.houm.sales_demand_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost NP & SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    {{ create_date_aggregate_columns(thedate = 'executed_at') }}\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_demand_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_demand_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "name": "sales_demand_metric_details_paid_media_cost", "alias": "sales_demand_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "41026afd0647872a1497a5c8acf85a04ac699b968a61bb62ac244d1eed337f67"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_demand_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.1925519, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    10::INT AS orden ,\n    'Paid Media Cost NP & SH (USD)'::TEXT AS metric ,\n    geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_cost_usd ,\n    day_clicks , \n    day_impressions ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN executed_at = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', executed_at ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',executed_at) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',executed_at) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND executed_at <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND executed_at <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', executed_at ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_demand_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  {{ ref('proc_demand_sales_leads') }} \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL)\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    {{ create_date_aggregate_columns(thedate = 'buyer_qualification_date') }}\nFROM demand_sales_leads_clean\nORDER BY buyer_qualification_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.houm.create_date_aggregate_columns"], "nodes": ["model.houm.proc_demand_sales_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_buyer_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "name": "sales_buyer_metric_details_leads_qualified_date", "alias": "sales_buyer_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "914271a5c26cb3e4b61bbffdd91562f7d2f0448b905e5a77d758b6b48ab57dd4"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_sales_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1664825037.201171, "compiled_sql": "\n\nWITH demand_sales_leads_clean AS (\nSELECT \n       *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\" \nWHERE TRUE  \n  AND ( is_test = FALSE)\n  AND ( is_deleted = FALSE)\n  AND ( is_merged = FALSE )\n  AND ( negotiation_property_condition = 'Second Hand' )\n  AND ( buyer_qualification in (3,4,5) )\n  AND ( buyer_qualification_date IS NOT NULL)\n)\n\nSELECT\n    60::INT AS orden ,\n    'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n    negotiation_geo_id AS geo_id , \n    '2022-10-11 18:29:46.503778-03:00' AS processed_time ,\n    add_time ,\n    buyer_qualification ,\n    buyer_qualification_date ,\n    person_id ,\n    person_email ,\n    person_phone ,\n    deal_id ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN buyer_qualification_date = DATEADD(DAY,-2,'2022-10-11 18:29:46.503778-03:00'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', buyer_qualification_date ) = DATEADD(WEEK,-1, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',buyer_qualification_date) = DATEADD(WEEK,-2, DATE_TRUNC('week','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',buyer_qualification_date) = DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) \n            AND buyer_qualification_date <= DATEADD(DAY,-1,'2022-10-11 18:29:46.503778-03:00'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            AND buyer_qualification_date <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '2022-10-11 18:29:46.503778-03:00'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date) = DATEADD(MONTH,-1, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-2, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', buyer_qualification_date ) = DATEADD(MONTH,-3, DATE_TRUNC('month','2022-10-11 18:29:46.503778-03:00'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\nFROM demand_sales_leads_clean\nORDER BY buyer_qualification_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_leads_qualified_date\""}, "model.houm.property__published_properties_rev_suggested_prices": {"raw_sql": "{{ config(materialized='table') }}\n\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.property_id \n        ,valor_uf.valor as valor_uf\n        ,a.valor\n        ,a.valor_venta\n        ,g.sale_suggested_price\n        ,g.rental_suggested_price\n        ,a.rentals_currency_code \n        ,a.sales_currency_code \n        ,g.rental_suggested_currency as rental_suggested_currency_code\n        ,g.sale_suggested_currency as sale_suggested_currency_code\n        ,g.sale_original_price\n        ,g.rental_original_price\n        ,case when a.valor_venta is null or a.valor_venta = 0 then null\n          when g.sale_suggested_price is null or g.sale_suggested_price = 0 then null\n          else (\n                case    when a.sales_currency_code::text like '%CLP%' and g.sale_suggested_currency like '%CLF%'\n                        then Round( (a.valor_venta/valor_uf.valor )::float / g.sale_suggested_price,3)\n                        when a.sales_currency_code::text like '%CLF%' and g.sale_suggested_currency like '%CLP%'\n                        then Round( (a.valor_venta*valor_uf.valor )::float / g.sale_suggested_price,3)\n                        else Round( (a.valor_venta)::float / g.sale_suggested_price , 3)\n                        end\n                ) end rev_ratio_sales\n        ,case when a.valor is null or a.valor = 0 then null\n          when g.rental_suggested_price is null or g.rental_suggested_price = 0 then null\n          else (\n                case    when a.rentals_currency_code::text like '%CLP%' and g.rental_suggested_currency like '%CLF%'\n                        then Round( (a.valor/valor_uf.valor )::float / g.rental_suggested_price,3)\n                        when a.rentals_currency_code::text like '%CLF%' and g.rental_suggested_currency like '%CLP%'\n                        then Round( (a.valor*valor_uf.valor )::float / g.rental_suggested_price,3)\n                        else Round( (a.valor)::float / g.rental_suggested_price , 3)\n                        end\n                ) end rev_ratio_rentals \nFROM valor_uf, {{ ref('property__published_properties') }} a\nLEFT JOIN {{ ref('proc_properties_rev_suggested_prices') }} g on g.property_id = a.property_id\n)\nselect * from tabla_final", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties", "model.houm.proc_properties_rev_suggested_prices"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_properties_rev_suggested_prices"], "unique_id": "model.houm.property__published_properties_rev_suggested_prices", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_properties_rev_suggested_prices.sql", "original_file_path": "models/dwh/analytics/property__published_properties_rev_suggested_prices.sql", "name": "property__published_properties_rev_suggested_prices", "alias": "property__published_properties_rev_suggested_prices", "checksum": {"name": "sha256", "checksum": "63d4ae7e1d551ba3f9e4e1899b134883f6421c88edec76c33e54963a8c8829d5"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["property__published_properties"], ["proc_properties_rev_suggested_prices"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_properties_rev_suggested_prices.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1664825037.210115, "compiled_sql": "\n\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.property_id \n        ,valor_uf.valor as valor_uf\n        ,a.valor\n        ,a.valor_venta\n        ,g.sale_suggested_price\n        ,g.rental_suggested_price\n        ,a.rentals_currency_code \n        ,a.sales_currency_code \n        ,g.rental_suggested_currency as rental_suggested_currency_code\n        ,g.sale_suggested_currency as sale_suggested_currency_code\n        ,g.sale_original_price\n        ,g.rental_original_price\n        ,case when a.valor_venta is null or a.valor_venta = 0 then null\n          when g.sale_suggested_price is null or g.sale_suggested_price = 0 then null\n          else (\n                case    when a.sales_currency_code::text like '%CLP%' and g.sale_suggested_currency like '%CLF%'\n                        then Round( (a.valor_venta/valor_uf.valor )::float / g.sale_suggested_price,3)\n                        when a.sales_currency_code::text like '%CLF%' and g.sale_suggested_currency like '%CLP%'\n                        then Round( (a.valor_venta*valor_uf.valor )::float / g.sale_suggested_price,3)\n                        else Round( (a.valor_venta)::float / g.sale_suggested_price , 3)\n                        end\n                ) end rev_ratio_sales\n        ,case when a.valor is null or a.valor = 0 then null\n          when g.rental_suggested_price is null or g.rental_suggested_price = 0 then null\n          else (\n                case    when a.rentals_currency_code::text like '%CLP%' and g.rental_suggested_currency like '%CLF%'\n                        then Round( (a.valor/valor_uf.valor )::float / g.rental_suggested_price,3)\n                        when a.rentals_currency_code::text like '%CLF%' and g.rental_suggested_currency like '%CLP%'\n                        then Round( (a.valor*valor_uf.valor )::float / g.rental_suggested_price,3)\n                        else Round( (a.valor)::float / g.rental_suggested_price , 3)\n                        end\n                ) end rev_ratio_rentals \nFROM valor_uf, \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_rev_suggested_prices\" g on g.property_id = a.property_id\n)\nselect * from tabla_final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_properties_rev_suggested_prices\""}, "model.houm.property__rev_ratio_country_city": {"raw_sql": "with table1 as (\nselect b.property_id\n        ,b.country\n        ,b.city_macrozone\n        ,b.city_marketplace\n        ,b.business_type\n        ,b.sales_status\n        ,b.rental_status\n        ,a.sales_currency_code,a.sale_suggested_currency_code\n        ,a.rental_suggested_currency_code\n        ,a.sale_suggested_currency_code\n        ,a.rentals_currency_code\n        ,a.rental_suggested_price\n        ,a.rev_ratio_rentals\n        ,a.rev_ratio_sales\n        ,a.valor\n        ,a.valor_uf\n        --,a.*\nfrom {{ ref('property__published_properties_rev_suggested_prices') }} a\nleft join {{ ref('property__published_properties') }} b on a.property_id = b.property_id\n)\n, rental_table as (\nselect * \nfrom table1\nwhere business_type like '%Rental%' \nand rental_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, sale_table as (\nselect * \nfrom table1\nwhere business_type like '%Sale%' \nand sales_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, final_table as (\nselect country,city_marketplace,'Sales' as business_type,avg(rev_ratio_sales) as rev_ratio\nfrom sale_table\ngroup by country,city_marketplace\nunion all\nselect country,city_marketplace,'Rentals' as business_type,avg(rev_ratio_rentals) as rev_ratio\nfrom rental_table\ngroup by country,city_marketplace\n)\nselect * \nfrom final_table order by rev_ratio asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.property__published_properties_rev_suggested_prices", "model.houm.property__published_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__rev_ratio_country_city"], "unique_id": "model.houm.property__rev_ratio_country_city", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__rev_ratio_country_city.sql", "original_file_path": "models/dwh/analytics/property__rev_ratio_country_city.sql", "name": "property__rev_ratio_country_city", "alias": "property__rev_ratio_country_city", "checksum": {"name": "sha256", "checksum": "e895cdf5b3c18b75dbcd506a62fb37fd9fa39c0b8237067492930def627fd760"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["property__published_properties_rev_suggested_prices"], ["property__published_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__rev_ratio_country_city.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1664825037.211457, "compiled_sql": "with table1 as (\nselect b.property_id\n        ,b.country\n        ,b.city_macrozone\n        ,b.city_marketplace\n        ,b.business_type\n        ,b.sales_status\n        ,b.rental_status\n        ,a.sales_currency_code,a.sale_suggested_currency_code\n        ,a.rental_suggested_currency_code\n        ,a.sale_suggested_currency_code\n        ,a.rentals_currency_code\n        ,a.rental_suggested_price\n        ,a.rev_ratio_rentals\n        ,a.rev_ratio_sales\n        ,a.valor\n        ,a.valor_uf\n        --,a.*\nfrom \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties_rev_suggested_prices\" a\nleft join \"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\" b on a.property_id = b.property_id\n)\n, rental_table as (\nselect * \nfrom table1\nwhere business_type like '%Rental%' \nand rental_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, sale_table as (\nselect * \nfrom table1\nwhere business_type like '%Sale%' \nand sales_status in ('published','republished')\nand rev_ratio_rentals is not null\n)\n, final_table as (\nselect country,city_marketplace,'Sales' as business_type,avg(rev_ratio_sales) as rev_ratio\nfrom sale_table\ngroup by country,city_marketplace\nunion all\nselect country,city_marketplace,'Rentals' as business_type,avg(rev_ratio_rentals) as rev_ratio\nfrom rental_table\ngroup by country,city_marketplace\n)\nselect * \nfrom final_table order by rev_ratio asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__rev_ratio_country_city\""}, "model.houm.property__published_properties": {"raw_sql": "{{ config(materialized='table') }}\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, {{ ref('proc_properties') }} a\nLEFT JOIN {{ ref('proc_propertydetails') }} b on a.id = b.property_id \nLEFT JOIN {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id\nLEFT JOIN {{ ref('proc_properties_location') }}  f on a.neighborhood_id  = f.id \nLEFT JOIN {{ ref('proc_properties_mz') }}  d on d.property_id  = a.id \nLEFT JOIN {{ ref('proc_macrozone') }} e on d.geo_id = e.geo_id \nwhere (b.status in ('published','republished')\nor c.status in ('published','republished') ) AND a.is_deleted = False \n)\nselect * from tabla_final", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_properties"], "unique_id": "model.houm.property__published_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_properties.sql", "original_file_path": "models/dwh/analytics/property__published_properties.sql", "name": "property__published_properties", "alias": "property__published_properties", "checksum": {"name": "sha256", "checksum": "cc9c9fe3c329036465b1922a83ea1d28805d1adcc3ba0b01ae38a95291db9450"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"], ["proc_properties_location"], ["proc_properties_mz"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1664825037.212658, "compiled_sql": "\nwith valor_uf as (\n    select valor from economic_indicator_uf \n    order by fecha desc\n    limit 1\n    )\n, tabla_final as (\nSELECT \n        a.id as property_id \n        ,a.created_at \n        ,a.updated_at\n        ,a.country\n        ,a.region \n        ,a.comuna\n        ,a.type\n        ,a.supply_relation\n        ,a.business_type\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.first_publication_date as first_rental_publication_date\n        ,c.first_publication_date as first_sales_publication_date\n        ,b.valor\n        ,b.valor_venta\n        ,b.currency_code as rentals_currency_code\n        ,c.currency_code as sales_currency_code\n        ,case when (a.country like 'Ch%' and b.currency_code::text like '%CLF%') then (b.valor::float*valor_uf.valor::float) else b.valor::float end \"normalized_rentals_price\"\n        ,case when (a.country like 'Ch%' and c.currency_code::text like '%CLP%') then  (b.valor_venta::float/valor_uf.valor::float)::int else b.valor_venta end  \"normalized_sales_price\"\n        ,b.m_construidos \n        ,b.m_terreno \n        ,b.dormitorios \n        ,b.banos \n        ,b.estacionamientos\n        ,b.servicios \n        ,b.amoblado\n        ,b.orientacion\n        ,b.piscina\n        ,b.gym\n        ,b.mascotas\n        ,b.calefaccion\n        ,b.latitud \n        ,b.longitud \n        ,case when a.country = 'Chile' and c.status in ('published','republished') then concat('https://houm.com/cl/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Colombia' and c.status in ('published','republished') then concat('https://houm.com/co/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              when a.country = 'Mexico' and c.status in ('published','republished') then concat('https://houm.com/mx/propiedades/venta/',concat(a.type,concat('/',concat(a.region,concat('/',concat(a.comuna,concat('/',a.id)))))))\n              else concat('https://houm.com/',concat(f.country_code,concat('/propiedades/',a.uid::text)))\n              end as houm_link_marketplace\n        --,d.geo_id\n        ,e.name as macrozone\n        ,e.city as  city_macrozone\n        ,e.country as country_macrozone\n        ,e.city_marketplace_id\n        ,e.city_marketplace\nFROM valor_uf, \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\"  f on a.neighborhood_id  = f.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\"  d on d.property_id  = a.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" e on d.geo_id = e.geo_id \nwhere (b.status in ('published','republished')\nor c.status in ('published','republished') ) AND a.is_deleted = False \n)\nselect * from tabla_final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_properties\""}, "model.houm.property__rev_kpi_ratio": {"raw_sql": "WITH sales AS (\n        SELECT id,\n            'sales' AS service_type, \n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_sales_published_properties') }}\n        UNION ALL\n        SELECT id,\n            'sales' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_sales_sold_properties') }}\n    ),\n    rental AS (\n        SELECT id,\n            'rental' AS service_type,\n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_rental_published_properties') }}\n        UNION ALL\n        SELECT id,\n            'rental' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM {{ ref('proc_rev_rental_rented_properties') }}\n    ),\n\nratio_by_id AS (\n    SELECT *\n    FROM sales\n    UNION ALL \n    SELECT *\n    FROM rental\n    ),\nratio_treshold AS (\n    SELECT PERCENTILE_CONT(0.955) WITHIN GROUP (ORDER BY recommended_price_ratio) As upper_val,\n           PERCENTILE_CONT(0.045) WITHIN GROUP (ORDER BY recommended_price_ratio) As lower_val\n    FROM ratio_by_id\n)\n\nSELECT *\nFROM ratio_by_id, ratio_treshold\nWHERE recommended_price_ratio IS NOT NULL\nAND min_recommended_price_ratio IS NOT NULL\nAND max_recommended_price_ratio IS NOT NULL\nAND country IS NOT NULL\nAND city_marketplace IS NOT NULL\nAND recommended_price_ratio < ratio_treshold.upper_val\nAND recommended_price_ratio > ratio_treshold.lower_val", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties", "model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__rev_kpi_ratio"], "unique_id": "model.houm.property__rev_kpi_ratio", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__rev_kpi_ratio.sql", "original_file_path": "models/dwh/analytics/property__rev_kpi_ratio.sql", "name": "property__rev_kpi_ratio", "alias": "property__rev_kpi_ratio", "checksum": {"name": "sha256", "checksum": "cb0c50f50b5799764021ff15a081cf03af5e0ef00b9c6c9f1a5b33da14407865"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_rev_sales_published_properties"], ["proc_rev_sales_sold_properties"], ["proc_rev_rental_published_properties"], ["proc_rev_rental_rented_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__rev_kpi_ratio.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1664825037.214221, "compiled_sql": "WITH sales AS (\n        SELECT id,\n            'sales' AS service_type, \n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_published_properties\"\n        UNION ALL\n        SELECT id,\n            'sales' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_sold_properties\"\n    ),\n    rental AS (\n        SELECT id,\n            'rental' AS service_type,\n            'published' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_published_properties\"\n        UNION ALL\n        SELECT id,\n            'rental' AS service_type,\n            'taken' AS status,\n            price/recommended_price AS recommended_price_ratio,\n            price/min_recommended_price AS min_recommended_price_ratio,\n            price/max_recommended_price AS max_recommended_price_ratio,\n            country,\n            city_marketplace\n        FROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_rented_properties\"\n    ),\n\nratio_by_id AS (\n    SELECT *\n    FROM sales\n    UNION ALL \n    SELECT *\n    FROM rental\n    ),\nratio_treshold AS (\n    SELECT PERCENTILE_CONT(0.955) WITHIN GROUP (ORDER BY recommended_price_ratio) As upper_val,\n           PERCENTILE_CONT(0.045) WITHIN GROUP (ORDER BY recommended_price_ratio) As lower_val\n    FROM ratio_by_id\n)\n\nSELECT *\nFROM ratio_by_id, ratio_treshold\nWHERE recommended_price_ratio IS NOT NULL\nAND min_recommended_price_ratio IS NOT NULL\nAND max_recommended_price_ratio IS NOT NULL\nAND country IS NOT NULL\nAND city_marketplace IS NOT NULL\nAND recommended_price_ratio < ratio_treshold.upper_val\nAND recommended_price_ratio > ratio_treshold.lower_val", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__rev_kpi_ratio\""}, "model.houm.property__published_new_properties": {"raw_sql": "with Published_NewProperties as (\nselect properties.id as property_id \n        ,properties.country\n        , case when real_estate_developments_developments.development_status like 'completed' then 'EntregaInmediata' \n              when real_estate_developments_developments.development_status like 'site_plan_approved' then 'EnBlanco'           \n              when real_estate_developments_developments.development_status like 'under_construction' then 'EnVerde'   \n              when real_estate_developments_developments.development_status like 'proposed' then 'Planos'\n              end as project_phase\n        ,arriendoasegurado_propertydetails.latitud as latitude\n        ,arriendoasegurado_propertydetails.longitud as longitude\n        ,real_estate_developments_units.status as unit_status\n        ,properties.supply_relation\n      \t,real_estate_developments_developmentdetails.reservation_value reservation_value\n      \t,real_estate_developments_developments.has_pilot\n      \t,real_estate_developments_developments.has_show_unit\n        -- Tipologias data \n        , real_estate_developments_unittypes.id type_id\n        , real_estate_developments_unittypes.name tipology\n        , real_estate_developments_units.name as nombre_unidad\n        , (case when properties.type = 'departamento' then 'depto \ud83c\udfe2' else type || ' \ud83c\udfe0' end)  as property_type\n        , real_estate_developments_unittypes.rooms Dor\n        , real_estate_developments_unittypes.bathrooms bath\n        , real_estate_developments_unittypes.usable_area\n        , real_estate_developments_unittypes.building_area\n        -- Unidad \n        , real_estate_developments_units.currency\n        , real_estate_developments_units.id unit_id \n        , arriendoasegurado_propertydetails.valor_venta as min_unit_price\n        , real_estate_developments_units.price as unit_price\n        , real_estate_developments_units.price/Nullif( (usable_area - building_area)*0.5+usable_area,0) m2_unit_price\n        --, round(real_estate_developments_units.loan_monthly_payment/0.3) as Renta_m\u00ednima\n        , real_estate_developments_units.suggested_rent as ReV\n        , (real_estate_developments_units.suggested_rent*12)/real_estate_developments_units.price::double precision as Cap_rate\n        --, real_estate_developments_units.suggested_rent*12 as Renta_anual\n        , real_estate_developments_units.floor  as floor \n        , real_estate_developments_units.parking_spaces park\n        , real_estate_developments_units.has_storage\n        , properties_associationamenities.has_patio\n        , properties_associationamenities.has_playground\n        , properties_associationamenities.has_pet_area\n        , properties_associationamenities.has_roof_garden\n        , case when properties_associationamenities.has_patio\n            or properties_associationamenities.has_playground\n            or properties_associationamenities.has_pet_area\n            or properties_associationamenities.has_roof_garden\n            then true  else false end gree_area_boolean\n        --, bi_orientation.orientation_esp\n        , real_estate_developments_units.orientation\nfrom {{ ref('proc_new_properties') }} properties\nleft join {{ ref('stg_users') }} users on users.id = properties.user_id \nleft join {{ ref('proc_property_salesdetails') }} properties_salesdetails on properties_salesdetails.property_id = properties.id\nleft join {{ ref('proc_propertydetails') }} arriendoasegurado_propertydetails on arriendoasegurado_propertydetails.property_id = properties.id \nleft join {{ ref('stg_real_estate_developments_developments') }} real_estate_developments_developments on real_estate_developments_developments.property_id = properties.id \nleft join {{ ref('stg_real_estate_developments_developmentdetails') }} real_estate_developments_developmentdetails on real_estate_developments_developments.id  = real_estate_developments_developmentdetails.development_id \nleft join {{ ref('stg_real_estate_developments_unittypes') }} real_estate_developments_unittypes on real_estate_developments_unittypes.development_id = real_estate_developments_developments.id\nleft join {{ ref('stg_real_estate_developments_units') }} real_estate_developments_units on real_estate_developments_units.unit_type_id = real_estate_developments_unittypes.id \nleft join {{ ref('stg_properties_associationamenities') }} properties_associationamenities on properties_associationamenities.property_id = properties.id \nwhere true\nand properties_salesdetails.status = 'published'\nand properties.is_deleted = False  \nand properties.for_sale = True\nand upper(properties.country) in ('COLOMBIA','CHILE')\n)\n\nSELECT *\nFROM Published_NewProperties", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_new_properties", "model.houm.stg_users", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails", "model.houm.stg_real_estate_developments_developments", "model.houm.stg_real_estate_developments_developmentdetails", "model.houm.stg_real_estate_developments_unittypes", "model.houm.stg_real_estate_developments_units", "model.houm.stg_properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_analytics", "database": null, "tags": ["dw", "analytics", "feature_store"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_analytics", "fqn": ["houm", "dwh", "analytics", "property__published_new_properties"], "unique_id": "model.houm.property__published_new_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "dwh/analytics/property__published_new_properties.sql", "original_file_path": "models/dwh/analytics/property__published_new_properties.sql", "name": "property__published_new_properties", "alias": "property__published_new_properties", "checksum": {"name": "sha256", "checksum": "da773dd34a22e61a8a3725e7db245cd3f8171af1b7c1b6bf99aae223634123a3"}, "tags": ["dw", "analytics", "feature_store"], "refs": [["proc_new_properties"], ["stg_users"], ["proc_property_salesdetails"], ["proc_propertydetails"], ["stg_real_estate_developments_developments"], ["stg_real_estate_developments_developmentdetails"], ["stg_real_estate_developments_unittypes"], ["stg_real_estate_developments_units"], ["stg_properties_associationamenities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/analytics/property__published_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_analytics", "materialized": "table", "tags": ["dw", "analytics", "feature_store"]}, "created_at": 1664825037.215693, "compiled_sql": "with Published_NewProperties as (\nselect properties.id as property_id \n        ,properties.country\n        , case when real_estate_developments_developments.development_status like 'completed' then 'EntregaInmediata' \n              when real_estate_developments_developments.development_status like 'site_plan_approved' then 'EnBlanco'           \n              when real_estate_developments_developments.development_status like 'under_construction' then 'EnVerde'   \n              when real_estate_developments_developments.development_status like 'proposed' then 'Planos'\n              end as project_phase\n        ,arriendoasegurado_propertydetails.latitud as latitude\n        ,arriendoasegurado_propertydetails.longitud as longitude\n        ,real_estate_developments_units.status as unit_status\n        ,properties.supply_relation\n      \t,real_estate_developments_developmentdetails.reservation_value reservation_value\n      \t,real_estate_developments_developments.has_pilot\n      \t,real_estate_developments_developments.has_show_unit\n        -- Tipologias data \n        , real_estate_developments_unittypes.id type_id\n        , real_estate_developments_unittypes.name tipology\n        , real_estate_developments_units.name as nombre_unidad\n        , (case when properties.type = 'departamento' then 'depto \ud83c\udfe2' else type || ' \ud83c\udfe0' end)  as property_type\n        , real_estate_developments_unittypes.rooms Dor\n        , real_estate_developments_unittypes.bathrooms bath\n        , real_estate_developments_unittypes.usable_area\n        , real_estate_developments_unittypes.building_area\n        -- Unidad \n        , real_estate_developments_units.currency\n        , real_estate_developments_units.id unit_id \n        , arriendoasegurado_propertydetails.valor_venta as min_unit_price\n        , real_estate_developments_units.price as unit_price\n        , real_estate_developments_units.price/Nullif( (usable_area - building_area)*0.5+usable_area,0) m2_unit_price\n        --, round(real_estate_developments_units.loan_monthly_payment/0.3) as Renta_m\u00ednima\n        , real_estate_developments_units.suggested_rent as ReV\n        , (real_estate_developments_units.suggested_rent*12)/real_estate_developments_units.price::double precision as Cap_rate\n        --, real_estate_developments_units.suggested_rent*12 as Renta_anual\n        , real_estate_developments_units.floor  as floor \n        , real_estate_developments_units.parking_spaces park\n        , real_estate_developments_units.has_storage\n        , properties_associationamenities.has_patio\n        , properties_associationamenities.has_playground\n        , properties_associationamenities.has_pet_area\n        , properties_associationamenities.has_roof_garden\n        , case when properties_associationamenities.has_patio\n            or properties_associationamenities.has_playground\n            or properties_associationamenities.has_pet_area\n            or properties_associationamenities.has_roof_garden\n            then true  else false end gree_area_boolean\n        --, bi_orientation.orientation_esp\n        , real_estate_developments_units.orientation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_new_properties\" properties\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_users\" users on users.id = properties.user_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" properties_salesdetails on properties_salesdetails.property_id = properties.id\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" arriendoasegurado_propertydetails on arriendoasegurado_propertydetails.property_id = properties.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\" real_estate_developments_developments on real_estate_developments_developments.property_id = properties.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developmentdetails\" real_estate_developments_developmentdetails on real_estate_developments_developments.id  = real_estate_developments_developmentdetails.development_id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\" real_estate_developments_unittypes on real_estate_developments_unittypes.development_id = real_estate_developments_developments.id\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\" real_estate_developments_units on real_estate_developments_units.unit_type_id = real_estate_developments_unittypes.id \nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\" properties_associationamenities on properties_associationamenities.property_id = properties.id \nwhere true\nand properties_salesdetails.status = 'published'\nand properties.is_deleted = False  \nand properties.for_sale = True\nand upper(properties.country) in ('COLOMBIA','CHILE')\n)\n\nSELECT *\nFROM Published_NewProperties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_analytics\".\"property__published_new_properties\""}, "model.houm.stg_survicate_nps_sac_surveys": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_sac_surveys') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_sac_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_surveys"], "unique_id": "model.houm.stg_survicate_nps_sac_surveys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_surveys.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_surveys.sql", "name": "stg_survicate_nps_sac_surveys", "alias": "stg_survicate_nps_sac_surveys", "checksum": {"name": "sha256", "checksum": "d9604e228476ef76e62ae0019f1d24454b257a60683fe8810347609b1bba52fa"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_sac_surveys"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_surveys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.217022, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_sac_surveys\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_surveys\""}, "model.houm.stg_survicate_nps_sac_bi_executives": {"raw_sql": "select distinct REPLACE(survey_name, 'CH Satisfacci\u00f3n Clientes post atenci\u00f3n ', '') as \"Executive\",\n        survey_name\nFROM {{ ref('stg_survicate_nps_sac_executives') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_sac_executives"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_bi_executives"], "unique_id": "model.houm.stg_survicate_nps_sac_bi_executives", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "name": "stg_survicate_nps_sac_bi_executives", "alias": "stg_survicate_nps_sac_bi_executives", "checksum": {"name": "sha256", "checksum": "b2d59d412e853ee0282c59a44acfcf3000feac6e7f22457dc9df2c8c6d373912"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_sac_executives"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_bi_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.2181141, "compiled_sql": "select distinct REPLACE(survey_name, 'CH Satisfacci\u00f3n Clientes post atenci\u00f3n ', '') as \"Executive\",\n        survey_name\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_executives\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_bi_executives\""}, "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_tenant_satisfaction_24hrs') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_satisfaction_24hrs"], "unique_id": "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "name": "stg_survicate_nps_tenant_satisfaction_24hrs", "alias": "stg_survicate_nps_tenant_satisfaction_24hrs", "checksum": {"name": "sha256", "checksum": "12509b13cd0be64a770b86024cfa346d0bba4d9dfa32f6c3cd60b04b9e1a5c4f"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tenant_satisfaction_24hrs"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.2193868, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_satisfaction_24hrs\""}, "model.houm.stg_survicate_nps_admin_surveys": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_admin_surveys') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_admin_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_surveys"], "unique_id": "model.houm.stg_survicate_nps_admin_surveys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_surveys.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_surveys.sql", "name": "stg_survicate_nps_admin_surveys", "alias": "stg_survicate_nps_admin_surveys", "checksum": {"name": "sha256", "checksum": "2e4551d40fdc3c4f046ef8a67931e1d32c768a419c5f4ad6789e2b20407a8f55"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_admin_surveys"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_surveys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.220491, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_admin_surveys\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_surveys\""}, "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_satisfaction_6months_cl') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_satisfaction_6months_cl"], "unique_id": "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "name": "stg_survicate_nps_landlord_satisfaction_6months_cl", "alias": "stg_survicate_nps_landlord_satisfaction_6months_cl", "checksum": {"name": "sha256", "checksum": "7c42df9f6c10e766738c7bd482490d62e981e5381e9e2d85ebf45b7ef44ac117"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_satisfaction_6months_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.221569, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\""}, "model.houm.stg_survicate_nps_admin_executives": {"raw_sql": "SELECT a.name AS survey_name\n        , b.survey_id\n        , b.first_seen_date\n        , b.first_response_date\n        , b.customer_country\n        , b.ev_satisfaction_description\n        , b.ev_satisfaction\n        , b.service_quality_description\n        , b.service_quality\n        , b.problem_solved\n        , b.executive_call\n        , b.response_time\n        , b.text1_answer\n        , b.page_url\n        , b.visitor_id\n        , b.visitor_uuid\n        , b.response_uuid\nFROM {{ ref('stg_survicate_nps_admin_answers') }} b \nLEFT JOIN {{ ref('stg_survicate_nps_admin_surveys') }} a ON a.id = b.survey_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_admin_answers", "model.houm.stg_survicate_nps_admin_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_executives"], "unique_id": "model.houm.stg_survicate_nps_admin_executives", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_executives.sql", "name": "stg_survicate_nps_admin_executives", "alias": "stg_survicate_nps_admin_executives", "checksum": {"name": "sha256", "checksum": "c8b4d9de4626fdf3b961447ecace2f18f372a3fa38481541974379156166e2c8"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_admin_answers"], ["stg_survicate_nps_admin_surveys"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.2226958, "compiled_sql": "SELECT a.name AS survey_name\n        , b.survey_id\n        , b.first_seen_date\n        , b.first_response_date\n        , b.customer_country\n        , b.ev_satisfaction_description\n        , b.ev_satisfaction\n        , b.service_quality_description\n        , b.service_quality\n        , b.problem_solved\n        , b.executive_call\n        , b.response_time\n        , b.text1_answer\n        , b.page_url\n        , b.visitor_id\n        , b.visitor_uuid\n        , b.response_uuid\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_answers\" b \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_surveys\" a ON a.id = b.survey_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_executives\""}, "model.houm.stg_survicate_nps_visit_done": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_visit_done') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_visit_done"], "unique_id": "model.houm.stg_survicate_nps_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_visit_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_visit_done.sql", "name": "stg_survicate_nps_visit_done", "alias": "stg_survicate_nps_visit_done", "checksum": {"name": "sha256", "checksum": "447f548c14d5c1d6830dc152d26ce1bf3c5b48eb7d9f8d7764b7f07ca18f4bd4"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_visit_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.224948, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_visit_done\""}, "model.houm.stg_survicate_nps_admin_answers": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_admin_answers') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_admin_answers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_admin_answers"], "unique_id": "model.houm.stg_survicate_nps_admin_answers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_admin_answers.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_admin_answers.sql", "name": "stg_survicate_nps_admin_answers", "alias": "stg_survicate_nps_admin_answers", "checksum": {"name": "sha256", "checksum": "766f48a5f746c4cb47796004d0cd7c621790b1c0a5a183403e9f440c5742b410"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_admin_answers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_admin_answers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.226138, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_admin_answers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_admin_answers\""}, "model.houm.stg_survicate_nps_sac_executives": {"raw_sql": "SELECT b.name AS survey_name, a.survey_id\n        , a.first_seen_date\n        , a.first_response_date\n        , a.ev_atencion_description\n        , a.ev_atencion\n        , a.ev_satisfaction_description\n        , a.ev_satisfaction\n        , a.problem_solved_description\n        , a.problem_solved\n        , a.nps_service_recommendation\n        , a.text1_bad_answer\n        , a.text1_good_answer\n        , a.text1_neutral_answer\n        , a.page_url\n        , a.visitor_id\n        , a.visitor_uuid\n        , a.response_uuid\n        , a.nps\nFROM {{ ref('stg_survicate_nps_sac_answers') }} a\nLEFT JOIN {{ ref('stg_survicate_nps_sac_surveys') }} b ON b.id = a.survey_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_survicate_nps_sac_answers", "model.houm.stg_survicate_nps_sac_surveys"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_executives"], "unique_id": "model.houm.stg_survicate_nps_sac_executives", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_executives.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_executives.sql", "name": "stg_survicate_nps_sac_executives", "alias": "stg_survicate_nps_sac_executives", "checksum": {"name": "sha256", "checksum": "c6ca6e159bf9ce88eadce16cd00aff3242dab6801ec7bc4faf00229379a07650"}, "tags": ["dw", "staging", "survicate"], "refs": [["stg_survicate_nps_sac_answers"], ["stg_survicate_nps_sac_surveys"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_executives.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.227198, "compiled_sql": "SELECT b.name AS survey_name, a.survey_id\n        , a.first_seen_date\n        , a.first_response_date\n        , a.ev_atencion_description\n        , a.ev_atencion\n        , a.ev_satisfaction_description\n        , a.ev_satisfaction\n        , a.problem_solved_description\n        , a.problem_solved\n        , a.nps_service_recommendation\n        , a.text1_bad_answer\n        , a.text1_good_answer\n        , a.text1_neutral_answer\n        , a.page_url\n        , a.visitor_id\n        , a.visitor_uuid\n        , a.response_uuid\n        , a.nps\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_answers\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_surveys\" b ON b.id = a.survey_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_executives\""}, "model.houm.stg_survicate_nps_sac_answers": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_sac_answers') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_sac_answers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_sac_answers"], "unique_id": "model.houm.stg_survicate_nps_sac_answers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_sac_answers.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_sac_answers.sql", "name": "stg_survicate_nps_sac_answers", "alias": "stg_survicate_nps_sac_answers", "checksum": {"name": "sha256", "checksum": "dc7b379139955690f5c52e335a59139e1469712bdeee2cd3bf26a53cd3988c61"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_sac_answers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_sac_answers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.228401, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_sac_answers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_sac_answers\""}, "model.houm.stg_survicate_nps_landlord_listing": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_listing') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_listing"], "unique_id": "model.houm.stg_survicate_nps_landlord_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_listing.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "name": "stg_survicate_nps_landlord_listing", "alias": "stg_survicate_nps_landlord_listing", "checksum": {"name": "sha256", "checksum": "b528f80e4cd31465438ee05a9b7a27c25851b9b83d9b86b7ffac33d64e734320"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_listing"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.229601, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\""}, "model.houm.stg_survicate_nps_landlord_new_sub": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_new_sub') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_new_sub"], "unique_id": "model.houm.stg_survicate_nps_landlord_new_sub", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "name": "stg_survicate_nps_landlord_new_sub", "alias": "stg_survicate_nps_landlord_new_sub", "checksum": {"name": "sha256", "checksum": "59ac285567d49bef771502bca4fc6ffac0ef45d0c87b256bc8c0c01e0b9b4083"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_new_sub"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.230637, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_new_sub\""}, "model.houm.stg_survicate_nps_photo_done": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'photo_done') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_photo_done"], "unique_id": "model.houm.stg_survicate_nps_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_photo_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_photo_done.sql", "name": "stg_survicate_nps_photo_done", "alias": "stg_survicate_nps_photo_done", "checksum": {"name": "sha256", "checksum": "b2d442157a0b5aeb36359c885a0fdf1c825d1125bfd25ed1a4bc6d6f928af521"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "photo_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.231696, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\""}, "model.houm.stg_survicate_nps_tenant_new_sub": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_tennant_new_sub') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tennant_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_new_sub"], "unique_id": "model.houm.stg_survicate_nps_tenant_new_sub", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "name": "stg_survicate_nps_tenant_new_sub", "alias": "stg_survicate_nps_tenant_new_sub", "checksum": {"name": "sha256", "checksum": "f58dafcc00ae37da28378affbc4e235e82d0e1680a00c91be2288b5cb0d133ff"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tennant_new_sub"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "survicate"]}, "created_at": 1664825037.232786, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_new_sub\""}, "model.houm.stg_supermetrics_fbads_video": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_video') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_video"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_video"], "unique_id": "model.houm.stg_supermetrics_fbads_video", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_video.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_video.sql", "name": "stg_supermetrics_fbads_video", "alias": "stg_supermetrics_fbads_video", "checksum": {"name": "sha256", "checksum": "11ff1bb81fba95546d85a300b19169c4abb3215364390a348e4262c1c8e4b8f8"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_video"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_video.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.2339761, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_video\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_video\""}, "model.houm.stg_supermetrics_fbads_geo": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_geo') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_geo"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_geo"], "unique_id": "model.houm.stg_supermetrics_fbads_geo", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_geo.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_geo.sql", "name": "stg_supermetrics_fbads_geo", "alias": "stg_supermetrics_fbads_geo", "checksum": {"name": "sha256", "checksum": "781128c47116b5aa982ef64d71e0f87144f1fec08fc2ddd5ce41016312dec26d"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_geo"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_geo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.2350368, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_geo\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_geo\""}, "model.houm.stg_supermetrics_googleads_campaign": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_campaign') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_campaign"], "unique_id": "model.houm.stg_supermetrics_googleads_campaign", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "name": "stg_supermetrics_googleads_campaign", "alias": "stg_supermetrics_googleads_campaign", "checksum": {"name": "sha256", "checksum": "60354a0dd6286a41f2fe95910016843217823907bf36e0d7a439f1c148aeb918"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_campaign"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.2361019, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_campaign\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_campaign\""}, "model.houm.stg_supermetrics_fbads_conversion": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_conversion') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_conversion"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_conversion"], "unique_id": "model.houm.stg_supermetrics_fbads_conversion", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "name": "stg_supermetrics_fbads_conversion", "alias": "stg_supermetrics_fbads_conversion", "checksum": {"name": "sha256", "checksum": "734eef3c7b24379b8c5278b2d33225a0d073e5bd69ac4ef4bddc9fda39e1eef2"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_conversion"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_conversion.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.2373, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_conversion\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_conversion\""}, "model.houm.stg_supermetrics_googleads_ad": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_ad') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_ad"], "unique_id": "model.houm.stg_supermetrics_googleads_ad", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_ad.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_ad.sql", "name": "stg_supermetrics_googleads_ad", "alias": "stg_supermetrics_googleads_ad", "checksum": {"name": "sha256", "checksum": "f8c8713e0d9a53878f23c0d28cc297b6d8260f60976e601725d689cb289090e4"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_ad"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_ad.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.238382, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_ad\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_ad\""}, "model.houm.stg_supermetrics_fbads_campaign": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_campaign') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_campaign"], "unique_id": "model.houm.stg_supermetrics_fbads_campaign", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "name": "stg_supermetrics_fbads_campaign", "alias": "stg_supermetrics_fbads_campaign", "checksum": {"name": "sha256", "checksum": "aebc42f474c0cb42278ed5e37d0b3633698e608acf90ae9e12d19b2842dd5f53"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_campaign"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.239448, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_campaign\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_campaign\""}, "model.houm.stg_supermetrics_googleads_conversion": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'googleads_conversion') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.googleads_conversion"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_googleads_conversion"], "unique_id": "model.houm.stg_supermetrics_googleads_conversion", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "name": "stg_supermetrics_googleads_conversion", "alias": "stg_supermetrics_googleads_conversion", "checksum": {"name": "sha256", "checksum": "df84d75809484f15fed723571aec001eace73a932d3cd36144763f5c6c9f3f0e"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "googleads_conversion"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_googleads_conversion.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.2406, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"googleads_conversion\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_conversion\""}, "model.houm.stg_supermetrics_fbads_age_gender": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_age_gender') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_age_gender"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_age_gender"], "unique_id": "model.houm.stg_supermetrics_fbads_age_gender", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "name": "stg_supermetrics_fbads_age_gender", "alias": "stg_supermetrics_fbads_age_gender", "checksum": {"name": "sha256", "checksum": "274fac6de4faac4847b7ba848e531d6f024257121452fa36d26bb42e38352e91"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_age_gender"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_age_gender.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.241854, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_age_gender\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_age_gender\""}, "model.houm.stg_supermetrics_fbads_ad": {"raw_sql": "Select \n   *\nFROM {{ source('supermetrics', 'fbads_ad') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.supermetrics.fbads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "supermetrics", "stg_supermetrics_fbads_ad"], "unique_id": "model.houm.stg_supermetrics_fbads_ad", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/supermetrics/stg_supermetrics_fbads_ad.sql", "original_file_path": "models/staging/supermetrics/stg_supermetrics_fbads_ad.sql", "name": "stg_supermetrics_fbads_ad", "alias": "stg_supermetrics_fbads_ad", "checksum": {"name": "sha256", "checksum": "bc223c42433b428f2acde5ea113865d231425fcde10c79a6126dce9d4078d99a"}, "tags": ["dw", "staging", "supermetrics"], "refs": [], "sources": [["supermetrics", "fbads_ad"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/supermetrics/stg_supermetrics_fbads_ad.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics"]}, "created_at": 1664825037.242954, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"supermetrics\".\"fbads_ad\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_ad\""}, "model.houm.stg_sales_negotiation": {"raw_sql": "SELECT \n    id\n    --,owner_id #Deprecated\n    --,bidder_id #Deprecated\n    ,status\n    ,country\n    --,property_id #Deprecated, normalization to stg_sales_property\n    --,property_uuid #Deprecated normalization to stg_sales_property\n    --,property_address #Deprecated normalization to stg_sales_property\n    ,start_date\n    ,end_date\n    ,houm_advisor_name\n    ,houm_advisor_email\n    ,houm_advisor_user_id\n    ,houm_advisor_uuid\n    --,property_executive_name #Deprecated normalization to stg_sales_property\n    --,property_executive_email #Deprecated normalization to stg_sales_property\n    --,property_executive_user_id #Deprecated normalization to stg_sales_property\n    ,visit_id\n    ,unread\n    ,created_at\n    ,updated_at\n    ,property_uid --FK: property\nFROM {{ source('bidding_app', 'negotiation') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.negotiation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_negotiation"], "unique_id": "model.houm.stg_sales_negotiation", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_negotiation.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_negotiation.sql", "name": "stg_sales_negotiation", "alias": "stg_sales_negotiation", "checksum": {"name": "sha256", "checksum": "c8adbe9b17d2917c261b755eaf6a41709b48f1747f928f0fbbfe1396934ee14e"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "negotiation"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_negotiation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.244025, "compiled_sql": "SELECT \n    id\n    --,owner_id #Deprecated\n    --,bidder_id #Deprecated\n    ,status\n    ,country\n    --,property_id #Deprecated, normalization to stg_sales_property\n    --,property_uuid #Deprecated normalization to stg_sales_property\n    --,property_address #Deprecated normalization to stg_sales_property\n    ,start_date\n    ,end_date\n    ,houm_advisor_name\n    ,houm_advisor_email\n    ,houm_advisor_user_id\n    ,houm_advisor_uuid\n    --,property_executive_name #Deprecated normalization to stg_sales_property\n    --,property_executive_email #Deprecated normalization to stg_sales_property\n    --,property_executive_user_id #Deprecated normalization to stg_sales_property\n    ,visit_id\n    ,unread\n    ,created_at\n    ,updated_at\n    ,property_uid --FK: property\nFROM \"houmdw_prod\".\"bidding_app\".\"negotiation\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation\""}, "model.houm.stg_sales_negotiation_user": {"raw_sql": "SELECT \n    id\n    ,negotiation_id\n    ,user_id\n    ,user_role\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'negotiation_user') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.negotiation_user"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_negotiation_user"], "unique_id": "model.houm.stg_sales_negotiation_user", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_negotiation_user.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_negotiation_user.sql", "name": "stg_sales_negotiation_user", "alias": "stg_sales_negotiation_user", "checksum": {"name": "sha256", "checksum": "6a4652b5953664121a43bd9285e513600bb534e8a886912900386a8b6f319a34"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "negotiation_user"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_negotiation_user.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.245078, "compiled_sql": "SELECT \n    id\n    ,negotiation_id\n    ,user_id\n    ,user_role\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"negotiation_user\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_negotiation_user\""}, "model.houm.stg_sales_bid": {"raw_sql": "SELECT \n    id\n    ,negotiation_id\n    ,amount\n    ,status\n    ,currency\n    ,comment\n    ,payment_method\n    ,has_credit\n    ,credit_status\n    ,credit_counciling_requested\n    ,created_at\n    ,updated_at\n    ,deposit_amount\n    ,houm_bidder_fee\n    ,houm_owner_fee\n    ,bidder_penalty_fee\n    ,owner_penalty_fee\nFROM {{ source('bidding_app', 'bid') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.bid"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_bid"], "unique_id": "model.houm.stg_sales_bid", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_bid.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_bid.sql", "name": "stg_sales_bid", "alias": "stg_sales_bid", "checksum": {"name": "sha256", "checksum": "b9b8b6b63ed4a0748f5586ddd9cda15ad4bb00cccc2e8b2def0e936ed1283105"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "bid"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_bid.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.2462778, "compiled_sql": "SELECT \n    id\n    ,negotiation_id\n    ,amount\n    ,status\n    ,currency\n    ,comment\n    ,payment_method\n    ,has_credit\n    ,credit_status\n    ,credit_counciling_requested\n    ,created_at\n    ,updated_at\n    ,deposit_amount\n    ,houm_bidder_fee\n    ,houm_owner_fee\n    ,bidder_penalty_fee\n    ,owner_penalty_fee\nFROM \"houmdw_prod\".\"bidding_app\".\"bid\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid\""}, "model.houm.stg_sales_identification": {"raw_sql": "SELECT \n    id\n    ,number\n    ,user_id\n    ,user_type\n    --,bidder_id #Deprecated, replaced by user_id (FK:user table)\n    ,type_id \n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'identification') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.identification"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_identification"], "unique_id": "model.houm.stg_sales_identification", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_identification.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_identification.sql", "name": "stg_sales_identification", "alias": "stg_sales_identification", "checksum": {"name": "sha256", "checksum": "97d448a14df7abbe2676e0f2aae10d4c54257d48d5462edb229ddc1a98718adc"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "identification"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_identification.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.247335, "compiled_sql": "SELECT \n    id\n    ,number\n    ,user_id\n    ,user_type\n    --,bidder_id #Deprecated, replaced by user_id (FK:user table)\n    ,type_id \n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"identification\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_identification\""}, "model.houm.stg_sales_property": {"raw_sql": "SELECT \n    id\n    ,property_id\n    ,property_address\n    ,property_executive_name\n    ,property_executive_email\n    ,property_executive_user_id\n    ,created_at\n    ,updated_at\n    ,individualization\nFROM {{ source('bidding_app', 'property') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.property"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_property"], "unique_id": "model.houm.stg_sales_property", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_property.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_property.sql", "name": "stg_sales_property", "alias": "stg_sales_property", "checksum": {"name": "sha256", "checksum": "a6f39173abc442d9b2610b20641125433454677a77ca192f9b2a7e1431535ece"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "property"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_property.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.248379, "compiled_sql": "SELECT \n    id\n    ,property_id\n    ,property_address\n    ,property_executive_name\n    ,property_executive_email\n    ,property_executive_user_id\n    ,created_at\n    ,updated_at\n    ,individualization\nFROM \"houmdw_prod\".\"bidding_app\".\"property\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_property\""}, "model.houm.stg_sales_bid_response": {"raw_sql": "SELECT \n    id\n    ,bid_id\n    ,last_amount\n    ,currency\n    ,reason\n    ,created_at\n    ,updated_at\n    ,user_id\nFROM {{ source('bidding_app', 'bid_response') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.bid_response"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_bid_response"], "unique_id": "model.houm.stg_sales_bid_response", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_bid_response.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_bid_response.sql", "name": "stg_sales_bid_response", "alias": "stg_sales_bid_response", "checksum": {"name": "sha256", "checksum": "88127a746c083e844ae839696228b9423910703f08e12ccfd7af0ecf17ce3bb4"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "bid_response"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_bid_response.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.24943, "compiled_sql": "SELECT \n    id\n    ,bid_id\n    ,last_amount\n    ,currency\n    ,reason\n    ,created_at\n    ,updated_at\n    ,user_id\nFROM \"houmdw_prod\".\"bidding_app\".\"bid_response\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_bid_response\""}, "model.houm.stg_sales_identification_type": {"raw_sql": "SELECT \n    id\n    ,country \n    ,name\n    ,validation_regex\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'identification_type') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.identification_type"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_identification_type"], "unique_id": "model.houm.stg_sales_identification_type", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_identification_type.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_identification_type.sql", "name": "stg_sales_identification_type", "alias": "stg_sales_identification_type", "checksum": {"name": "sha256", "checksum": "87e3618425a5ae899e0551215accbe899c809f70869934cb63590ef542933b0f"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "identification_type"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_identification_type.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.250599, "compiled_sql": "SELECT \n    id\n    ,country \n    ,name\n    ,validation_regex\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"identification_type\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_identification_type\""}, "model.houm.stg_sales_user": {"raw_sql": "SELECT \n    id\n    ,external_user_id\n    ,name\n    ,last_name\n    ,second_last_name\n    ,email\n    ,phone\n    ,occupation\n    ,nationality\n    ,civil_status\n    ,created_at\n    ,updated_at\nFROM {{ source('bidding_app', 'user') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.bidding_app.user"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "sales_bidding"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "sales_bidding", "stg_sales_user"], "unique_id": "model.houm.stg_sales_user", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sales_bidding/stg_sales_user.sql", "original_file_path": "models/staging/sales_bidding/stg_sales_user.sql", "name": "stg_sales_user", "alias": "stg_sales_user", "checksum": {"name": "sha256", "checksum": "017c6156da6213bf05155933fb4c4d9e696bb60028d1c26ccc74b8953552250f"}, "tags": ["dw", "staging", "sales_bidding"], "refs": [], "sources": [["bidding_app", "user"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/sales_bidding/stg_sales_user.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "sales_bidding"]}, "created_at": 1664825037.251673, "compiled_sql": "SELECT \n    id\n    ,external_user_id\n    ,name\n    ,last_name\n    ,second_last_name\n    ,email\n    ,phone\n    ,occupation\n    ,nationality\n    ,civil_status\n    ,created_at\n    ,updated_at\nFROM \"houmdw_prod\".\"bidding_app\".\"user\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_sales_user\""}, "model.houm.stg_whatsapp_csat_photo_done": {"raw_sql": "SELECT\n    date::VARCHAR AS answered_date,\n    time::VARCHAR AS answered_time,\n    type ,\n    \"prop id\"::integer as property_id,\n    address ,\n    appraiser ,\n    \"schedule id\"::int schedule_id ,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments, \n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\"::VARCHAR  AS csat ,\n    \"_airbyte_ab_id\" ,\n    \"_airbyte_emitted_at\" ,\n    \"_airbyte_normalized_at\" , \n    \"_airbyte_new_nps_visit_photo_done_hashid\"\nFROM {{ source('airbyte_gspread','new_nps_visit_photo_done')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_csat_photo_done"], "unique_id": "model.houm.stg_whatsapp_csat_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_csat_photo_done.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_csat_photo_done.sql", "name": "stg_whatsapp_csat_photo_done", "alias": "stg_whatsapp_csat_photo_done", "checksum": {"name": "sha256", "checksum": "183da26d636ccf899ffa9592b48fd8e8b7140448065215fb8dd474e337303e05"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_photo_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_csat_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.252717, "compiled_sql": "SELECT\n    date::VARCHAR AS answered_date,\n    time::VARCHAR AS answered_time,\n    type ,\n    \"prop id\"::integer as property_id,\n    address ,\n    appraiser ,\n    \"schedule id\"::int schedule_id ,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" AS comments, \n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\"::VARCHAR  AS csat ,\n    \"_airbyte_ab_id\" ,\n    \"_airbyte_emitted_at\" ,\n    \"_airbyte_normalized_at\" , \n    \"_airbyte_new_nps_visit_photo_done_hashid\"\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_csat_photo_done\""}, "model.houm.stg_whatsapp_ces_sales_promises": {"raw_sql": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue comprar tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_sales_buyer_promesa')}}\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue vender tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_sales_landlord_promesa')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_sales_landlord_promesa", "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_ces_sales_promises"], "unique_id": "model.houm.stg_whatsapp_ces_sales_promises", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "name": "stg_whatsapp_ces_sales_promises", "alias": "stg_whatsapp_ces_sales_promises", "checksum": {"name": "sha256", "checksum": "633d7e78d32eb3088e1e40b762898780d0fa81646e459dc2f56dc2deab806b2c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_sales_landlord_promesa"], ["airbyte_gspread", "new_nps_sales_buyer_promesa"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_ces_sales_promises.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.253901, "compiled_sql": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue comprar tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_promesa\"\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue vender tu propiedad con houm?\n(1 - 5)\"::integer as ces,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_promesa\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_ces_sales_promises\""}, "model.houm.stg_whatsapp_nps_automatic_tenants": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfrecomendar\u00edas houm a un amigo o conocido?\" as recommendation,\n    \"\u00bfrecibiste el inmueble en las condiciones que esperabas?\" as problem_solving,\n    \"\u00bfqu\u00e9 tan satisfecho te encuentras con la atenci\u00f3n entregada por el houmer?\" as attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_24_hrs') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el tiempo de soluci\u00f3n a solicitudes?\" as problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_3_meses') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" as problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_6_meses') }}\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as problem_solving,\n    null as attention_satisfaction\nFROM {{ source('airbyte_gspread','new_nps_automatic_tenant_3_meses')}}\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as problem_solving,\n    null as attention_satisfaction\nFROM {{source('airbyte_gspread','new_nps_automatic_tenant_6_meses')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_6_meses", "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses", "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses", "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs", "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenants"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenants", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenants.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenants.sql", "name": "stg_whatsapp_nps_automatic_tenants", "alias": "stg_whatsapp_nps_automatic_tenants", "checksum": {"name": "sha256", "checksum": "a48c7b8726315a2ed36e5465e2892146694a201fbb0fcb4ae3c20f6b3e00c541"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_6_meses"], ["airbyte_gspread", "new_nps_automatic_tenant_3_meses"], ["airbyte_gspread", "new_nps_automatic_tenant_6_meses"], ["airbyte_gspread", "nps_automatic_tenant_24_hrs"], ["airbyte_gspread", "nps_automatic_tenant_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenants.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.2551649, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfrecomendar\u00edas houm a un amigo o conocido?\" as recommendation,\n    \"\u00bfrecibiste el inmueble en las condiciones que esperabas?\" as problem_solving,\n    \"\u00bfqu\u00e9 tan satisfecho te encuentras con la atenci\u00f3n entregada por el houmer?\" as attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el tiempo de soluci\u00f3n a solicitudes?\" as problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" as problem_solving,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as problem_solving,\n    null as attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_3_meses\"\nUNION ALL\nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as problem_solving,\n    null as attention_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenants\""}, "model.houm.stg_whatsapp_nps_photo": {"raw_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Chile' as country\nFROM {{ source('airbyte_gspread', 'nps_chile_foto') }}\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Colombia' as country\nFROM {{ source('airbyte_gspread', 'nps_colombia_foto') }}\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Mexico'\nFROM {{ source('airbyte_gspread', 'nps_mexico_foto') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_colombia_foto", "source.houm.airbyte_gspread.nps_mexico_foto", "source.houm.airbyte_gspread.nps_chile_foto"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_photo"], "unique_id": "model.houm.stg_whatsapp_nps_photo", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "name": "stg_whatsapp_nps_photo", "alias": "stg_whatsapp_nps_photo", "checksum": {"name": "sha256", "checksum": "19c0fa980f6aa2f9fb2069618d144afa1c32dab1f9b6e5be06e02e0c474fce3d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_colombia_foto"], ["airbyte_gspread", "nps_mexico_foto"], ["airbyte_gspread", "nps_chile_foto"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.256502, "compiled_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Chile' as country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Colombia' as country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"\nUNION ALL\nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    'Mexico'\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_photo\""}, "model.houm.stg_whatsapp_nps_rentas_new_listing": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_cl') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_co') }}\nUNION ALL \nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_mx') }}\nUNION ALL \nSELECT\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    null as process_quickness,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    null as source,\n    null as process_clarity,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\"::integer as recommendation\nFROM {{ source('airbyte_gspread','new_nps_rentals_new_listing')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_new_listing", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_new_listing"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_new_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "name": "stg_whatsapp_nps_rentas_new_listing", "alias": "stg_whatsapp_nps_rentas_new_listing", "checksum": {"name": "sha256", "checksum": "693018213c0fbb0956724340da00032b3b88368f41e2c8caf7063bcb917f7358"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_new_listing"], ["airbyte_gspread", "nps_rentas_prop_new_listing_cl"], ["airbyte_gspread", "nps_rentas_prop_new_listing_co"], ["airbyte_gspread", "nps_rentas_prop_new_listing_mx"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.257971, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"\nUNION ALL \nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"\nUNION ALL \nSELECT\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    null as process_quickness,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    null as source,\n    null as process_clarity,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\"::integer as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_new_listing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing\""}, "model.houm.stg_whatsapp_nps_rentas_propietary_pc": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_cl') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_co') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_propietary_pc_mx') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_propietary_pc"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_propietary_pc", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "name": "stg_whatsapp_nps_rentas_propietary_pc", "alias": "stg_whatsapp_nps_rentas_propietary_pc", "checksum": {"name": "sha256", "checksum": "759e2b4a8b43a7d56acfe03f022605b2eb01ca43ec03267a01c5929d984787fc"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_propietary_pc_cl"], ["airbyte_gspread", "nps_rentas_propietary_pc_mx"], ["airbyte_gspread", "nps_rentas_propietary_pc_co"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.259509, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_cl\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_co\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"la firma del contrato \u00bffue f\u00e1cil y r\u00e1pida?\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_propietary_pc\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_3_meses') }}\nUNION ALL \nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as attention_satisfaction,\n    null as problem_solving\nFROM {{ source('airbyte_gspread','new_nps_automatic_landlord_3_meses')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_3_meses", "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_3_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_3_meses", "alias": "stg_whatsapp_nps_automatic_landlord_3_meses", "checksum": {"name": "sha256", "checksum": "510b6e312cb8968bb96b4c73fb1b92995d32bf423da56dcf3f2a3a443b2e987d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_3_meses"], ["airbyte_gspread", "new_nps_automatic_landlord_3_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.260683, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    null as subscription_id,\n    \"timestamp\",\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"\nUNION ALL \nSELECT\n    name,\n    role,\n    phone,\n    country,\n    property_id::integer,\n    subscription_id::integer,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    null as attention_satisfaction,\n    null as problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\""}, "model.houm.stg_whatsapp_nps_visits_done": {"raw_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    \"octubr\" as appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Chile' as country\nFROM {{ source('airbyte_gspread', 'nps_chile_renta') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Chile' as country \nFROM {{ source('airbyte_gspread', 'nps_chile_sales') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Colombia' as country \nFROM {{ source('airbyte_gspread', 'nps_colombia_renta') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Colombia' as country \nFROM {{ source('airbyte_gspread', 'nps_colombia_sales') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Mexico' as country \nFROM {{ source('airbyte_gspread', 'nps_mexico_renta') }}\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Mexico' as country \nFROM {{ source('airbyte_gspread', 'nps_mexico_sales') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_colombia_sales", "source.houm.airbyte_gspread.nps_colombia_renta", "source.houm.airbyte_gspread.nps_mexico_renta", "source.houm.airbyte_gspread.nps_mexico_sales", "source.houm.airbyte_gspread.nps_chile_sales", "source.houm.airbyte_gspread.nps_chile_renta"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_visits_done"], "unique_id": "model.houm.stg_whatsapp_nps_visits_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "name": "stg_whatsapp_nps_visits_done", "alias": "stg_whatsapp_nps_visits_done", "checksum": {"name": "sha256", "checksum": "73341cc64fb902f53974931866b50661cfdfb3800fd7bf849a99ca2a5b49a890"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_colombia_sales"], ["airbyte_gspread", "nps_colombia_renta"], ["airbyte_gspread", "nps_mexico_renta"], ["airbyte_gspread", "nps_mexico_sales"], ["airbyte_gspread", "nps_chile_sales"], ["airbyte_gspread", "nps_chile_renta"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_visits_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.261834, "compiled_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    \"octubr\" as appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Chile' as country\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Chile' as country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_sales\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Colombia' as country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Colombia' as country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_sales\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Rentals' as business,\n    'Mexico' as country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"\nUNION ALL \nSELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita?\" as schedule_easyness,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfpudiste realizar la visita sin ning\u00fan inconveniente?\" as visit_success,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" as comments,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation,\n    \"\u00bfel houmer ten\u00eda conocimiento de la propiedad y el sector inmobiliario en general?\" as houmer_knowledge,\n    'Sales' as business,\n    'Mexico' as country \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_sales\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_done\""}, "model.houm.stg_whatsapp_ces_rentas_photo_done": {"raw_sql": "SELECT\n    date::VARCHAR as answer_date,\n    time::VARCHAR as answer_time,\n    type,\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as ces,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_visit_photo_done')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_ces_rentas_photo_done"], "unique_id": "model.houm.stg_whatsapp_ces_rentas_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_ces_rentas_photo_done.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_photo_done.sql", "name": "stg_whatsapp_ces_rentas_photo_done", "alias": "stg_whatsapp_ces_rentas_photo_done", "checksum": {"name": "sha256", "checksum": "a54926cc6299c355a4b6f4a0336165386440dbc12beccfa7104fda1886a3131c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_photo_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.2632, "compiled_sql": "SELECT\n    date::VARCHAR as answer_date,\n    time::VARCHAR as answer_time,\n    type,\n    \"prop id\" as property_id,\n    address,\n    appraiser,\n    \"schedule id\" as schedule_id,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as ces,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_ces_rentas_photo_done\""}, "model.houm.stg_whatsapp_ces_rentas_24_horas_tenant": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    subscription_id::integer,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" as ces \nFROM {{ source('airbyte_gspread','new_nps_rentals_24_horas_tenant')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_ces_rentas_24_horas_tenant"], "unique_id": "model.houm.stg_whatsapp_ces_rentas_24_horas_tenant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_ces_rentas_24_horas_tenant.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_24_horas_tenant.sql", "name": "stg_whatsapp_ces_rentas_24_horas_tenant", "alias": "stg_whatsapp_ces_rentas_24_horas_tenant", "checksum": {"name": "sha256", "checksum": "663aa6231fc316681ece49cc919c063f5a7f33621831573b158e6763b1277108"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_24_horas_tenant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_24_horas_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.264489, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id::integer,\n    subscription_id::integer,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" as ces \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_24_horas_tenant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_ces_rentas_24_horas_tenant\""}, "model.houm.stg_whatsapp_nps_sales_promises": {"raw_sql": "SELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_seller') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_buyer') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_seller') }}\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho estas con el servicio de compra de houm?\" as service_satisfaction\nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_buyer') }}\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM {{ source('airbyte_gspread','new_nps_sales_buyer_posventa')}}\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM {{ source('airbyte_gspread','new_nps_sales_landlord_posventa')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_post_venta_seller", "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "source.houm.airbyte_gspread.nps_sales_promesa_seller", "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_promises"], "unique_id": "model.houm.stg_whatsapp_nps_sales_promises", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "name": "stg_whatsapp_nps_sales_promises", "alias": "stg_whatsapp_nps_sales_promises", "checksum": {"name": "sha256", "checksum": "2e2c7003589bd762e251d2b03bbf951e48f0942f717bd6604a13022ed8b2c92c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_post_venta_seller"], ["airbyte_gspread", "nps_sales_promesa_buyer"], ["airbyte_gspread", "new_nps_sales_landlord_posventa"], ["airbyte_gspread", "nps_sales_promesa_seller"], ["airbyte_gspread", "nps_sales_post_venta_buyer"], ["airbyte_gspread", "new_nps_sales_buyer_posventa"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promises.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.265632, "compiled_sql": "SELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"hasta ahora, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de venta de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"\nUNION ALL\nSELECT \n    nps as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    comentario as comments,\n    property_id,\n    \"\u00bfc\u00f3mo eval\u00faas la comunicaci\u00f3n del ejecutivo de houm?\" as executive_communication,\n    \"en general, \u00bfqu\u00e9 tan satisfecho estas con el servicio de compra de houm?\" as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_posventa\"\nUNION ALL\nSELECT\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido? (0 - 10)\" as recommendation,\n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    property_id,\n    null as executive_communication,\n    null as service_satisfaction\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_posventa\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_promises\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" as problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_6_meses') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_6_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_6_meses", "alias": "stg_whatsapp_nps_automatic_landlord_6_meses", "checksum": {"name": "sha256", "checksum": "bf207f5f693bb630f84596ad695207fa92547663a09cd4c2a3962a0a7f660073"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_6_meses"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.267074, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id::integer as property_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" as problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\""}, "model.houm.stg_whatsapp_nps_visits_cancelled": {"raw_sql": "SELECT \n    schedule_id::integer,\n    to_timestamp(\"answer_timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    recommendation,\n    comments,\n    appraiser,\n    begin_date,\n    visit_type,\n    address,\n    country,\n    property_id::integer\nFROM {{ source('airbyte_gspread', 'nps_cancel_visit') }}\nUNION ALL\nSELECT\n    schedule_id::integer,\n    to_timestamp(\"answer_timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" as recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    appraiser,\n    null as begin_date,\n    visit_type,\n    address,\n    country,\n    property_id::integer\nFROM {{ source('airbyte_gspread','new_nps_visit_cancel_visit')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_cancel_visit", "source.houm.airbyte_gspread.nps_cancel_visit"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_visits_cancelled"], "unique_id": "model.houm.stg_whatsapp_nps_visits_cancelled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "name": "stg_whatsapp_nps_visits_cancelled", "alias": "stg_whatsapp_nps_visits_cancelled", "checksum": {"name": "sha256", "checksum": "24b3542268e484fe34f349c51f118b0003f8166266e33458c5d6649e9654737d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_cancel_visit"], ["airbyte_gspread", "nps_cancel_visit"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_visits_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.268217, "compiled_sql": "SELECT \n    schedule_id::integer,\n    to_timestamp(\"answer_timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    recommendation,\n    comments,\n    appraiser,\n    begin_date,\n    visit_type,\n    address,\n    country,\n    property_id::integer\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"\nUNION ALL\nSELECT\n    schedule_id::integer,\n    to_timestamp(\"answer_timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    \"\u00bfqu\u00e9 tan probable es que recomiendes houm a un amigo o conocido?\n(0 - 10)\" as recommendation,\n    \"- \u00bfqu\u00e9 debemos mejorar para que nos recomiendes?\n- \u00bfpor qu\u00e9 nos recomiendas?\" as comments,\n    appraiser,\n    null as begin_date,\n    visit_type,\n    address,\n    country,\n    property_id::integer\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_cancel_visit\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_cancelled\""}, "model.houm.stg_whatsapp_csat_visit_done": {"raw_sql": "SELECT\n    'Rentals' as business,\n    date::VARCHAR as answered_date,\n    time::VARCHAR as answered_time,\n    \"prop id\"::integer as property_id,\n    address,\n    country,\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita? (1-5)\" as schedule_easyness,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as houmer_qualification,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_visit_rental_visit_done')}}\nUNION ALL\nSELECT\n    'Sales' as business,\n    date::VARCHAR as answered_date,\n    time::VARCHAR as answered_time,\n    \"prop id\"::integer as property_id,\n    address,\n    country,\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    null as schedule_easyness,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as houmer_qualification,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM {{ source('airbyte_gspread','new_nps_visit_sales_visit_done')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_visit_rental_visit_done", "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_csat_visit_done"], "unique_id": "model.houm.stg_whatsapp_csat_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_csat_visit_done.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_csat_visit_done.sql", "name": "stg_whatsapp_csat_visit_done", "alias": "stg_whatsapp_csat_visit_done", "checksum": {"name": "sha256", "checksum": "27fd7fe3e4b339ce7b309888dba96e0f1a81802941d4ed326cab2e8a9190f972"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_visit_rental_visit_done"], ["airbyte_gspread", "new_nps_visit_sales_visit_done"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_csat_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.269525, "compiled_sql": "SELECT\n    'Rentals' as business,\n    date::VARCHAR as answered_date,\n    time::VARCHAR as answered_time,\n    \"prop id\"::integer as property_id,\n    address,\n    country,\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue agendar una visita? (1-5)\" as schedule_easyness,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as houmer_qualification,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_rental_visit_done\"\nUNION ALL\nSELECT\n    'Sales' as business,\n    date::VARCHAR as answered_date,\n    time::VARCHAR as answered_time,\n    \"prop id\"::integer as property_id,\n    address,\n    country,\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    null as schedule_easyness,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de tu houmer? (1 - 5)\" as houmer_qualification,\n    \"\u00bfpor qu\u00e9 le das estas calificaci\u00f3n a tu houmer?\" as comments\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_sales_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_csat_visit_done\""}, "model.houm.stg_whatsapp_ces_rentas_propietary_pc": {"raw_sql": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id,\n    subscription_id,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos? (1-6)\" as source,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" as ces\nFROM {{ source('airbyte_gspread','new_nps_rentals_propietary_poscontract')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_ces_rentas_propietary_pc"], "unique_id": "model.houm.stg_whatsapp_ces_rentas_propietary_pc", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_ces_rentas_propietary_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_propietary_pc.sql", "name": "stg_whatsapp_ces_rentas_propietary_pc", "alias": "stg_whatsapp_ces_rentas_propietary_pc", "checksum": {"name": "sha256", "checksum": "4a3dfba04f6e052d3ff137c4c15e9cc4c7fa24bd8a91bbcc7581834a389cceec"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "new_nps_rentals_propietary_poscontract"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_ces_rentas_propietary_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.270737, "compiled_sql": "SELECT\n    name,\n    role,\n    phone,\n    country,\n    to_timestamp(\"timestamp\",'YYYY-MM-DDTHH:MI:SSZ') as answered_at,\n    property_id,\n    subscription_id,\n    \"\u00bfpor qu\u00e9 nos diste esa calificaci\u00f3n?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos? (1-6)\" as source,\n    \"\u00bfqu\u00e9 tan f\u00e1cil fue arrendar tu propiedad con houm? (1 - 5)\" as ces\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_propietary_poscontract\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_ces_rentas_propietary_pc\""}, "model.houm.stg_whatsapp_nps_rentas_tenant_pc": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_cl') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_co') }}\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_mx') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_tenant_pc"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_tenant_pc", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "name": "stg_whatsapp_nps_rentas_tenant_pc", "alias": "stg_whatsapp_nps_rentas_tenant_pc", "checksum": {"name": "sha256", "checksum": "ab7495b69d9bc74acaea5a1047cea878d696fb52eaf13c8a878d7fc5f99a204d"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_co"], ["airbyte_gspread", "nps_rentas_tenant_pc_mx"], ["airbyte_gspread", "nps_rentas_tenant_pc_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_tenant_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1664825037.271882, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"\nUNION ALL\nSELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\" as answered_at,\n    property_id,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"realizar el pago fue sencillo\" as payment_easyness,\n    \"la firma del contrato fue f\u00e1cil y r\u00e1pida\" as contract_signature,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"despu\u00e9s de reservar la propiedad, obtuve una respuesta de manera rapida\" as response_quickness,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_tenant_pc\""}, "model.houm.stg_activies": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'activities') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_activies"], "unique_id": "model.houm.stg_activies", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_activies.sql", "original_file_path": "models/staging/pipedrive/stg_activies.sql", "name": "stg_activies", "alias": "stg_activies", "checksum": {"name": "sha256", "checksum": "84f77faba98102b36104f7038ae31980086ca81309380d7f14f0078b17c653c3"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "activities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_activies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.273623, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"activities\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_activies\""}, "model.houm.stg_pipelines": {"raw_sql": "Select \n    *\nFROM {{ source('pipedrive', 'pipelines') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.pipelines"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_pipelines"], "unique_id": "model.houm.stg_pipelines", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_pipelines.sql", "original_file_path": "models/staging/pipedrive/stg_pipelines.sql", "name": "stg_pipelines", "alias": "stg_pipelines", "checksum": {"name": "sha256", "checksum": "a8a9d201a0c0660ebbeeb41cdf435c18ca6d82be86d9e2198c32381bb81a07bb"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "pipelines"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_pipelines.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.2747788, "compiled_sql": "Select \n    *\nFROM \"houmdw_prod\".\"pipedrive\".\"pipelines\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_pipelines\""}, "model.houm.stg_bi_persons": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'bi_persons') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_persons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_persons"], "unique_id": "model.houm.stg_bi_persons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_persons.sql", "original_file_path": "models/staging/pipedrive/stg_bi_persons.sql", "name": "stg_bi_persons", "alias": "stg_bi_persons", "checksum": {"name": "sha256", "checksum": "84d1fbd469222ae9048eec7ad790124b627f742888b188357833a350e6f89782"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_persons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.2759092, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_persons\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\""}, "model.houm.stg_stages": {"raw_sql": "Select \n\t*\nFROM {{ source('pipedrive', 'stages') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_stages"], "unique_id": "model.houm.stg_stages", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_stages.sql", "original_file_path": "models/staging/pipedrive/stg_stages.sql", "name": "stg_stages", "alias": "stg_stages", "checksum": {"name": "sha256", "checksum": "29fd945fd34245f4e024415dae4e5d0433dcc601260d6a36ac0bbaf68f81c28f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "stages"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.276976, "compiled_sql": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"stages\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_stages\""}, "model.houm.stg_bi_deals": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'bi_deals') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_deals"], "unique_id": "model.houm.stg_bi_deals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_deals.sql", "original_file_path": "models/staging/pipedrive/stg_bi_deals.sql", "name": "stg_bi_deals", "alias": "stg_bi_deals", "checksum": {"name": "sha256", "checksum": "b05c981d452590fb16c724dfafa3afa88f0ae267837efcfeaca8b5da7585bc89"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_deals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.278348, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\""}, "model.houm.stg_deals": {"raw_sql": "Select \n\t*\nFROM {{ source('pipedrive', 'deals') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_deals"], "unique_id": "model.houm.stg_deals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_deals.sql", "original_file_path": "models/staging/pipedrive/stg_deals.sql", "name": "stg_deals", "alias": "stg_deals", "checksum": {"name": "sha256", "checksum": "d7bb7297679a2ec699bb9510f888e6b7c33899a31790a3218f4ab87bf60fe36f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "deals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1664825037.27943, "compiled_sql": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_deals\""}, "model.houm.stg_scheduler_appraiserworkingmacrozone": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiserworkingmacrozone') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiserworkingmacrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiserworkingmacrozone"], "unique_id": "model.houm.stg_scheduler_appraiserworkingmacrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "name": "stg_scheduler_appraiserworkingmacrozone", "alias": "stg_scheduler_appraiserworkingmacrozone", "checksum": {"name": "sha256", "checksum": "d2b124cbe05d48e077aeda85575752677c18b70089366c66d367c885d4d3db1e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiserworkingmacrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiserworkingmacrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2805219, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserworkingmacrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserworkingmacrozone\""}, "model.houm.stg_subscription_subscription": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscription') }}\r\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscription"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscription"], "unique_id": "model.houm.stg_subscription_subscription", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscription.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscription.sql", "name": "stg_subscription_subscription", "alias": "stg_subscription_subscription", "checksum": {"name": "sha256", "checksum": "b4ec74218084638aaa898e3644649e4f6e38f43d84f00b4f21c9fc74cd310a33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscription"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscription.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.281599, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\""}, "model.houm.stg_demand_calls": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_calls') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_calls"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_calls"], "unique_id": "model.houm.stg_demand_calls", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_calls.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_calls.sql", "name": "stg_demand_calls", "alias": "stg_demand_calls", "checksum": {"name": "sha256", "checksum": "687be626f9267c22a244fd36991b3af707600f28bd4eba102c25b7c7601e6d08"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_calls"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_calls.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.282822, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_calls\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_calls\""}, "model.houm.stg_demand_portalhoum": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_portalhoum') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalhoum"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalhoum"], "unique_id": "model.houm.stg_demand_portalhoum", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalhoum.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "name": "stg_demand_portalhoum", "alias": "stg_demand_portalhoum", "checksum": {"name": "sha256", "checksum": "29a8f75ae683f3f6d067875a0ce4e026575d969e2973de156b9e7705db80a62a"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalhoum"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.284109, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\""}, "model.houm.stg_scheduler_cancelreasontypes": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_cancelreasontypes') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_cancelreasontypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_cancelreasontypes"], "unique_id": "model.houm.stg_scheduler_cancelreasontypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "name": "stg_scheduler_cancelreasontypes", "alias": "stg_scheduler_cancelreasontypes", "checksum": {"name": "sha256", "checksum": "03f732cd907440b6c128c5db041ef5ccfbdb28757f3bf6f3bee15e32ee5334e4"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_cancelreasontypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_cancelreasontypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2852411, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasontypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\""}, "model.houm.stg_billing_adjustment": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'billing_adjustment') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.billing_adjustment"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_billing_adjustment"], "unique_id": "model.houm.stg_billing_adjustment", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_billing_adjustment.sql", "original_file_path": "models/staging/arriendoasegurado/stg_billing_adjustment.sql", "name": "stg_billing_adjustment", "alias": "stg_billing_adjustment", "checksum": {"name": "sha256", "checksum": "cbd8bb8ded2be16924e356f38ccf58e05dfd4482ac48135de6935c05c03e5ab9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "billing_adjustment"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_billing_adjustment.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.286349, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"billing_adjustment\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_billing_adjustment\""}, "model.houm.stg_payment_orders": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'payment_orders') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.payment_orders"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_payment_orders"], "unique_id": "model.houm.stg_payment_orders", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_payment_orders.sql", "original_file_path": "models/staging/arriendoasegurado/stg_payment_orders.sql", "name": "stg_payment_orders", "alias": "stg_payment_orders", "checksum": {"name": "sha256", "checksum": "f5ed70b7ece5369ef8a63fea635a2a230213bf84325b928ac2091a7f3da77923"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "payment_orders"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_payment_orders.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.287624, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"payment_orders\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payment_orders\""}, "model.houm.stg_properties_associationamenities": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'properties_associationamenities') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_associationamenities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_associationamenities"], "unique_id": "model.houm.stg_properties_associationamenities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_associationamenities.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_associationamenities.sql", "name": "stg_properties_associationamenities", "alias": "stg_properties_associationamenities", "checksum": {"name": "sha256", "checksum": "9c08363feb80a1e7c3b0be8d00ebe60d5e12d8ba0743827f3835dce8b897455e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_associationamenities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_associationamenities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.288768, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"properties_associationamenities\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_associationamenities\""}, "model.houm.stg_scheduler_appraiseravailability": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiseravailability') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiseravailability"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiseravailability"], "unique_id": "model.houm.stg_scheduler_appraiseravailability", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "name": "stg_scheduler_appraiseravailability", "alias": "stg_scheduler_appraiseravailability", "checksum": {"name": "sha256", "checksum": "8d0f3530d5eee38749c3ea5b1912cebdad7033267ceb8c60dfb52afad6c442a0"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiseravailability"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiseravailability.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2899232, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiseravailability\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiseravailability\""}, "model.houm.stg_external_portal_integrations_publicationurl": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publicationurl') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publicationurl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publicationurl"], "unique_id": "model.houm.stg_external_portal_integrations_publicationurl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "name": "stg_external_portal_integrations_publicationurl", "alias": "stg_external_portal_integrations_publicationurl", "checksum": {"name": "sha256", "checksum": "dde101521a4d4d55d3e343df44120b73cc84a8aa8618152af03b1118d728f0a6"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publicationurl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publicationurl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2911448, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationurl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationurl\""}, "model.houm.stg_contracts_scd": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_contracts') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts_scd"], "unique_id": "model.houm.stg_contracts_scd", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts_scd.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts_scd.sql", "name": "stg_contracts_scd", "alias": "stg_contracts_scd", "checksum": {"name": "sha256", "checksum": "b1a875368c9961ead2572ad99a27084e1b4d618f8d81afcb0c024115b969712a"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_contracts"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2922251, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts_scd\""}, "model.houm.stg_contracts": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'contracts') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts"], "unique_id": "model.houm.stg_contracts", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts.sql", "name": "stg_contracts", "alias": "stg_contracts", "checksum": {"name": "sha256", "checksum": "895d6489daf1f8172b97fc9896577acd8d2f81083bdfef2cb2ef35640dd04ea5"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "contracts"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2932742, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts\""}, "model.houm.stg_arriendoasegurado_rentfeedback": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'arriendoasegurado_rentfeedback') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_rentfeedback"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_rentfeedback"], "unique_id": "model.houm.stg_arriendoasegurado_rentfeedback", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "name": "stg_arriendoasegurado_rentfeedback", "alias": "stg_arriendoasegurado_rentfeedback", "checksum": {"name": "sha256", "checksum": "b8cb351faa9c204a877a4da20530aeb1eab0d64fa65ccf87044214ee017a04eb"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_rentfeedback"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_rentfeedback.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2943318, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_rentfeedback\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_rentfeedback\""}, "model.houm.stg_demand_marketingapplicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_marketingapplicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_marketingapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_marketingapplicant"], "unique_id": "model.houm.stg_demand_marketingapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "name": "stg_demand_marketingapplicant", "alias": "stg_demand_marketingapplicant", "checksum": {"name": "sha256", "checksum": "b7597b03e3de953cca51b9cae6b2ef4435100276ccf1b4f4fb7927985ecca7ec"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_marketingapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_marketingapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2954948, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_marketingapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_marketingapplicant\""}, "model.houm.stg_external_portal_integrations_publication": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publication') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publication"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publication"], "unique_id": "model.houm.stg_external_portal_integrations_publication", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "name": "stg_external_portal_integrations_publication", "alias": "stg_external_portal_integrations_publication", "checksum": {"name": "sha256", "checksum": "e8855d8e139594e32dc2083e4df70972ba2be8018bf87e0bb203f45aa46bcc9f"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publication"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publication.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.296554, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publication\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication\""}, "model.houm.stg_arriendoasegurado_applicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_applicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_applicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_applicant"], "unique_id": "model.houm.stg_arriendoasegurado_applicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "name": "stg_arriendoasegurado_applicant", "alias": "stg_arriendoasegurado_applicant", "checksum": {"name": "sha256", "checksum": "c4743fee425275f7488f74faaccd3ff7eabb81896f3ed4f82aaa7417a60e2199"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_applicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2977762, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\""}, "model.houm.stg_scheduler_schedules": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_schedules') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedules"], "unique_id": "model.houm.stg_scheduler_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedules.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "name": "stg_scheduler_schedules", "alias": "stg_scheduler_schedules", "checksum": {"name": "sha256", "checksum": "84801759fe3fa4ac9f7ad271fa8e6515255fe5ae978a5dde5e5858736bc9aa33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedules"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.2988238, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\""}, "model.houm.stg_external_portal_integrations_externalportals": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_externalportals') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_externalportals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_externalportals"], "unique_id": "model.houm.stg_external_portal_integrations_externalportals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "name": "stg_external_portal_integrations_externalportals", "alias": "stg_external_portal_integrations_externalportals", "checksum": {"name": "sha256", "checksum": "9a4d279c17d74abee24845cded85c9bbf1ecf61b6a8176ee1d6e24c7ae0ca453"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_externalportals"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_externalportals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.300025, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_externalportals\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\""}, "model.houm.stg_demand_portalapplicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_portalapplicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalapplicant"], "unique_id": "model.houm.stg_demand_portalapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "name": "stg_demand_portalapplicant", "alias": "stg_demand_portalapplicant", "checksum": {"name": "sha256", "checksum": "ecc536601011cb9cac142757c01e2330ce37691d79b178ef75a5655f25ab9c55"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.301353, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\""}, "model.houm.stg_external_portal_integrations_loadstatus": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_loadstatus') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_loadstatus"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_loadstatus"], "unique_id": "model.houm.stg_external_portal_integrations_loadstatus", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "name": "stg_external_portal_integrations_loadstatus", "alias": "stg_external_portal_integrations_loadstatus", "checksum": {"name": "sha256", "checksum": "c490a86649253e534301a16d14c4f4859b9b4020e9ded7cb93737a2204182961"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_loadstatus"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_loadstatus.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.302441, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_loadstatus\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\""}, "model.houm.stg_subscription_subscriptionevent": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscriptionevent') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscriptionevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscriptionevent"], "unique_id": "model.houm.stg_subscription_subscriptionevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "name": "stg_subscription_subscriptionevent", "alias": "stg_subscription_subscriptionevent", "checksum": {"name": "sha256", "checksum": "372fa7870b8b28c48e1f4ccc8a17d0c301f760c235e5368f1b4b41b071a829ba"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscriptionevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscriptionevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.303618, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscriptionevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscriptionevent\""}, "model.houm.stg_users": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'users') }}\r\n--where audit_end_dt is null and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_users"], "unique_id": "model.houm.stg_users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_users.sql", "original_file_path": "models/staging/arriendoasegurado/stg_users.sql", "name": "stg_users", "alias": "stg_users", "checksum": {"name": "sha256", "checksum": "92c0a358410b0ad7689347ed0513fc34ec94232fde85c260648e8b1d0db89b80"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "users"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.30495, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"users\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_users\""}, "model.houm.stg_external_portal_integrations_country": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_country') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_country"], "unique_id": "model.houm.stg_external_portal_integrations_country", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "name": "stg_external_portal_integrations_country", "alias": "stg_external_portal_integrations_country", "checksum": {"name": "sha256", "checksum": "031ff7bcb50446b1e403938d7116b942d80d8d457c9f7e87fc9b19a8c9e97539"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_country"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_country.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.30612, "compiled_sql": "\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_country\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\""}, "model.houm.stg_real_estate_developments_units": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_units') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_units"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_units"], "unique_id": "model.houm.stg_real_estate_developments_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_units.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_units.sql", "name": "stg_real_estate_developments_units", "alias": "stg_real_estate_developments_units", "checksum": {"name": "sha256", "checksum": "3633e40e39ec69af03e4c8b880fe7863364254a1216f3394a5997ad65932d933"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_units"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.307433, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_units\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\""}, "model.houm.stg_real_estate_developments_developmentdetails": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_developmentdetails') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_developmentdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_developmentdetails"], "unique_id": "model.houm.stg_real_estate_developments_developmentdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "name": "stg_real_estate_developments_developmentdetails", "alias": "stg_real_estate_developments_developmentdetails", "checksum": {"name": "sha256", "checksum": "4baacee2d80ba45360e0cc8fee41b7f729343b8a9630deb24d9bdd8d3c44d52c"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_developmentdetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_developmentdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.308645, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developmentdetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developmentdetails\""}, "model.houm.stg_scheduler_scheduletypes": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_scheduletypes') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_scheduletypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_scheduletypes"], "unique_id": "model.houm.stg_scheduler_scheduletypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "name": "stg_scheduler_scheduletypes", "alias": "stg_scheduler_scheduletypes", "checksum": {"name": "sha256", "checksum": "52fd20f1fe32e75e08e4ca0c0d00082630ac35c6f4849d71d7d2574f0ad26b5c"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_scheduletypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.309746, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\""}, "model.houm.stg_properties_location": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties_location') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_location"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_location"], "unique_id": "model.houm.stg_properties_location", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_location.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_location.sql", "name": "stg_properties_location", "alias": "stg_properties_location", "checksum": {"name": "sha256", "checksum": "1b58c502f46fae77c60c3ffd3e7b1288013befa7caf12bb7a7ee7da409ee3b40"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_location"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.310862, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_location\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\""}, "model.houm.stg_scheduler_schedulehasapplicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_schedulehasapplicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedulehasapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedulehasapplicant"], "unique_id": "model.houm.stg_scheduler_schedulehasapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "name": "stg_scheduler_schedulehasapplicant", "alias": "stg_scheduler_schedulehasapplicant", "checksum": {"name": "sha256", "checksum": "3602c96936bd833c4196b85d8c5b67df01c08fd790e0b5a06af957afc0b8aa68"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedulehasapplicant"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3119261, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\""}, "model.houm.stg_scheduler_macrozone": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_macrozone') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_macrozone"], "unique_id": "model.houm.stg_scheduler_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_macrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_macrozone.sql", "name": "stg_scheduler_macrozone", "alias": "stg_scheduler_macrozone", "checksum": {"name": "sha256", "checksum": "c3ab97302f65575ad0ca47a3d4d1f6c4e5a4d69bae50555ad27a7b861f8c53e2"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_macrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.313107, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_macrozone\""}, "model.houm.stg_external_portal_integrations_macrozoneportalplan": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_macrozoneportalplan') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_macrozoneportalplan"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_macrozoneportalplan"], "unique_id": "model.houm.stg_external_portal_integrations_macrozoneportalplan", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "name": "stg_external_portal_integrations_macrozoneportalplan", "alias": "stg_external_portal_integrations_macrozoneportalplan", "checksum": {"name": "sha256", "checksum": "4513013b510413429e2e2fa9cf2cd4923ff1b6098c2c6fa113fb213538112f35"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_macrozoneportalplan"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_macrozoneportalplan.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.314164, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_macrozoneportalplan\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_macrozoneportalplan\""}, "model.houm.stg_subscription_subscriptiondiscount": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscriptiondiscount') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscriptiondiscount"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscriptiondiscount"], "unique_id": "model.houm.stg_subscription_subscriptiondiscount", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "name": "stg_subscription_subscriptiondiscount", "alias": "stg_subscription_subscriptiondiscount", "checksum": {"name": "sha256", "checksum": "a1d4de54e38a41dc793c9da34b20a65d6c3428e3324ab9e6dc9478a9e2f53aea"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscriptiondiscount"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscriptiondiscount.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.315433, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscriptiondiscount\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscriptiondiscount\""}, "model.houm.stg_demand_eventleadprofile": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'demand_eventleadprofile') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_eventleadprofile"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_eventleadprofile"], "unique_id": "model.houm.stg_demand_eventleadprofile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "name": "stg_demand_eventleadprofile", "alias": "stg_demand_eventleadprofile", "checksum": {"name": "sha256", "checksum": "cc7146b0c9108249aecdb90a5635566daa4e07cbe9823a496d79d32c2ae8d764"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_eventleadprofile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_eventleadprofile.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.316496, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_eventleadprofile\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_eventleadprofile\""}, "model.houm.stg_properties": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties') }}\n--where audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties"], "unique_id": "model.houm.stg_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties.sql", "name": "stg_properties", "alias": "stg_properties", "checksum": {"name": "sha256", "checksum": "836609a5c877f6d12f094d49a2c4820bfb3e94dd5f6379107b9d5069b94e31cc"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the properties at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.7023659, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties\""}, "model.houm.stg_demand_leadhasappraiser": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'demand_leadhasappraiser') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_leadhasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_leadhasappraiser"], "unique_id": "model.houm.stg_demand_leadhasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "name": "stg_demand_leadhasappraiser", "alias": "stg_demand_leadhasappraiser", "checksum": {"name": "sha256", "checksum": "fbd953e0442b3e769181d57523bd641bbd7eb10953ee64103069a2529f5787e3"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_leadhasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_leadhasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.318728, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_leadhasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_leadhasappraiser\""}, "model.houm.stg_plans_cities": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'plans_cities') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.plans_cities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_plans_cities"], "unique_id": "model.houm.stg_plans_cities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_plans_cities.sql", "original_file_path": "models/staging/arriendoasegurado/stg_plans_cities.sql", "name": "stg_plans_cities", "alias": "stg_plans_cities", "checksum": {"name": "sha256", "checksum": "a62abe1031f22ee25d8d2b9c44441c49c71a30b1747e923dc36a2ba5dd7d3304"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "plans_cities"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_plans_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3197608, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"plans_cities\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_plans_cities\""}, "model.houm.stg_real_estate_developments_unittypes": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_unittypes') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_unittypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_unittypes"], "unique_id": "model.houm.stg_real_estate_developments_unittypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "name": "stg_real_estate_developments_unittypes", "alias": "stg_real_estate_developments_unittypes", "checksum": {"name": "sha256", "checksum": "59029937721976eb2cba335f45cfbffb28d0f83474c19e3ad9b2f2d9def79d14"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_unittypes"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_unittypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.320812, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_unittypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\""}, "model.houm.stg_external_portal_integrations_publication_scd": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"table\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('historical', 'historical_external_portal_integrations_publication') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_external_portal_integrations_publication"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publication_scd"], "unique_id": "model.houm.stg_external_portal_integrations_publication_scd", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "name": "stg_external_portal_integrations_publication_scd", "alias": "stg_external_portal_integrations_publication_scd", "checksum": {"name": "sha256", "checksum": "8b418c7c036d147b93780f6b9426069049fd53fef76956c7ad1b2e6deda005e3"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["historical", "historical_external_portal_integrations_publication"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publication_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "table"}, "created_at": 1664825037.321995, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"historical\".\"historical_external_portal_integrations_publication\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\""}, "model.houm.stg_scheduler_scheduleevent": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_scheduleevent') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_scheduleevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_scheduleevent"], "unique_id": "model.houm.stg_scheduler_scheduleevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "name": "stg_scheduler_scheduleevent", "alias": "stg_scheduler_scheduleevent", "checksum": {"name": "sha256", "checksum": "51ae8acc7ed3e88b545cf8c12912f0423ca4f89ec34c80e0e8d29910f232fb4e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_scheduleevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_scheduleevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.323375, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_scheduleevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\""}, "model.houm.stg_demand_lead": {"raw_sql": "select *\nfrom {{ source('raw_stage', 'demand_lead') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_lead"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_lead"], "unique_id": "model.houm.stg_demand_lead", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_lead.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_lead.sql", "name": "stg_demand_lead", "alias": "stg_demand_lead", "checksum": {"name": "sha256", "checksum": "223c057a04b62545e2a2a133429bb0d807ef9e9c479f18c0ab9c2ec55fc26044"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_lead"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_lead.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.324523, "compiled_sql": "select *\nfrom \"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\""}, "model.houm.stg_scheduler_applicanthasappraiser": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_applicanthasappraiser') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_applicanthasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_applicanthasappraiser"], "unique_id": "model.houm.stg_scheduler_applicanthasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "name": "stg_scheduler_applicanthasappraiser", "alias": "stg_scheduler_applicanthasappraiser", "checksum": {"name": "sha256", "checksum": "f5020693ab91a7f5ce6bb22db6316f0f344640835ed77cd67e5c3ec7994117f3"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_applicanthasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_applicanthasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.325778, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_applicanthasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_applicanthasappraiser\""}, "model.houm.stg_external_portal_integrations_publicationtype": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_publicationtype') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_publicationtype"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_publicationtype"], "unique_id": "model.houm.stg_external_portal_integrations_publicationtype", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "name": "stg_external_portal_integrations_publicationtype", "alias": "stg_external_portal_integrations_publicationtype", "checksum": {"name": "sha256", "checksum": "8b13afff7b516703c17ff06aeca12eef7bdaf6844de59fc8201da56138f4b737"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_publicationtype"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_publicationtype.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.326889, "compiled_sql": "\n\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationtype\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\""}, "model.houm.stg_demand_eventleadhasappraiser": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'demand_eventleadhasappraiser') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_eventleadhasappraiser"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_eventleadhasappraiser"], "unique_id": "model.houm.stg_demand_eventleadhasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "name": "stg_demand_eventleadhasappraiser", "alias": "stg_demand_eventleadhasappraiser", "checksum": {"name": "sha256", "checksum": "2135cbaca55cc74c4873d849b6c6acf7aba945dd2cb57dffb60f982ada37bf71"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_eventleadhasappraiser"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_eventleadhasappraiser.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.328176, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_eventleadhasappraiser\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_eventleadhasappraiser\""}, "model.houm.stg_arriendoasegurado_contractperson": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_contractperson') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_contractperson"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_contractperson"], "unique_id": "model.houm.stg_arriendoasegurado_contractperson", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "name": "stg_arriendoasegurado_contractperson", "alias": "stg_arriendoasegurado_contractperson", "checksum": {"name": "sha256", "checksum": "b9fb859886d953c4fe60055282404e5e7ea929b4223eb9c2b45356f7d633892f"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_contractperson"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_contractperson.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.329281, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_contractperson\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_contractperson\""}, "model.houm.stg_external_portal_integrations_portalplan": {"raw_sql": "{{\r\n  config(\r\n    materialized = \"view\",\r\n    tags = ['dw','arriendoasegurado','external_portal_integrations'],\r\n  )\r\n}}\r\n\r\nselect * \r\nfrom {{ source('raw_stage', 'external_portal_integrations_portalplan') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.external_portal_integrations_portalplan"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado", "dw", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_external_portal_integrations_portalplan"], "unique_id": "model.houm.stg_external_portal_integrations_portalplan", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "original_file_path": "models/staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "name": "stg_external_portal_integrations_portalplan", "alias": "stg_external_portal_integrations_portalplan", "checksum": {"name": "sha256", "checksum": "fcbc41f8db97b07edb068925a418a0fce10f3bd6ca0a5ef5d8fe6950ef2429f5"}, "tags": ["dw", "staging", "arriendoasegurado", "external_portal_integrations"], "refs": [], "sources": [["raw_stage", "external_portal_integrations_portalplan"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_external_portal_integrations_portalplan.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "arriendoasegurado", "external_portal_integrations"], "materialized": "view"}, "created_at": 1664825037.330643, "compiled_sql": "\n\nselect * \nfrom \"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_portalplan\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\""}, "model.houm.stg_contracts_codebtors": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'contracts_codebtors') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.contracts_codebtors"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts_codebtors"], "unique_id": "model.houm.stg_contracts_codebtors", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts_codebtors.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts_codebtors.sql", "name": "stg_contracts_codebtors", "alias": "stg_contracts_codebtors", "checksum": {"name": "sha256", "checksum": "3acc536c05227a5985144a32cbfaab9b6df1a10dceb16adbf70a71c1950df351"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "contracts_codebtors"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts_codebtors.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.331985, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"contracts_codebtors\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts_codebtors\""}, "model.houm.stg_property_salesdetails": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties_salesdetails') }}\n--where audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_property_salesdetails"], "unique_id": "model.houm.stg_property_salesdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_property_salesdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_property_salesdetails.sql", "name": "stg_property_salesdetails", "alias": "stg_property_salesdetails", "checksum": {"name": "sha256", "checksum": "854815a0f2f90b20a9829ea35ae100cc42aa2b082c8c3f297c4c2085ecf61b89"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_salesdetails"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.703289, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\""}, "model.houm.stg_homecheckerdetails": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_arriendoasegurado_homecheckerdetails') }}\nwhere audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_homecheckerdetails"], "unique_id": "model.houm.stg_homecheckerdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_homecheckerdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "name": "stg_homecheckerdetails", "alias": "stg_homecheckerdetails", "checksum": {"name": "sha256", "checksum": "a26fb651c6570e56778aff4db76eb3549b642d287227ceb3119a9631859128b5"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_arriendoasegurado_homecheckerdetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3341691, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"\nwhere audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\""}, "model.houm.stg_arriendoasegurado_city": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_city') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_city"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_city"], "unique_id": "model.houm.stg_arriendoasegurado_city", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "name": "stg_arriendoasegurado_city", "alias": "stg_arriendoasegurado_city", "checksum": {"name": "sha256", "checksum": "ae4b8267212409e60bb942049456be330c872c7e76bb944d5afd8ce95bc1653f"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_city"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_city.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.335387, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_city\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_city\""}, "model.houm.stg_arriendoasegurado_planmonth": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'arriendoasegurado_planmonth') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_planmonth"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_planmonth"], "unique_id": "model.houm.stg_arriendoasegurado_planmonth", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "name": "stg_arriendoasegurado_planmonth", "alias": "stg_arriendoasegurado_planmonth", "checksum": {"name": "sha256", "checksum": "440a974dfe2984c53399650529e03659f71eb6614d966cc8e28fdfaabe8a2f8e"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_planmonth"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_planmonth.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.336471, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_planmonth\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_planmonth\""}, "model.houm.stg_scheduler_appraiserevent": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_appraiserevent') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraiserevent"], "unique_id": "model.houm.stg_scheduler_appraiserevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "name": "stg_scheduler_appraiserevent", "alias": "stg_scheduler_appraiserevent", "checksum": {"name": "sha256", "checksum": "8fb109f8fa0fc253a5181cbb7431cdde5ce7e0d6d93a0722195069e4715938cf"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraiserevent"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraiserevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.337539, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserevent\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\""}, "model.houm.stg_macrozone": {"raw_sql": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM {{ source('raw_stage', 'scheduler_macrozone') }} a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_macrozone"], "unique_id": "model.houm.stg_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_macrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_macrozone.sql", "name": "stg_macrozone", "alias": "stg_macrozone", "checksum": {"name": "sha256", "checksum": "0d2395fc0ecd1dd13af37d3b345d7097ea132877ab13059884bba897057b19d1"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_macrozone"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.33863, "compiled_sql": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM \"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\" a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_macrozone\""}, "model.houm.stg_real_estate_developments_developments": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'real_estate_developments_developments') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.real_estate_developments_developments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_real_estate_developments_developments"], "unique_id": "model.houm.stg_real_estate_developments_developments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "original_file_path": "models/staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "name": "stg_real_estate_developments_developments", "alias": "stg_real_estate_developments_developments", "checksum": {"name": "sha256", "checksum": "6a417e744a67c81d7c9a21a77d58a3c0af30779ee11bce085328d80cb4918725"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "real_estate_developments_developments"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_real_estate_developments_developments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3399491, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developments\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\""}, "model.houm.stg_scheduler_cancelreasons": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_cancelreasons') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_cancelreasons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_cancelreasons"], "unique_id": "model.houm.stg_scheduler_cancelreasons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "name": "stg_scheduler_cancelreasons", "alias": "stg_scheduler_cancelreasons", "checksum": {"name": "sha256", "checksum": "e1c3e58ccbaa504416da6cf5c9fba151d10b2d0ac31e87c9a0f130aa05249fe7"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_cancelreasons"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_cancelreasons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3411672, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasons\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\""}, "model.houm.stg_properties_inspectionreport": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'properties_inspectionreport') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_inspectionreport"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_inspectionreport"], "unique_id": "model.houm.stg_properties_inspectionreport", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_inspectionreport.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_inspectionreport.sql", "name": "stg_properties_inspectionreport", "alias": "stg_properties_inspectionreport", "checksum": {"name": "sha256", "checksum": "0c8f4ea767ffa5e1be3b1c2c87c3619bbe8b06d04dbf9b4870eb4dec06b3797d"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_inspectionreport"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_inspectionreport.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3424609, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_inspectionreport\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_inspectionreport\""}, "model.houm.stg_plans": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'plans') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_plans"], "unique_id": "model.houm.stg_plans", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_plans.sql", "original_file_path": "models/staging/arriendoasegurado/stg_plans.sql", "name": "stg_plans", "alias": "stg_plans", "checksum": {"name": "sha256", "checksum": "bf42699793438401edf890786c5dbf3d4a7cda317c510bc3b94d85df9842d42d"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "plans"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.343755, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"plans\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_plans\""}, "model.houm.stg_demand_whatsapp": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_whatsapp') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_whatsapp"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_whatsapp"], "unique_id": "model.houm.stg_demand_whatsapp", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_whatsapp.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_whatsapp.sql", "name": "stg_demand_whatsapp", "alias": "stg_demand_whatsapp", "checksum": {"name": "sha256", "checksum": "72996e75ff15d6644d94c56cfb63365baa8bbf56c68a765f376d5df24d91a3b4"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_whatsapp"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.344832, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_whatsapp\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_whatsapp\""}, "model.houm.stg_properties_basicservice": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'properties_basicservice') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_basicservice"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_basicservice"], "unique_id": "model.houm.stg_properties_basicservice", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_basicservice.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_basicservice.sql", "name": "stg_properties_basicservice", "alias": "stg_properties_basicservice", "checksum": {"name": "sha256", "checksum": "bdf98dfb0d3fe622ffdb4ab62a2278b51d3cbaf1b5e6f62d2d0d6d3fa325c6e9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_basicservice"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_basicservice.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3459342, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_basicservice\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_basicservice\""}, "model.houm.stg_scheduler_appraisers": {"raw_sql": "SELECT * \nFROM {{ source('raw_stage', 'scheduler_appraisers') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_appraisers"], "unique_id": "model.houm.stg_scheduler_appraisers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_appraisers.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_appraisers.sql", "name": "stg_scheduler_appraisers", "alias": "stg_scheduler_appraisers", "checksum": {"name": "sha256", "checksum": "a384dd45bc997a801133e7f00ef1939d2f0f2a80ab73b2efebd7571ec95b8da9"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_appraisers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_appraisers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.347031, "compiled_sql": "SELECT * \nFROM \"houmdw_prod\".\"raw_stage\".\"scheduler_appraisers\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\""}, "model.houm.stg_arriendoasegurado_propertydetails": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_propertydetails') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_propertydetails"], "unique_id": "model.houm.stg_arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "name": "stg_arriendoasegurado_propertydetails", "alias": "stg_arriendoasegurado_propertydetails", "checksum": {"name": "sha256", "checksum": "fc794115ada86ea823bf0425e8a98c946ce85defb549ac0c6f4425536ee4fd06"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.3484201, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_propertydetails\""}, "model.houm.stg_propertydetails": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_propertydetails') }}\n--where audit_end_dt is null and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_propertydetails"], "unique_id": "model.houm.stg_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_propertydetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_propertydetails.sql", "name": "stg_propertydetails", "alias": "stg_propertydetails", "checksum": {"name": "sha256", "checksum": "625926357afc2e4655d69a27e1aadc6c2f27479e1cb56867a737f591af48fdbe"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties details at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1664825037.702844, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\""}, "model.houm.stg_paid_media_google_campaign_keys": {"raw_sql": "SELECT \n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_gg_hashid\nFROM \n    {{ source('airbyte_gspread', 'campaign_keys_gg') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_gg"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaign_keys"], "unique_id": "model.houm.stg_paid_media_google_campaign_keys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "name": "stg_paid_media_google_campaign_keys", "alias": "stg_paid_media_google_campaign_keys", "checksum": {"name": "sha256", "checksum": "dfa7ee7f79215ffb5a489aeebefac486210babdb200416c596a70f89df647dd8"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_gg"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.350654, "compiled_sql": "SELECT \n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_gg_hashid\nFROM \n    \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaign_keys\""}, "model.houm.stg_tmp_marketing_pipedrive_data": {"raw_sql": "select * \nfrom {{ source('airbyte_gspread', 'data') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_tmp_marketing_pipedrive_data"], "unique_id": "model.houm.stg_tmp_marketing_pipedrive_data", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "original_file_path": "models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "name": "stg_tmp_marketing_pipedrive_data", "alias": "stg_tmp_marketing_pipedrive_data", "checksum": {"name": "sha256", "checksum": "7900d159fc2daa338db88294137a473736f15f2057a0c56814ff6e1c03dd8c58"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "data"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.351765, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"airbyte_gspread\".\"data\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_tmp_marketing_pipedrive_data\""}, "model.houm.stg_paid_media_facebook_campaigns": {"raw_sql": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name , \n    to_date(date, 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMPTZ AS executed_at ,\n    'USD' AS currency ,\n    replace(cost, ',', '.')::FLOAT AS day_cost ,\n    \"link clicks\"::INT AS day_clicks , \n    impressions::VARCHAR AS day_impressions ,\n    \"ad set lifetime budget\" AS ad_set_lifetime_budget ,\n    \"ad set daily budget\" AS ad_set_daily_buget ,\n    \"ad set start time\"  AS ad_set_start_time ,\n    \"ad set end time\" AS ad_set_end_time ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at , \n    _airbyte_normalized_at ,\n    _airbyte_bb_fb_hashid \nFROM\n    {{ source('airbyte_gspread','bb_fb')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.bb_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaigns"], "unique_id": "model.houm.stg_paid_media_facebook_campaigns", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaigns.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "name": "stg_paid_media_facebook_campaigns", "alias": "stg_paid_media_facebook_campaigns", "checksum": {"name": "sha256", "checksum": "6f05c03c571321937ae05a2fc325d7eb49a3df1939db403b8d29a329f5e6e332"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "bb_fb"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.353193, "compiled_sql": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name , \n    to_date(date, 'YYYY-MM-DD HH24:MI:SS')::TIMESTAMPTZ AS executed_at ,\n    'USD' AS currency ,\n    replace(cost, ',', '.')::FLOAT AS day_cost ,\n    \"link clicks\"::INT AS day_clicks , \n    impressions::VARCHAR AS day_impressions ,\n    \"ad set lifetime budget\" AS ad_set_lifetime_budget ,\n    \"ad set daily budget\" AS ad_set_daily_buget ,\n    \"ad set start time\"  AS ad_set_start_time ,\n    \"ad set end time\" AS ad_set_end_time ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at , \n    _airbyte_normalized_at ,\n    _airbyte_bb_fb_hashid \nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaigns\""}, "model.houm.stg_paid_media_google_campaigns_co_mx": {"raw_sql": "SELECT \n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD' AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '') ::numeric AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_mxco_hashid\nFROM\n    {{ source('airbyte_gspread','gg_mxco')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_mxco"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_co_mx"], "unique_id": "model.houm.stg_paid_media_google_campaigns_co_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "name": "stg_paid_media_google_campaigns_co_mx", "alias": "stg_paid_media_google_campaigns_co_mx", "checksum": {"name": "sha256", "checksum": "02989956fcb325dd42115181ff20ec34bab64a49151916593579fbf6c17ad965"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_mxco"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.3545332, "compiled_sql": "SELECT \n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD' AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '') ::numeric AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_mxco_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_co_mx\""}, "model.houm.stg_paid_media_ad_groups": {"raw_sql": "select\n    *\nfrom\n    {{ source('airbyte_gspread','anuncios')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.anuncios"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_ad_groups"], "unique_id": "model.houm.stg_paid_media_ad_groups", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_ad_groups.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_ad_groups.sql", "name": "stg_paid_media_ad_groups", "alias": "stg_paid_media_ad_groups", "checksum": {"name": "sha256", "checksum": "ebb26cf0dddec05b20b47ea665af59403c48660352fd34d87a255bedc6c3d1be"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "anuncios"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_ad_groups.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.3559601, "compiled_sql": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_ad_groups\""}, "model.houm.stg_paid_media_facebook_campaign_keys": {"raw_sql": "SELECT\n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_fb_hashid\nFROM\n    {{ source('airbyte_gspread', 'campaign_keys_fb') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaign_keys"], "unique_id": "model.houm.stg_paid_media_facebook_campaign_keys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "name": "stg_paid_media_facebook_campaign_keys", "alias": "stg_paid_media_facebook_campaign_keys", "checksum": {"name": "sha256", "checksum": "37399f8dbc461f499e21f9a756053443e4df99855b11b5b0e941767031ee20a7"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_fb"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.357378, "compiled_sql": "SELECT\n    \"campaign id\" AS campaign_id ,\n    \"campaign name\" AS campaign_name , \n    _airbyte_ab_id , \n    _airbyte_emitted_at , \n    _airbyte_normalized_at , \n    _airbyte_campaign_keys_fb_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaign_keys\""}, "model.houm.stg_paid_media_google_campaigns_cl": {"raw_sql": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::TIMESTAMPTZ AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::FLOAT AS day_cost ,\n    replace(clicks, '.', '') ::INT AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '')::INT AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_cl_hashid \nFROM\n    {{ source('airbyte_gspread','gg_cl')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_cl"], "unique_id": "model.houm.stg_paid_media_google_campaigns_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "name": "stg_paid_media_google_campaigns_cl", "alias": "stg_paid_media_google_campaigns_cl", "checksum": {"name": "sha256", "checksum": "c5f8ef1f408614708a117aa116c9cda4f2a03bff00d85321e3b2e2dee7e94450"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1664825037.3588622, "compiled_sql": "SELECT\n    \"campaign id\"::VARCHAR AS campaign_id , \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::TIMESTAMPTZ AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::FLOAT AS day_cost ,\n    replace(clicks, '.', '') ::INT AS day_clicks ,\n    replace(impressions, '.', '') ::VARCHAR AS day_impressions  ,\n    replace(\"impression share\", '.', '')::INT AS day_impressions_share  , \n    \"daily budget\" AS daily_budget,\n    \"start date\" AS start_date,\n    \"end date\" AS end_date,\n    \"search budget lost top impression share\" AS search_budget_lost_top_impression_share ,\n    \"search rank lost top impression share\" AS search_rank_lost_top_impression_share ,\n    _airbyte_ab_id ,\n    _airbyte_emitted_at ,\n    _airbyte_normalized_at , \n    _airbyte_gg_cl_hashid \nFROM\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_cl\""}, "model.houm.stg_rev_kpi_rented_properties": {"raw_sql": "SELECT\n        property_id,\n        created_at ,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code   \n    FROM\n        {{ source('raw_stage',\n        'arriendoasegurado_propertydetails') }}  \n    WHERE\n        status = 'rented'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_kpi_rented_properties"], "unique_id": "model.houm.stg_rev_kpi_rented_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_kpi_rented_properties.sql", "original_file_path": "models/staging/rev/stg_rev_kpi_rented_properties.sql", "name": "stg_rev_kpi_rented_properties", "alias": "stg_rev_kpi_rented_properties", "checksum": {"name": "sha256", "checksum": "d50529f550ca45c8bc358095df8ef2d0f677e0925ced089f715c2ab7400fa777"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_kpi_rented_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1664825037.360097, "compiled_sql": "SELECT\n        property_id,\n        created_at ,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code   \n    FROM\n        \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"  \n    WHERE\n        status = 'rented'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_kpi_rented_properties\""}, "model.houm.stg_rev_houm_properties": {"raw_sql": "SELECT \n    * \nFROM {{ source('public', 'rev_houm_properties') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.rev_houm_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_houm_properties"], "unique_id": "model.houm.stg_rev_houm_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_houm_properties.sql", "original_file_path": "models/staging/rev/stg_rev_houm_properties.sql", "name": "stg_rev_houm_properties", "alias": "stg_rev_houm_properties", "checksum": {"name": "sha256", "checksum": "ce4ce9219f8d55c2b1ca5ff739d1ddee2328a48775b557396396ecc90ca276fc"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["public", "rev_houm_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_houm_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1664825037.3616168, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"public\".\"rev_houm_properties\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\""}, "model.houm.stg_rev_kpi_published_properties": {"raw_sql": "SELECT\n        property_id,\n        created_at,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code  \n    FROM\n        {{ source('raw_stage',\n        'arriendoasegurado_propertydetails') }}  \n    WHERE\n        status = 'published'    \n        or status = 'republished'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "supermetrics", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "rev", "stg_rev_kpi_published_properties"], "unique_id": "model.houm.stg_rev_kpi_published_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/rev/stg_rev_kpi_published_properties.sql", "original_file_path": "models/staging/rev/stg_rev_kpi_published_properties.sql", "name": "stg_rev_kpi_published_properties", "alias": "stg_rev_kpi_published_properties", "checksum": {"name": "sha256", "checksum": "b3b72db1269a1e73b555984674b3ac675568aacd434d3b3a9e231beff8dcde86"}, "tags": ["dw", "staging", "supermetrics", "rev"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/rev/stg_rev_kpi_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "supermetrics", "rev"]}, "created_at": 1664825037.363041, "compiled_sql": "SELECT\n        property_id,\n        created_at,\n        updated_at,\n        status,\n        tipo_moneda,\n        valor_venta,\n        tipo_moneda_venta,\n        valor,\n        currency_code  \n    FROM\n        \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"  \n    WHERE\n        status = 'published'    \n        or status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_rev_kpi_published_properties\""}, "model.houm.stg_zendesk_metrics": {"raw_sql": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    {{ source('airbyte_zendesk','ticket_metrics') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_metrics"], "unique_id": "model.houm.stg_zendesk_metrics", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_metrics.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_metrics.sql", "name": "stg_zendesk_metrics", "alias": "stg_zendesk_metrics", "checksum": {"name": "sha256", "checksum": "9e756438ef0de00239e906f66afb1cfae117bc45d1a535a39f233783118f3393"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_metrics"]], "metrics": [], "description": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.711158, "compiled_sql": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_metrics\""}, "model.houm.stg_zendesk_tickets_audits_events": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_events') }} tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_events"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_events"], "unique_id": "model.houm.stg_zendesk_tickets_audits_events", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_events.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "name": "stg_zendesk_tickets_audits_events", "alias": "stg_zendesk_tickets_audits_events", "checksum": {"name": "sha256", "checksum": "2b05986aea49d16042749d5bcee905ece998d5608050fb94ffe14cd54dc1882e"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits"], ["airbyte_zendesk", "ticket_audits_events"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.365252, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\" tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_events\""}, "model.houm.stg_zendesk_users": {"raw_sql": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom {{ source('airbyte_zendesk','users') }} a\norder by updated_at  desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_users"], "unique_id": "model.houm.stg_zendesk_users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_users.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_users.sql", "name": "stg_zendesk_users", "alias": "stg_zendesk_users", "checksum": {"name": "sha256", "checksum": "d3943e109d855792cb41b06904d02f5906cdbb741a6978f863308a0af8d2f940"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "users"]], "metrics": [], "description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "This is contact email of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "This is the name of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "phone": {"name": "phone", "description": "This is contact phone of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "This the timezone setted in zendesk for the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "default_group_id": {"name": "default_group_id", "description": "this a identifier of the group the user is a member of", "meta": {}, "data_type": null, "quote": null, "tags": []}, "role": {"name": "role", "description": "This a identifier role of the user in me.houm, matches the user in the users houm tables", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Flag to know if it is active or not", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "Array of the selected tags in the form ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_de_propiedad": {"name": "user_fields_id_de_propiedad", "description": "This is a custom field identify property_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_tipo_de_usuario": {"name": "user_fields_tipo_de_usuario", "description": "This is a custom field identify role of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_whatsapp": {"name": "user_fields_whatsapp", "description": "This is a custom field identify contact phone", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_suscripcin": {"name": "user_fields_id_suscripcin", "description": "This is a custom field identify suscription_id of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_nombre": {"name": "user_fields_nombre", "description": "This is a custom field identify name + property id", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.707413, "compiled_sql": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"users\" a\norder by updated_at  desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\""}, "model.houm.stg_zendesk_tickets_audits_via": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via') }} tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source') }} tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_to') }} tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_from') }} tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits_via", "source.houm.airbyte_zendesk.ticket_audits_via_source", "source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via_source_to", "source.houm.airbyte_zendesk.ticket_audits_via_source_from"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_via"], "unique_id": "model.houm.stg_zendesk_tickets_audits_via", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_via.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "name": "stg_zendesk_tickets_audits_via", "alias": "stg_zendesk_tickets_audits_via", "checksum": {"name": "sha256", "checksum": "e95922e4131b90ce9dcab6132a061001be9d70e8566d66bb9de2d3b360f43725"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits_via"], ["airbyte_zendesk", "ticket_audits_via_source"], ["airbyte_zendesk", "ticket_audits"], ["airbyte_zendesk", "ticket_audits_via_source_to"], ["airbyte_zendesk", "ticket_audits_via_source_from"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.3677208, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\" tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\" tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\" tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\" tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_via\""}, "model.houm.stg_zendesk_tickets_comments": {"raw_sql": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom {{ source('airbyte_zendesk','ticket_comments') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_comments"], "unique_id": "model.houm.stg_zendesk_tickets_comments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_comments.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_comments.sql", "name": "stg_zendesk_tickets_comments", "alias": "stg_zendesk_tickets_comments", "checksum": {"name": "sha256", "checksum": "07707f363459ef13fca4167dfc441f1623a18ecc5d4212e7672c945666a74a2a"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_comments"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.369001, "compiled_sql": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\""}, "model.houm.stg_zendesk_tickets_audits": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits"], "unique_id": "model.houm.stg_zendesk_tickets_audits", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits.sql", "name": "stg_zendesk_tickets_audits", "alias": "stg_zendesk_tickets_audits", "checksum": {"name": "sha256", "checksum": "a7ce1ebcf629ee50696edab50e4a4dd1a7c4da7cd13c5df764c71bbc152b7d73"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits"]], "metrics": [], "description": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.710934, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits\""}, "model.houm.stg_zendesk_tickets": {"raw_sql": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    {{ source('airbyte_zendesk','tickets') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets"], "unique_id": "model.houm.stg_zendesk_tickets", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets.sql", "name": "stg_zendesk_tickets", "alias": "stg_zendesk_tickets", "checksum": {"name": "sha256", "checksum": "ce1bc662afb9c5ff7dc956b16f825b0d58c0b3ad848b2427ea5a1c6534119598"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "tickets"]], "metrics": [], "description": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket.", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the tickets", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "This is a represent of the state of the tickets, can be [solved,open,closed,deleted,pending,new]. All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "prority": {"name": "prority", "description": "This is the priority ticket, can be urgent,normal,high,low. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "This is type of the ticket is, can be null, problem, task, incident, question. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "This is an array of the tags of the tickets. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "This is description of the initial comment of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "This is the customer id, The user who requested this ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "submitter_id": {"name": "submitter_id", "description": "This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1664825037.7106571, "compiled_sql": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\""}, "model.houm.stg_property__rent_recommended_properties": {"raw_sql": "select * \nfrom {{ source('raw_stage_analytics', 'property__rent_recommended_properties') }}\nwhere geo_distance_km > 0.05", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage_analytics.property__rent_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__rent_recommended_properties"], "unique_id": "model.houm.stg_property__rent_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__rent_recommended_properties.sql", "original_file_path": "models/staging/ml/stg_property__rent_recommended_properties.sql", "name": "stg_property__rent_recommended_properties", "alias": "stg_property__rent_recommended_properties", "checksum": {"name": "sha256", "checksum": "122491894a498cd6e6316e2969d6051314b369c746380676e3d24393c124d000"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [["raw_stage_analytics", "property__rent_recommended_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__rent_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1664825037.3723772, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage_analytics\".\"property__rent_recommended_properties\"\nwhere geo_distance_km > 0.05", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__rent_recommended_properties\""}, "model.houm.stg_property__sale_recommended_properties": {"raw_sql": "select * \nfrom {{ source('raw_stage_analytics', 'property__sale_recommended_properties') }}\nwhere geo_distance_km > 0.05", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage_analytics.property__sale_recommended_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__sale_recommended_properties"], "unique_id": "model.houm.stg_property__sale_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__sale_recommended_properties.sql", "original_file_path": "models/staging/ml/stg_property__sale_recommended_properties.sql", "name": "stg_property__sale_recommended_properties", "alias": "stg_property__sale_recommended_properties", "checksum": {"name": "sha256", "checksum": "ff538e2341cfdc9b599537d1150b3896ba1fa9aa174ffb414ed64a9718496bf4"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [["raw_stage_analytics", "property__sale_recommended_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__sale_recommended_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1664825037.373486, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage_analytics\".\"property__sale_recommended_properties\"\nwhere geo_distance_km > 0.05", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__sale_recommended_properties\""}, "model.houm.stg_property__recommended_new_properties": {"raw_sql": "select * \nfrom {{ source('raw_stage_analytics', 'property__recommended_new_properties') }}\nwhere geo_distance_km > 0.05", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage_analytics.property__recommended_new_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ml"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ml", "stg_property__recommended_new_properties"], "unique_id": "model.houm.stg_property__recommended_new_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/ml/stg_property__recommended_new_properties.sql", "original_file_path": "models/staging/ml/stg_property__recommended_new_properties.sql", "name": "stg_property__recommended_new_properties", "alias": "stg_property__recommended_new_properties", "checksum": {"name": "sha256", "checksum": "ac30ca1cd7f0bd26eaef10071b5d3a77a3e069673fa6ffd9682e71c1baa3f626"}, "tags": ["dw", "staging", "ml"], "refs": [], "sources": [["raw_stage_analytics", "property__recommended_new_properties"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ml/stg_property__recommended_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "ml"]}, "created_at": 1664825037.3746822, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage_analytics\".\"property__recommended_new_properties\"\nwhere geo_distance_km > 0.05", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property__recommended_new_properties\""}, "model.houm.stg_evaluations_scd": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_evaluation') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_evaluation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "evaluator"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "ms_evaluator", "stg_evaluations_scd"], "unique_id": "model.houm.stg_evaluations_scd", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/ms_evaluator/stg_evaluations_scd.sql", "original_file_path": "models/staging/ms_evaluator/stg_evaluations_scd.sql", "name": "stg_evaluations_scd", "alias": "stg_evaluations_scd", "checksum": {"name": "sha256", "checksum": "f1d7fd20bc0021319650bd2007391979fd376d0f0e6798b3d696745063d44a76"}, "tags": ["dw", "staging", "evaluator"], "refs": [], "sources": [["historical", "historical_evaluation"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/ms_evaluator/stg_evaluations_scd.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "materialized": "table", "tags": ["dw", "staging", "evaluator"]}, "created_at": 1664825037.375797, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_evaluation\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_evaluations_scd\""}, "model.houm.stg_monthly_inflation_mx": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_mx') }}\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_mx"], "unique_id": "model.houm.stg_monthly_inflation_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_mx.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "name": "stg_monthly_inflation_mx", "alias": "stg_monthly_inflation_mx", "checksum": {"name": "sha256", "checksum": "7b92c9bc31b62869da1574d8bcd7b9bfb158bb8dcc3161178a00f4d17c4c26ea"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_mx"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1664825037.377047, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\""}, "model.houm.stg_monthly_inflation_co": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM {{ source('raw_stage', 'series_ipc_co') }}\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_co"], "unique_id": "model.houm.stg_monthly_inflation_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_co.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_co.sql", "name": "stg_monthly_inflation_co", "alias": "stg_monthly_inflation_co", "checksum": {"name": "sha256", "checksum": "10b7644b4f61f58c0a284f0a84d29acf2712a1c1dfdba24f1720d0e7ee0e0327"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_co"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1664825037.37811, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\""}, "model.houm.stg_monthly_inflation_cl": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_cl') }}\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_cl"], "unique_id": "model.houm.stg_monthly_inflation_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_cl.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "name": "stg_monthly_inflation_cl", "alias": "stg_monthly_inflation_cl", "checksum": {"name": "sha256", "checksum": "7f9d3de1d3a430d6f314e1993ed2bf84b9e1f47d86a8a77b38b60cd78eb7af3c"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_cl"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1664825037.379164, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\""}, "model.houm.stg_payments_cl_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_cl_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_cl_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_cl_db_movements"], "unique_id": "model.houm.stg_payments_cl_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_cl_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_cl_db_movements.sql", "name": "stg_payments_cl_db_movements", "alias": "stg_payments_cl_db_movements", "checksum": {"name": "sha256", "checksum": "7a5bc9f3d7d5072423f94b37e00b496d38d0f49022d4da458209c12367645f95"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_cl_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_cl_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1664825037.380467, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\""}, "model.houm.stg_payments_mx_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_mx_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_mx_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_mx_db_movements"], "unique_id": "model.houm.stg_payments_mx_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_mx_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_mx_db_movements.sql", "name": "stg_payments_mx_db_movements", "alias": "stg_payments_mx_db_movements", "checksum": {"name": "sha256", "checksum": "0c375f5cb84d43ec993db58bb0f9ef5048d1258904e4727d7a71a924a776de45"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_mx_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_mx_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1664825037.38156, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\""}, "model.houm.stg_payments_co_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_co_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_co_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_co_db_movements"], "unique_id": "model.houm.stg_payments_co_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_co_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_co_db_movements.sql", "name": "stg_payments_co_db_movements", "alias": "stg_payments_co_db_movements", "checksum": {"name": "sha256", "checksum": "18b83a48451e9dc9fd65ae956a36486484170daf515a2ecf05a5446b769b8dea"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_co_db_movements"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_co_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1664825037.382624, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\""}, "model.houm.stg_departments": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.departments_colombia", "source.houm.staging_buk.departments_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_departments"], "unique_id": "model.houm.stg_departments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_departments.sql", "original_file_path": "models/staging/buk/stg_departments.sql", "name": "stg_departments", "alias": "stg_departments", "checksum": {"name": "sha256", "checksum": "ff3be5bca1f7a8324d163d870b80455917e26511e788977971a955f85e39355c"}, "tags": [], "refs": [], "sources": [["staging_buk", "departments_colombia"], ["staging_buk", "departments_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_departments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.3836532, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_departments\""}, "model.houm.stg_payrolls": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_payrolls"], "unique_id": "model.houm.stg_payrolls", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_payrolls.sql", "original_file_path": "models/staging/buk/stg_payrolls.sql", "name": "stg_payrolls", "alias": "stg_payrolls", "checksum": {"name": "sha256", "checksum": "4991338cfd6d03f822862de6d9299e8060d86fed7151ca5ea5ec6af6fd0685b4"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_payrolls.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.38513, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_payrolls\""}, "model.houm.stg_companies": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.companies_colombia", "source.houm.staging_buk.companies_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_companies"], "unique_id": "model.houm.stg_companies", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_companies.sql", "original_file_path": "models/staging/buk/stg_companies.sql", "name": "stg_companies", "alias": "stg_companies", "checksum": {"name": "sha256", "checksum": "2429f81e0c1eb864e08f3d5a893a92da047262124d9d0d25728029f9fe894183"}, "tags": [], "refs": [], "sources": [["staging_buk", "companies_colombia"], ["staging_buk", "companies_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_companies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.3862379, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_companies\""}, "model.houm.stg_accounting": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_accounting"], "unique_id": "model.houm.stg_accounting", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_accounting.sql", "original_file_path": "models/staging/buk/stg_accounting.sql", "name": "stg_accounting", "alias": "stg_accounting", "checksum": {"name": "sha256", "checksum": "ae55e14999812b2ba673d5095554f725e2976f5086e005331b41980519d4d70b"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_accounting.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.387572, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_accounting\""}, "model.houm.stg_jobs": {"raw_sql": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.jobs_colombia", "source.houm.staging_buk.jobs_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_jobs"], "unique_id": "model.houm.stg_jobs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_jobs.sql", "original_file_path": "models/staging/buk/stg_jobs.sql", "name": "stg_jobs", "alias": "stg_jobs", "checksum": {"name": "sha256", "checksum": "3aa78d1d9fda9877ae209a16a3ea6cf4a8b550fa4914c7182b05af373329fd59"}, "tags": [], "refs": [], "sources": [["staging_buk", "jobs_colombia"], ["staging_buk", "jobs_chile"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_jobs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.388746, "compiled_sql": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_chile\"\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_jobs\""}, "model.houm.stg_areas": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.areas_chile", "source.houm.staging_buk.areas_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_areas"], "unique_id": "model.houm.stg_areas", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_areas.sql", "original_file_path": "models/staging/buk/stg_areas.sql", "name": "stg_areas", "alias": "stg_areas", "checksum": {"name": "sha256", "checksum": "954ee9ddb188c04944a9d9ba8221e74bc2d267d8dbbc79835c65a90ba9283e39"}, "tags": [], "refs": [], "sources": [["staging_buk", "areas_chile"], ["staging_buk", "areas_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_areas.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.415902, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_areas\""}, "model.houm.stg_line_settlements": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_line_settlements"], "unique_id": "model.houm.stg_line_settlements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_line_settlements.sql", "original_file_path": "models/staging/buk/stg_line_settlements.sql", "name": "stg_line_settlements", "alias": "stg_line_settlements", "checksum": {"name": "sha256", "checksum": "ecefd56e99357acad2c09b9b7d22431c474bc1f9c3ca9a44585ff68db117d6f1"}, "tags": [], "refs": [], "sources": [["staging_buk", "line_settlements_chile"], ["staging_buk", "line_settlements_colombia"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_line_settlements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.417393, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_line_settlements\""}, "model.houm.stg_employees": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_employees"], "unique_id": "model.houm.stg_employees", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_employees.sql", "original_file_path": "models/staging/buk/stg_employees.sql", "name": "stg_employees", "alias": "stg_employees", "checksum": {"name": "sha256", "checksum": "ceb501d6e299e9bb3392965a61e048b9074173deecc995fc91c347a2b1fc68f9"}, "tags": [], "refs": [], "sources": [["staging_buk", "employees_chile"], ["staging_buk", "employees_colombia"]], "metrics": [], "description": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link", "columns": {"dwh_person_id": {"name": "dwh_person_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_employees.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.703722, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_employees\""}, "model.houm.stg_roles": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.roles_colombia", "source.houm.staging_buk.roles_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_roles"], "unique_id": "model.houm.stg_roles", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/stg_roles.sql", "original_file_path": "models/staging/buk/stg_roles.sql", "name": "stg_roles", "alias": "stg_roles", "checksum": {"name": "sha256", "checksum": "4a2edbed91f7133000879ebb9db1e554f57bf765b00fa8c40b2202858a0b45a6"}, "tags": [], "refs": [], "sources": [["staging_buk", "roles_colombia"], ["staging_buk", "roles_chile"]], "metrics": [], "description": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_roles.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1664825037.703935, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_roles\""}, "model.houm.proc_closure_subs": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH plans_clean AS (\nSELECT \n   plans.id ,\n   plans.name ,\n   plans.description , \n   plans.has_management , \n   plans.is_test \nFROM {{ ref('proc_closure_plans') }} AS plans\nWHERE TRUE \n)\n\n, contracts_clean AS (\nSELECT \n   contracts.id , \n   contracts.plan_id ,\n   contracts.status ,\n   contracts.first_payment_date ,\n   contracts.management \nFROM {{ ref('proc_closure_contracts') }} AS contracts\n)\n\n, clouser_subs as (\nSELECT \n   -- Contracts Info\n   contracts.id AS contract_id ,\n   contracts.status AS contract_status , \n   coalesce( (timezone( prop_mz.timezone, contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS contract_first_payment_date_local , \n   (timezone( 'UTC', contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS contract_first_payment_date_utc , \n   plans.has_management AS contracts_has_management , \n   -- Subs Info\n   subscription.id AS sub_id ,\n   coalesce( (timezone( prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS sub_payment_date_local , \n   (timezone( 'UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS sub_payment_date_utc , \n   subscription.property_id , \n   prop_mz.geo_id , \n   subscription.init_reason AS sub_init_reason ,\n   -- Plans info\n   plans.id AS plan_id ,\n   plans.name AS plan_name , \n   plans.description AS plan_description , \n   plans.has_management  AS plan_has_management ,\n   plans.is_test AS is_test \nFROM {{ ref('stg_subscription_subscription') }} AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\n)\n\nSELECT *\nFROM clouser_subs", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_plans", "model.houm.proc_closure_contracts", "model.houm.stg_subscription_subscription", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_subs"], "unique_id": "model.houm.proc_closure_subs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_subs.sql", "original_file_path": "models/processing/closure/proc_closure_subs.sql", "name": "proc_closure_subs", "alias": "proc_closure_subs", "checksum": {"name": "sha256", "checksum": "378c25053fad5700bffa69fbd2869c61b0554d50ea20a0ce8e1e55426ca08a64"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_closure_plans"], ["proc_closure_contracts"], ["stg_subscription_subscription"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1664825037.4212658, "compiled_sql": "\n\nWITH plans_clean AS (\nSELECT \n   plans.id ,\n   plans.name ,\n   plans.description , \n   plans.has_management , \n   plans.is_test \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\" AS plans\nWHERE TRUE \n)\n\n, contracts_clean AS (\nSELECT \n   contracts.id , \n   contracts.plan_id ,\n   contracts.status ,\n   contracts.first_payment_date ,\n   contracts.management \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\" AS contracts\n)\n\n, clouser_subs as (\nSELECT \n   -- Contracts Info\n   contracts.id AS contract_id ,\n   contracts.status AS contract_status , \n   coalesce( (timezone( prop_mz.timezone, contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS contract_first_payment_date_local , \n   (timezone( 'UTC', contracts.first_payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS contract_first_payment_date_utc , \n   plans.has_management AS contracts_has_management , \n   -- Subs Info\n   subscription.id AS sub_id ,\n   coalesce( (timezone( prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS sub_payment_date_local , \n   (timezone( 'UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS sub_payment_date_utc , \n   subscription.property_id , \n   prop_mz.geo_id , \n   subscription.init_reason AS sub_init_reason ,\n   -- Plans info\n   plans.id AS plan_id ,\n   plans.name AS plan_name , \n   plans.description AS plan_description , \n   plans.has_management  AS plan_has_management ,\n   plans.is_test AS is_test \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\" AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\n)\n\nSELECT *\nFROM clouser_subs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\""}, "model.houm.proc_finance_plans": {"raw_sql": "WITH plan_taxes AS (\nSELECT \n    plans.* , \n    plans_taxes_region.date_start  , \n    plans_taxes_region.date_end  , \n    plans_taxes_region.region ,\n    plans_taxes_region.taxes , \n    plans_taxes_region.perc_point_subject_to_iva \nFROM {{ ref('proc_closure_plans') }} AS plans\nLEFT JOIN {{ ref('proc_closure_plans_taxes_region') }} AS plans_taxes_region \n    ON plans.id = plans_taxes_region.plan_id  \n)\n, plan_iva_perct AS (\nSELECT \n    * , \n    taxes::float /100::float  AS iva_perc  \nFROM plan_taxes\nWHERE IS_test = FALSE \n)\n, plans_gross AS (\nSELECT \n    * , \n    admin_price_net*(1 + iva_perc) AS admin_price_gross  ,\n    COALESCE(perc_point_subject_to_iva,  admin_price_net*(1 + iva_perc) ) AS perc_point_subject_to_iva_2 \nFROM plan_iva_perct\n)\nSELECT \n    * ,\n    greatest( admin_price_gross - perc_point_subject_to_iva_2 , 0) AS iva_free , \n    perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc) AS iva_amount_perct ,\n    greatest(admin_price_gross -   perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc), 0) AS revenue_perct \nFROM plans_gross", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_finance_plans"], "unique_id": "model.houm.proc_finance_plans", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_finance_plans.sql", "original_file_path": "models/processing/closure/proc_finance_plans.sql", "name": "proc_finance_plans", "alias": "proc_finance_plans", "checksum": {"name": "sha256", "checksum": "962b5b7bd50e4e794e3d7e0eb864626a7b7ffd1391d925b5f4894a64b0af7377"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_closure_plans"], ["proc_closure_plans_taxes_region"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_finance_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1664825037.422803, "compiled_sql": "WITH plan_taxes AS (\nSELECT \n    plans.* , \n    plans_taxes_region.date_start  , \n    plans_taxes_region.date_end  , \n    plans_taxes_region.region ,\n    plans_taxes_region.taxes , \n    plans_taxes_region.perc_point_subject_to_iva \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\" AS plans\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans_taxes_region\" AS plans_taxes_region \n    ON plans.id = plans_taxes_region.plan_id  \n)\n, plan_iva_perct AS (\nSELECT \n    * , \n    taxes::float /100::float  AS iva_perc  \nFROM plan_taxes\nWHERE IS_test = FALSE \n)\n, plans_gross AS (\nSELECT \n    * , \n    admin_price_net*(1 + iva_perc) AS admin_price_gross  ,\n    COALESCE(perc_point_subject_to_iva,  admin_price_net*(1 + iva_perc) ) AS perc_point_subject_to_iva_2 \nFROM plan_iva_perct\n)\nSELECT \n    * ,\n    greatest( admin_price_gross - perc_point_subject_to_iva_2 , 0) AS iva_free , \n    perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc) AS iva_amount_perct ,\n    greatest(admin_price_gross -   perc_point_subject_to_iva_2 * iva_perc/(1 + iva_perc), 0) AS revenue_perct \nFROM plans_gross", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_finance_plans\""}, "model.houm.proc_closure_evaluation_has_a_contract": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    replace(replace(stg_historical.contracts,'[',''),']','') AS contracts_clean \nFROM stg_historical\nWHERE true\n    AND stg_historical.contracts IS NOT NULL\n)\n/*\nEstamos sacando todos los contratos por evaluacion, historicamente la evaluacion que tenia mas contratos\nha sido 6, asi que hacemos la extracci\u00f3n de hasta 7 contratos para tener un poco de resiliencia en caso de \naumentos de contratos por id de evaluacion\n*/\n,contract_split AS (\nSELECT\n    evaluation_id ,\n    split_part(proc_demand_evaluations.contracts_clean,',',1) AS contract_1 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',2) AS contract_2 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',3) AS contract_3 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',4) AS contract_4 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',5) AS contract_5 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',6) AS contract_6 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',7) AS contract_7 \nFROM proc_demand_evaluations\n)\n\n, contract_1 AS (\nSELECT \n    evaluation_id ,\n    contract_1 AS contract\nFROM contract_split\nWHERE contract_1 IS NOT NULL\n    AND contract_1 != ''\n)\n\n, contract_2 AS (\nSELECT \n    evaluation_id ,\n    contract_2 AS contract\nFROM contract_split\nWHERE contract_2 IS NOT NULL\n    AND contract_2 != ''\n)\n\n, contract_3 AS (\nSELECT \n    evaluation_id ,\n    contract_3 AS contract\nFROM contract_split\nWHERE contract_3 IS NOT NULL \n    AND contract_3 != ''\n)\n\n, contract_4 AS (\nSELECT\n    evaluation_id ,\n    contract_4 AS contract\nFROM contract_split\nWHERE contract_4 IS NOT NULL\n    AND contract_4 != ''\n)\n\n, contract_5 AS (\nSELECT \n    evaluation_id ,\n    contract_5 AS contract\nFROM contract_split\nWHERE contract_5 IS NOT NULL\n    AND contract_5 != ''\n)\n\n, contract_6 AS (\nSELECT \n    evaluation_id ,\n    contract_6 AS contract\nFROM contract_split\nWHERE contract_6 IS NOT NULL\n    AND contract_6 != ''\n)\n\n, contract_7 AS (\nSELECT\n    evaluation_id ,\n    contract_7 AS contract\nFROM contract_split\nWHERE contract_7 IS NOT NULL\nAND contract_7 != ''\n)\n\n, contracts_union AS (\nSELECT * FROM contract_1\nUNION \nSELECT * FROM contract_2\nUNION\nSELECT * FROM contract_3\nUNION\nSELECT * FROM contract_4\nUNION\nSELECT * FROM contract_5\nUNION\nSELECT * FROM contract_6\nUNION\nSELECT * FROM contract_7\n)\n\nSELECT \n    * \nFROM contracts_union", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_evaluation_has_a_contract"], "unique_id": "model.houm.proc_closure_evaluation_has_a_contract", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_evaluation_has_a_contract.sql", "original_file_path": "models/processing/closure/proc_closure_evaluation_has_a_contract.sql", "name": "proc_closure_evaluation_has_a_contract", "alias": "proc_closure_evaluation_has_a_contract", "checksum": {"name": "sha256", "checksum": "080e0f5757da5bcffa6d2788019819dc9d918655862a81675c86f2acea857895"}, "tags": ["dw", "processing", "closure"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_evaluation_has_a_contract.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1664825037.424317, "compiled_sql": "\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    replace(replace(stg_historical.contracts,'[',''),']','') AS contracts_clean \nFROM stg_historical\nWHERE true\n    AND stg_historical.contracts IS NOT NULL\n)\n/*\nEstamos sacando todos los contratos por evaluacion, historicamente la evaluacion que tenia mas contratos\nha sido 6, asi que hacemos la extracci\u00f3n de hasta 7 contratos para tener un poco de resiliencia en caso de \naumentos de contratos por id de evaluacion\n*/\n,contract_split AS (\nSELECT\n    evaluation_id ,\n    split_part(proc_demand_evaluations.contracts_clean,',',1) AS contract_1 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',2) AS contract_2 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',3) AS contract_3 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',4) AS contract_4 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',5) AS contract_5 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',6) AS contract_6 ,\n    split_part(proc_demand_evaluations.contracts_clean,',',7) AS contract_7 \nFROM proc_demand_evaluations\n)\n\n, contract_1 AS (\nSELECT \n    evaluation_id ,\n    contract_1 AS contract\nFROM contract_split\nWHERE contract_1 IS NOT NULL\n    AND contract_1 != ''\n)\n\n, contract_2 AS (\nSELECT \n    evaluation_id ,\n    contract_2 AS contract\nFROM contract_split\nWHERE contract_2 IS NOT NULL\n    AND contract_2 != ''\n)\n\n, contract_3 AS (\nSELECT \n    evaluation_id ,\n    contract_3 AS contract\nFROM contract_split\nWHERE contract_3 IS NOT NULL \n    AND contract_3 != ''\n)\n\n, contract_4 AS (\nSELECT\n    evaluation_id ,\n    contract_4 AS contract\nFROM contract_split\nWHERE contract_4 IS NOT NULL\n    AND contract_4 != ''\n)\n\n, contract_5 AS (\nSELECT \n    evaluation_id ,\n    contract_5 AS contract\nFROM contract_split\nWHERE contract_5 IS NOT NULL\n    AND contract_5 != ''\n)\n\n, contract_6 AS (\nSELECT \n    evaluation_id ,\n    contract_6 AS contract\nFROM contract_split\nWHERE contract_6 IS NOT NULL\n    AND contract_6 != ''\n)\n\n, contract_7 AS (\nSELECT\n    evaluation_id ,\n    contract_7 AS contract\nFROM contract_split\nWHERE contract_7 IS NOT NULL\nAND contract_7 != ''\n)\n\n, contracts_union AS (\nSELECT * FROM contract_1\nUNION \nSELECT * FROM contract_2\nUNION\nSELECT * FROM contract_3\nUNION\nSELECT * FROM contract_4\nUNION\nSELECT * FROM contract_5\nUNION\nSELECT * FROM contract_6\nUNION\nSELECT * FROM contract_7\n)\n\nSELECT \n    * \nFROM contracts_union", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluation_has_a_contract\""}, "model.houm.proc_closure_plans_taxes_region": {"raw_sql": "{{ config(materialized='view') }}\n \nWITH subs_country AS (\nSELECT  \n    subscription.id ,\n    subscription.plan_id ,\n    properties.country ,\n    CASE  \n        WHEN properties.country LIKE 'M_xico' AND properties.region = 'Jalisco' THEN properties.region\n        WHEN properties.country LIKE 'M_xico' THEN  'Other'\n        ELSE NULL\n    END AS region\nFROM {{ ref('stg_subscription_subscription') }} AS subscription\nLEFT JOIN {{ ref('proc_properties') }} AS properties\n    ON properties.id = subscription.property_id\n)\n \n, plan_country_subs AS (\nSELECT  \n    plans.id ,\n    plans.created_at ,\n    TRANSLATE(plans.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS country_plan ,\n    TRANSLATE(subs_country.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS  country_subs,\n    subs_country.region ,\n    CASE \n        WHEN plans.admin_commission IS NULL THEN FALSE \n        ELSE TRUE\n    END AS is_new ,\n    count(subs_country.country ) AS n_subs ,\n    count(*) OVER(PARTITION BY plans.id ) AS n_same_plan\nFROM {{ ref('stg_plans') }} AS plans \nLEFT JOIN subs_country\n    ON subs_country.plan_id = plans.id\nGROUP BY 1 , 2 , 3, 4 , 5 , 6\n)\n \n, plan_country_ranking AS (\nSELECT  \n    id AS plan_id ,\n    created_at ,\n    COALESCE( country_plan , country_subs ) AS country ,  \n    CASE\n        WHEN coalesce( country_plan , country_subs )  = 'Mexico' AND n_subs = 0 THEN 'Other'\n        ELSE coalesce( region, 'All')\n    END AS region  ,\n    n_subs ,\n    n_same_plan ,  \n    is_new ,\n    ROW_NUMBER() OVER(PARTITION BY COALESCE( country_plan , country_subs ) ,  id ORDER BY n_subs DESC ) AS ranking\nFROM plan_country_subs\nORDER BY ID\n)\n, plan_city_filtering AS (\nSELECT\n    *\nFROM plan_country_ranking\nWHERE TRUE\n    AND (\n          ( (n_same_plan >  1 ) AND country = 'Mexico' AND (region IN ('Other', 'Jalisco') )  )\n         OR n_same_plan = 1  )\nORDER BY plan_id ,  ranking\n)\n \n, plan_taxes AS (\nSELECT  \n    plan_id ,\n    created_at ,\n    country ,\n    region ,\n    CASE\n        WHEN country = 'Chile' THEN 19\n        WHEN country = 'Colombia' THEN 19\n        WHEN country = 'Mexico' AND region = 'Other' THEN 16\n        WHEN country = 'Mexico' AND region = 'Jalisco' THEN 8\n    END taxes ,\n    is_new\nFROM plan_city_filtering\n)\n \n, plans_perc_subject_to_iva AS (\nSELECT\n    *\nFROM (\n        SELECT 1, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 2, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 3, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 4, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 5, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 6, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 7, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 8, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 9, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 10, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 11, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 12, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 13, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 14, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 15, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 16, 1.785 , NULL::date, NULL::date UNION ALL\n        SELECT 17, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 18, 2.499 , NULL::date, NULL::date UNION ALL\n       \n        SELECT 19,2.499  , NULL::date, '2021-04-18'::date UNION ALL -- Cambio de los puntos % sujetos a IVA\n        SELECT 19,1.19  , '2021-04-18'::date , NULL::date UNION ALL\n       \n        SELECT 20,1.19 , NULL::date, NULL::date UNION ALL\n       \n        SELECT 21,2.499  , NULL::date, '2021-04-18'::date UNION ALL -- Cambio de los puntos % sujetos a IVA\n        SELECT 21,1.19  , '2021-04-18'::date , NULL::date UNION ALL\n       \n        SELECT 29,1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 35,1.19 , NULL::date, NULL::date\n    ) AS aux\n    (plan_id , perc_point_subject_to_iva , date_start, date_end )\n)\n \n, proc_taxes_region AS (\nSELECT  \n    plan_taxes.plan_id  ,\n    created_at ,\n    COALESCE(date_start , created_at) AS date_start ,\n    date_end  AS date_end ,\n    country ,\n    region ,\n    taxes ,\n    CASE \n        WHEN is_new AND country = 'Chile' THEN 1.19\n        ELSE perc_point_subject_to_iva\n    END AS perc_point_subject_to_iva\nFROM plan_taxes\nLEFT JOIN plans_perc_subject_to_iva\n    ON plans_perc_subject_to_iva.plan_id =  plan_taxes.plan_id\n)\n \nSELECT\n   *\nFROM proc_taxes_region", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_subscription_subscription", "model.houm.proc_properties", "model.houm.stg_plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_plans_taxes_region"], "unique_id": "model.houm.proc_closure_plans_taxes_region", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_plans_taxes_region.sql", "original_file_path": "models/processing/closure/proc_closure_plans_taxes_region.sql", "name": "proc_closure_plans_taxes_region", "alias": "proc_closure_plans_taxes_region", "checksum": {"name": "sha256", "checksum": "be3a269b7e5ccbe135c15c0cddd13d791880f750bc026a85f9eb31c671d2aa45"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_subscription_subscription"], ["proc_properties"], ["stg_plans"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_plans_taxes_region.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1664825037.425636, "compiled_sql": "\n \nWITH subs_country AS (\nSELECT  \n    subscription.id ,\n    subscription.plan_id ,\n    properties.country ,\n    CASE  \n        WHEN properties.country LIKE 'M_xico' AND properties.region = 'Jalisco' THEN properties.region\n        WHEN properties.country LIKE 'M_xico' THEN  'Other'\n        ELSE NULL\n    END AS region\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\" AS subscription\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\n    ON properties.id = subscription.property_id\n)\n \n, plan_country_subs AS (\nSELECT  \n    plans.id ,\n    plans.created_at ,\n    TRANSLATE(plans.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS country_plan ,\n    TRANSLATE(subs_country.country, '\u00f1\u00e1\u00e9\u00ed\u00f3\u00fa', 'naeiou') AS  country_subs,\n    subs_country.region ,\n    CASE \n        WHEN plans.admin_commission IS NULL THEN FALSE \n        ELSE TRUE\n    END AS is_new ,\n    count(subs_country.country ) AS n_subs ,\n    count(*) OVER(PARTITION BY plans.id ) AS n_same_plan\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" AS plans \nLEFT JOIN subs_country\n    ON subs_country.plan_id = plans.id\nGROUP BY 1 , 2 , 3, 4 , 5 , 6\n)\n \n, plan_country_ranking AS (\nSELECT  \n    id AS plan_id ,\n    created_at ,\n    COALESCE( country_plan , country_subs ) AS country ,  \n    CASE\n        WHEN coalesce( country_plan , country_subs )  = 'Mexico' AND n_subs = 0 THEN 'Other'\n        ELSE coalesce( region, 'All')\n    END AS region  ,\n    n_subs ,\n    n_same_plan ,  \n    is_new ,\n    ROW_NUMBER() OVER(PARTITION BY COALESCE( country_plan , country_subs ) ,  id ORDER BY n_subs DESC ) AS ranking\nFROM plan_country_subs\nORDER BY ID\n)\n, plan_city_filtering AS (\nSELECT\n    *\nFROM plan_country_ranking\nWHERE TRUE\n    AND (\n          ( (n_same_plan >  1 ) AND country = 'Mexico' AND (region IN ('Other', 'Jalisco') )  )\n         OR n_same_plan = 1  )\nORDER BY plan_id ,  ranking\n)\n \n, plan_taxes AS (\nSELECT  \n    plan_id ,\n    created_at ,\n    country ,\n    region ,\n    CASE\n        WHEN country = 'Chile' THEN 19\n        WHEN country = 'Colombia' THEN 19\n        WHEN country = 'Mexico' AND region = 'Other' THEN 16\n        WHEN country = 'Mexico' AND region = 'Jalisco' THEN 8\n    END taxes ,\n    is_new\nFROM plan_city_filtering\n)\n \n, plans_perc_subject_to_iva AS (\nSELECT\n    *\nFROM (\n        SELECT 1, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 2, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 3, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 4, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 5, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 6, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 7, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 8, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 9, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 10, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 11, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 12, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 13, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 14, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 15, 2.499 , NULL::date, NULL::date UNION ALL\n        SELECT 16, 1.785 , NULL::date, NULL::date UNION ALL\n        SELECT 17, 1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 18, 2.499 , NULL::date, NULL::date UNION ALL\n       \n        SELECT 19,2.499  , NULL::date, '2021-04-18'::date UNION ALL -- Cambio de los puntos % sujetos a IVA\n        SELECT 19,1.19  , '2021-04-18'::date , NULL::date UNION ALL\n       \n        SELECT 20,1.19 , NULL::date, NULL::date UNION ALL\n       \n        SELECT 21,2.499  , NULL::date, '2021-04-18'::date UNION ALL -- Cambio de los puntos % sujetos a IVA\n        SELECT 21,1.19  , '2021-04-18'::date , NULL::date UNION ALL\n       \n        SELECT 29,1.19 , NULL::date, NULL::date UNION ALL\n        SELECT 35,1.19 , NULL::date, NULL::date\n    ) AS aux\n    (plan_id , perc_point_subject_to_iva , date_start, date_end )\n)\n \n, proc_taxes_region AS (\nSELECT  \n    plan_taxes.plan_id  ,\n    created_at ,\n    COALESCE(date_start , created_at) AS date_start ,\n    date_end  AS date_end ,\n    country ,\n    region ,\n    taxes ,\n    CASE \n        WHEN is_new AND country = 'Chile' THEN 1.19\n        ELSE perc_point_subject_to_iva\n    END AS perc_point_subject_to_iva\nFROM plan_taxes\nLEFT JOIN plans_perc_subject_to_iva\n    ON plans_perc_subject_to_iva.plan_id =  plan_taxes.plan_id\n)\n \nSELECT\n   *\nFROM proc_taxes_region", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans_taxes_region\""}, "model.houm.proc_closure_plans": {"raw_sql": "{{ config(materialized='view') }}\n \n/*\nA la fecha tenemos 2 tipos de planes.\n    Los Planes Nuevos: Lo que tienen admin_commission\n    Los Planes Antiguos: Los que no tienen  admin_commission\nLos planes antiguos no tienen repoblado los campos nuevo. Aqui se intente repoblar los campos antiguos\ncon el fin de estandarizar el calculos de los reportes de revenue y finanzas.\n*/\n \nWith plans_type1 AS ( -- Planes Antiguos\nSELECT\n    *\nFROM {{ ref('stg_plans') }} plans\n    WHERE admin_commission IS NULL\n)\n , plans_type2 AS ( -- Planes Nuevos\nSELECT\n    *\nFROM {{ ref('stg_plans') }} plans\n    WHERE admin_commission IS NOT NULL\n)\n-- Traducci\u00f3n del los planes Antiguos a las variables nuevas  \n, plans_type1_backup as (\nSELECT *\nFROM (\n        SELECT 1,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 2,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 3,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 4,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 5,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 6,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 7,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 8,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 9,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 10,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 11,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 12,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 13,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 14,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 15,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 16,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 17,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 18,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 19,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 20,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 21,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 22,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 23,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 24,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 25,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 26,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 27,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 28,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 29,19,FALSE,NULL,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 30,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 31,19,FALSE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 32,19,FALSE,NULL,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 33,16,FALSE,NULL,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 34,16,TRUE,6,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 35,19,TRUE,4,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 36,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 37,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 38,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE\n    ) AS aux\n    (id , iva , has_management , payment_option_id , country,  lessee_brokerage, lessee_brokerage_closing, lessor_brokerage,  lessor_brokerage_closing, is_test)\n)\n \n, processing_plans_type_1 AS (\nSELECT  \n    plans_type1.id ,\n    plans_type1.created_at ,\n    plans_type1.updated_at ,\n    COALESCE(NULLIF(plans_type1.name,''), plans_type1.description ) AS name ,\n    plans_type1.description ,\n    plans_type1_backup.country ,                -- Se re poblo utilizando el country de las subs activas.  \n                                                -- Solo el plan 34 tiene m\u00e1s de 1 country, pero es solo 1 sub de CL siendo que el plan es de MX. Este caso de CL sera considerado como un error.\n    CASE\n        WHEN plans_type1.id = 28 THEN 0       --  Este era para el plan que era con corretaje gratis en CO Antiguamente.\n        WHEN plans_type1_backup.country LIKE 'M_xico' THEN  plans_type1.price::float/(1.08::float) \n        ELSE plans_type1.price::float/1.08::float\n    END AS admin_price_net ,                   \n    plans_type1.type ,\n    plans_type1_backup.has_management ,\n    plans_type1_backup.lessee_brokerage ,          -- tenant\n    plans_type1_backup.lessee_brokerage_closing ,  -- tenant\n    plans_type1_backup.lessor_brokerage ,          -- landlord\n    plans_type1_backup.lessor_brokerage_closing ,  -- landlord\n    COALESCE(plans_type1.months_duration, 12) AS months_duration , -- Se asume que su duraci\u00f3n es de 12 meses  \n    plans_type1.active ,\n    plans_type1.deleted_at ,\n    plans_type1_backup.is_test ,\n    plans_type1_backup.payment_option_id\nFROM plans_type1\nLEFT JOIN plans_type1_backup\n    ON plans_type1_backup.id = plans_type1.id\n)\n \n, processing_plans_type_2 AS (\nSELECT\n    plans_type2.id ,\n    plans_type2.created_at ,\n    plans_type2.updated_at ,\n    coalesce(NULLIF(plans_type2.name,''), plans_type2.description ) AS name ,\n    plans_type2.description ,\n    plans_type2.country ,\n    plans_type2.admin_commission AS admin_price_net ,\n    plans_type2.type  ,\n    plans_type2.has_management ,\n    plans_type2.lessee_brokerage ,          -- tenant\n    plans_type2.lessee_brokerage_closing ,  -- tenant\n    plans_type2.lessor_brokerage ,          -- landlord\n    plans_type2.lessor_brokerage_closing ,  -- landlord\n    plans_type2.months_duration ,\n    plans_type2.active ,\n    plans_type2.deleted_at ,\n    CASE\n        WHEN plans_type2.name = 'AAA' THEN TRUE\n        WHEN plans_type2.name like '%(test)%' THEN TRUE\n        WHEN plans_type2.description like '% test%' THEN TRUE\n        WHEN plans_type2.description like '% prueba%' THEN TRUE\n        WHEN plans_type2.name like 'Test%' THEN TRUE\n        ELSE FALSE\n    END AS is_test ,\n    plans_type2.payment_option_id\nFROM plans_type2\n)\n \n, proc_plans AS (\nSELECT\n    *\nFROM processing_plans_type_1\nUNION ALL\nSELECT\n    *\nFROM processing_plans_type_2\n)\n \nSELECT\n    *\nFROM proc_plans\n\n\n\n\n\n/*\nSELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\tELSE has_management END AS has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM {{ ref('stg_plans') }} plans\n*/", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_plans", "model.houm.stg_plans", "model.houm.stg_plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_plans"], "unique_id": "model.houm.proc_closure_plans", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_plans.sql", "original_file_path": "models/processing/closure/proc_closure_plans.sql", "name": "proc_closure_plans", "alias": "proc_closure_plans", "checksum": {"name": "sha256", "checksum": "b40583daf27a7a59c026636bdf3b409cef15a343916b9ba47d14551f0b6d9139"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_plans"], ["stg_plans"], ["stg_plans"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1664825037.4269881, "compiled_sql": "\n \n/*\nA la fecha tenemos 2 tipos de planes.\n    Los Planes Nuevos: Lo que tienen admin_commission\n    Los Planes Antiguos: Los que no tienen  admin_commission\nLos planes antiguos no tienen repoblado los campos nuevo. Aqui se intente repoblar los campos antiguos\ncon el fin de estandarizar el calculos de los reportes de revenue y finanzas.\n*/\n \nWith plans_type1 AS ( -- Planes Antiguos\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n    WHERE admin_commission IS NULL\n)\n , plans_type2 AS ( -- Planes Nuevos\nSELECT\n    *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n    WHERE admin_commission IS NOT NULL\n)\n-- Traducci\u00f3n del los planes Antiguos a las variables nuevas  \n, plans_type1_backup as (\nSELECT *\nFROM (\n        SELECT 1,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 2,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 3,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 4,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 5,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 6,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 7,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 8,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 9,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 10,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 11,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 12,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 13,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 14,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 15,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 16,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 17,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 18,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 19,19,TRUE,3,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 20,19,TRUE,1,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 21,19,TRUE,2,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 22,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 23,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 24,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 25,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 26,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 27,19,TRUE,3,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 28,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 29,19,FALSE,NULL,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 30,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 31,19,FALSE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 32,19,FALSE,NULL,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 33,16,FALSE,NULL,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 34,16,TRUE,6,'Mexico',0,0,86.21,100,FALSE UNION ALL\n        SELECT 35,19,TRUE,4,'Chile',50,100,50,100,FALSE UNION ALL\n        SELECT 36,19,TRUE,NULL,NULL,NULL,NULL,NULL,NULL,TRUE UNION ALL\n        SELECT 37,19,TRUE,5,'Colombia',0,0,84.03,100,FALSE UNION ALL\n        SELECT 38,19,TRUE,1,NULL,NULL,NULL,NULL,NULL,TRUE\n    ) AS aux\n    (id , iva , has_management , payment_option_id , country,  lessee_brokerage, lessee_brokerage_closing, lessor_brokerage,  lessor_brokerage_closing, is_test)\n)\n \n, processing_plans_type_1 AS (\nSELECT  \n    plans_type1.id ,\n    plans_type1.created_at ,\n    plans_type1.updated_at ,\n    COALESCE(NULLIF(plans_type1.name,''), plans_type1.description ) AS name ,\n    plans_type1.description ,\n    plans_type1_backup.country ,                -- Se re poblo utilizando el country de las subs activas.  \n                                                -- Solo el plan 34 tiene m\u00e1s de 1 country, pero es solo 1 sub de CL siendo que el plan es de MX. Este caso de CL sera considerado como un error.\n    CASE\n        WHEN plans_type1.id = 28 THEN 0       --  Este era para el plan que era con corretaje gratis en CO Antiguamente.\n        WHEN plans_type1_backup.country LIKE 'M_xico' THEN  plans_type1.price::float/(1.08::float) \n        ELSE plans_type1.price::float/1.08::float\n    END AS admin_price_net ,                   \n    plans_type1.type ,\n    plans_type1_backup.has_management ,\n    plans_type1_backup.lessee_brokerage ,          -- tenant\n    plans_type1_backup.lessee_brokerage_closing ,  -- tenant\n    plans_type1_backup.lessor_brokerage ,          -- landlord\n    plans_type1_backup.lessor_brokerage_closing ,  -- landlord\n    COALESCE(plans_type1.months_duration, 12) AS months_duration , -- Se asume que su duraci\u00f3n es de 12 meses  \n    plans_type1.active ,\n    plans_type1.deleted_at ,\n    plans_type1_backup.is_test ,\n    plans_type1_backup.payment_option_id\nFROM plans_type1\nLEFT JOIN plans_type1_backup\n    ON plans_type1_backup.id = plans_type1.id\n)\n \n, processing_plans_type_2 AS (\nSELECT\n    plans_type2.id ,\n    plans_type2.created_at ,\n    plans_type2.updated_at ,\n    coalesce(NULLIF(plans_type2.name,''), plans_type2.description ) AS name ,\n    plans_type2.description ,\n    plans_type2.country ,\n    plans_type2.admin_commission AS admin_price_net ,\n    plans_type2.type  ,\n    plans_type2.has_management ,\n    plans_type2.lessee_brokerage ,          -- tenant\n    plans_type2.lessee_brokerage_closing ,  -- tenant\n    plans_type2.lessor_brokerage ,          -- landlord\n    plans_type2.lessor_brokerage_closing ,  -- landlord\n    plans_type2.months_duration ,\n    plans_type2.active ,\n    plans_type2.deleted_at ,\n    CASE\n        WHEN plans_type2.name = 'AAA' THEN TRUE\n        WHEN plans_type2.name like '%(test)%' THEN TRUE\n        WHEN plans_type2.description like '% test%' THEN TRUE\n        WHEN plans_type2.description like '% prueba%' THEN TRUE\n        WHEN plans_type2.name like 'Test%' THEN TRUE\n        ELSE FALSE\n    END AS is_test ,\n    plans_type2.payment_option_id\nFROM plans_type2\n)\n \n, proc_plans AS (\nSELECT\n    *\nFROM processing_plans_type_1\nUNION ALL\nSELECT\n    *\nFROM processing_plans_type_2\n)\n \nSELECT\n    *\nFROM proc_plans\n\n\n\n\n\n/*\nSELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\tELSE has_management END AS has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans\n*/", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\""}, "model.houm.proc_finance_multifamily": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH fix_multifamily as (\n    SELECT \n        *\n    FROM (      SELECT 73313 , 321000 UNION ALL\n                SELECT 73314 , 406000 UNION ALL\n                SELECT 73315 , 321000 UNION ALL\n                SELECT 73321 , 391000 UNION ALL\n                SELECT 73323 , 449000 UNION ALL\n                SELECT 73329 , 447000 UNION ALL\n                SELECT 73331 , 480000 UNION ALL\n                SELECT 73333 , 473000 UNION ALL\n                SELECT 73344 , 501000 UNION ALL\n                SELECT 73346 , 496000 UNION ALL\n                SELECT 73360 , 321000 UNION ALL\n                SELECT 73422 , 379000 UNION ALL\n                SELECT 73430 , 391000 UNION ALL\n                SELECT 73432 , 321000 UNION ALL\n                SELECT 73484 , 321000 UNION ALL\n                SELECT 73487 , 501000 UNION ALL\n                SELECT 73491 , 496000 UNION ALL\n                SELECT 73493 , 496000 UNION ALL\n                SELECT 73497 , 496000 UNION ALL\n                SELECT 73501 , 496000 UNION ALL\n                SELECT 73508 , 496000 UNION ALL\n                SELECT 73524 , 475000 UNION ALL\n                SELECT 73530 , 405000 UNION ALL\n                SELECT 73535 , 475000 UNION ALL\n                SELECT 73540 , 405000 UNION ALL\n                SELECT 73551 , 405000 UNION ALL\n                SELECT 73554 , 405000 UNION ALL\n                SELECT 73562 , 405000 UNION ALL\n                SELECT 73567 , 379000 UNION ALL\n                SELECT 73570 , 379000 UNION ALL\n                SELECT 73589 , 330000 UNION ALL\n                SELECT 73593 , 330000 UNION ALL\n                SELECT 73598 , 330000 UNION ALL\n                SELECT 73599 , 330000 UNION ALL\n                SELECT 73599 , 391000 UNION ALL\n                SELECT 73604 , 321000 UNION ALL\n                SELECT 73606 , 330000 UNION ALL\n                SELECT 73607 , 330000 UNION ALL\n                SELECT 73608 , 330000 UNION ALL\n                SELECT 73609 , 330000 UNION ALL\n                SELECT 73610 , 330000 UNION ALL\n                SELECT 73611 , 321000 UNION ALL\n                SELECT 73612 , 330000 UNION ALL\n                SELECT 73616 , 330000 UNION ALL\n                SELECT 73617 , 330000 UNION ALL\n                SELECT 73618 , 330000 UNION ALL\n                SELECT 73620 , 330000 UNION ALL\n                SELECT 73621 , 330000 UNION ALL\n                SELECT 73622 , 330000 UNION ALL\n                SELECT 73623 , 330000 UNION ALL\n                SELECT 73624 , 321000 UNION ALL\n                SELECT 73625 , 330000 UNION ALL\n                SELECT 73627 , 330000 UNION ALL\n                SELECT 73628 , 330000 UNION ALL\n                SELECT 73630 , 330000 UNION ALL\n                SELECT 73631 , 330000 UNION ALL\n                SELECT 73633 , 334000 UNION ALL\n                SELECT 73634 , 330000 UNION ALL\n                SELECT 73635 , 330000 UNION ALL\n                SELECT 73636 , 330000 UNION ALL\n                SELECT 73637 , 330000 UNION ALL\n                SELECT 73638 , 330000 UNION ALL\n                SELECT 73639 , 321000 UNION ALL\n                SELECT 73640 , 330000 UNION ALL\n                SELECT 73641 , 379000 UNION ALL\n                SELECT 73642 , 379000 UNION ALL\n                SELECT 73642 , 455000 UNION ALL\n                SELECT 73643 , 447000 UNION ALL\n                SELECT 80383 , 330000 UNION ALL\n                SELECT 84368 , 330000 UNION ALL\n                SELECT 84420 , 330000 UNION ALL\n                SELECT 84424 , 330000 UNION ALL\n                SELECT 84433 , 330000 UNION ALL\n                SELECT 89482 , 330000 \n                ) AS temp \n                (property_id , contract_amount )\n  )\n  \n  SELECT \n    *\n  FROM fix_multifamily", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_finance_multifamily"], "unique_id": "model.houm.proc_finance_multifamily", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_finance_multifamily.sql", "original_file_path": "models/processing/closure/proc_finance_multifamily.sql", "name": "proc_finance_multifamily", "alias": "proc_finance_multifamily", "checksum": {"name": "sha256", "checksum": "4e527f5ffe3bc86b726916b286dc4b0e0307c8bd19a26d76c679889262a90e85"}, "tags": ["dw", "processing", "closure"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_finance_multifamily.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1664825037.428395, "compiled_sql": "\n\nWITH fix_multifamily as (\n    SELECT \n        *\n    FROM (      SELECT 73313 , 321000 UNION ALL\n                SELECT 73314 , 406000 UNION ALL\n                SELECT 73315 , 321000 UNION ALL\n                SELECT 73321 , 391000 UNION ALL\n                SELECT 73323 , 449000 UNION ALL\n                SELECT 73329 , 447000 UNION ALL\n                SELECT 73331 , 480000 UNION ALL\n                SELECT 73333 , 473000 UNION ALL\n                SELECT 73344 , 501000 UNION ALL\n                SELECT 73346 , 496000 UNION ALL\n                SELECT 73360 , 321000 UNION ALL\n                SELECT 73422 , 379000 UNION ALL\n                SELECT 73430 , 391000 UNION ALL\n                SELECT 73432 , 321000 UNION ALL\n                SELECT 73484 , 321000 UNION ALL\n                SELECT 73487 , 501000 UNION ALL\n                SELECT 73491 , 496000 UNION ALL\n                SELECT 73493 , 496000 UNION ALL\n                SELECT 73497 , 496000 UNION ALL\n                SELECT 73501 , 496000 UNION ALL\n                SELECT 73508 , 496000 UNION ALL\n                SELECT 73524 , 475000 UNION ALL\n                SELECT 73530 , 405000 UNION ALL\n                SELECT 73535 , 475000 UNION ALL\n                SELECT 73540 , 405000 UNION ALL\n                SELECT 73551 , 405000 UNION ALL\n                SELECT 73554 , 405000 UNION ALL\n                SELECT 73562 , 405000 UNION ALL\n                SELECT 73567 , 379000 UNION ALL\n                SELECT 73570 , 379000 UNION ALL\n                SELECT 73589 , 330000 UNION ALL\n                SELECT 73593 , 330000 UNION ALL\n                SELECT 73598 , 330000 UNION ALL\n                SELECT 73599 , 330000 UNION ALL\n                SELECT 73599 , 391000 UNION ALL\n                SELECT 73604 , 321000 UNION ALL\n                SELECT 73606 , 330000 UNION ALL\n                SELECT 73607 , 330000 UNION ALL\n                SELECT 73608 , 330000 UNION ALL\n                SELECT 73609 , 330000 UNION ALL\n                SELECT 73610 , 330000 UNION ALL\n                SELECT 73611 , 321000 UNION ALL\n                SELECT 73612 , 330000 UNION ALL\n                SELECT 73616 , 330000 UNION ALL\n                SELECT 73617 , 330000 UNION ALL\n                SELECT 73618 , 330000 UNION ALL\n                SELECT 73620 , 330000 UNION ALL\n                SELECT 73621 , 330000 UNION ALL\n                SELECT 73622 , 330000 UNION ALL\n                SELECT 73623 , 330000 UNION ALL\n                SELECT 73624 , 321000 UNION ALL\n                SELECT 73625 , 330000 UNION ALL\n                SELECT 73627 , 330000 UNION ALL\n                SELECT 73628 , 330000 UNION ALL\n                SELECT 73630 , 330000 UNION ALL\n                SELECT 73631 , 330000 UNION ALL\n                SELECT 73633 , 334000 UNION ALL\n                SELECT 73634 , 330000 UNION ALL\n                SELECT 73635 , 330000 UNION ALL\n                SELECT 73636 , 330000 UNION ALL\n                SELECT 73637 , 330000 UNION ALL\n                SELECT 73638 , 330000 UNION ALL\n                SELECT 73639 , 321000 UNION ALL\n                SELECT 73640 , 330000 UNION ALL\n                SELECT 73641 , 379000 UNION ALL\n                SELECT 73642 , 379000 UNION ALL\n                SELECT 73642 , 455000 UNION ALL\n                SELECT 73643 , 447000 UNION ALL\n                SELECT 80383 , 330000 UNION ALL\n                SELECT 84368 , 330000 UNION ALL\n                SELECT 84420 , 330000 UNION ALL\n                SELECT 84424 , 330000 UNION ALL\n                SELECT 84433 , 330000 UNION ALL\n                SELECT 89482 , 330000 \n                ) AS temp \n                (property_id , contract_amount )\n  )\n  \n  SELECT \n    *\n  FROM fix_multifamily", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_finance_multifamily\""}, "model.houm.proc_closure_evaluations": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    audit_start_dt ,\n    created_at ,\n    updated_at ,\n    codebtor_id ,\n    main_applicant_id ,\n    property_id ,\n    status AS evaluation_status ,\n    related_applicant_id ,\n    country\nFROM stg_historical \n)\n\nSELECT \n    * \nFROM proc_demand_evaluations\nWHERE true\nORDER BY related_applicant_id, created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_evaluations"], "unique_id": "model.houm.proc_closure_evaluations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_evaluations.sql", "original_file_path": "models/processing/closure/proc_closure_evaluations.sql", "name": "proc_closure_evaluations", "alias": "proc_closure_evaluations", "checksum": {"name": "sha256", "checksum": "c56376793a0866f7dedc0cecf28a2a528be5d4f7e44d305e950e6a1e446c6890"}, "tags": ["dw", "processing", "closure"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_evaluations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "view"}, "created_at": 1664825037.4296682, "compiled_sql": "\n\nWITH stg_historical AS (\nSELECT \n    *\nFROM historical.historical_evaluation\nWHERE true\n    AND audit_end_dt IS NULL\n    AND audit_action != 'D'\n)\n\n, proc_demand_evaluations AS (\nSELECT \n    id AS evaluation_id ,\n    audit_start_dt ,\n    created_at ,\n    updated_at ,\n    codebtor_id ,\n    main_applicant_id ,\n    property_id ,\n    status AS evaluation_status ,\n    related_applicant_id ,\n    country\nFROM stg_historical \n)\n\nSELECT \n    * \nFROM proc_demand_evaluations\nWHERE true\nORDER BY related_applicant_id, created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_evaluations\""}, "model.houm.proc_closure_contracts": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM {{ ref('stg_contracts') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_contracts"], "unique_id": "model.houm.proc_closure_contracts", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_contracts.sql", "original_file_path": "models/processing/closure/proc_closure_contracts.sql", "name": "proc_closure_contracts", "alias": "proc_closure_contracts", "checksum": {"name": "sha256", "checksum": "7aef3d52c886ff75a8a00d87c527645f83dd40d09ef281e5ea3945c637c43266"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_contracts"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"], "materialized": "table"}, "created_at": 1664825037.430759, "compiled_sql": "\n\nSELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\""}, "model.houm.proc_closure_contract_historical_status": {"raw_sql": "WITH contratcs AS (\nSELECT\n    contracts.id \nFROM {{ ref('stg_contracts') }} AS contracts \n)\n\n, contracts_historical_renamestatus AS (\nSELECT\n    contratcs.id ,\n    historical_contracts.audit_start_dt ,\n    historical_contracts.audit_end_dt ,\n    COALESCE(NULLIF(historical_contracts.status,'') , 'NotStatus' ) AS status ,\n    COALESCE(NULLIF(historical_contracts.online_process_status,'') , 'NotStatus') AS online_process_status ,\n    COALESCE(NULLIF(historical_contracts.status,'') , 'NotStatus' ) || '-' || COALESCE(NULLIF(historical_contracts.online_process_status,'') , 'NotStatus') AS status_key\nFROM contratcs\nINNER JOIN historical.historical_contracts AS historical_contracts\n    ON contratcs.id = historical_contracts.id\nWHERE TRUE\n\n)\n, contract_updates_count AS (\nSELECT\n    id ,\n    audit_start_dt ,\n    audit_end_dt ,\n    status ,\n    online_process_status ,\n    status_key ,\n    CASE\n        WHEN ( (lag(status_key) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ) ) = status_key ) THEN 0\n        ELSE 1\n    END AS status_has_changed\nFROM contracts_historical_renamestatus\nWHERE true\nORDER BY id DESC, audit_start_dt\n)\n\n, contract_status_index AS (\nSELECT\n    id ,\n    audit_start_dt ,\n    COALESCE(audit_end_dt, '{{ var(\"processed_time\") }}') AS audit_end_dt , \n    status ,\n    online_process_status ,\n    status_key ,\n    SUM(status_has_changed) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS status_index\nFROM contract_updates_count\nORDER BY id DESC , audit_start_dt ASC\n)\n\n, contract_statuses_periods AS (\nSELECT\n    id ,\n    status_index ,\n    status_key ,\n    status,\n    online_process_status ,\n    MIN(audit_start_dt) AS date_start ,\n    NULLIF( MAX(audit_end_dt) ,  '{{ var(\"processed_time\") }}' ) AS date_end  \nFROM contract_status_index\nGROUP BY 1 ,2,3,4, 5\n)\n\n, contracts_translation AS (\n SELECT\n    contract_statuses_periods.id ,\n    CASE\n        WHEN contract_statuses_periods.status IN ('Rechazado','Rechazado por Propietario','Desistido') THEN 'Perdido'\n        WHEN contract_statuses_periods.status = 'Pagado' THEN 'Pagado'\n        WHEN contract_statuses_periods.status IN ('Generar boton de pago','Boton de pago enviado') THEN 'Boton de pago'\n        WHEN contract_statuses_periods.status = 'Listo para redaccion' THEN 'Firmas'\n        WHEN contract_statuses_periods.status IN ('Aprobacion propietario', 'Perfil enviado' , 'Aprobado por propietario') THEN 'Aprobaci\u00f3n Propietario'\n        ELSE 'Otro'\n    END macro_status ,\n    contract_statuses_periods.status_index ,\n    contract_statuses_periods.status ,\n    contract_statuses_periods.online_process_status ,\n    CASE contract_statuses_periods.online_process_status\n        WHEN 'Pending' THEN 'Pendiente'\n        WHEN 'Links sent lessor' THEN 'Contrato enviado propietario'\n        WHEN 'Links sent others' THEN 'Contrato enviado postulante'\n        WHEN 'Signatures completed' THEN 'Contrato firmado ambas partes'\n        WHEN 'Finalized' then 'Finalizado'\n        ELSE contract_statuses_periods.online_process_status\n    END AS online_process_status_translation ,\n    contract_statuses_periods.date_start ,\n    contract_statuses_periods.date_end ,\n    '{{ var(\"processed_time\") }}' AS processed_time\nFROM contract_statuses_periods\nORDER BY id DESC, Status_index DESC\n)\n\nSELECT\n    *\nFROM contracts_translation\nORDER BY id , status_index", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_contract_historical_status"], "unique_id": "model.houm.proc_closure_contract_historical_status", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_contract_historical_status.sql", "original_file_path": "models/processing/closure/proc_closure_contract_historical_status.sql", "name": "proc_closure_contract_historical_status", "alias": "proc_closure_contract_historical_status", "checksum": {"name": "sha256", "checksum": "778cffbdd0f1f928b4dd98f73b3a7a0da458954ddd7440b60434247483ee4d6a"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_contracts"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_contract_historical_status.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1664825037.431937, "compiled_sql": "WITH contratcs AS (\nSELECT\n    contracts.id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_contracts\" AS contracts \n)\n\n, contracts_historical_renamestatus AS (\nSELECT\n    contratcs.id ,\n    historical_contracts.audit_start_dt ,\n    historical_contracts.audit_end_dt ,\n    COALESCE(NULLIF(historical_contracts.status,'') , 'NotStatus' ) AS status ,\n    COALESCE(NULLIF(historical_contracts.online_process_status,'') , 'NotStatus') AS online_process_status ,\n    COALESCE(NULLIF(historical_contracts.status,'') , 'NotStatus' ) || '-' || COALESCE(NULLIF(historical_contracts.online_process_status,'') , 'NotStatus') AS status_key\nFROM contratcs\nINNER JOIN historical.historical_contracts AS historical_contracts\n    ON contratcs.id = historical_contracts.id\nWHERE TRUE\n\n)\n, contract_updates_count AS (\nSELECT\n    id ,\n    audit_start_dt ,\n    audit_end_dt ,\n    status ,\n    online_process_status ,\n    status_key ,\n    CASE\n        WHEN ( (lag(status_key) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ) ) = status_key ) THEN 0\n        ELSE 1\n    END AS status_has_changed\nFROM contracts_historical_renamestatus\nWHERE true\nORDER BY id DESC, audit_start_dt\n)\n\n, contract_status_index AS (\nSELECT\n    id ,\n    audit_start_dt ,\n    COALESCE(audit_end_dt, '2022-10-11 18:29:46.503778-03:00') AS audit_end_dt , \n    status ,\n    online_process_status ,\n    status_key ,\n    SUM(status_has_changed) OVER (PARTITION BY id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS status_index\nFROM contract_updates_count\nORDER BY id DESC , audit_start_dt ASC\n)\n\n, contract_statuses_periods AS (\nSELECT\n    id ,\n    status_index ,\n    status_key ,\n    status,\n    online_process_status ,\n    MIN(audit_start_dt) AS date_start ,\n    NULLIF( MAX(audit_end_dt) ,  '2022-10-11 18:29:46.503778-03:00' ) AS date_end  \nFROM contract_status_index\nGROUP BY 1 ,2,3,4, 5\n)\n\n, contracts_translation AS (\n SELECT\n    contract_statuses_periods.id ,\n    CASE\n        WHEN contract_statuses_periods.status IN ('Rechazado','Rechazado por Propietario','Desistido') THEN 'Perdido'\n        WHEN contract_statuses_periods.status = 'Pagado' THEN 'Pagado'\n        WHEN contract_statuses_periods.status IN ('Generar boton de pago','Boton de pago enviado') THEN 'Boton de pago'\n        WHEN contract_statuses_periods.status = 'Listo para redaccion' THEN 'Firmas'\n        WHEN contract_statuses_periods.status IN ('Aprobacion propietario', 'Perfil enviado' , 'Aprobado por propietario') THEN 'Aprobaci\u00f3n Propietario'\n        ELSE 'Otro'\n    END macro_status ,\n    contract_statuses_periods.status_index ,\n    contract_statuses_periods.status ,\n    contract_statuses_periods.online_process_status ,\n    CASE contract_statuses_periods.online_process_status\n        WHEN 'Pending' THEN 'Pendiente'\n        WHEN 'Links sent lessor' THEN 'Contrato enviado propietario'\n        WHEN 'Links sent others' THEN 'Contrato enviado postulante'\n        WHEN 'Signatures completed' THEN 'Contrato firmado ambas partes'\n        WHEN 'Finalized' then 'Finalizado'\n        ELSE contract_statuses_periods.online_process_status\n    END AS online_process_status_translation ,\n    contract_statuses_periods.date_start ,\n    contract_statuses_periods.date_end ,\n    '2022-10-11 18:29:46.503778-03:00' AS processed_time\nFROM contract_statuses_periods\nORDER BY id DESC, Status_index DESC\n)\n\nSELECT\n    *\nFROM contracts_translation\nORDER BY id , status_index", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_contract_historical_status\""}, "model.houm.proc_cx_zendesk_clean_comments": {"raw_sql": "{{ config(materialized='table') }}\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('stg_zendesk_tickets_comments')}}\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_zendesk_tickets_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["async_zendesk"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_clean_comments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_clean_comments.sql", "name": "proc_cx_zendesk_clean_comments", "alias": "proc_cx_zendesk_clean_comments", "checksum": {"name": "sha256", "checksum": "c72904a48e606daedc9fc1b061dfc50e48d692d0b9e4dc235ae329956c9bc9b1"}, "tags": ["async_zendesk"], "refs": [["stg_zendesk_tickets_comments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": "async_zendesk", "materialized": "table"}, "created_at": 1664825037.4368598, "compiled_sql": "\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\"\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\""}, "model.houm.proc_cx_zendesk_first_clean_comments": {"raw_sql": "{{ config(materialized='table') }}\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('proc_cx_zendesk_clean_comments')}}\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_cx_zendesk_clean_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["async_zendesk"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_first_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_first_clean_comments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_first_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "name": "proc_cx_zendesk_first_clean_comments", "alias": "proc_cx_zendesk_first_clean_comments", "checksum": {"name": "sha256", "checksum": "9f41c0bc588030b224e050964b9e5c40b1df63c7252c6f02d2fbe660f93f1f97"}, "tags": ["async_zendesk"], "refs": [["proc_cx_zendesk_clean_comments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": "async_zendesk", "materialized": "table"}, "created_at": 1664825037.438161, "compiled_sql": "\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\"\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_first_clean_comments\""}, "model.houm.proc_pipedrive_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH properties_translation AS (\nSELECT \n    id , \n    business_type ,\n    CASE \n       WHEN business_type like 'Sale%' THEN 'Sales'\n       WHEN business_type LIKE 'Rental' THEN business_type \n       ELSE NULL \n    END business_type_translation , \n    supply_source ,\n    supply_relation , \n    CASE \n        WHEN supply_relation LIKE 'New Properties' THEN  supply_relation\n        ELSE 'Second Hand'\n    END supply_relation_translation\nFROM {{ref('proc_properties')}} AS properties \n)\n\n, deals_translation  AS (\nSELECT \n    * , \n    CASE \n       WHEN profile_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN profile_property_condition = 'Usada' THEN 'Second Hand' \n       ELSE NULL \n    END AS profile_property_condition_translation , \n    CASE\n       WHEN source_buyer_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN source_buyer_property_condition = 'Usada' THEN 'Second Hand' \n    END AS source_buyer_property_condition_translation\nFROM {{ref('proc_pipedrive_deals')}} AS deals \nWHERE  \n    deals.add_time > '2022-01-01'::DATE\n    OR deals.update_time > '2022-01-01'::DATE \n)\n\n, pipedrive_leads AS (\nSELECT  \n    --- Deal Basics ----------\n    deals.id AS deal_id ,\n    deals.title , \n    deals.add_time , \n    deals.update_time , \n    timezone('UTC', deals.add_time)::timestamptz    AS add_time_utc , \n    timezone('UTC', deals.update_time)::timestamptz AS update_time_utc ,\n    --- Pipeline Info -------\n    ---------------------------\n    pipeline.id             AS pipeline_id , \n    pipeline.name           AS pipeline_name , \n    pipeline.country        AS pipeline_country , \n    pipeline.country_geo_id AS pipeline_geo_id ,\n    pipeline.funnel         AS funnel , \n    -- Person Details ---------\n    ---------------------------\n    persons.id   AS person_id ,\n    persons.name AS person_name ,\n    COALESCE(persons.email , deals.email) AS person_email ,\n    COALESCE(persons.phone , deals.phone) AS person_phone ,\n    --- Pipedrive Deals Info --\n    ---------------------------\n    deals.owner_name ,\n    deals.owner_email,\n    deals.owner_id,\n    stages.name as stage_name , \n    deals.status , \n    deals.label_id ,\n    deals.label ,\n    deals.active ,\n    CASE \n        WHEN pipeline.business = 'Rental/Sales' THEN COALESCE(labels.business, pipeline.business )\n        WHEN pipeline.business = 'Sales' THEN pipeline.business\n        WHEN pipeline.business = 'Rental' THEN pipeline.business \n        ELSE COALESCE(labels.business, deals.business_deal, properties.business_type_translation ,'Rental/Sales') \n    END AS deal_business ,\n    CASE \n        WHEN deals.profile_ap_buyers IS NOT NULL  THEN TRUE\n        WHEN deals.source LIKE '%Autoperfilamiento%' THEN TRUE\n        WHEN deals.label LIKE 'Autogestionado' THEN TRUE \n        ELSE FALSE \n    END AS is_selfprofiling , \n    -- Before Negotiation/Source \n    ---------------------------\n    deals.marketing_id  , \n    SPLIT_PART(deals.marketing_id , '_', 1 ) AS campaign_id ,\n    SPLIT_PART(deals.marketing_id , '_', 2 ) AS ad_group_id , \n    SPLIT_PART(deals.marketing_id , '_', 3 ) AS ad_id ,\n    deals.marketing_lead_id ,   \n    deals.source , \n    deals.source_city , -- Add Cities from campaigns in the part of the model\n    source_cities.geo_id AS source_geo_id  ,\n    --- Demand ----------------\n    ---------------------------\n    deals.source_buyer_property_condition ,  \n    --- After Negotiation -----\n    ---------------------------\n    deals.property_id  ,\n    properties.supply_source AS property_supply_source ,\n    negotiation_cities.city AS negotiation_city , \n    COALESCE( prop_mz.geo_id , \n              negotiation_cities.geo_id , \n              source_cities.geo_id , \n              pipeline.country_geo_id ) AS negotiation_geo_id ,\n    -- Supply data  -----------\n    ---------------------------\n    CASE\n       WHEN deals.qualification IS NULL THEN NULL \n       ELSE deals.qualification_date::DATE \n    END AS supply_qualification_date , \n    deals.qualification AS supply_qualification , \n    -- Demand ---------- \n    --------------------\n    CASE \n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE AND buyer_qualification IN (3,4,5) THEN COALESCE(deals.buyer_qualification_date::DATE, deals.qualification_date::DATE)\n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE THEN NULL \n         ELSE deals.buyer_qualification_date::DATE\n    END AS buyer_qualification_date ,\n    deals.buyer_qualification , \n    COALESCE(\n            properties.supply_relation_translation , \n            profile_property_condition_translation ,\n            source_buyer_property_condition_translation , \n            labels.property_condition ) AS negotiation_property_condition , \n    -- Profile information\n    deals.profile_financial ,\n    deals.profile_buying_interest ,\n    deals.profile_timing_need,\n    deals.profile_income , \n    deals.profile_savings_initial_fee ,\n    deals.profile_decision_maker ,\n    deals.profile_property_type ,  \n    deals.profile_property_condition_translation as profile_property_condition ,\n    deals.profile_geographic_interest , \n    deals.profile_rooms , \n    deals.profile_bathrooms , \n    deals.profile_parkings , \n    deals.profile_storage ,   \n    deals.profile_source_of_income , \n    deals.profile_income_type ,\n    deals.profile_profession , \n    deals.profile_income_supplement , \n    deals.profile_saving_capacity ,\n    deals.profile_ap_buyers ,\n    -- Deal Varibles for won o lost deal \n    won_time ,\n    first_won_time ,\n    deals.lost_reason ,\n    deals.lost_time , \n    -- Auxliar Varibles to Defines processes in pipe \n    deals.deleted as is_deleted ,\n    CASE  \n        when persons.is_test THEN TRUE\n        WHEN lost_reason LIKE '%Test%' THEN TRUE\n        WHEN lost_reason = 'Pruebas' THEN TRUE\n        ELSE FALSE \n    END AS is_test ,\n    CASE \n        WHEN lost_reason = 'Cotizaci\u00f3n Duplicada' THEN TRUE\n        ELSE FALSE \n    END AS is_merged  \nFROM  deals_translation AS deals \nLEFT JOIN {{ref('proc_pipedrive_persons')}} AS persons \n    ON deals.person_id = persons.id\nLEFT JOIN {{ref('proc_pipedrive_pipelines')}} AS pipeline  \n    ON pipeline.id = deals.pipeline_id \nLEFT JOIN {{ref('proc_pipedrive_labels')}} AS labels  \n    ON labels.id = deals.label_id \nLEFT JOIN {{ref('proc_properties_mz')}} AS prop_mz\n    ON prop_mz.property_id = deals.property_id\nLEFT JOIN {{ref('proc_pipedrive_cities')}} AS source_cities \n    ON source_cities.city = deals.source_city\nLEFT JOIN {{ref('proc_pipedrive_cities')}} AS negotiation_cities \n    ON negotiation_cities.city = deals.negotiation_city\nLEFT JOIN properties_translation AS properties \n    ON properties.id = deals.property_id \nLEFT JOIN {{ref('stg_stages')}} as stages \n    ON stages.id = deals.stage_id\nWHERE TRUE  \n)\n\nSELECT \n    * \nFROM pipedrive_leads", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_pipelines", "model.houm.proc_pipedrive_labels", "model.houm.proc_properties_mz", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.stg_stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_leads"], "unique_id": "model.houm.proc_pipedrive_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_leads.sql", "original_file_path": "models/processing/supply/proc_pipedrive_leads.sql", "name": "proc_pipedrive_leads", "alias": "proc_pipedrive_leads", "checksum": {"name": "sha256", "checksum": "7951ff20bbf6cd4d8c2536dd8241684ea4b6adbe11838c572ce522bfc35d13ed"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"], ["proc_pipedrive_deals"], ["proc_pipedrive_persons"], ["proc_pipedrive_pipelines"], ["proc_pipedrive_labels"], ["proc_properties_mz"], ["proc_pipedrive_cities"], ["proc_pipedrive_cities"], ["stg_stages"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4405792, "compiled_sql": "\n\nWITH properties_translation AS (\nSELECT \n    id , \n    business_type ,\n    CASE \n       WHEN business_type like 'Sale%' THEN 'Sales'\n       WHEN business_type LIKE 'Rental' THEN business_type \n       ELSE NULL \n    END business_type_translation , \n    supply_source ,\n    supply_relation , \n    CASE \n        WHEN supply_relation LIKE 'New Properties' THEN  supply_relation\n        ELSE 'Second Hand'\n    END supply_relation_translation\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties \n)\n\n, deals_translation  AS (\nSELECT \n    * , \n    CASE \n       WHEN profile_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN profile_property_condition = 'Usada' THEN 'Second Hand' \n       ELSE NULL \n    END AS profile_property_condition_translation , \n    CASE\n       WHEN source_buyer_property_condition = 'Nueva' THEN 'New Properties' \n       WHEN source_buyer_property_condition = 'Usada' THEN 'Second Hand' \n    END AS source_buyer_property_condition_translation\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS deals \nWHERE  \n    deals.add_time > '2022-01-01'::DATE\n    OR deals.update_time > '2022-01-01'::DATE \n)\n\n, pipedrive_leads AS (\nSELECT  \n    --- Deal Basics ----------\n    deals.id AS deal_id ,\n    deals.title , \n    deals.add_time , \n    deals.update_time , \n    timezone('UTC', deals.add_time)::timestamptz    AS add_time_utc , \n    timezone('UTC', deals.update_time)::timestamptz AS update_time_utc ,\n    --- Pipeline Info -------\n    ---------------------------\n    pipeline.id             AS pipeline_id , \n    pipeline.name           AS pipeline_name , \n    pipeline.country        AS pipeline_country , \n    pipeline.country_geo_id AS pipeline_geo_id ,\n    pipeline.funnel         AS funnel , \n    -- Person Details ---------\n    ---------------------------\n    persons.id   AS person_id ,\n    persons.name AS person_name ,\n    COALESCE(persons.email , deals.email) AS person_email ,\n    COALESCE(persons.phone , deals.phone) AS person_phone ,\n    --- Pipedrive Deals Info --\n    ---------------------------\n    deals.owner_name ,\n    deals.owner_email,\n    deals.owner_id,\n    stages.name as stage_name , \n    deals.status , \n    deals.label_id ,\n    deals.label ,\n    deals.active ,\n    CASE \n        WHEN pipeline.business = 'Rental/Sales' THEN COALESCE(labels.business, pipeline.business )\n        WHEN pipeline.business = 'Sales' THEN pipeline.business\n        WHEN pipeline.business = 'Rental' THEN pipeline.business \n        ELSE COALESCE(labels.business, deals.business_deal, properties.business_type_translation ,'Rental/Sales') \n    END AS deal_business ,\n    CASE \n        WHEN deals.profile_ap_buyers IS NOT NULL  THEN TRUE\n        WHEN deals.source LIKE '%Autoperfilamiento%' THEN TRUE\n        WHEN deals.label LIKE 'Autogestionado' THEN TRUE \n        ELSE FALSE \n    END AS is_selfprofiling , \n    -- Before Negotiation/Source \n    ---------------------------\n    deals.marketing_id  , \n    SPLIT_PART(deals.marketing_id , '_', 1 ) AS campaign_id ,\n    SPLIT_PART(deals.marketing_id , '_', 2 ) AS ad_group_id , \n    SPLIT_PART(deals.marketing_id , '_', 3 ) AS ad_id ,\n    deals.marketing_lead_id ,   \n    deals.source , \n    deals.source_city , -- Add Cities from campaigns in the part of the model\n    source_cities.geo_id AS source_geo_id  ,\n    --- Demand ----------------\n    ---------------------------\n    deals.source_buyer_property_condition ,  \n    --- After Negotiation -----\n    ---------------------------\n    deals.property_id  ,\n    properties.supply_source AS property_supply_source ,\n    negotiation_cities.city AS negotiation_city , \n    COALESCE( prop_mz.geo_id , \n              negotiation_cities.geo_id , \n              source_cities.geo_id , \n              pipeline.country_geo_id ) AS negotiation_geo_id ,\n    -- Supply data  -----------\n    ---------------------------\n    CASE\n       WHEN deals.qualification IS NULL THEN NULL \n       ELSE deals.qualification_date::DATE \n    END AS supply_qualification_date , \n    deals.qualification AS supply_qualification , \n    -- Demand ---------- \n    --------------------\n    CASE \n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE AND buyer_qualification IN (3,4,5) THEN COALESCE(deals.buyer_qualification_date::DATE, deals.qualification_date::DATE)\n         WHEN deals.qualification_date::DATE < '2022-06-06'::DATE THEN NULL \n         ELSE deals.buyer_qualification_date::DATE\n    END AS buyer_qualification_date ,\n    deals.buyer_qualification , \n    COALESCE(\n            properties.supply_relation_translation , \n            profile_property_condition_translation ,\n            source_buyer_property_condition_translation , \n            labels.property_condition ) AS negotiation_property_condition , \n    -- Profile information\n    deals.profile_financial ,\n    deals.profile_buying_interest ,\n    deals.profile_timing_need,\n    deals.profile_income , \n    deals.profile_savings_initial_fee ,\n    deals.profile_decision_maker ,\n    deals.profile_property_type ,  \n    deals.profile_property_condition_translation as profile_property_condition ,\n    deals.profile_geographic_interest , \n    deals.profile_rooms , \n    deals.profile_bathrooms , \n    deals.profile_parkings , \n    deals.profile_storage ,   \n    deals.profile_source_of_income , \n    deals.profile_income_type ,\n    deals.profile_profession , \n    deals.profile_income_supplement , \n    deals.profile_saving_capacity ,\n    deals.profile_ap_buyers ,\n    -- Deal Varibles for won o lost deal \n    won_time ,\n    first_won_time ,\n    deals.lost_reason ,\n    deals.lost_time , \n    -- Auxliar Varibles to Defines processes in pipe \n    deals.deleted as is_deleted ,\n    CASE  \n        when persons.is_test THEN TRUE\n        WHEN lost_reason LIKE '%Test%' THEN TRUE\n        WHEN lost_reason = 'Pruebas' THEN TRUE\n        ELSE FALSE \n    END AS is_test ,\n    CASE \n        WHEN lost_reason = 'Cotizaci\u00f3n Duplicada' THEN TRUE\n        ELSE FALSE \n    END AS is_merged  \nFROM  deals_translation AS deals \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons\" AS persons \n    ON deals.person_id = persons.id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_pipelines\" AS pipeline  \n    ON pipeline.id = deals.pipeline_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_labels\" AS labels  \n    ON labels.id = deals.label_id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = deals.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\" AS source_cities \n    ON source_cities.city = deals.source_city\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\" AS negotiation_cities \n    ON negotiation_cities.city = deals.negotiation_city\nLEFT JOIN properties_translation AS properties \n    ON properties.id = deals.property_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_stages\" as stages \n    ON stages.id = deals.stage_id\nWHERE TRUE  \n)\n\nSELECT \n    * \nFROM pipedrive_leads", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\""}, "model.houm.proc_supply_seller_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_seller_leads"], "unique_id": "model.houm.proc_supply_seller_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_seller_leads.sql", "original_file_path": "models/processing/supply/proc_supply_seller_leads.sql", "name": "proc_supply_seller_leads", "alias": "proc_supply_seller_leads", "checksum": {"name": "sha256", "checksum": "7d55f42cd5f7372120b9045f574dd8e7a112814089508ffd699210da91c7402b"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_seller_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4426172, "compiled_sql": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\""}, "model.houm.proc_property_salesdetails": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect property_id\r\n\t\t,updated_at\r\n\t\t,currency\r\n\t\t,currency_code\r\n\t\t,description\r\n\t\t,price\r\n\t\t,status\r\n\t\t,first_publication_date\r\n\t\t,last_publication_date\r\n\t\t,brokerage_commission\r\n\t\t,recommended_price\r\n\t\t,recommended_price_max\r\n\t\t,recommended_price_min\r\nfrom {{ ref('stg_property_salesdetails') }}\r\norder by updated_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_property_salesdetails"], "unique_id": "model.houm.proc_property_salesdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_property_salesdetails.sql", "original_file_path": "models/processing/supply/proc_property_salesdetails.sql", "name": "proc_property_salesdetails", "alias": "proc_property_salesdetails", "checksum": {"name": "sha256", "checksum": "fcaeddaff6d6184d0a9c6419b67f985d797c65fac8a0ced200c4210aca986595"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4440992, "compiled_sql": "\n\nselect property_id\n\t\t,updated_at\n\t\t,currency\n\t\t,currency_code\n\t\t,description\n\t\t,price\n\t\t,status\n\t\t,first_publication_date\n\t\t,last_publication_date\n\t\t,brokerage_commission\n\t\t,recommended_price\n\t\t,recommended_price_max\n\t\t,recommended_price_min\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\norder by updated_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\""}, "model.houm.proc_pipedrive_pipelines": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH pipelines as (\nSELECT \n    * , \n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 'Chile'\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 'Colombia'\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 'Mexico'\n       ELSE NULL \n    END AS country ,\n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 79::INT\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 14::INT\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 19::INT\n       ELSE NULL \n    END AS country_geo_id ,    \n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82) THEN 'Supply'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78, 80) THEN 'Demand'\n    END AS funnel ,\n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82) THEN 'Rental/Sales'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78, 80) THEN 'Sales'\n    END AS business  \nFROM {{ref('stg_pipelines')}} \n)\n\nSELECT \n    *\nFROM pipelines", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_pipelines"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_pipelines"], "unique_id": "model.houm.proc_pipedrive_pipelines", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_pipelines.sql", "original_file_path": "models/processing/supply/proc_pipedrive_pipelines.sql", "name": "proc_pipedrive_pipelines", "alias": "proc_pipedrive_pipelines", "checksum": {"name": "sha256", "checksum": "46ab0cd4ed327b40cee12c8ba677186f061a8617e9cab0f1cbe645ecb13a1569"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_pipelines"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_pipelines.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.445421, "compiled_sql": "\n\nWITH pipelines as (\nSELECT \n    * , \n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 'Chile'\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 'Colombia'\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 'Mexico'\n       ELSE NULL \n    END AS country ,\n    CASE \n       WHEN id IN (38, 59, 79, 64, 65, 66, 76, 63, 77, 78, 80) THEN 79::INT\n       WHEN id IN (53, 54, 60, 74, 70, 71, 75, 72) THEN 14::INT\n       WHEN id IN (54, 61, 55, 67, 68, 73, 69, 82) THEN 19::INT\n       ELSE NULL \n    END AS country_geo_id ,    \n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82) THEN 'Supply'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78, 80) THEN 'Demand'\n    END AS funnel ,\n    CASE \n        WHEN id IN (59, 79, 60, 61, 64, 74, 55, 82) THEN 'Rental/Sales'\n        WHEN id IN (38, 53, 54, 65, 66, 76, 63, 67, 68, 73, 69, 70, 71, 75, 72, 77, 78, 80) THEN 'Sales'\n    END AS business  \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_pipelines\" \n)\n\nSELECT \n    *\nFROM pipelines", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_pipelines\""}, "model.houm.proc_supply_unittypes": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH projects AS (\nSELECT *\nFROM {{ ref('proc_supply_projects') }} AS projects\n)\n\n, unittypes AS (\nSELECT \n    projects.* ,\n    unittypes.id AS unit_type_id ,\n    unittypes.created_at unittype_created_at \nFROM projects \nLEFT JOIN {{ ref('stg_real_estate_developments_unittypes') }} AS unittypes \n ON projects.development_id = unittypes.development_id      \n)\n\nSELECT *\nFROM unittypes", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_projects", "model.houm.stg_real_estate_developments_unittypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_unittypes"], "unique_id": "model.houm.proc_supply_unittypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_unittypes.sql", "original_file_path": "models/processing/supply/proc_supply_unittypes.sql", "name": "proc_supply_unittypes", "alias": "proc_supply_unittypes", "checksum": {"name": "sha256", "checksum": "07d0d39d0c4f954d04b062d253c6d8a8b2e9b722539cfc1f9da18b2564b4e598"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_supply_projects"], ["stg_real_estate_developments_unittypes"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_unittypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.44675, "compiled_sql": "\n\nWITH projects AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\" AS projects\n)\n\n, unittypes AS (\nSELECT \n    projects.* ,\n    unittypes.id AS unit_type_id ,\n    unittypes.created_at unittype_created_at \nFROM projects \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_unittypes\" AS unittypes \n ON projects.development_id = unittypes.development_id      \n)\n\nSELECT *\nFROM unittypes", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\""}, "model.houm.proc_properties_mz": {"raw_sql": "Select  property.property_id, min(dim_geo.geo_id)   geo_id  , max(timezone) as timezone\nfrom {{ ref('proc_propertydetails') }} property\nleft join {{ ref('proc_macrozone') }} dim_geo\non (ST_Contains(dim_geo.polygon,ST_SetSRID(ST_Point(property.longitud, property.latitud), 4326)) = true)\ngroup by property_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_propertydetails", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_mz"], "unique_id": "model.houm.proc_properties_mz", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_mz.sql", "original_file_path": "models/processing/supply/proc_properties_mz.sql", "name": "proc_properties_mz", "alias": "proc_properties_mz", "checksum": {"name": "sha256", "checksum": "c5de38d0cd2125728cf34b668d2faf36dfc9954e239d9eb32f7c1977b24dfbe9"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_propertydetails"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_mz.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.448064, "compiled_sql": "Select  property.property_id, min(dim_geo.geo_id)   geo_id  , max(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" property\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" dim_geo\non (ST_Contains(dim_geo.polygon,ST_SetSRID(ST_Point(property.longitud, property.latitud), 4326)) = true)\ngroup by property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\""}, "model.houm.proc_supply_schedules": {"raw_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom {{ ref('stg_scheduler_schedules') }} AS schedules\n    left join {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join {{ ref('stg_arriendoasegurado_applicant') }} AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join {{ ref('proc_properties_mz') }} AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join {{ ref('proc_properties') }} as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Photo','SalesPhoto')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_schedules"], "unique_id": "model.houm.proc_supply_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_schedules.sql", "original_file_path": "models/processing/supply/proc_supply_schedules.sql", "name": "proc_supply_schedules", "alias": "proc_supply_schedules", "checksum": {"name": "sha256", "checksum": "1d14c544c3987017cdd8e97ac18e4beff2076c08394c690fc2c3e5ec5a3b8397"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.449515, "compiled_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Photo','SalesPhoto')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\""}, "model.houm.proc_pipedrive_persons": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH primary_phones AS (\n\tSELECT \n\t\t* \n\tFROM {{ref('proc_pipedrive_persons_phones')}}\n\tWHERE primary_phone IS TRUE\n) \n\n, primary_emails AS (\n\tSELECT * \n\tFROM {{ref('proc_pipedrive_persons_emails')}}\n\tWHERE primary_email IS TRUE \n)\n\n, persons_id as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::INTEGER AS id, \n\t\tREPLACE(deals.person_id.name::TEXT, '\"','') AS name, \n\t\tdeals.person_id.active_flag::BOOLEAN AS active_flag \n\tFROM {{ref('stg_deals')}} AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\n\n\n, persons AS (\nSELECT  \n\tpersons_id.* , \n\tprimary_emails.email , \n\tprimary_phones.phone , \n    CASE \n       WHEN name LIKE '%_ontesto%' THEN FALSE\n       WHEN name LIKE '%test%' THEN TRUE\n       WHEN name LIKE '%_ruebas%' THEN TRUE\n       WHEN email LIKE '%pruebas%' THEN TRUE\n       WHEN name LIKE '%_uan%_alut%' THEN TRUE \n       ELSE FALSE\n    END is_test\nFROM persons_id\nLEFT JOIN primary_emails \n\tON primary_emails.person_id = persons_id.id\nLEFT JOIN primary_phones \n\tON primary_phones.person_id = persons_id.id\nORDER BY 1 DESC\n)\n\nSELECT \n\t* \nFROM persons", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_persons_phones", "model.houm.proc_pipedrive_persons_emails", "model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_persons"], "unique_id": "model.houm.proc_pipedrive_persons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_persons.sql", "original_file_path": "models/processing/supply/proc_pipedrive_persons.sql", "name": "proc_pipedrive_persons", "alias": "proc_pipedrive_persons", "checksum": {"name": "sha256", "checksum": "7278d74d91616358da60834c2fa0f3f94dfbe4edaf6e97e88919816f1c64b25c"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_persons_phones"], ["proc_pipedrive_persons_emails"], ["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.450915, "compiled_sql": "\n\nWITH primary_phones AS (\n\tSELECT \n\t\t* \n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_phones\"\n\tWHERE primary_phone IS TRUE\n) \n\n, primary_emails AS (\n\tSELECT * \n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_emails\"\n\tWHERE primary_email IS TRUE \n)\n\n, persons_id as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::INTEGER AS id, \n\t\tREPLACE(deals.person_id.name::TEXT, '\"','') AS name, \n\t\tdeals.person_id.active_flag::BOOLEAN AS active_flag \n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\n\n\n, persons AS (\nSELECT  \n\tpersons_id.* , \n\tprimary_emails.email , \n\tprimary_phones.phone , \n    CASE \n       WHEN name LIKE '%_ontesto%' THEN FALSE\n       WHEN name LIKE '%test%' THEN TRUE\n       WHEN name LIKE '%_ruebas%' THEN TRUE\n       WHEN email LIKE '%pruebas%' THEN TRUE\n       WHEN name LIKE '%_uan%_alut%' THEN TRUE \n       ELSE FALSE\n    END is_test\nFROM persons_id\nLEFT JOIN primary_emails \n\tON primary_emails.person_id = persons_id.id\nLEFT JOIN primary_phones \n\tON primary_phones.person_id = persons_id.id\nORDER BY 1 DESC\n)\n\nSELECT \n\t* \nFROM persons", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons\""}, "model.houm.proc_supply_landlord_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Rental', 'Rental/Sales')\n)\n\nSELECT \n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_landlord_leads"], "unique_id": "model.houm.proc_supply_landlord_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_landlord_leads.sql", "original_file_path": "models/processing/supply/proc_supply_landlord_leads.sql", "name": "proc_supply_landlord_leads", "alias": "proc_supply_landlord_leads", "checksum": {"name": "sha256", "checksum": "e70ce6a1e3c0f6b0bed51759d3e04407defd950caeb1e5aca00fc8d6e6948955"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_landlord_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.452459, "compiled_sql": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Supply' \n    AND deal_business in ('Rental', 'Rental/Sales')\n)\n\nSELECT \n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    supply_qualification_date ,\n    supply_qualification ,\n    -- buyer_qualification_date ,\n    -- buyer_qualification ,\n    negotiation_property_condition ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\""}, "model.houm.proc_pipedrive_cities": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH pipedrive_cities AS (\nSELECT \n    source_city AS city\nFROM {{ ref('proc_pipedrive_deals') }} AS bi_deals\nUNION\nSELECT \n    negotiation_city AS city\nFROM {{ ref('proc_pipedrive_deals') }} AS bi_deals\n)\n\n, dim_pipedrive_cities AS (\nSELECT \n    city , \n    CASE\n        WHEN city LIKE '_ogot_%' THEN  14::INT\n        WHEN city LIKE '_onterrey' THEN  54::INT\n        WHEN city LIKE '_iudad de __xico' THEN  104::INT\n        WHEN city LIKE '_egi_n _etropolitana de _antiago' THEN 79::INT\n        WHEN city LIKE '_oncepci_n' THEN  8::INT\n        WHEN city LIKE '_uadalajara' THEN  30::INT\n        WHEN city LIKE '_edell_n' THEN  31::INT\n        WHEN city LIKE '%alpara_so' THEN  11::INT\n        WHEN city LIKE '%ijuana' THEN  67::INT\n        ELSE Null END AS geo_id \nFROM pipedrive_cities\n)\n\nSELECT \n    *\nFROM dim_pipedrive_cities", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_cities"], "unique_id": "model.houm.proc_pipedrive_cities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_cities.sql", "original_file_path": "models/processing/supply/proc_pipedrive_cities.sql", "name": "proc_pipedrive_cities", "alias": "proc_pipedrive_cities", "checksum": {"name": "sha256", "checksum": "d7423ceed72564192196a2bb86932108dee1c4ce3c061c4474bdbcf850c67424"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_deals"], ["proc_pipedrive_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.453865, "compiled_sql": "\n\nWITH pipedrive_cities AS (\nSELECT \n    source_city AS city\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS bi_deals\nUNION\nSELECT \n    negotiation_city AS city\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS bi_deals\n)\n\n, dim_pipedrive_cities AS (\nSELECT \n    city , \n    CASE\n        WHEN city LIKE '_ogot_%' THEN  14::INT\n        WHEN city LIKE '_onterrey' THEN  54::INT\n        WHEN city LIKE '_iudad de __xico' THEN  104::INT\n        WHEN city LIKE '_egi_n _etropolitana de _antiago' THEN 79::INT\n        WHEN city LIKE '_oncepci_n' THEN  8::INT\n        WHEN city LIKE '_uadalajara' THEN  30::INT\n        WHEN city LIKE '_edell_n' THEN  31::INT\n        WHEN city LIKE '%alpara_so' THEN  11::INT\n        WHEN city LIKE '%ijuana' THEN  67::INT\n        ELSE Null END AS geo_id \nFROM pipedrive_cities\n)\n\nSELECT \n    *\nFROM dim_pipedrive_cities", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_cities\""}, "model.houm.proc_supply_units": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH unittypes AS (\nSELECT *\nFROM {{ ref('proc_supply_unittypes') }} AS unittypes\n)\n\n, units AS (\nSELECT \n    unittypes.* ,\n    units.id AS unit_id ,\n    units.created_at AS unit_created_at \nFROM unittypes \nLEFT JOIN {{ ref('stg_real_estate_developments_units') }} AS units\n ON unittypes.unit_type_id = units.unit_type_id \n)\n\nSELECT *\nFROM units", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_unittypes", "model.houm.stg_real_estate_developments_units"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_units"], "unique_id": "model.houm.proc_supply_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_units.sql", "original_file_path": "models/processing/supply/proc_supply_units.sql", "name": "proc_supply_units", "alias": "proc_supply_units", "checksum": {"name": "sha256", "checksum": "4cfe537d1e4152ae614358f5ca94af9779b6f966d2bb49bc53f0c10d61b5b439"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_supply_unittypes"], ["stg_real_estate_developments_units"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.455124, "compiled_sql": "\n\nWITH unittypes AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_unittypes\" AS unittypes\n)\n\n, units AS (\nSELECT \n    unittypes.* ,\n    units.id AS unit_id ,\n    units.created_at AS unit_created_at \nFROM unittypes \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_units\" AS units\n ON unittypes.unit_type_id = units.unit_type_id \n)\n\nSELECT *\nFROM units", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_units\""}, "model.houm.proc_propertydetails": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect id\r\n\t\t,property_id\r\n\t\t,created_at\r\n\t\t,updated_at\r\n\t\t,m_construidos\r\n\t\t,m_terreno\r\n\t\t,dormitorios\r\n\t\t,banos\r\n\t\t,servicios\r\n\t\t,latitud\r\n\t\t,longitud\r\n\t\t,amoblado\r\n\t\t,orientacion\r\n\t\t,gc\r\n\t\t,terraza\r\n\t\t,piscina\r\n\t\t,condominio\r\n\t\t,calefaccion\r\n\t\t,bodega\r\n\t\t,estacionamientos\r\n\t\t,gym\r\n\t\t,mascotas\r\n\t\t,status\r\n\t\t,tipo_moneda\r\n\t\t,tipo_moneda_venta\r\n\t\t,valor\r\n\t\t,valor_venta\r\n\t\t,currency_code\r\nfrom {{ ref('stg_propertydetails') }}\r\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_propertydetails"], "unique_id": "model.houm.proc_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_propertydetails.sql", "original_file_path": "models/processing/supply/proc_propertydetails.sql", "name": "proc_propertydetails", "alias": "proc_propertydetails", "checksum": {"name": "sha256", "checksum": "c1d74376ca11dd12345e55baa4baf4d275b93ef73fec491c9c8bddb64577338c"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4565508, "compiled_sql": "\n\nselect id\n\t\t,property_id\n\t\t,created_at\n\t\t,updated_at\n\t\t,m_construidos\n\t\t,m_terreno\n\t\t,dormitorios\n\t\t,banos\n\t\t,servicios\n\t\t,latitud\n\t\t,longitud\n\t\t,amoblado\n\t\t,orientacion\n\t\t,gc\n\t\t,terraza\n\t\t,piscina\n\t\t,condominio\n\t\t,calefaccion\n\t\t,bodega\n\t\t,estacionamientos\n\t\t,gym\n\t\t,mascotas\n\t\t,status\n\t\t,tipo_moneda\n\t\t,tipo_moneda_venta\n\t\t,valor\n\t\t,valor_venta\n\t\t,currency_code\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\""}, "model.houm.proc_new_properties": {"raw_sql": "WITH NewProperties as (\n\nSELECT * \nFROM {{ref('proc_properties')}} \nWHERE supply_relation = 'New Properties'\n)\n\nselect * from NewProperties", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_new_properties"], "unique_id": "model.houm.proc_new_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_new_properties.sql", "original_file_path": "models/processing/supply/proc_new_properties.sql", "name": "proc_new_properties", "alias": "proc_new_properties", "checksum": {"name": "sha256", "checksum": "3fba51a6c620ca791be74a7b8e2d0cfb732d12ff14f981aa89e0b9960e30c101"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_new_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.45823, "compiled_sql": "WITH NewProperties as (\n\nSELECT * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" \nWHERE supply_relation = 'New Properties'\n)\n\nselect * from NewProperties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_new_properties\""}, "model.houm.proc_tmp_supply_cities": {"raw_sql": "{{ config(materialized='table') }}\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom {{ref('proc_macrozone')}}\ngroup by 1,2", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_cities"], "unique_id": "model.houm.proc_tmp_supply_cities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_cities.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_cities.sql", "name": "proc_tmp_supply_cities", "alias": "proc_tmp_supply_cities", "checksum": {"name": "sha256", "checksum": "b2d0f115acfcfeaf4da8889b97333a93c416e21fb4006f35e2572bbe8c107935"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.459541, "compiled_sql": "\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\""}, "model.houm.proc_macrozone": {"raw_sql": "SELECT\n    a.id geo_id \n\t, a.created_at\n\t, a.updated_at\n\t, a.name\n\t, a.description\n    , a.country\n\t, a.city\n\t, a.city_marketplace_id\n\t, b.name as city_marketplace\n    , a.polygon \n    , a.timezone\n    , case  when a.country = 'Chile' then 'CL' when a.country = 'Colombia' then 'CO' when a.country in ('Mexico', 'M\u00e9xico')  then 'MX'\n            else 'NA' \n    end country_sufix\n    --, city\n    , case \n    \twhen  a.city in ('Santiago','Buin','Calera de Tango','Chicureo','Paine','El Monte')    then 'Regi\u00f3n Metropolitana'\n    \twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9')   \t\tthen 'V Regi\u00f3n'\n    \twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n    \twhen  a.city in ('Bogot\u00e1','Cundinamarca')   \t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.id  = 90   \t\t\t\t\t\t\t\t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.city in ('Medell\u00edn','Medellin Oriente') \t\t\tthen 'Antioquia'\n    \twhen  a.city = 'Ciudad de M\u00e9xico' or a.description like '%CDMX%'\tthen 'Ciudad de M\u00e9xico'\n    \twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n    \twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n    \twhen  a.city = 'Tijuana' \t\t\t\t\t\t    \t\tthen 'Tijuana'\n    \telse 'Null'                                                 end Region_Houm\n    , case \n\t\t\t\twhen  a.city = 'Santiago' \t\t\t\t\t\t\t\t\t    then 'Santiago'\n\t\t\t\twhen  a.city in ('Buin','Calera de Tango','Chicureo','Paine','El Monte')\tthen 'Santiago Periferia'\n\t\t\t\twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar')   \t\t\t\tthen 'V Regi\u00f3n Costa'\n\t\t\t\twhen  a.city in ('Limache','Quilpu\u00e9')   \t\t\t\t\t\tthen 'V Regi\u00f3n Interior'\n\t\t\t\twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\twhen  a.id in (14,15,16,17,18) \t\t\t\t\t\t\t\tthen 'Bogot\u00e1'\n\t\t\t\twhen  a.id in (24,25,61,66,65,63,62,64,90) \t\t\t\t\tthen 'Bogot\u00e1 Periferia'\n\t\t\t\twhen  a.city = 'Medell\u00edn' \t\t\t\t\t\t\t\t\tthen 'Medell\u00edn'\n\t\t\t\twhen  a.city = 'Medellin Oriente' \t\t\t\t\t\t\tthen 'Medell\u00edn Oriente'\n\t\t\t\twhen  a.city = 'Ciudad de M\u00e9xico' or a.description like '%CDMX%'\tthen 'Ciudad de M\u00e9xico'\n\t\t\t\twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n\t\t\t\twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n\t\t\t\twhen  a.city = 'Tijuana' \t\t\t\t\t\t\t\t\tthen 'Tijuana'\n\t\t\t\telse 'Null'                                                 end City_Houm\nFROM {{ ref('stg_macrozone') }} as a \nLEFT JOIN {{ ref('proc_supply_marketplace_city') }} b on a.city_marketplace_id = b.id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_macrozone", "model.houm.proc_supply_marketplace_city"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_macrozone"], "unique_id": "model.houm.proc_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_macrozone.sql", "original_file_path": "models/processing/supply/proc_macrozone.sql", "name": "proc_macrozone", "alias": "proc_macrozone", "checksum": {"name": "sha256", "checksum": "f414187ed1629b0d211daf2a478aedc1c638c0e2700c74aba1e53ce8258d8361"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_macrozone"], ["proc_supply_marketplace_city"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.460834, "compiled_sql": "SELECT\n    a.id geo_id \n\t, a.created_at\n\t, a.updated_at\n\t, a.name\n\t, a.description\n    , a.country\n\t, a.city\n\t, a.city_marketplace_id\n\t, b.name as city_marketplace\n    , a.polygon \n    , a.timezone\n    , case  when a.country = 'Chile' then 'CL' when a.country = 'Colombia' then 'CO' when a.country in ('Mexico', 'M\u00e9xico')  then 'MX'\n            else 'NA' \n    end country_sufix\n    --, city\n    , case \n    \twhen  a.city in ('Santiago','Buin','Calera de Tango','Chicureo','Paine','El Monte')    then 'Regi\u00f3n Metropolitana'\n    \twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9')   \t\tthen 'V Regi\u00f3n'\n    \twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n    \twhen  a.city in ('Bogot\u00e1','Cundinamarca')   \t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.id  = 90   \t\t\t\t\t\t\t\t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.city in ('Medell\u00edn','Medellin Oriente') \t\t\tthen 'Antioquia'\n    \twhen  a.city = 'Ciudad de M\u00e9xico' or a.description like '%CDMX%'\tthen 'Ciudad de M\u00e9xico'\n    \twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n    \twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n    \twhen  a.city = 'Tijuana' \t\t\t\t\t\t    \t\tthen 'Tijuana'\n    \telse 'Null'                                                 end Region_Houm\n    , case \n\t\t\t\twhen  a.city = 'Santiago' \t\t\t\t\t\t\t\t\t    then 'Santiago'\n\t\t\t\twhen  a.city in ('Buin','Calera de Tango','Chicureo','Paine','El Monte')\tthen 'Santiago Periferia'\n\t\t\t\twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar')   \t\t\t\tthen 'V Regi\u00f3n Costa'\n\t\t\t\twhen  a.city in ('Limache','Quilpu\u00e9')   \t\t\t\t\t\tthen 'V Regi\u00f3n Interior'\n\t\t\t\twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\twhen  a.id in (14,15,16,17,18) \t\t\t\t\t\t\t\tthen 'Bogot\u00e1'\n\t\t\t\twhen  a.id in (24,25,61,66,65,63,62,64,90) \t\t\t\t\tthen 'Bogot\u00e1 Periferia'\n\t\t\t\twhen  a.city = 'Medell\u00edn' \t\t\t\t\t\t\t\t\tthen 'Medell\u00edn'\n\t\t\t\twhen  a.city = 'Medellin Oriente' \t\t\t\t\t\t\tthen 'Medell\u00edn Oriente'\n\t\t\t\twhen  a.city = 'Ciudad de M\u00e9xico' or a.description like '%CDMX%'\tthen 'Ciudad de M\u00e9xico'\n\t\t\t\twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n\t\t\t\twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n\t\t\t\twhen  a.city = 'Tijuana' \t\t\t\t\t\t\t\t\tthen 'Tijuana'\n\t\t\t\telse 'Null'                                                 end City_Houm\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_macrozone\" as a \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_supply_marketplace_city\" b on a.city_marketplace_id = b.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\""}, "model.houm.proc_pipedrive_persons_phones": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH phones AS (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id , \n\te_phone.value::TEXT AS phone , \n\te_phone.primary::BOOLEAN AS primary_phone \nFROM \n\t{{ref('stg_deals')}} AS deals, \n\tdeals.person_id.phone AS e_phone \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id , \n\tphones.person_id AS person_id , \n\tCASE  \n\t\tWHEN LENGTH(phones.phone) < 1 THEN NULL \n\t\tELSE phones.phone \n\tEND AS phone , \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_persons_phones"], "unique_id": "model.houm.proc_pipedrive_persons_phones", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_persons_phones.sql", "original_file_path": "models/processing/supply/proc_pipedrive_persons_phones.sql", "name": "proc_pipedrive_persons_phones", "alias": "proc_pipedrive_persons_phones", "checksum": {"name": "sha256", "checksum": "2b58f32ba459b17fea8edfd0acafe6ed547def125eee52612dcd50e44b4b7b3a"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_persons_phones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4620411, "compiled_sql": "\n\nWITH phones AS (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id , \n\te_phone.value::TEXT AS phone , \n\te_phone.primary::BOOLEAN AS primary_phone \nFROM \n\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\tdeals.person_id.phone AS e_phone \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id , \n\tphones.person_id AS person_id , \n\tCASE  \n\t\tWHEN LENGTH(phones.phone) < 1 THEN NULL \n\t\tELSE phones.phone \n\tEND AS phone , \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_phones\""}, "model.houm.proc_properties": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect a.id\r\n\t\t,a.created_at\r\n\t\t,a.updated_at\r\n\t\t,a.first_publication_date\r\n\t\t,a.last_publication_date\r\n        ,CASE   when for_rental = True and  for_sale = True then 'Rental & Sale'\r\n                        when for_rental = True and for_sale = False then 'Rental'\r\n                        when for_rental = False and for_sale = True then 'Sale'\r\n                        end as business_type\r\n\t\t, CASE  WHEN b.role::text in ('property_broker','real_estate_developer') or  b.id = 60441 THEN 'B2B'\r\n            \t\t\tELSE 'B2C'\r\n      \t\t\t\t\tEND AS supply_source \r\n    \t, CASE  WHEN b.role = 'property_broker' or  b.id = 60441 THEN 'Brokers'\r\n            \t\t\tWHEN b.role = 'real_estate_developer' then 'New Properties'\r\n           \t\t\t\tWHEN length( b.referral_id) = 5 then 'Partners'\r\n            \t\t\tELSE 'Landlord'\r\n      \t\t\t\t\tEND AS supply_relation\r\n\t\t,a.neighborhood_id\r\n\t\t,lower(a.address) as address\r\n\t\t,lower(a.second_line_address) as second_line_address\r\n\t\t,a.numero_depto\r\n\t\t,a.apartment_floor\r\n\t\t,a.street_number\r\n\t\t,lower(a.comuna) as comuna\r\n\t\t,a.region\r\n\t\t,a.state\r\n\t\t,a.city\r\n\t\t,a.country\r\n\t\t,a.user_id\r\n\t\t,a.type\r\n\t\t,a.stratus\r\n\t\t,a.lessor_id\r\n\t\t,a.uid\r\n\t\t,a.is_deleted\r\n\t\t,a.keys_info\r\n\t\t,a.lost\r\n\t\t,a.lost_reason\r\n\t\t,a.property_relation\r\n\t\t,a.available_from\r\n\t\t,a.pipedrive_owner_id\r\n\t\t,a.antiquity\r\n\t\t,a.year_built\r\n\t\t,a.for_rental\r\n\t\t,a.for_sale\r\n\t\t,a.lessor_brokerage_commission\r\n\t\t,a.vitruvio_suggest\r\n\t\t,a.vitruvio_max\r\n\t\t,a.vitruvio_min\r\nfrom {{ ref('stg_properties') }} a\r\nleft join {{ ref('stg_users') }} b on a.user_id = b.id  \r\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_properties", "model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties"], "unique_id": "model.houm.proc_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties.sql", "original_file_path": "models/processing/supply/proc_properties.sql", "name": "proc_properties", "alias": "proc_properties", "checksum": {"name": "sha256", "checksum": "0ec47428c03be4b41322f3206be1db991ba5bec4811e88d802ff4953ef5dc241"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties"], ["stg_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4633758, "compiled_sql": "\n\nselect a.id\n\t\t,a.created_at\n\t\t,a.updated_at\n\t\t,a.first_publication_date\n\t\t,a.last_publication_date\n        ,CASE   when for_rental = True and  for_sale = True then 'Rental & Sale'\n                        when for_rental = True and for_sale = False then 'Rental'\n                        when for_rental = False and for_sale = True then 'Sale'\n                        end as business_type\n\t\t, CASE  WHEN b.role::text in ('property_broker','real_estate_developer') or  b.id = 60441 THEN 'B2B'\n            \t\t\tELSE 'B2C'\n      \t\t\t\t\tEND AS supply_source \n    \t, CASE  WHEN b.role = 'property_broker' or  b.id = 60441 THEN 'Brokers'\n            \t\t\tWHEN b.role = 'real_estate_developer' then 'New Properties'\n           \t\t\t\tWHEN length( b.referral_id) = 5 then 'Partners'\n            \t\t\tELSE 'Landlord'\n      \t\t\t\t\tEND AS supply_relation\n\t\t,a.neighborhood_id\n\t\t,lower(a.address) as address\n\t\t,lower(a.second_line_address) as second_line_address\n\t\t,a.numero_depto\n\t\t,a.apartment_floor\n\t\t,a.street_number\n\t\t,lower(a.comuna) as comuna\n\t\t,a.region\n\t\t,a.state\n\t\t,a.city\n\t\t,a.country\n\t\t,a.user_id\n\t\t,a.type\n\t\t,a.stratus\n\t\t,a.lessor_id\n\t\t,a.uid\n\t\t,a.is_deleted\n\t\t,a.keys_info\n\t\t,a.lost\n\t\t,a.lost_reason\n\t\t,a.property_relation\n\t\t,a.available_from\n\t\t,a.pipedrive_owner_id\n\t\t,a.antiquity\n\t\t,a.year_built\n\t\t,a.for_rental\n\t\t,a.for_sale\n\t\t,a.lessor_brokerage_commission\n\t\t,a.vitruvio_suggest\n\t\t,a.vitruvio_max\n\t\t,a.vitruvio_min\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" a\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_users\" b on a.user_id = b.id  \norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties\""}, "model.houm.proc_pipedrive_persons_emails": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH emails AS (\nSELECT \n\tDISTINCT deals.person_id.value::INTEGER AS person_id , \n\te_email.value::TEXT AS email , \n\te_email.primary::BOOLEAN AS primary_email \nFROM \n\t{{ref('stg_deals')}} AS deals, \n\tdeals.person_id.email AS e_email \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id , \n\temails.person_id AS person_id , \n\tCASE \n\t\tWHEN LENGTH(emails.email) < 1 THEN NULL \n\t\tELSE emails.email\n\tEND AS email , \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_persons_emails"], "unique_id": "model.houm.proc_pipedrive_persons_emails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_persons_emails.sql", "original_file_path": "models/processing/supply/proc_pipedrive_persons_emails.sql", "name": "proc_pipedrive_persons_emails", "alias": "proc_pipedrive_persons_emails", "checksum": {"name": "sha256", "checksum": "4e39ab4d0b252965ba911d55b68d85bd3d37168336fe414aaa5674b576bf745b"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_persons_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.4646559, "compiled_sql": "\n\nWITH emails AS (\nSELECT \n\tDISTINCT deals.person_id.value::INTEGER AS person_id , \n\te_email.value::TEXT AS email , \n\te_email.primary::BOOLEAN AS primary_email \nFROM \n\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\tdeals.person_id.email AS e_email \nORDER BY 1\n)\n\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id , \n\temails.person_id AS person_id , \n\tCASE \n\t\tWHEN LENGTH(emails.email) < 1 THEN NULL \n\t\tELSE emails.email\n\tEND AS email , \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_persons_emails\""}, "model.houm.proc_pipedrive_deals": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH deals AS (\nSELECT \n    id ,\n    stage_id ,\n    title ,\n    value ,\n    currency ,\n    add_time ,\n    update_time ,\n    active ,\n    deleted ,\n    status ,\n    next_activity_date ,\n    next_activity_time ,\n    next_activity_id ,\n    last_activity_id ,\n    last_activity_date ,\n    lost_reason ,\n    pipeline_id ,\n    won_time ,\n    first_won_time ,\n    lost_time ,\n    email_messages_count ,\n    activities_count ,\n    done_activities_count ,\n    undone_activities_count ,\n    expected_close_date ,\n    label AS label_id , \n    CASE label\n        WHEN 96  THEN 'Lead Sales'\n        WHEN 552 THEN 'Sales'\n        WHEN 419 THEN 'Usados'\n        WHEN 347 THEN 'Campa\u00f1a MB'\n        WHEN 345 THEN 'New Properties'\n        WHEN 319 THEN 'Venta'\n        WHEN 309 THEN 'Autogestionado'\n        WHEN 240 THEN 'Inversionista'\n        WHEN 218 THEN 'Sales Hot Lead'\n        WHEN 206 THEN 'Sales/Rental'\n        WHEN 190 THEN 'GDL'\n        WHEN 189 THEN 'Marketing'\n        WHEN 181 THEN 'Seller'\n        WHEN 180 THEN 'Buyer'\n        WHEN 157 THEN 'Sales/Subsidio'\n        WHEN 156 THEN 'Rental'\n        WHEN 102 THEN 'Rental/Sales B2B'\n        WHEN 101 THEN 'Sales B2B'\n        WHEN 100 THEN 'Rental B2B'\n        WHEN 0 THEN  'Ninguna Etiqueta'\n        ELSE label \n    END AS label ,\n    person_name ,\n    org_name ,\n    owner_name ,\n    user_id.email::VARCHAR                     AS owner_email, \n    user_id.id::INT                            AS owner_id,\n    \"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link ,\n    \"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address ,\n    CASE \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\" \n         WHEN 81 THEN 0\n         WHEN 82 THEN 1\n         WHEN 83 THEN 2\n         WHEN 84 THEN 3\n         WHEN 85 THEN 4\n         WHEN 86 THEN 5\n         WHEN 147 THEN 6 \n         ELSE NULL \n    END AS qualification ,\n    \"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email ,\n    \"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone ,\n    \"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type ,\n    \"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source ,\n    \"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city ,\n    CASE \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n        WHEN 107 THEN 'Rental'\n        WHEN 108 THEN 'Rental'\n        WHEN 109 THEN 'Sales'\n        WHEN 110 THEN 'Sales' \n        ELSE NULL \n    END AS business_deal, \n    \"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id ,\n    \"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep ,  -- Campo nulo \n    \"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country , -- Campo practicamente nulo. Eliminar\n    CASE \"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n        WHEN 114 THEN 'Todo al contado'\n        WHEN 115 THEN 'Cr\u00e9dito aprobado'\n        WHEN 116 THEN 'Cr\u00e9dito pre-aprobado'\n        WHEN 117 THEN 'Sin financiamiento'\n        WHEN 149 THEN 'Fovisste'\n        WHEN 150 THEN 'Infonavit'\n        WHEN 193 THEN 'Subsidio habitacional'\n        WHEN 207 THEN 'No quiere detallar'\n        ELSE NULL \n    END AS profile_financial ,\n    \"69ea781634ab7eb7ee214c0c4a2fe3c38af1f0ec\"  , -- Campo nulo\n    \"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country , -- Campo nulo\n    \"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\" AS qualification_date , -- Fecha, NO tiemstamps\n    CASE \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n        WHEN 119 THEN 'Vivienda'\n        WHEN 118 THEN  'Inversi\u00f3n' \n        WHEN '118,119' THEN 'Vivienda/Inversi\u00f3n'\n        WHEN '119,118' THEN 'Vivienda/Inversi\u00f3n'\n    END AS profile_buying_interest ,\n    \"5f4461694404306c423b907bc1b97fe57a90fc9b\" AS profile_ap_buyers , \n    CASE \"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n        WHEN '121'      THEN 'Entre 1 y 3 meses'\n        WHEN '121,122'  THEN 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '121,216'  THEN 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n        WHEN '122'      THEN 'M\u00e1s de 3 meses'\n        WHEN '122,215'  THEN 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n        WHEN '166'      THEN 'Menos de 1 mes'\n        WHEN '166,121'  THEN 'Menos de 1 mes/Entre 1 y 3 meses'\n        WHEN '166,121,122' THEN 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '166,122' THEN 'Menos de 1 mes/M\u00e1s de 3 meses'\n        WHEN '166,215' THEN 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n        WHEN '166,216' THEN 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n        WHEN '215'     THEN 'Entrega a 1 a\u00f1o'\n        WHEN '215,216' THEN 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n        WHEN '216'     THEN 'Entrega a 2 a\u00f1os'\n        ELSE NULL \n    END AS profile_timing_need, \n    \"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS profile_income , \n    \"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS profile_savings_initial_fee , \n    CASE SUBSTRING(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\", length(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\")-2, 3)\n        WHEN 212 THEN 'Yo solo'\n        WHEN 213 THEN 'En Pareja'\n        WHEN 214 THEN 'En Familia'      \n        ELSE NULL \n    END AS profile_decision_maker , \n    CASE \"678c6b4df5ea23b6181544bb2557b6007f79d64d\"\n        WHEN 194 THEN 'Departamento' \n        WHEN 195 THEN 'Casa' \n        ELSE NULL\n    END AS profile_property_type ,  \n    CASE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" \n        WHEN 198 THEN 'Usada/Nueva'\n        WHEN 196 THEN 'Usada'\n        WHEN 197 THEN 'Nueva'\n        ELSE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\"\n    END AS profile_property_condition ,\n    \"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS profile_geographic_interest ,\n    CASE SUBSTRING(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\", length(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\")-2, 3)\n        WHEN 126 THEN '1'\n        WHEN 127 THEN '2'\n        WHEN 128 THEN '3'\n        WHEN 129 THEN '4'\n        WHEN 130 THEN '+4'\n        ELSE NULL\n    END AS profile_rooms ,\n    CASE SUBSTRING(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\", length(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\")-2, 3)\n        WHEN 131 THEN '1'\n        WHEN 132 THEN '2' \n        WHEN 133 THEN '3'\n        WHEN 134 THEN '4'\n        WHEN 135 THEN '+4'\n        ELSE NULL\n    END AS profile_bathrooms ,\n    CASE SUBSTRING(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\", length(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\")-2, 3)\n       WHEN 136 THEN '0'\n       WHEN 137 THEN '1'\n       WHEN 138 THEN '2' \n       WHEN 139 THEN '3'\n       WHEN 140 THEN '+3'\n       ELSE NULL\n    END AS profile_parkings ,\n    CASE SUBSTRING(\"9007a9793366afdfd11d087c71d5732a41eca3d0\", length(\"9007a9793366afdfd11d087c71d5732a41eca3d0\")-2, 3)\n        WHEN 141 THEN '0'\n        WHEN 142 THEN '1'\n        WHEN 143 THEN '2'\n        WHEN 144 THEN '3'         \n    END AS profile_storage ,    \n    \"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS profile_area ,\n    \"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS profile_budget ,\n    CASE \"73be236be81871bee3d221f721a3b56efa1662cf\" \n        WHEN 342 THEN 'No quiere dar informaci\u00f3n' \n        WHEN 202 THEN 'Fija'\n        WHEN 209 THEN 'Variable'\n        WHEN '202,209' THEN 'Fija/Variable'\n    ELSE NULL     \n    END AS profile_source_of_income ,\n    \"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS profile_debt ,\n    CASE \"5824fac0f9df05b659fd70cc055349394eb678ca\"\n        WHEN 203 THEN 'Dependiente Contrato Fijo'\n        WHEN 204 THEN 'Dependiente Contrato Indefinido'\n        WHEN 205 THEN 'Independiente'\n        WHEN 343 THEN 'No quiere dar informaci\u00f3n'\n        WHEN '203,205' THEN 'Dependiente Contrato Fijo, Independiente'\n        WHEN '203,204' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido'\n        WHEN '204,205' THEN 'Dependiente Contrato Indefinido, Independiente'\n        WHEN '203,204,205' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido, Independiente'\n        WHEN '205,343' THEN 'Independiente,No quiere dar informaci\u00f3n'\n        ELSE NULL\n    END AS profile_income_type ,\n    \"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS profile_profession ,\n    \"07947a7736355ed261aec09b66aaf2b790be5489\" AS profile_income_supplement ,\n    \"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS profile_saving_capacity ,\n    \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" AS buyer_qualification ,\n    \"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" AS scheduler ,\n    \"c00ff6487084ced65ae133b319de9d84dac6b4ba\" AS scheduled_by ,\n    user_id  ,\n    person_id AS person_json ,\n    person_id.value::INTEGER as person_id ,\n    \"957048bc161c4ad91d9da0c07b162bf18bc3acb9\" AS reservation_date ,\n    \"af1c7beca1a4b5538315280d5a25c6ba812c8f02\" AS one_sided_signatures_date ,\n    \"3b3401936f35bceddc0a70fbc8cb23fd52defec6\" AS both_sided_signatures_date ,\n    \"993757a99b12ef09c142c4a6baf40526405fe8ab\" AS new_properties_signatures_date ,\n    \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" AS assigned_executive ,\n    CASE \"4067d32849ff63f793285b7df808200864a27834\" \n        WHEN 241 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 242 THEN 'Valpara\u00edso'\n        WHEN 243 THEN 'Concepci\u00f3n'\n        WHEN 245 THEN 'Ciudad de M\u00e9xico'\n        WHEN 246 THEN 'Guadalajara'\n        WHEN 247 THEN 'Tijuana'\n        WHEN 248 THEN 'Monterrey'\n        WHEN 249 THEN 'Bogot\u00e1'\n        WHEN 250 THEN 'Medell\u00edn'\n        WHEN 262 THEN 'Otro'\n    ELSE NULL \n    END AS negotiation_city , \n    \"51efe5f94222655f4f9b470ecce4850b58c5d15c\" AS marketing_id ,\n    \"240c440cb58bd5f9286912aaeacd37b772747072\" AS marketing_lead_id ,\n    CASE \"21eeff918978b8ce10d73a58f6ce61c8336d1ace\" \n        WHEN 401 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 402 THEN 'Valpara\u00edso'\n        WHEN 403 THEN 'Concepci\u00f3n'\n        WHEN 404 THEN 'Ciudad de M\u00e9xico'\n        WHEN 405 THEN 'Guadalajara'\n        WHEN 406 THEN 'Tijuana'\n        WHEN 407 THEN 'Monterrey'\n        WHEN 408 THEN 'Bogot\u00e1'\n        WHEN 409 THEN 'Medell\u00edn'\n        ELSE NULL\n    END AS source_city ,\n    CASE \"b219dc0405c6158733398c7c6cc4a75b1829298d\" \n        WHEN 399 THEN 'New Properties'\n        WHEN 400 THEN 'Usados'\n    END AS source_buyer_property_condition , \n    \"e12af2d33a53481c56d5edc6380fb4bdae6850b0\" AS buyer_qualification_date \nFROM {{ref('stg_deals')}}\n)\n\nSELECT \n\t*\nFROM deals \nORDER BY update_time DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_deals"], "unique_id": "model.houm.proc_pipedrive_deals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_deals.sql", "original_file_path": "models/processing/supply/proc_pipedrive_deals.sql", "name": "proc_pipedrive_deals", "alias": "proc_pipedrive_deals", "checksum": {"name": "sha256", "checksum": "91c150e2e782155c8d5fb0edffd9b4b297b589f25d7e44043d3c48394bb58975"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.46618, "compiled_sql": "\n\nWITH deals AS (\nSELECT \n    id ,\n    stage_id ,\n    title ,\n    value ,\n    currency ,\n    add_time ,\n    update_time ,\n    active ,\n    deleted ,\n    status ,\n    next_activity_date ,\n    next_activity_time ,\n    next_activity_id ,\n    last_activity_id ,\n    last_activity_date ,\n    lost_reason ,\n    pipeline_id ,\n    won_time ,\n    first_won_time ,\n    lost_time ,\n    email_messages_count ,\n    activities_count ,\n    done_activities_count ,\n    undone_activities_count ,\n    expected_close_date ,\n    label AS label_id , \n    CASE label\n        WHEN 96  THEN 'Lead Sales'\n        WHEN 552 THEN 'Sales'\n        WHEN 419 THEN 'Usados'\n        WHEN 347 THEN 'Campa\u00f1a MB'\n        WHEN 345 THEN 'New Properties'\n        WHEN 319 THEN 'Venta'\n        WHEN 309 THEN 'Autogestionado'\n        WHEN 240 THEN 'Inversionista'\n        WHEN 218 THEN 'Sales Hot Lead'\n        WHEN 206 THEN 'Sales/Rental'\n        WHEN 190 THEN 'GDL'\n        WHEN 189 THEN 'Marketing'\n        WHEN 181 THEN 'Seller'\n        WHEN 180 THEN 'Buyer'\n        WHEN 157 THEN 'Sales/Subsidio'\n        WHEN 156 THEN 'Rental'\n        WHEN 102 THEN 'Rental/Sales B2B'\n        WHEN 101 THEN 'Sales B2B'\n        WHEN 100 THEN 'Rental B2B'\n        WHEN 0 THEN  'Ninguna Etiqueta'\n        ELSE label \n    END AS label ,\n    person_name ,\n    org_name ,\n    owner_name ,\n    user_id.email::VARCHAR                     AS owner_email, \n    user_id.id::INT                            AS owner_id,\n    \"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link ,\n    \"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address ,\n    CASE \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\" \n         WHEN 81 THEN 0\n         WHEN 82 THEN 1\n         WHEN 83 THEN 2\n         WHEN 84 THEN 3\n         WHEN 85 THEN 4\n         WHEN 86 THEN 5\n         WHEN 147 THEN 6 \n         ELSE NULL \n    END AS qualification ,\n    \"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email ,\n    \"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone ,\n    \"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type ,\n    \"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source ,\n    \"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city ,\n    CASE \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n        WHEN 107 THEN 'Rental'\n        WHEN 108 THEN 'Rental'\n        WHEN 109 THEN 'Sales'\n        WHEN 110 THEN 'Sales' \n        ELSE NULL \n    END AS business_deal, \n    \"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id ,\n    \"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep ,  -- Campo nulo \n    \"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country , -- Campo practicamente nulo. Eliminar\n    CASE \"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n        WHEN 114 THEN 'Todo al contado'\n        WHEN 115 THEN 'Cr\u00e9dito aprobado'\n        WHEN 116 THEN 'Cr\u00e9dito pre-aprobado'\n        WHEN 117 THEN 'Sin financiamiento'\n        WHEN 149 THEN 'Fovisste'\n        WHEN 150 THEN 'Infonavit'\n        WHEN 193 THEN 'Subsidio habitacional'\n        WHEN 207 THEN 'No quiere detallar'\n        ELSE NULL \n    END AS profile_financial ,\n    \"69ea781634ab7eb7ee214c0c4a2fe3c38af1f0ec\"  , -- Campo nulo\n    \"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country , -- Campo nulo\n    \"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\" AS qualification_date , -- Fecha, NO tiemstamps\n    CASE \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n        WHEN 119 THEN 'Vivienda'\n        WHEN 118 THEN  'Inversi\u00f3n' \n        WHEN '118,119' THEN 'Vivienda/Inversi\u00f3n'\n        WHEN '119,118' THEN 'Vivienda/Inversi\u00f3n'\n    END AS profile_buying_interest ,\n    \"5f4461694404306c423b907bc1b97fe57a90fc9b\" AS profile_ap_buyers , \n    CASE \"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n        WHEN '121'      THEN 'Entre 1 y 3 meses'\n        WHEN '121,122'  THEN 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '121,216'  THEN 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n        WHEN '122'      THEN 'M\u00e1s de 3 meses'\n        WHEN '122,215'  THEN 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n        WHEN '166'      THEN 'Menos de 1 mes'\n        WHEN '166,121'  THEN 'Menos de 1 mes/Entre 1 y 3 meses'\n        WHEN '166,121,122' THEN 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n        WHEN '166,122' THEN 'Menos de 1 mes/M\u00e1s de 3 meses'\n        WHEN '166,215' THEN 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n        WHEN '166,216' THEN 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n        WHEN '215'     THEN 'Entrega a 1 a\u00f1o'\n        WHEN '215,216' THEN 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n        WHEN '216'     THEN 'Entrega a 2 a\u00f1os'\n        ELSE NULL \n    END AS profile_timing_need, \n    \"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS profile_income , \n    \"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS profile_savings_initial_fee , \n    CASE SUBSTRING(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\", length(\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\")-2, 3)\n        WHEN 212 THEN 'Yo solo'\n        WHEN 213 THEN 'En Pareja'\n        WHEN 214 THEN 'En Familia'      \n        ELSE NULL \n    END AS profile_decision_maker , \n    CASE \"678c6b4df5ea23b6181544bb2557b6007f79d64d\"\n        WHEN 194 THEN 'Departamento' \n        WHEN 195 THEN 'Casa' \n        ELSE NULL\n    END AS profile_property_type ,  \n    CASE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" \n        WHEN 198 THEN 'Usada/Nueva'\n        WHEN 196 THEN 'Usada'\n        WHEN 197 THEN 'Nueva'\n        ELSE \"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\"\n    END AS profile_property_condition ,\n    \"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS profile_geographic_interest ,\n    CASE SUBSTRING(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\", length(\"524aaeae64031ec2214f4b591c5001c0fdd72c65\")-2, 3)\n        WHEN 126 THEN '1'\n        WHEN 127 THEN '2'\n        WHEN 128 THEN '3'\n        WHEN 129 THEN '4'\n        WHEN 130 THEN '+4'\n        ELSE NULL\n    END AS profile_rooms ,\n    CASE SUBSTRING(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\", length(\"1fbab7b446ecd462dd104ad3bc7388981df44b22\")-2, 3)\n        WHEN 131 THEN '1'\n        WHEN 132 THEN '2' \n        WHEN 133 THEN '3'\n        WHEN 134 THEN '4'\n        WHEN 135 THEN '+4'\n        ELSE NULL\n    END AS profile_bathrooms ,\n    CASE SUBSTRING(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\", length(\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\")-2, 3)\n       WHEN 136 THEN '0'\n       WHEN 137 THEN '1'\n       WHEN 138 THEN '2' \n       WHEN 139 THEN '3'\n       WHEN 140 THEN '+3'\n       ELSE NULL\n    END AS profile_parkings ,\n    CASE SUBSTRING(\"9007a9793366afdfd11d087c71d5732a41eca3d0\", length(\"9007a9793366afdfd11d087c71d5732a41eca3d0\")-2, 3)\n        WHEN 141 THEN '0'\n        WHEN 142 THEN '1'\n        WHEN 143 THEN '2'\n        WHEN 144 THEN '3'         \n    END AS profile_storage ,    \n    \"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS profile_area ,\n    \"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS profile_budget ,\n    CASE \"73be236be81871bee3d221f721a3b56efa1662cf\" \n        WHEN 342 THEN 'No quiere dar informaci\u00f3n' \n        WHEN 202 THEN 'Fija'\n        WHEN 209 THEN 'Variable'\n        WHEN '202,209' THEN 'Fija/Variable'\n    ELSE NULL     \n    END AS profile_source_of_income ,\n    \"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS profile_debt ,\n    CASE \"5824fac0f9df05b659fd70cc055349394eb678ca\"\n        WHEN 203 THEN 'Dependiente Contrato Fijo'\n        WHEN 204 THEN 'Dependiente Contrato Indefinido'\n        WHEN 205 THEN 'Independiente'\n        WHEN 343 THEN 'No quiere dar informaci\u00f3n'\n        WHEN '203,205' THEN 'Dependiente Contrato Fijo, Independiente'\n        WHEN '203,204' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido'\n        WHEN '204,205' THEN 'Dependiente Contrato Indefinido, Independiente'\n        WHEN '203,204,205' THEN 'Dependiente Contrato Fijo, Dependiente Contrato Indefinido, Independiente'\n        WHEN '205,343' THEN 'Independiente,No quiere dar informaci\u00f3n'\n        ELSE NULL\n    END AS profile_income_type ,\n    \"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS profile_profession ,\n    \"07947a7736355ed261aec09b66aaf2b790be5489\" AS profile_income_supplement ,\n    \"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS profile_saving_capacity ,\n    \"45f43c7c12a2158a414acc0026ad64d6de9d459a\" AS buyer_qualification ,\n    \"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" AS scheduler ,\n    \"c00ff6487084ced65ae133b319de9d84dac6b4ba\" AS scheduled_by ,\n    user_id  ,\n    person_id AS person_json ,\n    person_id.value::INTEGER as person_id ,\n    \"957048bc161c4ad91d9da0c07b162bf18bc3acb9\" AS reservation_date ,\n    \"af1c7beca1a4b5538315280d5a25c6ba812c8f02\" AS one_sided_signatures_date ,\n    \"3b3401936f35bceddc0a70fbc8cb23fd52defec6\" AS both_sided_signatures_date ,\n    \"993757a99b12ef09c142c4a6baf40526405fe8ab\" AS new_properties_signatures_date ,\n    \"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" AS assigned_executive ,\n    CASE \"4067d32849ff63f793285b7df808200864a27834\" \n        WHEN 241 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 242 THEN 'Valpara\u00edso'\n        WHEN 243 THEN 'Concepci\u00f3n'\n        WHEN 245 THEN 'Ciudad de M\u00e9xico'\n        WHEN 246 THEN 'Guadalajara'\n        WHEN 247 THEN 'Tijuana'\n        WHEN 248 THEN 'Monterrey'\n        WHEN 249 THEN 'Bogot\u00e1'\n        WHEN 250 THEN 'Medell\u00edn'\n        WHEN 262 THEN 'Otro'\n    ELSE NULL \n    END AS negotiation_city , \n    \"51efe5f94222655f4f9b470ecce4850b58c5d15c\" AS marketing_id ,\n    \"240c440cb58bd5f9286912aaeacd37b772747072\" AS marketing_lead_id ,\n    CASE \"21eeff918978b8ce10d73a58f6ce61c8336d1ace\" \n        WHEN 401 THEN 'Regi\u00f3n Metropolitana de Santiago'\n        WHEN 402 THEN 'Valpara\u00edso'\n        WHEN 403 THEN 'Concepci\u00f3n'\n        WHEN 404 THEN 'Ciudad de M\u00e9xico'\n        WHEN 405 THEN 'Guadalajara'\n        WHEN 406 THEN 'Tijuana'\n        WHEN 407 THEN 'Monterrey'\n        WHEN 408 THEN 'Bogot\u00e1'\n        WHEN 409 THEN 'Medell\u00edn'\n        ELSE NULL\n    END AS source_city ,\n    CASE \"b219dc0405c6158733398c7c6cc4a75b1829298d\" \n        WHEN 399 THEN 'New Properties'\n        WHEN 400 THEN 'Usados'\n    END AS source_buyer_property_condition , \n    \"e12af2d33a53481c56d5edc6380fb4bdae6850b0\" AS buyer_qualification_date \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\"\n)\n\nSELECT \n\t*\nFROM deals \nORDER BY update_time DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\""}, "model.houm.proc_supply_marketplace_city": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect *\r\nfrom {{ ref('stg_arriendoasegurado_city') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_arriendoasegurado_city"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_marketplace_city"], "unique_id": "model.houm.proc_supply_marketplace_city", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_marketplace_city.sql", "original_file_path": "models/processing/supply/proc_supply_marketplace_city.sql", "name": "proc_supply_marketplace_city", "alias": "proc_supply_marketplace_city", "checksum": {"name": "sha256", "checksum": "4a6f26b91478ef7b9823ef857713afb4cb084b91f0077f2b35e345c2265b53ca"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_arriendoasegurado_city"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_marketplace_city.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.467592, "compiled_sql": "\n\nselect *\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_city\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_marketplace_city\""}, "model.houm.proc_supply_projects": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_properties AS (\nSELECT\n  properties.id AS property_id ,\n  properties.for_sale ,\n  property_salesdetails.first_publication_date AS date_sales ,\n  properties_mz.geo_id ,\n  properties.is_deleted\nFROM {{ ref('proc_properties') }} AS properties\nLEFT JOIN {{ ref('proc_property_salesdetails') }} AS property_salesdetails\n  ON properties.id = property_salesdetails.property_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n  ON properties_mz.property_id = properties.id\nWHERE TRUE\n  --AND property_salesdetails.first_publication_date IS NOT NULL\n  --AND properties.is_deleted = FALSE\n  AND properties.supply_relation = 'New Properties'\n)\n\n, projects AS (\nSELECT\n  new_properties.property_id ,\n  developments.id AS development_id ,\n  new_properties.geo_id ,\n  new_properties.date_sales ,\n  new_properties.is_deleted\nFROM new_properties\nLEFT JOIN {{ ref('stg_real_estate_developments_developments') }} AS developments\n  ON new_properties.property_id = developments.property_id\nWHERE developments.id IS NOT NULL\n)\n\nSELECT *\nFROM projects", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz", "model.houm.stg_real_estate_developments_developments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_projects"], "unique_id": "model.houm.proc_supply_projects", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_projects.sql", "original_file_path": "models/processing/supply/proc_supply_projects.sql", "name": "proc_supply_projects", "alias": "proc_supply_projects", "checksum": {"name": "sha256", "checksum": "dd1df8097a76dd032051586e3115a2f0267d2f32dd21f57c0ce54fb37723d5ea"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"], ["stg_real_estate_developments_developments"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_projects.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.468972, "compiled_sql": "\n\nWITH new_properties AS (\nSELECT\n  properties.id AS property_id ,\n  properties.for_sale ,\n  property_salesdetails.first_publication_date AS date_sales ,\n  properties_mz.geo_id ,\n  properties.is_deleted\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" AS property_salesdetails\n  ON properties.id = property_salesdetails.property_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n  ON properties_mz.property_id = properties.id\nWHERE TRUE\n  --AND property_salesdetails.first_publication_date IS NOT NULL\n  --AND properties.is_deleted = FALSE\n  AND properties.supply_relation = 'New Properties'\n)\n\n, projects AS (\nSELECT\n  new_properties.property_id ,\n  developments.id AS development_id ,\n  new_properties.geo_id ,\n  new_properties.date_sales ,\n  new_properties.is_deleted\nFROM new_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_real_estate_developments_developments\" AS developments\n  ON new_properties.property_id = developments.property_id\nWHERE developments.id IS NOT NULL\n)\n\nSELECT *\nFROM projects", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_projects\""}, "model.houm.proc_pipedrive_labels": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH labels AS (\nSELECT \n    deals.label_id AS id , \n    deals.label , \n    CASE \n      WHEN deals.label IN ('Buyer','Campa\u00f1a MB' , 'Inversionista', 'Lead Sales', 'New Properties', 'Sale', 'Sales B2B', 'Sales Hot Lead', 'Seller', 'Usados', 'Venta' ) THEN 'Sales'\n      WHEN deals.label IN ('Rental', 'Rental B2B')  THEN 'Rental'\n      ELSE 'Rental/Sales' -- Labels that do not have business: GDL , Marketing, Ninguna Etiqueta, Rental/Sales B2B , 'Autogestionado'\n    END AS business , \n    CASE \n      WHEN deals.label = 'New Properties' THEN 'New Properties' \n      WHEN deals.label = 'Usados' THEN 'Second Hand'\n    END property_condition \nFROM {{ref('proc_pipedrive_deals')}} AS deals\nGROUP BY  1 , 2 \n)\n\nSELECT \n  * \nFROM labels", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_labels"], "unique_id": "model.houm.proc_pipedrive_labels", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_labels.sql", "original_file_path": "models/processing/supply/proc_pipedrive_labels.sql", "name": "proc_pipedrive_labels", "alias": "proc_pipedrive_labels", "checksum": {"name": "sha256", "checksum": "bc00b1d8783bb6dc797c432b18f77c8dd5f3c350bec884826a4edfef08057de9"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_pipedrive_deals"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_labels.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.470397, "compiled_sql": "\n\nWITH labels AS (\nSELECT \n    deals.label_id AS id , \n    deals.label , \n    CASE \n      WHEN deals.label IN ('Buyer','Campa\u00f1a MB' , 'Inversionista', 'Lead Sales', 'New Properties', 'Sale', 'Sales B2B', 'Sales Hot Lead', 'Seller', 'Usados', 'Venta' ) THEN 'Sales'\n      WHEN deals.label IN ('Rental', 'Rental B2B')  THEN 'Rental'\n      ELSE 'Rental/Sales' -- Labels that do not have business: GDL , Marketing, Ninguna Etiqueta, Rental/Sales B2B , 'Autogestionado'\n    END AS business , \n    CASE \n      WHEN deals.label = 'New Properties' THEN 'New Properties' \n      WHEN deals.label = 'Usados' THEN 'Second Hand'\n    END property_condition \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_deals\" AS deals\nGROUP BY  1 , 2 \n)\n\nSELECT \n  * \nFROM labels", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_labels\""}, "model.houm.proc_tmp_supply_properties_macrozone": {"raw_sql": "{{ config(materialized='table') }}\n\nwith macrozone as (\n    select\n        property_id,\n        min(proc_macrozone.geo_id) as geo_id,\n        max(proc_macrozone.timezone) as timezone\n    from\n        {{ref('proc_propertydetails')}}\n    left join\n        {{ref('proc_macrozone')}} on (ST_Contains(proc_macrozone.polygon,ST_SetSRID(ST_Point(proc_propertydetails.longitud, proc_propertydetails.latitud), 4326)) = true)\n    group by 1\n), first_clean as (\nselect \n    proc_properties.id as property_id,\n    proc_properties.created_at,\n    proc_properties.first_publication_date, \n    proc_macrozone.country,\n    proc_macrozone.Region_Houm as region, \n    proc_macrozone.City_Houm,\n    macrozone.timezone,\n    macrozone.geo_id,\n    proc_properties.business_type as business,\n    proc_properties.supply_source,\n    proc_properties.supply_relation\nfrom {{ ref('proc_properties') }}\nleft join macrozone on macrozone.property_id = proc_properties.id\nleft join {{ ref('proc_macrozone') }} on proc_macrozone.geo_id = macrozone.geo_id\norder by proc_properties.created_at desc\n)\nselect *,\n    timezone(first_clean.timezone,first_clean.first_publication_date) as local_first_publication_date\nfrom first_clean", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_propertydetails", "model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_properties_macrozone"], "unique_id": "model.houm.proc_tmp_supply_properties_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_properties_macrozone.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_properties_macrozone.sql", "name": "proc_tmp_supply_properties_macrozone", "alias": "proc_tmp_supply_properties_macrozone", "checksum": {"name": "sha256", "checksum": "dc3d7ba6840989dc038ba948e2e64fc02c5b4b1c705dae10fb9b1147ee86bfe1"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_propertydetails"], ["proc_macrozone"], ["proc_properties"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_properties_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.471637, "compiled_sql": "\n\nwith macrozone as (\n    select\n        property_id,\n        min(proc_macrozone.geo_id) as geo_id,\n        max(proc_macrozone.timezone) as timezone\n    from\n        \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\"\n    left join\n        \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" on (ST_Contains(proc_macrozone.polygon,ST_SetSRID(ST_Point(proc_propertydetails.longitud, proc_propertydetails.latitud), 4326)) = true)\n    group by 1\n), first_clean as (\nselect \n    proc_properties.id as property_id,\n    proc_properties.created_at,\n    proc_properties.first_publication_date, \n    proc_macrozone.country,\n    proc_macrozone.Region_Houm as region, \n    proc_macrozone.City_Houm,\n    macrozone.timezone,\n    macrozone.geo_id,\n    proc_properties.business_type as business,\n    proc_properties.supply_source,\n    proc_properties.supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nleft join macrozone on macrozone.property_id = proc_properties.id\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" on proc_macrozone.geo_id = macrozone.geo_id\norder by proc_properties.created_at desc\n)\nselect *,\n    timezone(first_clean.timezone,first_clean.first_publication_date) as local_first_publication_date\nfrom first_clean", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\""}, "model.houm.proc_external_portal_historical_publications": {"raw_sql": "{{ config(materialized='table') }}                                          \n\nWITH estados_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                        AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                           AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                  AS publication_business_type,\n           external_portal_integrations_portalplan.vigency          AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name        AS portal_name,\n           external_portal_integrations_externalportals.short_name  AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name           AS country_name,\n           external_portal_integrations_country.iso_name            AS country_iso_name,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name             AS load_status,\n           CASE\n               WHEN load_status IN\n            ('published', 'pending_update', 'integration_file_sent') THEN TRUE\n               ELSE FALSE END                                       AS is_published,\n           CASE\n               WHEN is_published IS TRUE THEN 'True'\n               ELSE 'False' END                                     AS is_published_aux,\n           external_portal_integrations_loadstatus.uses_slot,\n\n           CONCAT(is_published_aux,external_portal_integrations_publicationtype.publication_pretty_name) AS concat,\n           LAG(is_published_aux)\n                OVER (PARTITION BY publication_id ORDER BY audit_start_dt)              AS previous_status,\n           LAG(external_portal_integrations_publicationtype.publication_pretty_name)\n                OVER (PARTITION BY publication_id ORDER BY audit_start_dt)              AS previous_pub_type,\n           CONCAT(previous_status::text, previous_pub_type)                             AS previous_concat,\n           CASE\n               WHEN (previous_concat != concat OR previous_status IS NULL) THEN 1\n               ELSE 0 END                                                               AS publication_change_aux,\n\n            CASE\n               WHEN (previous_pub_type != publication_pretty_name OR previous_pub_type IS NULL) THEN 1\n               ELSE 0 END                                                               AS publication_type_change_aux\n\n    FROM {{ ref('stg_external_portal_integrations_publication_scd') }} AS pub\n\n             LEFT JOIN {{ ref('stg_external_portal_integrations_loadstatus') }} AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }} AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }} AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }} AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_country') }} AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n                  AND audit_action != 'D'\n                  AND uses_slot IS TRUE\n)\n\n   , periodos_status_aux AS (\n    SELECT estados_historicos_publicaciones.publication_id,\n           estados_historicos_publicaciones.country_name,\n           estados_historicos_publicaciones.portal_name,\n           estados_historicos_publicaciones.portal_plan_id,\n           estados_historicos_publicaciones.publication_business_type,\n           estados_historicos_publicaciones.property_id                                                                     AS property_id_publication,\n           estados_historicos_publicaciones.audit_start_dt,\n           estados_historicos_publicaciones.audit_end_dt_aux,\n           estados_historicos_publicaciones.publication_pretty_name                                                         AS publication_type,\n           estados_historicos_publicaciones.is_published,\n           estados_historicos_publicaciones.uses_slot,\n           SUM(publication_change_aux)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_change_logs,\n            SUM(publication_type_change_aux)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_type_change_logs\n\n    FROM estados_historicos_publicaciones\n)\n\n   , periodos_status AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           portal_plan_id,\n           publication_business_type,\n           property_id_publication,\n           publication_change_logs,\n           publication_type_change_logs,\n           publication_type,\n           is_published,\n           uses_slot,\n           MIN(audit_start_dt) AS valid_from_aux,\n           MAX(audit_end_dt_aux) AS valid_to_aux,\n           (valid_to_aux - valid_from_aux) AS time_diff\n\n    FROM periodos_status_aux\n    WHERE  TRUE\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n)\n\nSELECT publication_id,\n       country_name,\n       portal_name,\n       portal_plan_id,\n       publication_business_type,\n       property_id_publication,\n       publication_type,\n       publication_type_change_logs,\n       MIN(valid_from_aux) AS valid_from,\n       MAX(valid_to_aux) AS valid_to,\n       EXTRACT(EPOCH FROM SUM(time_diff))/3600 AS total_time,\n       MIN(CASE WHEN is_published IS TRUE THEN valid_from_aux END) AS published_from,\n       MAX(CASE WHEN is_published IS TRUE THEN valid_to_aux END) AS published_to,\n       EXTRACT(EPOCH FROM SUM(CASE WHEN is_published IS TRUE THEN time_diff END))/3600 AS total_published_time,\n       total_published_time::double precision / total_time::double precision AS Perc_of_time_published\n\nFROM periodos_status\nWHERE TRUE\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8\norder by publication_id,publication_type_change_logs asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_external_portal_historical_publications"], "unique_id": "model.houm.proc_external_portal_historical_publications", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_external_portal_historical_publications.sql", "original_file_path": "models/processing/supply/proc_external_portal_historical_publications.sql", "name": "proc_external_portal_historical_publications", "alias": "proc_external_portal_historical_publications", "checksum": {"name": "sha256", "checksum": "2206f7301bf7852f2ab10114680cef2d54a39075294321ca162b685585976139"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_external_portal_integrations_publication_scd"], ["stg_external_portal_integrations_loadstatus"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_country"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_external_portal_historical_publications.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.473821, "compiled_sql": "                                          \n\nWITH estados_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                        AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                           AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                  AS publication_business_type,\n           external_portal_integrations_portalplan.vigency          AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name        AS portal_name,\n           external_portal_integrations_externalportals.short_name  AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name           AS country_name,\n           external_portal_integrations_country.iso_name            AS country_iso_name,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name             AS load_status,\n           CASE\n               WHEN load_status IN\n            ('published', 'pending_update', 'integration_file_sent') THEN TRUE\n               ELSE FALSE END                                       AS is_published,\n           CASE\n               WHEN is_published IS TRUE THEN 'True'\n               ELSE 'False' END                                     AS is_published_aux,\n           external_portal_integrations_loadstatus.uses_slot,\n\n           CONCAT(is_published_aux,external_portal_integrations_publicationtype.publication_pretty_name) AS concat,\n           LAG(is_published_aux)\n                OVER (PARTITION BY publication_id ORDER BY audit_start_dt)              AS previous_status,\n           LAG(external_portal_integrations_publicationtype.publication_pretty_name)\n                OVER (PARTITION BY publication_id ORDER BY audit_start_dt)              AS previous_pub_type,\n           CONCAT(previous_status::text, previous_pub_type)                             AS previous_concat,\n           CASE\n               WHEN (previous_concat != concat OR previous_status IS NULL) THEN 1\n               ELSE 0 END                                                               AS publication_change_aux,\n\n            CASE\n               WHEN (previous_pub_type != publication_pretty_name OR previous_pub_type IS NULL) THEN 1\n               ELSE 0 END                                                               AS publication_type_change_aux\n\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\" AS pub\n\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\" AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\" AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\" AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\" AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\" AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n                  AND audit_action != 'D'\n                  AND uses_slot IS TRUE\n)\n\n   , periodos_status_aux AS (\n    SELECT estados_historicos_publicaciones.publication_id,\n           estados_historicos_publicaciones.country_name,\n           estados_historicos_publicaciones.portal_name,\n           estados_historicos_publicaciones.portal_plan_id,\n           estados_historicos_publicaciones.publication_business_type,\n           estados_historicos_publicaciones.property_id                                                                     AS property_id_publication,\n           estados_historicos_publicaciones.audit_start_dt,\n           estados_historicos_publicaciones.audit_end_dt_aux,\n           estados_historicos_publicaciones.publication_pretty_name                                                         AS publication_type,\n           estados_historicos_publicaciones.is_published,\n           estados_historicos_publicaciones.uses_slot,\n           SUM(publication_change_aux)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_change_logs,\n            SUM(publication_type_change_aux)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS publication_type_change_logs\n\n    FROM estados_historicos_publicaciones\n)\n\n   , periodos_status AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           portal_plan_id,\n           publication_business_type,\n           property_id_publication,\n           publication_change_logs,\n           publication_type_change_logs,\n           publication_type,\n           is_published,\n           uses_slot,\n           MIN(audit_start_dt) AS valid_from_aux,\n           MAX(audit_end_dt_aux) AS valid_to_aux,\n           (valid_to_aux - valid_from_aux) AS time_diff\n\n    FROM periodos_status_aux\n    WHERE  TRUE\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n)\n\nSELECT publication_id,\n       country_name,\n       portal_name,\n       portal_plan_id,\n       publication_business_type,\n       property_id_publication,\n       publication_type,\n       publication_type_change_logs,\n       MIN(valid_from_aux) AS valid_from,\n       MAX(valid_to_aux) AS valid_to,\n       EXTRACT(EPOCH FROM SUM(time_diff))/3600 AS total_time,\n       MIN(CASE WHEN is_published IS TRUE THEN valid_from_aux END) AS published_from,\n       MAX(CASE WHEN is_published IS TRUE THEN valid_to_aux END) AS published_to,\n       EXTRACT(EPOCH FROM SUM(CASE WHEN is_published IS TRUE THEN time_diff END))/3600 AS total_published_time,\n       total_published_time::double precision / total_time::double precision AS Perc_of_time_published\n\nFROM periodos_status\nWHERE TRUE\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8\norder by publication_id,publication_type_change_logs asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_portal_historical_publications\""}, "model.houm.proc_pipedrive_stages": {"raw_sql": "SELECT \n    id , \n    add_time ,\n    update_time , \n    name ,\n    pipeline_id  \nFROM {{ref('stg_stages')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_pipedrive_stages"], "unique_id": "model.houm.proc_pipedrive_stages", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_pipedrive_stages.sql", "original_file_path": "models/processing/supply/proc_pipedrive_stages.sql", "name": "proc_pipedrive_stages", "alias": "proc_pipedrive_stages", "checksum": {"name": "sha256", "checksum": "f22490aff63749d11bf80d9686731b23b98c59a0969752c665df3facc99f76d5"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_stages"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_pipedrive_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.476128, "compiled_sql": "SELECT \n    id , \n    add_time ,\n    update_time , \n    name ,\n    pipeline_id  \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_stages\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_stages\""}, "model.houm.proc_properties_location": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect id\r\n\t\t,code\r\n\t\t,neighborhood\r\n\t\t,commune\r\n\t\t,region\r\n\t\t,longitude\r\n\t\t,latitude\r\n\t\t,coordinates\r\n\t\t,operative\r\n\t\t,country\r\n\t\t,country_code\r\nfrom {{ ref('stg_properties_location') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_properties_location"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_location"], "unique_id": "model.houm.proc_properties_location", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_location.sql", "original_file_path": "models/processing/supply/proc_properties_location.sql", "name": "proc_properties_location", "alias": "proc_properties_location", "checksum": {"name": "sha256", "checksum": "5de0bb053443e25ded23836ec080c9af7f7a07a958b43c9db72d7d1a1039ad3f"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties_location"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1664825037.477299, "compiled_sql": "\n\nselect id\n\t\t,code\n\t\t,neighborhood\n\t\t,commune\n\t\t,region\n\t\t,longitude\n\t\t,latitude\n\t\t,coordinates\n\t\t,operative\n\t\t,country\n\t\t,country_code\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\""}, "model.houm.proc_rev_properties": {"raw_sql": "SELECT\n        properties.id,\n        properties.for_rental,\n        properties.for_sale,\n        properties.vitruvio_suggest AS rental_recommended_price,\n        properties.vitruvio_min AS rental_min_recommended_price,\n        properties.vitruvio_max AS rental_max_recommended_price,\n        properties.first_publication_date AS rental_first_publication_date,\n        properties.last_publication_date AS rental_last_publication_date,\n        details.status AS rental_status,\n        details.valor AS rental_price,\n        details.currency_code AS rental_currency_code,\n        sales_details.status AS sale_status,\n        sales_details.price AS sale_price,\n        sales_details.recommended_price AS sale_recommended_price,\n        sales_details.recommended_price_min AS sale_min_recommended_price,\n        sales_details.recommended_price_max AS sale_max_recommended_price,\n        sales_details.currency_code AS sale_currency_code,\n        sales_details.first_publication_date AS sale_first_publication_date,\n        sales_details.last_publication_date AS sale_last_publication_date,\n        macrozone_dim.country,\n        macrozone_dim.city,\n        macrozone_dim.city_marketplace \n    FROM\n        {{ ref('proc_properties') }} properties \n    LEFT JOIN\n        {{ ref('proc_propertydetails') }} details \n            on properties.id = details.property_id  \n    LEFT JOIN\n        {{ ref('proc_property_salesdetails') }} sales_details \n            on properties.id = sales_details.property_id \n    LEFT JOIN\n        {{ ref('proc_properties_location') }}  location \n            on properties.neighborhood_id  = location.id  \n    LEFT JOIN\n        {{ ref('proc_properties_mz') }}  macrozone \n            on macrozone.property_id  = properties.id  \n    LEFT JOIN\n        {{ ref('proc_macrozone') }} macrozone_dim \n            on macrozone.geo_id = macrozone_dim.geo_id \n    WHERE properties.is_deleted = False", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "proc_rev_properties"], "unique_id": "model.houm.proc_rev_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/proc_rev_properties.sql", "original_file_path": "models/processing/rev/proc_rev_properties.sql", "name": "proc_rev_properties", "alias": "proc_rev_properties", "checksum": {"name": "sha256", "checksum": "55586c112765884a49f2d9b7224a5281eee600c0050cc8a0a31fd647a72655e3"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"], ["proc_properties_location"], ["proc_properties_mz"], ["proc_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/proc_rev_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.479021, "compiled_sql": "SELECT\n        properties.id,\n        properties.for_rental,\n        properties.for_sale,\n        properties.vitruvio_suggest AS rental_recommended_price,\n        properties.vitruvio_min AS rental_min_recommended_price,\n        properties.vitruvio_max AS rental_max_recommended_price,\n        properties.first_publication_date AS rental_first_publication_date,\n        properties.last_publication_date AS rental_last_publication_date,\n        details.status AS rental_status,\n        details.valor AS rental_price,\n        details.currency_code AS rental_currency_code,\n        sales_details.status AS sale_status,\n        sales_details.price AS sale_price,\n        sales_details.recommended_price AS sale_recommended_price,\n        sales_details.recommended_price_min AS sale_min_recommended_price,\n        sales_details.recommended_price_max AS sale_max_recommended_price,\n        sales_details.currency_code AS sale_currency_code,\n        sales_details.first_publication_date AS sale_first_publication_date,\n        sales_details.last_publication_date AS sale_last_publication_date,\n        macrozone_dim.country,\n        macrozone_dim.city,\n        macrozone_dim.city_marketplace \n    FROM\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" properties \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" details \n            on properties.id = details.property_id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" sales_details \n            on properties.id = sales_details.property_id \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties_location\"  location \n            on properties.neighborhood_id  = location.id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\"  macrozone \n            on macrozone.property_id  = properties.id  \n    LEFT JOIN\n        \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" macrozone_dim \n            on macrozone.geo_id = macrozone_dim.geo_id \n    WHERE properties.is_deleted = False", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\""}, "model.houm.proc_properties_rev_suggested_prices": {"raw_sql": "with last_prediction_rev_houm_properties as (\nSELECT a.*\nFROM {{ ref('stg_rev_houm_properties') }} a\nINNER JOIN (\n    SELECT\n        property_id ,  max(prediction_timestamp) prediction_timestamp\n    FROM {{ ref('stg_rev_houm_properties') }} b  group by 1\n) c ON a.property_id = c.property_id and a.prediction_timestamp = c.prediction_timestamp\n)\n\nSELECT property_id\n        ,prediction_timestamp\n        ,country\n        ,sale_original_currency\n        ,sale_original_price\n        ,sale_min_price\n        ,sale_max_price\n        ,sale_suggested_currency\n        ,sale_suggested_price\n        ,rental_original_price\n        ,rental_original_currency\n        ,rental_min_price\n        ,rental_max_price\n        ,rental_suggested_currency\n        ,rental_suggested_price\nFROM last_prediction_rev_houm_properties", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_rev_houm_properties", "model.houm.stg_rev_houm_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "proc_properties_rev_suggested_prices"], "unique_id": "model.houm.proc_properties_rev_suggested_prices", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/proc_properties_rev_suggested_prices.sql", "original_file_path": "models/processing/rev/proc_properties_rev_suggested_prices.sql", "name": "proc_properties_rev_suggested_prices", "alias": "proc_properties_rev_suggested_prices", "checksum": {"name": "sha256", "checksum": "155b022b1ac8ded09acc06cb0d303376ed1b25c44d938a84297dbb1b37cc6149"}, "tags": ["dw", "processing", "rev"], "refs": [["stg_rev_houm_properties"], ["stg_rev_houm_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/proc_properties_rev_suggested_prices.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.48091, "compiled_sql": "with last_prediction_rev_houm_properties as (\nSELECT a.*\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\" a\nINNER JOIN (\n    SELECT\n        property_id ,  max(prediction_timestamp) prediction_timestamp\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_rev_houm_properties\" b  group by 1\n) c ON a.property_id = c.property_id and a.prediction_timestamp = c.prediction_timestamp\n)\n\nSELECT property_id\n        ,prediction_timestamp\n        ,country\n        ,sale_original_currency\n        ,sale_original_price\n        ,sale_min_price\n        ,sale_max_price\n        ,sale_suggested_currency\n        ,sale_suggested_price\n        ,rental_original_price\n        ,rental_original_currency\n        ,rental_min_price\n        ,rental_max_price\n        ,rental_suggested_currency\n        ,rental_suggested_price\nFROM last_prediction_rev_houm_properties", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_rev_suggested_prices\""}, "model.houm.proc_rev_rental_last_months_properties": {"raw_sql": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_rental_properties') }}\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_last_months_properties"], "unique_id": "model.houm.proc_rev_rental_last_months_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_last_months_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_last_months_properties.sql", "name": "proc_rev_rental_last_months_properties", "alias": "proc_rev_rental_last_months_properties", "checksum": {"name": "sha256", "checksum": "b4abeff5d72655ada5d7a8ad14eac93fa7fb4e82c4acb830a0dd58346c391718"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_last_months_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.482273, "compiled_sql": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_properties\"\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\""}, "model.houm.proc_rev_rental_published_properties": {"raw_sql": "SELECT *\nFROM {{ ref('proc_rev_rental_last_months_properties') }}\nWHERE status = 'published'\nOR status = 'republished'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_published_properties"], "unique_id": "model.houm.proc_rev_rental_published_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_published_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_published_properties.sql", "name": "proc_rev_rental_published_properties", "alias": "proc_rev_rental_published_properties", "checksum": {"name": "sha256", "checksum": "ee9ede781506ed56635a644767a2ffc26df81092c520e5f09fdf9b72544c7387"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.483448, "compiled_sql": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\"\nWHERE status = 'published'\nOR status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_published_properties\""}, "model.houm.proc_rev_rental_rented_properties": {"raw_sql": "SELECT *\nFROM {{ ref('proc_rev_rental_last_months_properties') }}\nWHERE status = 'rented'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_rental_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_rented_properties"], "unique_id": "model.houm.proc_rev_rental_rented_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_rented_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_rented_properties.sql", "name": "proc_rev_rental_rented_properties", "alias": "proc_rev_rental_rented_properties", "checksum": {"name": "sha256", "checksum": "54e5bba8762501d2aebcf62aa7fa5ef4863d55afacdb454afde9ab59809fbe52"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_rental_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_rented_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.484608, "compiled_sql": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_last_months_properties\"\nWHERE status = 'rented'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_rented_properties\""}, "model.houm.proc_rev_rental_properties": {"raw_sql": "SELECT  id,\n        rental_price AS price,\n        rental_recommended_price AS recommended_price,\n        rental_min_recommended_price AS min_recommended_price,\n        rental_max_recommended_price AS max_recommended_price,\n        rental_status AS status,\n        rental_currency_code AS currency_code,\n        rental_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_properties') }}\nWHERE for_rental = True", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "rental", "proc_rev_rental_properties"], "unique_id": "model.houm.proc_rev_rental_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/rental/proc_rev_rental_properties.sql", "original_file_path": "models/processing/rev/rental/proc_rev_rental_properties.sql", "name": "proc_rev_rental_properties", "alias": "proc_rev_rental_properties", "checksum": {"name": "sha256", "checksum": "20e58d79aa74dbf2e1171de89a5db08fc02313db6a2a57388acabd5f24f843e4"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/rental/proc_rev_rental_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.486014, "compiled_sql": "SELECT  id,\n        rental_price AS price,\n        rental_recommended_price AS recommended_price,\n        rental_min_recommended_price AS min_recommended_price,\n        rental_max_recommended_price AS max_recommended_price,\n        rental_status AS status,\n        rental_currency_code AS currency_code,\n        rental_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\"\nWHERE for_rental = True", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_rental_properties\""}, "model.houm.proc_rev_sales_properties": {"raw_sql": "SELECT  id,\n        sale_price AS price,\n        sale_recommended_price AS recommended_price,\n        sale_min_recommended_price AS min_recommended_price,\n        sale_max_recommended_price AS max_recommended_price,\n        sale_status AS status,\n        sale_currency_code AS currency_code,\n        sale_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_properties') }}\nWHERE for_sale = True", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_properties"], "unique_id": "model.houm.proc_rev_sales_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_properties.sql", "name": "proc_rev_sales_properties", "alias": "proc_rev_sales_properties", "checksum": {"name": "sha256", "checksum": "4b2d312a0866ff936c89710822117f3588229a4423f5ae0be6e20005d04cbcd0"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.487187, "compiled_sql": "SELECT  id,\n        sale_price AS price,\n        sale_recommended_price AS recommended_price,\n        sale_min_recommended_price AS min_recommended_price,\n        sale_max_recommended_price AS max_recommended_price,\n        sale_status AS status,\n        sale_currency_code AS currency_code,\n        sale_last_publication_date AS last_publication_date,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_properties\"\nWHERE for_sale = True", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_properties\""}, "model.houm.proc_rev_sales_sold_properties": {"raw_sql": "SELECT *\nFROM {{ ref('proc_rev_sales_last_months_properties') }}\nWHERE status = 'sold'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_sold_properties"], "unique_id": "model.houm.proc_rev_sales_sold_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_sold_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_sold_properties.sql", "name": "proc_rev_sales_sold_properties", "alias": "proc_rev_sales_sold_properties", "checksum": {"name": "sha256", "checksum": "cdf44705856b7b164e6e2b2aa3383869f695fb94667f90026c86a1a9e6ff7f71"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_sold_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.4883342, "compiled_sql": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\"\nWHERE status = 'sold'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_sold_properties\""}, "model.houm.proc_rev_sales_last_months_properties": {"raw_sql": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM {{ ref('proc_rev_sales_properties') }}\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_last_months_properties"], "unique_id": "model.houm.proc_rev_sales_last_months_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_last_months_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_last_months_properties.sql", "name": "proc_rev_sales_last_months_properties", "alias": "proc_rev_sales_last_months_properties", "checksum": {"name": "sha256", "checksum": "f06618ec6b26f13d0a62f3ebabdbcd4aea36f718fc9f3eaf0f81a03bfa0047c5"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_last_months_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.489502, "compiled_sql": "SELECT id,\n        price,\n        recommended_price,\n        min_recommended_price,\n        max_recommended_price,\n        status,\n        currency_code,\n        country,\n        city_marketplace\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_properties\"\nWHERE last_publication_date > DATEADD(MONTH, -3, GETDATE())", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\""}, "model.houm.proc_rev_sales_published_properties": {"raw_sql": "SELECT *\nFROM {{ ref('proc_rev_sales_last_months_properties') }}\nWHERE status = 'published'\nOR status = 'republished'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_rev_sales_last_months_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "rev"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "rev", "sales", "proc_rev_sales_published_properties"], "unique_id": "model.houm.proc_rev_sales_published_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/rev/sales/proc_rev_sales_published_properties.sql", "original_file_path": "models/processing/rev/sales/proc_rev_sales_published_properties.sql", "name": "proc_rev_sales_published_properties", "alias": "proc_rev_sales_published_properties", "checksum": {"name": "sha256", "checksum": "aed4390fd004d8d39565cba31cabdb437b56ece6ac90ec45c0aed5d44addb585"}, "tags": ["dw", "processing", "rev"], "refs": [["proc_rev_sales_last_months_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/rev/sales/proc_rev_sales_published_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "rev"]}, "created_at": 1664825037.4910872, "compiled_sql": "SELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_last_months_properties\"\nWHERE status = 'published'\nOR status = 'republished'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_rev_sales_published_properties\""}, "model.houm.proc_marketing_paid_media": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_executions as (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media_executions') }} \n)\n\n, paid_media_campaign as (\nSELECT *\nFROM {{ ref('proc_marketing_paid_media_campaign') }} \n)\n\nSELECT \n\n    paid_media_executions.platform ,\n    paid_media_executions.account_id ,\n    paid_media_executions.account_name ,\n    paid_media_executions.campaign_id ,\n    paid_media_executions.campaign_name ,\n    paid_media_campaign.campaign_name AS campaign_current_name,\n    paid_media_campaign.country , \n    paid_media_campaign.Region_Houm ,\n    paid_media_campaign.City_Houm ,\n    paid_media_campaign.geo_id , \n    paid_media_campaign.business_marketing ,\n    paid_media_campaign.funnel_marketing ,\n    paid_media_executions.ad_group_id ,\n    paid_media_executions.ad_group_name ,\n    paid_media_executions.ad_id ,\n    paid_media_executions.ad_name ,\n    paid_media_executions.executed_at ,\n    paid_media_executions.campaign_status ,\n    paid_media_campaign.campaign_current_status ,\n    paid_media_executions.ad_group_status ,\n    paid_media_executions.currency ,\n    paid_media_executions.day_cost ,\n    paid_media_executions.day_cost_usd ,            \n    paid_media_executions.day_clicks ,\n    paid_media_executions.day_impressions ,\n    paid_media_campaign.platform_last_updated_at ,\n    paid_media_campaign.campaign_last_active_day\n\n \nFROM paid_media_executions\nLEFT JOIN paid_media_campaign\n    ON paid_media_executions.campaign_id = paid_media_campaign.campaign_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media_executions", "model.houm.proc_marketing_paid_media_campaign"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media"], "unique_id": "model.houm.proc_marketing_paid_media", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media.sql", "name": "proc_marketing_paid_media", "alias": "proc_marketing_paid_media", "checksum": {"name": "sha256", "checksum": "e8eb9c2c4d496604151876ef027f331ccf3de8e9b05f2b2dc3e3b337f168e2f9"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_marketing_paid_media_executions"], ["proc_marketing_paid_media_campaign"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1664825037.4922838, "compiled_sql": "\n\nWITH paid_media_executions as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\" \n)\n\n, paid_media_campaign as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" \n)\n\nSELECT \n\n    paid_media_executions.platform ,\n    paid_media_executions.account_id ,\n    paid_media_executions.account_name ,\n    paid_media_executions.campaign_id ,\n    paid_media_executions.campaign_name ,\n    paid_media_campaign.campaign_name AS campaign_current_name,\n    paid_media_campaign.country , \n    paid_media_campaign.Region_Houm ,\n    paid_media_campaign.City_Houm ,\n    paid_media_campaign.geo_id , \n    paid_media_campaign.business_marketing ,\n    paid_media_campaign.funnel_marketing ,\n    paid_media_executions.ad_group_id ,\n    paid_media_executions.ad_group_name ,\n    paid_media_executions.ad_id ,\n    paid_media_executions.ad_name ,\n    paid_media_executions.executed_at ,\n    paid_media_executions.campaign_status ,\n    paid_media_campaign.campaign_current_status ,\n    paid_media_executions.ad_group_status ,\n    paid_media_executions.currency ,\n    paid_media_executions.day_cost ,\n    paid_media_executions.day_cost_usd ,            \n    paid_media_executions.day_clicks ,\n    paid_media_executions.day_impressions ,\n    paid_media_campaign.platform_last_updated_at ,\n    paid_media_campaign.campaign_last_active_day\n\n \nFROM paid_media_executions\nLEFT JOIN paid_media_campaign\n    ON paid_media_executions.campaign_id = paid_media_campaign.campaign_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\""}, "model.houm.proc_marketing_paid_media_campaign": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH proc_marketing_paid_media_executions as (\nSELECT \n*,\nLAST_VALUE(campaign_name) \n                OVER (PARTITION BY campaign_id ORDER BY executed_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)              AS campaign_current_name\nFROM {{ ref('proc_marketing_paid_media_executions') }} \n)\n\n\n, last_platform_update AS (\n    SELECT PLATFORM, MAX(executed_at) AS platform_last_updated_at\n    FROM proc_marketing_paid_media_executions\n    GROUP BY 1\n)\n   , paid_media_campaigns AS (\n    SELECT proc_marketing_paid_media_executions.platform,\n           proc_marketing_paid_media_executions.account_id,\n           proc_marketing_paid_media_executions.account_name,\n           proc_marketing_paid_media_executions.campaign_id,\n           proc_marketing_paid_media_executions.campaign_current_name AS campaign_name,\n           proc_marketing_paid_media_executions.currency,\n           CASE\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Sales%' THEN 'Seller'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Rentals%' THEN 'Landlord'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%New Properties%'\n                   THEN 'Buyer New Properties'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Tenants%' THEN 'Tenant'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Branding%' THEN 'Branding'\n               ELSE 'Branding' END                                        AS business_marketing,\n           CASE\n               WHEN (proc_marketing_paid_media_executions.campaign_name LIKE '%Sales%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%Rentals%')\n                   THEN 'Supply'\n               WHEN (proc_marketing_paid_media_executions.campaign_name LIKE '%Buyers%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%Tenants%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%New Properties%') THEN 'Demand'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Branding%' THEN 'Branding'\n               ELSE 'Branding' END                                        AS funnel_marketing,\n           CASE\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Medell_n%' THEN 31::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Bogot_%' THEN 14::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Regi_n Metropolitana%' THEN 79::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Valpara_so%' THEN 11::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Concepci_n%' THEN 8::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Ciudad de M_xico%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Monterrey%' THEN 54::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Tijuana%' THEN 67::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Guadalajara%' THEN 30::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Puebla%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Quer_taro%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%GDL%' THEN 30::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%CDMX%' THEN 104::INT\n               ELSE NULL END                                              AS geo_id,\n           last_platform_update.platform_last_updated_at,\n           SUM(proc_marketing_paid_media_executions.day_cost)::FLOAT      AS total_cost,\n           SUM(proc_marketing_paid_media_executions.day_cost_usd)::FLOAT  AS total_cost_usd,\n           SUM(proc_marketing_paid_media_executions.day_clicks)           AS total_clicks,\n           SUM(proc_marketing_paid_media_executions.day_impressions)      AS total_impressions,\n           MIN(proc_marketing_paid_media_executions.executed_at)          AS campaing_start,\n           MAX(proc_marketing_paid_media_executions.executed_at)          AS campaing_last_day,\n           MAX(CASE WHEN campaign_status = 'ACTIVE' THEN executed_at END) AS campaign_last_active_day,\n           CASE\n               WHEN campaign_last_active_day = last_platform_update.platform_last_updated_at THEN 'ACTIVE'\n               ELSE 'PAUSED' END::VARCHAR(10000)                          AS campaign_current_status,\n           COUNT(DISTINCT ad_group_id)                                    AS ad_groups_in_campaing,\n           COUNT(DISTINCT ad_id)                                          AS ads_in_campaing\n\n    FROM  proc_marketing_paid_media_executions\n             LEFT JOIN last_platform_update\n                       ON proc_marketing_paid_media_executions.platform = last_platform_update.platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n)\n\nSELECT paid_media_campaigns.platform,\n       paid_media_campaigns.account_id,\n       paid_media_campaigns.account_name,\n       paid_media_campaigns.campaign_id,\n       paid_media_campaigns.campaign_name,\n       paid_media_campaigns.business_marketing,\n       paid_media_campaigns.funnel_marketing,\n       paid_media_campaigns.geo_id,\n       dim_geo.country,\n       dim_geo.Region_Houm,\n       dim_geo.City_Houm,\n       paid_media_campaigns.platform_last_updated_at::date,\n       paid_media_campaigns.total_cost,\n       paid_media_campaigns.total_cost_usd,\n       paid_media_campaigns.total_clicks,\n       paid_media_campaigns.total_impressions,\n       paid_media_campaigns.campaing_start::date,\n       paid_media_campaigns.campaing_last_day::date,\n       paid_media_campaigns.campaign_last_active_day::date,\n       paid_media_campaigns.campaign_current_status,\n       paid_media_campaigns.ad_groups_in_campaing,\n       paid_media_campaigns.ads_in_campaing\n\nFROM paid_media_campaigns\n         LEFT JOIN  {{ ref('dim_macrozones') }} AS dim_geo\n                   ON dim_geo.geo_id = paid_media_campaigns.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media_executions", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media_campaign"], "unique_id": "model.houm.proc_marketing_paid_media_campaign", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media_campaign.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media_campaign.sql", "name": "proc_marketing_paid_media_campaign", "alias": "proc_marketing_paid_media_campaign", "checksum": {"name": "sha256", "checksum": "f961e925e03d60d02304cbb9bd033462e474b50fb5084d7ac6269eca60f6f6f5"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_marketing_paid_media_executions"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1664825037.4937038, "compiled_sql": "\n\nWITH proc_marketing_paid_media_executions as (\nSELECT \n*,\nLAST_VALUE(campaign_name) \n                OVER (PARTITION BY campaign_id ORDER BY executed_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)              AS campaign_current_name\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\" \n)\n\n\n, last_platform_update AS (\n    SELECT PLATFORM, MAX(executed_at) AS platform_last_updated_at\n    FROM proc_marketing_paid_media_executions\n    GROUP BY 1\n)\n   , paid_media_campaigns AS (\n    SELECT proc_marketing_paid_media_executions.platform,\n           proc_marketing_paid_media_executions.account_id,\n           proc_marketing_paid_media_executions.account_name,\n           proc_marketing_paid_media_executions.campaign_id,\n           proc_marketing_paid_media_executions.campaign_current_name AS campaign_name,\n           proc_marketing_paid_media_executions.currency,\n           CASE\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Sales%' THEN 'Seller'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Rentals%' THEN 'Landlord'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%New Properties%'\n                   THEN 'Buyer New Properties'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Tenants%' THEN 'Tenant'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Branding%' THEN 'Branding'\n               ELSE 'Branding' END                                        AS business_marketing,\n           CASE\n               WHEN (proc_marketing_paid_media_executions.campaign_name LIKE '%Sales%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%Rentals%')\n                   THEN 'Supply'\n               WHEN (proc_marketing_paid_media_executions.campaign_name LIKE '%Buyers%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%Tenants%' OR\n                     proc_marketing_paid_media_executions.campaign_name LIKE '%New Properties%') THEN 'Demand'\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Branding%' THEN 'Branding'\n               ELSE 'Branding' END                                        AS funnel_marketing,\n           CASE\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Medell_n%' THEN 31::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Bogot_%' THEN 14::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Regi_n Metropolitana%' THEN 79::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Valpara_so%' THEN 11::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Concepci_n%' THEN 8::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Ciudad de M_xico%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Monterrey%' THEN 54::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Tijuana%' THEN 67::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Guadalajara%' THEN 30::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Puebla%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%Quer_taro%' THEN 104::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%GDL%' THEN 30::INT\n               WHEN proc_marketing_paid_media_executions.campaign_name LIKE '%CDMX%' THEN 104::INT\n               ELSE NULL END                                              AS geo_id,\n           last_platform_update.platform_last_updated_at,\n           SUM(proc_marketing_paid_media_executions.day_cost)::FLOAT      AS total_cost,\n           SUM(proc_marketing_paid_media_executions.day_cost_usd)::FLOAT  AS total_cost_usd,\n           SUM(proc_marketing_paid_media_executions.day_clicks)           AS total_clicks,\n           SUM(proc_marketing_paid_media_executions.day_impressions)      AS total_impressions,\n           MIN(proc_marketing_paid_media_executions.executed_at)          AS campaing_start,\n           MAX(proc_marketing_paid_media_executions.executed_at)          AS campaing_last_day,\n           MAX(CASE WHEN campaign_status = 'ACTIVE' THEN executed_at END) AS campaign_last_active_day,\n           CASE\n               WHEN campaign_last_active_day = last_platform_update.platform_last_updated_at THEN 'ACTIVE'\n               ELSE 'PAUSED' END::VARCHAR(10000)                          AS campaign_current_status,\n           COUNT(DISTINCT ad_group_id)                                    AS ad_groups_in_campaing,\n           COUNT(DISTINCT ad_id)                                          AS ads_in_campaing\n\n    FROM  proc_marketing_paid_media_executions\n             LEFT JOIN last_platform_update\n                       ON proc_marketing_paid_media_executions.platform = last_platform_update.platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n)\n\nSELECT paid_media_campaigns.platform,\n       paid_media_campaigns.account_id,\n       paid_media_campaigns.account_name,\n       paid_media_campaigns.campaign_id,\n       paid_media_campaigns.campaign_name,\n       paid_media_campaigns.business_marketing,\n       paid_media_campaigns.funnel_marketing,\n       paid_media_campaigns.geo_id,\n       dim_geo.country,\n       dim_geo.Region_Houm,\n       dim_geo.City_Houm,\n       paid_media_campaigns.platform_last_updated_at::date,\n       paid_media_campaigns.total_cost,\n       paid_media_campaigns.total_cost_usd,\n       paid_media_campaigns.total_clicks,\n       paid_media_campaigns.total_impressions,\n       paid_media_campaigns.campaing_start::date,\n       paid_media_campaigns.campaing_last_day::date,\n       paid_media_campaigns.campaign_last_active_day::date,\n       paid_media_campaigns.campaign_current_status,\n       paid_media_campaigns.ad_groups_in_campaing,\n       paid_media_campaigns.ads_in_campaing\n\nFROM paid_media_campaigns\n         LEFT JOIN  \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo\n                   ON dim_geo.geo_id = paid_media_campaigns.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\""}, "model.houm.proc_marketing_paid_media_executions": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH stg_paid_media_google_campaigns AS (\n    SELECT 'Google'                                                                AS platform ,\n           profile_id                                                              AS account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           NULL::VARCHAR                                                           AS ad_id ,\n           NULL::VARCHAR                                                           AS ad_name ,\n           date::TIMESTAMPTZ                                                       AS executed_at ,\n           CASE campaign_status\n                WHEN  'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS campaign_status ,\n           CASE ad_group_status\n                WHEN 'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS ad_group_status ,\n            --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost ::FLOAT ,                                                             \n           cost_usd ::FLOAT\n    FROM {{ ref('stg_supermetrics_googleads_ad') }} as  googleads_ad\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , stg_paid_media_facebook_campaigns AS (\n    SELECT 'Facebook'         AS platform ,\n           account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           ad_id ,\n           ad_name ,\n           date ::TIMESTAMPTZ AS executed_at ,\n           campaign_status ,\n           ad_group_status ,\n           --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost::FLOAT ,\n           cost_usd::FLOAT\n    FROM {{ ref('stg_supermetrics_fbads_ad') }} AS fbads\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , union_platform AS (\n    SELECT *\n    FROM stg_paid_media_google_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_facebook_campaigns\n)\n   , paid_media AS (\n    SELECT union_platform.platform ,\n           union_platform.account_id ,\n           union_platform.account_name ,\n           union_platform.campaign_id ,\n           union_platform.campaign_name ,\n           union_platform.ad_group_id ,\n           union_platform.ad_group_name ,\n           union_platform.ad_id ,\n           union_platform.ad_name ,\n           union_platform.executed_at ,\n           union_platform.campaign_status ,\n           union_platform.ad_group_status ,\n           union_platform.currency ,\n           SUM(union_platform.cost)::FLOAT      AS day_cost ,\n           SUM(union_platform.cost_usd)::FLOAT  AS day_cost_usd ,\n           SUM(union_platform.clicks)           AS day_clicks ,\n           SUM(union_platform.impressions)      AS day_impressions\n\n    FROM union_platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n)\n\nSELECT paid_media.platform ,\n       paid_media.account_id ,\n       paid_media.account_name ,\n       paid_media.campaign_id ,\n       paid_media.campaign_name ,\n       paid_media.ad_group_id ,\n       paid_media.ad_group_name ,\n       paid_media.ad_id ,\n       paid_media.ad_name ,\n       paid_media.executed_at ,\n       paid_media.campaign_status ,\n       paid_media.ad_group_status ,\n       paid_media.currency ,\n       paid_media.day_cost ,\n       paid_media.day_cost_usd ,            \n       paid_media.day_clicks ,\n       paid_media.day_impressions\n\nFROM paid_media\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_supermetrics_googleads_ad", "model.houm.stg_supermetrics_fbads_ad"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media_executions"], "unique_id": "model.houm.proc_marketing_paid_media_executions", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media_executions.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media_executions.sql", "name": "proc_marketing_paid_media_executions", "alias": "proc_marketing_paid_media_executions", "checksum": {"name": "sha256", "checksum": "1db9cca684ef2232a365a4a68dc143ea66d615254eb8cb7493a0e861137f3e15"}, "tags": ["dw", "processing", "marketing"], "refs": [["stg_supermetrics_googleads_ad"], ["stg_supermetrics_fbads_ad"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media_executions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1664825037.49524, "compiled_sql": "\n\nWITH stg_paid_media_google_campaigns AS (\n    SELECT 'Google'                                                                AS platform ,\n           profile_id                                                              AS account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           NULL::VARCHAR                                                           AS ad_id ,\n           NULL::VARCHAR                                                           AS ad_name ,\n           date::TIMESTAMPTZ                                                       AS executed_at ,\n           CASE campaign_status\n                WHEN  'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS campaign_status ,\n           CASE ad_group_status\n                WHEN 'enabled' THEN 'ACTIVE'\n                WHEN 'paused' THEN 'PAUSED' \n            END::VARCHAR(10000) AS ad_group_status ,\n            --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost ::FLOAT ,                                                             \n           cost_usd ::FLOAT\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_googleads_ad\" as  googleads_ad\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , stg_paid_media_facebook_campaigns AS (\n    SELECT 'Facebook'         AS platform ,\n           account_id ,\n           account_name ,\n           campaign_id ,\n           campaign_name ,\n           ad_group_id ,\n           ad_group_name ,\n           ad_id ,\n           ad_name ,\n           date ::TIMESTAMPTZ AS executed_at ,\n           campaign_status ,\n           ad_group_status ,\n           --ad_status ,\n           clicks ,\n           impressions ,\n           currency ,\n           cost::FLOAT ,\n           cost_usd::FLOAT\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_supermetrics_fbads_ad\" AS fbads\n    WHERE executed_at >= '2022-01-01'::DATE\n)\n   , union_platform AS (\n    SELECT *\n    FROM stg_paid_media_google_campaigns\n    UNION ALL\n    SELECT *\n    FROM stg_paid_media_facebook_campaigns\n)\n   , paid_media AS (\n    SELECT union_platform.platform ,\n           union_platform.account_id ,\n           union_platform.account_name ,\n           union_platform.campaign_id ,\n           union_platform.campaign_name ,\n           union_platform.ad_group_id ,\n           union_platform.ad_group_name ,\n           union_platform.ad_id ,\n           union_platform.ad_name ,\n           union_platform.executed_at ,\n           union_platform.campaign_status ,\n           union_platform.ad_group_status ,\n           union_platform.currency ,\n           SUM(union_platform.cost)::FLOAT      AS day_cost ,\n           SUM(union_platform.cost_usd)::FLOAT  AS day_cost_usd ,\n           SUM(union_platform.clicks)           AS day_clicks ,\n           SUM(union_platform.impressions)      AS day_impressions\n\n    FROM union_platform\n\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n)\n\nSELECT paid_media.platform ,\n       paid_media.account_id ,\n       paid_media.account_name ,\n       paid_media.campaign_id ,\n       paid_media.campaign_name ,\n       paid_media.ad_group_id ,\n       paid_media.ad_group_name ,\n       paid_media.ad_id ,\n       paid_media.ad_name ,\n       paid_media.executed_at ,\n       paid_media.campaign_status ,\n       paid_media.ad_group_status ,\n       paid_media.currency ,\n       paid_media.day_cost ,\n       paid_media.day_cost_usd ,            \n       paid_media.day_clicks ,\n       paid_media.day_impressions\n\nFROM paid_media\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_executions\""}, "model.houm.sales_local_revenue": {"raw_sql": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_local_revenue"], "unique_id": "model.houm.sales_local_revenue", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/sales_local_revenue.sql", "original_file_path": "models/processing/finance/sales_local_revenue.sql", "name": "sales_local_revenue", "alias": "sales_local_revenue", "checksum": {"name": "sha256", "checksum": "8d8dbdb65ea95a5275a0aa200687fc26e4e04abbf661ef50285f3b69088f156b"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Total Revenue amount of Sales", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1664825037.7900171, "compiled_sql": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\""}, "model.houm.rentals_units": {"raw_sql": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "rentals_units"], "unique_id": "model.houm.rentals_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/rentals_units.sql", "original_file_path": "models/processing/finance/rentals_units.sql", "name": "rentals_units", "alias": "rentals_units", "checksum": {"name": "sha256", "checksum": "333ff51cbfa143e8049a65b50d0bdc18dca1780328be5255e3cb0bf1625e0f09"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of rented units for each month", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1664825037.7897248, "compiled_sql": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"rentals_units\""}, "model.houm.eop_subs": {"raw_sql": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "eop_subs"], "unique_id": "model.houm.eop_subs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/eop_subs.sql", "original_file_path": "models/processing/finance/eop_subs.sql", "name": "eop_subs", "alias": "eop_subs", "checksum": {"name": "sha256", "checksum": "15320a10bda8841ec4969ea2a30e886b10a2406b03adee53ae91c6f7cb90c230"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of subscriptions at the beggining of period", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/eop_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1664825037.789283, "compiled_sql": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"eop_subs\""}, "model.houm.sales_units": {"raw_sql": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_units"], "unique_id": "model.houm.sales_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/finance/sales_units.sql", "original_file_path": "models/processing/finance/sales_units.sql", "name": "sales_units", "alias": "sales_units", "checksum": {"name": "sha256", "checksum": "9e97d9697020e7b89d68c88e67e49ea425551c0a676d1ab5dc30c14f753632b7"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "Number of sold units for each month", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1664825037.789052, "compiled_sql": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_units\""}, "model.houm.proc_cx_nps_new_listing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_whatsapp AS (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM {{ref('stg_whatsapp_nps_rentas_new_listing')}} nps\n    ),\nnps_survicate AS (\n    SELECT \n        left(first_response_date, 10)::date AS date,\n        right(first_response_date, 8)::time AS time,\n        nps * 100 AS nps,\n        '' AS name,\n        '' AS phone,\n        'rent_propietary_listing' AS role,\n        country,\n        first_response_date::character varying,\n        CASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_process_speed\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_quickness,\n        CASE m1_information_clarity\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_clarity,\n        nps_service_recommendation,\n        CASE\n            when text1_bad_answer = '' then\n                case\n                    when text1_neutral_answer = '' then\n                            case\n                                when text1_good_answer = '' then ''\n                                else 'Good: ' || text1_good_answer end\n                    else 'Neutral: ' || text1_neutral_answer end\n            else 'Bad: ' || text1_bad_answer || ' Neutral: ' || text1_neutral_answer || ' Good: ' || text1_good_answer \n        END AS comments,\n        null as business,\n        null as property_id\n    FROM {{ref('stg_survicate_nps_landlord_listing')}} AS nps\n    WHERE nps.first_response_date::date <= '2021-10-27'\n    )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY 1 DESC, 2 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_rentas_new_listing", "model.houm.stg_survicate_nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_new_listing"], "unique_id": "model.houm.proc_cx_nps_new_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_new_listing.sql", "original_file_path": "models/processing/cx/proc_cx_nps_new_listing.sql", "name": "proc_cx_nps_new_listing", "alias": "proc_cx_nps_new_listing", "checksum": {"name": "sha256", "checksum": "42a26f6acefe7e39045ed6863ef439159dcbb622961122afdd10a32a48fa2ca9"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_rentas_new_listing"], ["stg_survicate_nps_landlord_listing"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.50112, "compiled_sql": "\n\nWITH nps_whatsapp AS (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing\" nps\n    ),\nnps_survicate AS (\n    SELECT \n        left(first_response_date, 10)::date AS date,\n        right(first_response_date, 8)::time AS time,\n        nps * 100 AS nps,\n        '' AS name,\n        '' AS phone,\n        'rent_propietary_listing' AS role,\n        country,\n        first_response_date::character varying,\n        CASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_process_speed\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_quickness,\n        CASE m1_information_clarity\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_clarity,\n        nps_service_recommendation,\n        CASE\n            when text1_bad_answer = '' then\n                case\n                    when text1_neutral_answer = '' then\n                            case\n                                when text1_good_answer = '' then ''\n                                else 'Good: ' || text1_good_answer end\n                    else 'Neutral: ' || text1_neutral_answer end\n            else 'Bad: ' || text1_bad_answer || ' Neutral: ' || text1_neutral_answer || ' Good: ' || text1_good_answer \n        END AS comments,\n        null as business,\n        null as property_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\" AS nps\n    WHERE nps.first_response_date::date <= '2021-10-27'\n    )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY 1 DESC, 2 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_new_listing\""}, "model.houm.proc_cx_nps_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH scheduler_schedules AS (\n\tSELECT \n\t\tschedule_id as id,\n\t\tappraiser_id \n\tFROM {{ref('proc_tmp_demand_schedules_cleaned')}} hss \n),\nscheduler_appraisers AS (\n\tSELECT \n\t\tid,\n\t\tname \n\tFROM {{ref('stg_scheduler_appraisers')}} \n), \nraw_nps_whatsapp as (\n\tSELECT \n\t\tappraiser, \n\t\tschedule_id::integer, \n\t\tproperty_id::integer, \n\t\tto_date(\"date\",'DD/MM/YYYY') as \"date\",\n\t\t\"time\"::time without time zone, \n\t\taddress,\n\t\tCASE houmer_service\n\t\t\tWHEN '-' THEN null\n\t\t\tELSE houmer_service::integer\n\t\tEND as houmer_service,\n\t\tCASE houmer_knowledge\n\t\t\tWHEN '-' THEN null\n\t\t\tELSE houmer_knowledge::integer\n\t\tEND as houmer_knowledge,\n\t\tCASE schedule_easyness \n\t\t\tWHEN '-' then null\n\t\t\tELSE schedule_easyness::integer\n\t\tEND as schedule_easyness,\n\t\tCASE visit_success \n\t\t\tWHEN '-' THEN null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tCASE recommendation \n\t\t\tWHEN '-' THEN null\n\t\t\tELSE recommendation::integer\n\t\tEND as recommendation,\n\t\tcountry,\n\t\tbusiness,\n\t\tcomments\n\tFROM {{ref('stg_whatsapp_nps_visits_done')}}\n),\nnps_whatsapp AS (\nSELECT \n    scheduler_appraisers.name AS appraiser, \n    q.schedule_id,\n\tq.property_id,\n\tq.date,\n    q.time,\n    q.address,\n    q.recommendation,\n    q.country,\n    q.business,\n    q.comments, \n    CASE\n        WHEN q.recommendation IN (9,10) THEN 100\n\t\tWHEN q.recommendation IN (7,8) THEN 0.00\n\t\tWHEN q.recommendation IN (1,2,3,4,5,6) THEN -100\n\t\tELSE null \n\tEND AS NPS,\n\thoumer_service,\n\thoumer_knowledge,\n\tschedule_easyness AS schedule_easiness,\n\tvisit_success\nFROM raw_nps_whatsapp AS q\nLEFT JOIN scheduler_schedules ON scheduler_schedules.id = q.schedule_id\nLEFT JOIN scheduler_appraisers ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nORDER BY \"date\" ASC, \"time\" ASC\n),\nnps_survicate AS (\n\tSELECT \t\t\n\t\t'' as appraiser ,\n\t\tnull::integer as schedule_id,\n\t\tnull::integer as property_id,\n\t\t\"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\", \n\t\t'' as address,\n\t\tnps.nps_service_recommendation::integer AS nps_service_recommendation, \n\t\tnps.country, \n\t\t'' as business, \n        CASE\n        \tWHEN nps.text1_bad_answer = '' THEN \n                CASE\n                    WHEN nps.text1_neutral_answer = '' THEN \n                    \tCASE\n                        \tWHEN nps.text1_good_answer = '' THEN ''\n                        \tELSE 'Good: ' || nps.text1_good_answer\n                    \tEND\n                    ELSE 'Neutral: ' || nps.text1_neutral_answer\n                END\n            ELSE (((('Bad: ' || nps.text1_bad_answer) || ' Neutral: ') || nps.text1_neutral_answer) || ' Good: ') || nps.text1_good_answer\n        END AS comments,\n        nps.nps * 100 AS nps, \n        null AS houmer_service, \n        CASE\n            WHEN nps.m1_houmer_delivers_info::text = 'Muy de acuerdo'::text THEN 10\n            WHEN nps.m1_houmer_delivers_info::text = 'De acuerdo'::text THEN 8\n            WHEN nps.m1_houmer_delivers_info::text = 'Neutro'::text THEN 6\n            WHEN nps.m1_houmer_delivers_info::text = 'Desacuerdo'::text THEN 4\n            WHEN nps.m1_houmer_delivers_info::text = 'Muy en desacuerdo'::text THEN 2\n            ELSE null\n        END AS houmer_knowledge, \n        CASE\n        \tWHEN nps.m1_schedule_easiness::text = 'Muy de acuerdo' THEN 10\n            WHEN nps.m1_schedule_easiness::text = 'De acuerdo' THEN 8\n            WHEN nps.m1_schedule_easiness::text = 'Neutro' THEN 6\n            WHEN nps.m1_schedule_easiness::text = 'Desacuerdo' THEN 4\n            WHEN nps.m1_schedule_easiness::text = 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS schedule_easiness,\n        null as visit_success\n    FROM {{ref('stg_survicate_nps_visit_done')}} nps\n    WHERE nps.first_response_date::date <= '2021-10-24'::date\n\t)\nSELECT * \nFROM nps_whatsapp\nUNION ALL\nSELECT * \nFROM nps_survicate", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_scheduler_appraisers", "model.houm.stg_whatsapp_nps_visits_done", "model.houm.stg_survicate_nps_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_visit_done"], "unique_id": "model.houm.proc_cx_nps_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_visit_done.sql", "original_file_path": "models/processing/cx/proc_cx_nps_visit_done.sql", "name": "proc_cx_nps_visit_done", "alias": "proc_cx_nps_visit_done", "checksum": {"name": "sha256", "checksum": "59dda13c67a02ef704274251ceedd592e77c01ee073a823b34ecd1bdd8764c70"}, "tags": ["dw", "processing", "cx"], "refs": [["proc_tmp_demand_schedules_cleaned"], ["stg_scheduler_appraisers"], ["stg_whatsapp_nps_visits_done"], ["stg_survicate_nps_visit_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.5025868, "compiled_sql": "\n\nWITH scheduler_schedules AS (\n\tSELECT \n\t\tschedule_id as id,\n\t\tappraiser_id \n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\" hss \n),\nscheduler_appraisers AS (\n\tSELECT \n\t\tid,\n\t\tname \n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" \n), \nraw_nps_whatsapp as (\n\tSELECT \n\t\tappraiser, \n\t\tschedule_id::integer, \n\t\tproperty_id::integer, \n\t\tto_date(\"date\",'DD/MM/YYYY') as \"date\",\n\t\t\"time\"::time without time zone, \n\t\taddress,\n\t\tCASE houmer_service\n\t\t\tWHEN '-' THEN null\n\t\t\tELSE houmer_service::integer\n\t\tEND as houmer_service,\n\t\tCASE houmer_knowledge\n\t\t\tWHEN '-' THEN null\n\t\t\tELSE houmer_knowledge::integer\n\t\tEND as houmer_knowledge,\n\t\tCASE schedule_easyness \n\t\t\tWHEN '-' then null\n\t\t\tELSE schedule_easyness::integer\n\t\tEND as schedule_easyness,\n\t\tCASE visit_success \n\t\t\tWHEN '-' THEN null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tCASE recommendation \n\t\t\tWHEN '-' THEN null\n\t\t\tELSE recommendation::integer\n\t\tEND as recommendation,\n\t\tcountry,\n\t\tbusiness,\n\t\tcomments\n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_done\"\n),\nnps_whatsapp AS (\nSELECT \n    scheduler_appraisers.name AS appraiser, \n    q.schedule_id,\n\tq.property_id,\n\tq.date,\n    q.time,\n    q.address,\n    q.recommendation,\n    q.country,\n    q.business,\n    q.comments, \n    CASE\n        WHEN q.recommendation IN (9,10) THEN 100\n\t\tWHEN q.recommendation IN (7,8) THEN 0.00\n\t\tWHEN q.recommendation IN (1,2,3,4,5,6) THEN -100\n\t\tELSE null \n\tEND AS NPS,\n\thoumer_service,\n\thoumer_knowledge,\n\tschedule_easyness AS schedule_easiness,\n\tvisit_success\nFROM raw_nps_whatsapp AS q\nLEFT JOIN scheduler_schedules ON scheduler_schedules.id = q.schedule_id\nLEFT JOIN scheduler_appraisers ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nORDER BY \"date\" ASC, \"time\" ASC\n),\nnps_survicate AS (\n\tSELECT \t\t\n\t\t'' as appraiser ,\n\t\tnull::integer as schedule_id,\n\t\tnull::integer as property_id,\n\t\t\"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\", \n\t\t'' as address,\n\t\tnps.nps_service_recommendation::integer AS nps_service_recommendation, \n\t\tnps.country, \n\t\t'' as business, \n        CASE\n        \tWHEN nps.text1_bad_answer = '' THEN \n                CASE\n                    WHEN nps.text1_neutral_answer = '' THEN \n                    \tCASE\n                        \tWHEN nps.text1_good_answer = '' THEN ''\n                        \tELSE 'Good: ' || nps.text1_good_answer\n                    \tEND\n                    ELSE 'Neutral: ' || nps.text1_neutral_answer\n                END\n            ELSE (((('Bad: ' || nps.text1_bad_answer) || ' Neutral: ') || nps.text1_neutral_answer) || ' Good: ') || nps.text1_good_answer\n        END AS comments,\n        nps.nps * 100 AS nps, \n        null AS houmer_service, \n        CASE\n            WHEN nps.m1_houmer_delivers_info::text = 'Muy de acuerdo'::text THEN 10\n            WHEN nps.m1_houmer_delivers_info::text = 'De acuerdo'::text THEN 8\n            WHEN nps.m1_houmer_delivers_info::text = 'Neutro'::text THEN 6\n            WHEN nps.m1_houmer_delivers_info::text = 'Desacuerdo'::text THEN 4\n            WHEN nps.m1_houmer_delivers_info::text = 'Muy en desacuerdo'::text THEN 2\n            ELSE null\n        END AS houmer_knowledge, \n        CASE\n        \tWHEN nps.m1_schedule_easiness::text = 'Muy de acuerdo' THEN 10\n            WHEN nps.m1_schedule_easiness::text = 'De acuerdo' THEN 8\n            WHEN nps.m1_schedule_easiness::text = 'Neutro' THEN 6\n            WHEN nps.m1_schedule_easiness::text = 'Desacuerdo' THEN 4\n            WHEN nps.m1_schedule_easiness::text = 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS schedule_easiness,\n        null as visit_success\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_visit_done\" nps\n    WHERE nps.first_response_date::date <= '2021-10-24'::date\n\t)\nSELECT * \nFROM nps_whatsapp\nUNION ALL\nSELECT * \nFROM nps_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_visit_done\""}, "model.houm.proc_cx_nps_photo": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_whatsapp_raw as (\n    select \n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n\t\tcountry, \n\t\tcomments\n    from {{ref('stg_whatsapp_nps_photo')}} np\n),\nnps_whatsapp as (\n    select \n        nps_whatsapp_raw.*,\n        hss.business,\n\t\tcase when recommendation in (9,10) then 100\n\t\t\twhen recommendation in (7,8) then 0.00\n\t\t\twhen recommendation in (1,2,3,4,5,6) then -100\n\t\t\telse null end as NPS\n    from nps_whatsapp_raw\n    left join {{ref('proc_tmp_demand_schedules_cleaned')}} hss on hss.schedule_id = nps_whatsapp_raw.schedule_id\n),\nnps_survicate as ( \n    select \n        null as appraiser, \n        null as schedule_id, \n        null as property_id,\n        left(first_response_date,10)::date as date, \n        right(first_response_date,8)::time as time,\n        null as address,\n        m1_houmer_during_visit*2 as houmer_service,\n        m1_houmer_before_visit*2 as houmer_knowledge,\n        m1_website_simplicity*2 as schedule_easyness,\n        case property_photos_experience when 'Extremely happy' then 10\n            when 'Happy' then 8\n            when 'Neutral' then 6\n            when 'Unsatisfied' then 4\n            when 'Extremely unsatisfied' then 2\n            else null\n        end as visit_success,\n        null as recommendation,\n        country,\n        case when text1_bad_answer = '' then case when text1_neutral_answer = '' then '' else text1_neutral_answer end else 'Bad:'||text1_bad_answer || ' Neutral: '|| text1_neutral_answer end as comments,\n        '' as business,\n        nps*100 as nps\n    from {{ref('stg_survicate_nps_photo_done')}} \n    where date < '2021-10-21'\n)\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY \"date\" DESC, \"time\" DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_photo", "model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_survicate_nps_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_photo"], "unique_id": "model.houm.proc_cx_nps_photo", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_photo.sql", "original_file_path": "models/processing/cx/proc_cx_nps_photo.sql", "name": "proc_cx_nps_photo", "alias": "proc_cx_nps_photo", "checksum": {"name": "sha256", "checksum": "94cec0e54dc486f6f4d1b27d658901dd52449bf6d9c692d8d1fb96dba67323c6"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_photo"], ["proc_tmp_demand_schedules_cleaned"], ["stg_survicate_nps_photo_done"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.503946, "compiled_sql": "\n\nwith nps_whatsapp_raw as (\n    select \n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n\t\tcountry, \n\t\tcomments\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_photo\" np\n),\nnps_whatsapp as (\n    select \n        nps_whatsapp_raw.*,\n        hss.business,\n\t\tcase when recommendation in (9,10) then 100\n\t\t\twhen recommendation in (7,8) then 0.00\n\t\t\twhen recommendation in (1,2,3,4,5,6) then -100\n\t\t\telse null end as NPS\n    from nps_whatsapp_raw\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\" hss on hss.schedule_id = nps_whatsapp_raw.schedule_id\n),\nnps_survicate as ( \n    select \n        null as appraiser, \n        null as schedule_id, \n        null as property_id,\n        left(first_response_date,10)::date as date, \n        right(first_response_date,8)::time as time,\n        null as address,\n        m1_houmer_during_visit*2 as houmer_service,\n        m1_houmer_before_visit*2 as houmer_knowledge,\n        m1_website_simplicity*2 as schedule_easyness,\n        case property_photos_experience when 'Extremely happy' then 10\n            when 'Happy' then 8\n            when 'Neutral' then 6\n            when 'Unsatisfied' then 4\n            when 'Extremely unsatisfied' then 2\n            else null\n        end as visit_success,\n        null as recommendation,\n        country,\n        case when text1_bad_answer = '' then case when text1_neutral_answer = '' then '' else text1_neutral_answer end else 'Bad:'||text1_bad_answer || ' Neutral: '|| text1_neutral_answer end as comments,\n        '' as business,\n        nps*100 as nps\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\" \n    where date < '2021-10-21'\n)\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY \"date\" DESC, \"time\" DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_photo\""}, "model.houm.proc_cx_nps_tenants": {"raw_sql": "{{ config(materialized='table') }}\n-- WITH nps_whatsapp AS (\n--     SELECT \n--         CASE\n--             WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-11-01'::date\n--             ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n--         END AS date, \n--         CASE\n--             WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n--             ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n--         END AS \"time\", \n--         CASE\n--             WHEN nps.recommendation::text = 9::character varying::text OR nps.recommendation::text = 10::character varying::text THEN 100::numeric::numeric(18,0)\n--             WHEN nps.recommendation::text = 7::character varying::text OR nps.recommendation::text = 8::character varying::text THEN 0.00\n--             WHEN nps.recommendation::text = 1::character varying::text OR nps.recommendation::text = 2::character varying::text OR nps.recommendation::text = 3::character varying::text OR nps.recommendation::text = 4::character varying::text OR nps.recommendation::text = 5::character varying::text OR nps.recommendation::text = 6::character varying::text THEN - 100::numeric::numeric(18,0)\n--             ELSE NULL::numeric::numeric(18,0)\n--         END AS nps, nps.name, nps.phone, \n--         nps.\"role\", \n--         nps.property_id,\n--         nps.subscription_id, \n--         nps.country, nps.\"timestamp\", \n--         case nps.attention_satisfaction when '-' then null::integer else nps.attention_satisfaction::integer end, \n--         case nps.problem_solving when '-' then null::integer else nps.problem_solving::integer end as problem_solving_conditions, \n--         case nps.recommendation when '-' then null::integer else nps.recommendation::integer end as recommendation, \n--         nps.comments\n--     FROM {{ref('stg_whatsapp_nps_automatic_tenants')}} nps order by date asc\n--    )\n--,\nwith nps_survicate as(\n   select \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tnps*100 as nps,\n\t\t'' as name,\n\t\t'' as phone,\n\t\t'tenant_24_hrs' as role,\n\t\tnull as property_id,\n        null as subscription_id,\n\t\tcountry,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houmer_service_satisfaction::text = 'Extremely happy'::text THEN 10::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Happy'::text THEN 8::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Neutro'::text THEN 6::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Unsatisfied'::text THEN 4::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Extremely unsatisfied'::text THEN 2::integer\n            ELSE null::integer\n        END AS attention_satisfaction,\n        case nps.expected_property_status when 'S\u00ed' then 10\n        \t\t\t\t\t\t\t\t\twhen 'No' then 4\n        \t\t\t\t\t\t\t\t\twhen 'Con algunos detalles' then 8\n        \t\t\t\t\t\t\t\t\telse null end as problem_solving_conditions,\n        nps.nps_service_recommendation::integer as recommendation,\n                        CASE\n                    WHEN nps.text1_bad_answer::text = ''::text THEN \n                    CASE\n                        WHEN nps.text1_neutral_answer::text = ''::text THEN \n                        CASE\n                            WHEN nps.text1_good_answer::text = ''::text THEN ''::text\n                            ELSE 'Good: '::text || nps.text1_good_answer::text\n                        END\n                        ELSE 'Neutral: '::text || nps.text1_neutral_answer::text\n                    END\n                    ELSE (((('Bad: '::text || nps.text1_bad_answer::text) || ' Neutral: '::text) || nps.text1_neutral_answer::text) || ' Good: '::text) || nps.text1_good_answer::text\n                END AS comments\n\tfrom survicate.nps_tenant_satisfaction_24hrs nps\n   )\n   -- select * from nps_whatsapp\n   --union all\n   select * from nps_survicate", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_automatic_tenants"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_tenants"], "unique_id": "model.houm.proc_cx_nps_tenants", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_tenants.sql", "original_file_path": "models/processing/cx/proc_cx_nps_tenants.sql", "name": "proc_cx_nps_tenants", "alias": "proc_cx_nps_tenants", "checksum": {"name": "sha256", "checksum": "b16c4e06698e991410cf64c05066e90721e45628cb9a653c514f0d14f6521bcd"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_automatic_tenants"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_tenants.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.505546, "compiled_sql": "\n-- WITH nps_whatsapp AS (\n--     SELECT \n--         CASE\n--             WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-11-01'::date\n--             ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n--         END AS date, \n--         CASE\n--             WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n--             ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n--         END AS \"time\", \n--         CASE\n--             WHEN nps.recommendation::text = 9::character varying::text OR nps.recommendation::text = 10::character varying::text THEN 100::numeric::numeric(18,0)\n--             WHEN nps.recommendation::text = 7::character varying::text OR nps.recommendation::text = 8::character varying::text THEN 0.00\n--             WHEN nps.recommendation::text = 1::character varying::text OR nps.recommendation::text = 2::character varying::text OR nps.recommendation::text = 3::character varying::text OR nps.recommendation::text = 4::character varying::text OR nps.recommendation::text = 5::character varying::text OR nps.recommendation::text = 6::character varying::text THEN - 100::numeric::numeric(18,0)\n--             ELSE NULL::numeric::numeric(18,0)\n--         END AS nps, nps.name, nps.phone, \n--         nps.\"role\", \n--         nps.property_id,\n--         nps.subscription_id, \n--         nps.country, nps.\"timestamp\", \n--         case nps.attention_satisfaction when '-' then null::integer else nps.attention_satisfaction::integer end, \n--         case nps.problem_solving when '-' then null::integer else nps.problem_solving::integer end as problem_solving_conditions, \n--         case nps.recommendation when '-' then null::integer else nps.recommendation::integer end as recommendation, \n--         nps.comments\n--     FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenants\" nps order by date asc\n--    )\n--,\nwith nps_survicate as(\n   select \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tnps*100 as nps,\n\t\t'' as name,\n\t\t'' as phone,\n\t\t'tenant_24_hrs' as role,\n\t\tnull as property_id,\n        null as subscription_id,\n\t\tcountry,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houmer_service_satisfaction::text = 'Extremely happy'::text THEN 10::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Happy'::text THEN 8::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Neutro'::text THEN 6::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Unsatisfied'::text THEN 4::integer\n            WHEN nps.houmer_service_satisfaction::text = 'Extremely unsatisfied'::text THEN 2::integer\n            ELSE null::integer\n        END AS attention_satisfaction,\n        case nps.expected_property_status when 'S\u00ed' then 10\n        \t\t\t\t\t\t\t\t\twhen 'No' then 4\n        \t\t\t\t\t\t\t\t\twhen 'Con algunos detalles' then 8\n        \t\t\t\t\t\t\t\t\telse null end as problem_solving_conditions,\n        nps.nps_service_recommendation::integer as recommendation,\n                        CASE\n                    WHEN nps.text1_bad_answer::text = ''::text THEN \n                    CASE\n                        WHEN nps.text1_neutral_answer::text = ''::text THEN \n                        CASE\n                            WHEN nps.text1_good_answer::text = ''::text THEN ''::text\n                            ELSE 'Good: '::text || nps.text1_good_answer::text\n                        END\n                        ELSE 'Neutral: '::text || nps.text1_neutral_answer::text\n                    END\n                    ELSE (((('Bad: '::text || nps.text1_bad_answer::text) || ' Neutral: '::text) || nps.text1_neutral_answer::text) || ' Good: '::text) || nps.text1_good_answer::text\n                END AS comments\n\tfrom survicate.nps_tenant_satisfaction_24hrs nps\n   )\n   -- select * from nps_whatsapp\n   --union all\n   select * from nps_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_tenants\""}, "model.houm.proc_cx_nps_landlords_pc": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_whatsapp AS (\n\tSELECT \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '2021-10-25'::date\n            ELSE left(nps.answered_at, 10)::date\n        END AS \"date\", \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '00:00:00'::time without time zone\n            ELSE left(right(nps.answered_at, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation in (9,10) THEN 100\n            WHEN nps.recommendation in (7,8) THEN 0\n            WHEN nps.recommendation in (0,1,2,3,4,5,6) THEN - 100::numeric(18,0)\n            ELSE NULL\n        END AS nps, \n\t\tnps.name, \n\t\tnps.phone, \n\t\tnps.\"role\", \n\t\tnps.country, \n\t\tnps.answered_at::timestamp, \n\t\tCASE\n\t\t\tWHEN nps.property_id ='-' THEN null\n\t\t\tELSE nps.property_id::integer\n\t\tEND AS property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source, \n\t\tCASE\n\t\t\tWHEN left(contract_signature,1) BETWEEN 0 AND 9 THEN nps.contract_signature::integer\n\t\t\tELSE NULL\n\t\tEND AS contract_signature,\n\t\tCASE\n\t\t\tWHEN left(nps.recommendation,1) BETWEEN 0 AND 9 THEN nps.recommendation::integer\n\t\t\tELSE NULL\n\t\tEND AS recommendation,\n\t\tnps.comments\n   FROM {{ref('stg_whatsapp_nps_rentas_propietary_pc')}} nps\n   ),\nnps_survicate AS (\n\tSELECT\n   \t\tleft(first_response_date,10)::date AS date, \n\t\tright(first_response_date,8)::time AS time,\n\t\tnps*100 AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'propietary_poscontract' AS role,\n\t\tcountry,\n\t\tfirst_response_date::timestamp,\n\t\tnull AS property_id,\n\t\tCASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_contract_signing_easiness \n\t\t\tWHEN 'Muy de acuerdo' THEN 10\n        \tWHEN 'De acuerdo' THEN 8\n        \tWHEN 'Neutro' THEN 6\n        \tWHEN 'Desacuerdo' THEN 4\n        \tWHEN 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS contract_signature,\n        nps_service_recommendation,\n        CASE \n\t\t\tWHEN text1_bad_answer = '' THEN \n        \t\tCASE \n\t\t\t\t\tWHEN text1_neutral_answer = '' THEN \n        \t\t\t\tCASE \n\t\t\t\t\t\t\tWHEN text1_good_answer = '' THEN ''\n        \t\t\t\t\tELSE 'Good: '||text1_good_answer\n\t\t\t\t\t\tEND\n        \t\t\tELSE 'Neutral: '||text1_neutral_answer \n\t\t\t\tEND \n        \tELSE 'Bad: '||text1_bad_answer || ' Neutral: '|| text1_neutral_answer||' Good: '||text1_good_answer \n\t\tEND AS comments\n   \tFROM {{ref('stg_survicate_nps_landlord_new_sub')}} nps\n   \tWHERE nps.first_response_date::date <= '2021-10-24'\n   )\nSELECT * \nFROM nps_whatsapp\nUNION ALL \nSELECT * \nFROM nps_survicate\nORDER BY DATE DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc", "model.houm.stg_survicate_nps_landlord_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_landlords_pc"], "unique_id": "model.houm.proc_cx_nps_landlords_pc", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_landlords_pc.sql", "original_file_path": "models/processing/cx/proc_cx_nps_landlords_pc.sql", "name": "proc_cx_nps_landlords_pc", "alias": "proc_cx_nps_landlords_pc", "checksum": {"name": "sha256", "checksum": "d50ddaad1810b1e9cc23fa687c5805d3b99ade822a377ae67273c332b9eb269b"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_rentas_propietary_pc"], ["stg_survicate_nps_landlord_new_sub"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_landlords_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.507188, "compiled_sql": "\n\nWITH nps_whatsapp AS (\n\tSELECT \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '2021-10-25'::date\n            ELSE left(nps.answered_at, 10)::date\n        END AS \"date\", \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '00:00:00'::time without time zone\n            ELSE left(right(nps.answered_at, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation in (9,10) THEN 100\n            WHEN nps.recommendation in (7,8) THEN 0\n            WHEN nps.recommendation in (0,1,2,3,4,5,6) THEN - 100::numeric(18,0)\n            ELSE NULL\n        END AS nps, \n\t\tnps.name, \n\t\tnps.phone, \n\t\tnps.\"role\", \n\t\tnps.country, \n\t\tnps.answered_at::timestamp, \n\t\tCASE\n\t\t\tWHEN nps.property_id ='-' THEN null\n\t\t\tELSE nps.property_id::integer\n\t\tEND AS property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source, \n\t\tCASE\n\t\t\tWHEN left(contract_signature,1) BETWEEN 0 AND 9 THEN nps.contract_signature::integer\n\t\t\tELSE NULL\n\t\tEND AS contract_signature,\n\t\tCASE\n\t\t\tWHEN left(nps.recommendation,1) BETWEEN 0 AND 9 THEN nps.recommendation::integer\n\t\t\tELSE NULL\n\t\tEND AS recommendation,\n\t\tnps.comments\n   FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_propietary_pc\" nps\n   ),\nnps_survicate AS (\n\tSELECT\n   \t\tleft(first_response_date,10)::date AS date, \n\t\tright(first_response_date,8)::time AS time,\n\t\tnps*100 AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'propietary_poscontract' AS role,\n\t\tcountry,\n\t\tfirst_response_date::timestamp,\n\t\tnull AS property_id,\n\t\tCASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_contract_signing_easiness \n\t\t\tWHEN 'Muy de acuerdo' THEN 10\n        \tWHEN 'De acuerdo' THEN 8\n        \tWHEN 'Neutro' THEN 6\n        \tWHEN 'Desacuerdo' THEN 4\n        \tWHEN 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS contract_signature,\n        nps_service_recommendation,\n        CASE \n\t\t\tWHEN text1_bad_answer = '' THEN \n        \t\tCASE \n\t\t\t\t\tWHEN text1_neutral_answer = '' THEN \n        \t\t\t\tCASE \n\t\t\t\t\t\t\tWHEN text1_good_answer = '' THEN ''\n        \t\t\t\t\tELSE 'Good: '||text1_good_answer\n\t\t\t\t\t\tEND\n        \t\t\tELSE 'Neutral: '||text1_neutral_answer \n\t\t\t\tEND \n        \tELSE 'Bad: '||text1_bad_answer || ' Neutral: '|| text1_neutral_answer||' Good: '||text1_good_answer \n\t\tEND AS comments\n   \tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_new_sub\" nps\n   \tWHERE nps.first_response_date::date <= '2021-10-24'\n   )\nSELECT * \nFROM nps_whatsapp\nUNION ALL \nSELECT * \nFROM nps_survicate\nORDER BY DATE DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_landlords_pc\""}, "model.houm.proc_cx_nps_promises": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_promises as (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\", 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\", 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100\n            WHEN nps.recommendation IN (7,8) THEN 0.00\n            WHEN nps.recommendation BETWEEN 0 AND 6 THEN - 100\n            ELSE NULL\n        END AS nps,\n        property_id,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        nps.service_satisfaction,\n        nps.executive_communication,\n        nps.recommendation,\n        nps.comments,\n        'Sales' as business\n    FROM {{ref('stg_whatsapp_nps_sales_promises')}} nps\n    )\nselect * from nps_promises", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_sales_promises"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_promises"], "unique_id": "model.houm.proc_cx_nps_promises", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_promises.sql", "original_file_path": "models/processing/cx/proc_cx_nps_promises.sql", "name": "proc_cx_nps_promises", "alias": "proc_cx_nps_promises", "checksum": {"name": "sha256", "checksum": "6077e5fd7e11ddb76a3d0b0304c3fdc78b2b1ef21c1f8b102c80659de6a4e766"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_sales_promises"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_promises.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.509085, "compiled_sql": "\n\nwith nps_promises as (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\", 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\", 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100\n            WHEN nps.recommendation IN (7,8) THEN 0.00\n            WHEN nps.recommendation BETWEEN 0 AND 6 THEN - 100\n            ELSE NULL\n        END AS nps,\n        property_id,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        nps.service_satisfaction,\n        nps.executive_communication,\n        nps.recommendation,\n        nps.comments,\n        'Sales' as business\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_promises\" nps\n    )\nselect * from nps_promises", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_promises\""}, "model.houm.proc_cx_nps_landlords": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_whatsapp as(\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE null\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' then null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM {{ ref('stg_whatsapp_nps_automatic_landlord_3_meses') }} AS nps\n    UNION ALL \n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' THEN null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM {{ ref('stg_whatsapp_nps_automatic_landlord_6_meses') }} AS nps\n   ), --Good luck have fun\nnps_survicate as (\n    SELECT \n        \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tCASE \n            WHEN nps.nps_service_recommendation <= 6 THEN -100.00::numeric \n\t\t\tWHEN nps.nps_service_recommendation <= 8 THEN 0.00::numeric\n\t\t\tWHEN nps.nps_service_recommendation <= 10 THEN 100.00::numeric \n\t\t    ELSE null::numeric \n        END AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'landlord_6_months' as role,\n\t\tnull as property_id,\n\t\t'Chile' as country,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houm_administration_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.houm_administration_satisfaction = 'Happy' THEN 8\n            WHEN nps.houm_administration_satisfaction = 'Neutro' THEN 6\n            WHEN nps.houm_administration_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.houm_administration_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS attention_satisfaction,\n\t\tCASE\n            WHEN nps.executive_management_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.executive_management_satisfaction = 'Happy' THEN 8\n            WHEN nps.executive_management_satisfaction = 'Neutro' THEN 6\n            WHEN nps.executive_management_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.executive_management_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS problem_solving,\n        nps.nps_service_recommendation AS recommendation,\n        nps.text1_suggestion_box AS comments\n\tFROM {{ ref('stg_survicate_nps_landlord_satisfaction_6months_cl') }} AS nps\n   )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_landlords"], "unique_id": "model.houm.proc_cx_nps_landlords", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_landlords.sql", "original_file_path": "models/processing/cx/proc_cx_nps_landlords.sql", "name": "proc_cx_nps_landlords", "alias": "proc_cx_nps_landlords", "checksum": {"name": "sha256", "checksum": "78306cf124eab036af5fa5cc7b50458d003a0a3ea8657259467b8e8ca2898514"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_automatic_landlord_3_meses"], ["stg_whatsapp_nps_automatic_landlord_6_meses"], ["stg_survicate_nps_landlord_satisfaction_6months_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_landlords.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.5103848, "compiled_sql": "\n\nwith nps_whatsapp as(\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE null\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' then null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\" AS nps\n    UNION ALL \n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' THEN null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\" AS nps\n   ), --Good luck have fun\nnps_survicate as (\n    SELECT \n        \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tCASE \n            WHEN nps.nps_service_recommendation <= 6 THEN -100.00::numeric \n\t\t\tWHEN nps.nps_service_recommendation <= 8 THEN 0.00::numeric\n\t\t\tWHEN nps.nps_service_recommendation <= 10 THEN 100.00::numeric \n\t\t    ELSE null::numeric \n        END AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'landlord_6_months' as role,\n\t\tnull as property_id,\n\t\t'Chile' as country,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houm_administration_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.houm_administration_satisfaction = 'Happy' THEN 8\n            WHEN nps.houm_administration_satisfaction = 'Neutro' THEN 6\n            WHEN nps.houm_administration_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.houm_administration_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS attention_satisfaction,\n\t\tCASE\n            WHEN nps.executive_management_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.executive_management_satisfaction = 'Happy' THEN 8\n            WHEN nps.executive_management_satisfaction = 'Neutro' THEN 6\n            WHEN nps.executive_management_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.executive_management_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS problem_solving,\n        nps.nps_service_recommendation AS recommendation,\n        nps.text1_suggestion_box AS comments\n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\" AS nps\n   )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_landlords\""}, "model.houm.proc_cx_nps_tenants_pc": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_whatsapp AS (\n\tSELECT\n\t    CASE\n    \t    WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '2021-10-25'::date\n\t\t    ELSE \"left\"(nps.answered_at, 10)::date\n\t    END AS date, \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.answered_at, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100\n            WHEN nps.recommendation IN (7,8) THEN 0.00\n            WHEN nps.recommendation BETWEEN 0 AND 6 THEN - 100\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.country, \n        nps.answered_at, \n        nps.property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        nps.response_quickness,\n        nps.contract_signature,\n        nps.payment_easyness AS payment_easiness,\n        nps.recommendation,\n        nps.comments\n    FROM {{ref('stg_whatsapp_nps_rentas_tenant_pc')}} nps\n),\nnps_survicate as ( \n\tSELECT \n        \"left\"(nps.first_response_date::character varying::text, 10)::date AS date, \"right\"(nps.first_response_date::character varying::text, 8)::time without time zone AS \"time\", nps.nps * 100 AS nps, ''::character varying AS name, ''::character varying AS phone, 'tenant_poscontract'::character varying AS \"role\", nps.country, nps.first_response_date::character varying AS first_response_date, ''::character varying AS contract_id, \n        CASE\n            WHEN nps.sc1_customer_source::text = 'Publicidad'::character varying::text THEN '1.Publicidad'::character varying\n            WHEN nps.sc1_customer_source::text = 'Googleando'::character varying::text THEN '2.Google'::character varying\n            WHEN nps.sc1_customer_source::text = 'Me lo recomendaron'::character varying::text THEN '3.Me lo recomendaron'::character varying\n            WHEN nps.sc1_customer_source::text = 'Redes sociales'::character varying::text THEN '4.Redes sociales'::character varying\n            WHEN nps.sc1_customer_source::text = 'De un portal de propiedades'::character varying::text THEN '5.De un portal de propiedades'::character varying\n            WHEN nps.sc1_customer_source::text = 'Otro'::character varying::text THEN '6.Otro'::character varying\n            ELSE NULL::character varying\n        END AS source, \n        CASE\n            WHEN nps.m1_answer_speed::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_answer_speed::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_answer_speed::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_answer_speed::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_answer_speed::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS response_quickness, \n        CASE\n            WHEN nps.m1_contract_signing_easiness::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS contract_signature, \n        CASE\n            WHEN nps.m1_payment_easiness::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_payment_easiness::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS payment_easiness, nps.nps_service_recommendation::character varying AS nps_service_recommendation, \n        CASE\n            WHEN nps.text1_bad_answer::text = ''::character varying::text THEN \n                CASE\n                    WHEN nps.text1_neutral_answer::text = ''::character varying::text THEN \n                        CASE\n                            WHEN nps.text1_good_answer::text = ''::character varying::text THEN ''::character varying::text\n                            ELSE 'Good: '::character varying::text || nps.text1_good_answer::text\n                        END\n                    ELSE 'Neutral: '::character varying::text || nps.text1_neutral_answer::text\n                END\n            ELSE (((('Bad: '::character varying::text || nps.text1_bad_answer::text) || ' Neutral: '::character varying::text) || nps.text1_neutral_answer::text) || ' Good: '::character varying::text) || nps.text1_good_answer::text\n        END AS comments\n    FROM {{ref('stg_survicate_nps_tenant_new_sub')}} nps\n    WHERE nps.first_response_date::date <= '2021-10-24'::date\n)\nSELECT *\nFROM nps_whatsapp\nUNION ALL \nSELECT *\nFROM nps_survicate\nORDER BY 1 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc", "model.houm.stg_survicate_nps_tenant_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_tenants_pc"], "unique_id": "model.houm.proc_cx_nps_tenants_pc", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_tenants_pc.sql", "original_file_path": "models/processing/cx/proc_cx_nps_tenants_pc.sql", "name": "proc_cx_nps_tenants_pc", "alias": "proc_cx_nps_tenants_pc", "checksum": {"name": "sha256", "checksum": "6e3bcf727c12dfbc7963c5554d60e6a33aa8557176e6ea64e3a5fa4017daca1e"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_rentas_tenant_pc"], ["stg_survicate_nps_tenant_new_sub"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_tenants_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.512382, "compiled_sql": "\n\nWITH nps_whatsapp AS (\n\tSELECT\n\t    CASE\n    \t    WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '2021-10-25'::date\n\t\t    ELSE \"left\"(nps.answered_at, 10)::date\n\t    END AS date, \n        CASE\n            WHEN nps.answered_at IS NULL OR nps.answered_at = '' THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.answered_at, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100\n            WHEN nps.recommendation IN (7,8) THEN 0.00\n            WHEN nps.recommendation BETWEEN 0 AND 6 THEN - 100\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.country, \n        nps.answered_at, \n        nps.property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        nps.response_quickness,\n        nps.contract_signature,\n        nps.payment_easyness AS payment_easiness,\n        nps.recommendation,\n        nps.comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_tenant_pc\" nps\n),\nnps_survicate as ( \n\tSELECT \n        \"left\"(nps.first_response_date::character varying::text, 10)::date AS date, \"right\"(nps.first_response_date::character varying::text, 8)::time without time zone AS \"time\", nps.nps * 100 AS nps, ''::character varying AS name, ''::character varying AS phone, 'tenant_poscontract'::character varying AS \"role\", nps.country, nps.first_response_date::character varying AS first_response_date, ''::character varying AS contract_id, \n        CASE\n            WHEN nps.sc1_customer_source::text = 'Publicidad'::character varying::text THEN '1.Publicidad'::character varying\n            WHEN nps.sc1_customer_source::text = 'Googleando'::character varying::text THEN '2.Google'::character varying\n            WHEN nps.sc1_customer_source::text = 'Me lo recomendaron'::character varying::text THEN '3.Me lo recomendaron'::character varying\n            WHEN nps.sc1_customer_source::text = 'Redes sociales'::character varying::text THEN '4.Redes sociales'::character varying\n            WHEN nps.sc1_customer_source::text = 'De un portal de propiedades'::character varying::text THEN '5.De un portal de propiedades'::character varying\n            WHEN nps.sc1_customer_source::text = 'Otro'::character varying::text THEN '6.Otro'::character varying\n            ELSE NULL::character varying\n        END AS source, \n        CASE\n            WHEN nps.m1_answer_speed::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_answer_speed::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_answer_speed::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_answer_speed::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_answer_speed::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS response_quickness, \n        CASE\n            WHEN nps.m1_contract_signing_easiness::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_contract_signing_easiness::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS contract_signature, \n        CASE\n            WHEN nps.m1_payment_easiness::text = 'Muy de acuerdo'::character varying::text THEN '10'::character varying\n            WHEN nps.m1_payment_easiness::text = 'De acuerdo'::character varying::text THEN '8'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Neutro'::character varying::text THEN '6'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Desacuerdo'::character varying::text THEN '4'::character varying\n            WHEN nps.m1_payment_easiness::text = 'Muy en desacuerdo'::character varying::text THEN '2'::character varying\n            ELSE NULL::character varying\n        END AS payment_easiness, nps.nps_service_recommendation::character varying AS nps_service_recommendation, \n        CASE\n            WHEN nps.text1_bad_answer::text = ''::character varying::text THEN \n                CASE\n                    WHEN nps.text1_neutral_answer::text = ''::character varying::text THEN \n                        CASE\n                            WHEN nps.text1_good_answer::text = ''::character varying::text THEN ''::character varying::text\n                            ELSE 'Good: '::character varying::text || nps.text1_good_answer::text\n                        END\n                    ELSE 'Neutral: '::character varying::text || nps.text1_neutral_answer::text\n                END\n            ELSE (((('Bad: '::character varying::text || nps.text1_bad_answer::text) || ' Neutral: '::character varying::text) || nps.text1_neutral_answer::text) || ' Good: '::character varying::text) || nps.text1_good_answer::text\n        END AS comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_new_sub\" nps\n    WHERE nps.first_response_date::date <= '2021-10-24'::date\n)\nSELECT *\nFROM nps_whatsapp\nUNION ALL \nSELECT *\nFROM nps_survicate\nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_tenants_pc\""}, "model.houm.proc_cx_nps_visit_cancelled": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_visits_cancelled AS (\n\tSELECT \n        address,\n\t\tcountry,\n\t\tcomments,\n\t\tappraiser,\n\t\tvisit_type,\n\t\tschedule_id,\n\t\tproperty_id,\n\t\t(split_part(begin_date,'-',3)||'-'||split_part(begin_date,'-',2)||'-'||split_part(begin_date,'-',1))::date AS begin_date,\n\t\tanswered_at,\n\t\trecommendation \n\tFROM {{ref('stg_whatsapp_nps_visits_cancelled')}} acv \n)\n,scheduler_schedules AS (\n\tSELECT \n        schedule_id AS id, \n        begin_date\n\tFROM {{ref('proc_tmp_demand_schedules_cleaned')}}\n\tWHERE \n\t\tSTATUS = 'Cancelled'\t\n\t\tAND begin_date BETWEEN '2022-01-08' AND '{{ var(\"processed_time\") }}'::date\n)\n,clean_nps AS (\n\tSELECT \n        INITCAP(LOWER(nvc.country)) AS country,\n\t\tnvc.visit_type,\n\t\tnvc.schedule_id,\n\t\tnvc.property_id,\n\t\tcoalesce(nvc.begin_date,scheduler_schedules.begin_date) as begin_date,\n\t\tcoalesce(answered_at,scheduler_schedules.begin_date,nvc.begin_date) AS formated_answer_timestamp,\n\t\tnvc.address,\n\t\tnvc.appraiser,\n\t\tnvc.recommendation::integer,\n\t\tnvc.comments\n\tFROM nps_visits_cancelled nvc \n\tLEFT JOIN scheduler_schedules ON scheduler_schedules.id = nvc.schedule_id \n)\nSELECT \n    clean_nps.*, \n\tformated_answer_timestamp::date AS formated_answer_date,\n\tto_char(formated_answer_timestamp,'HH24:MI:SS') AS formated_answer_time \nFROM clean_nps", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_visits_cancelled", "model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_visit_cancelled"], "unique_id": "model.houm.proc_cx_nps_visit_cancelled", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_visit_cancelled.sql", "original_file_path": "models/processing/cx/proc_cx_nps_visit_cancelled.sql", "name": "proc_cx_nps_visit_cancelled", "alias": "proc_cx_nps_visit_cancelled", "checksum": {"name": "sha256", "checksum": "e70a2d8d8a031b24aaa92e597f03d114ca69faf09cebed08dd6aee37b6acb58c"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_visits_cancelled"], ["proc_tmp_demand_schedules_cleaned"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_visit_cancelled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1664825037.514184, "compiled_sql": "\n\nWITH nps_visits_cancelled AS (\n\tSELECT \n        address,\n\t\tcountry,\n\t\tcomments,\n\t\tappraiser,\n\t\tvisit_type,\n\t\tschedule_id,\n\t\tproperty_id,\n\t\t(split_part(begin_date,'-',3)||'-'||split_part(begin_date,'-',2)||'-'||split_part(begin_date,'-',1))::date AS begin_date,\n\t\tanswered_at,\n\t\trecommendation \n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_visits_cancelled\" acv \n)\n,scheduler_schedules AS (\n\tSELECT \n        schedule_id AS id, \n        begin_date\n\tFROM \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\n\tWHERE \n\t\tSTATUS = 'Cancelled'\t\n\t\tAND begin_date BETWEEN '2022-01-08' AND '2022-10-11 18:29:46.503778-03:00'::date\n)\n,clean_nps AS (\n\tSELECT \n        INITCAP(LOWER(nvc.country)) AS country,\n\t\tnvc.visit_type,\n\t\tnvc.schedule_id,\n\t\tnvc.property_id,\n\t\tcoalesce(nvc.begin_date,scheduler_schedules.begin_date) as begin_date,\n\t\tcoalesce(answered_at,scheduler_schedules.begin_date,nvc.begin_date) AS formated_answer_timestamp,\n\t\tnvc.address,\n\t\tnvc.appraiser,\n\t\tnvc.recommendation::integer,\n\t\tnvc.comments\n\tFROM nps_visits_cancelled nvc \n\tLEFT JOIN scheduler_schedules ON scheduler_schedules.id = nvc.schedule_id \n)\nSELECT \n    clean_nps.*, \n\tformated_answer_timestamp::date AS formated_answer_date,\n\tto_char(formated_answer_timestamp,'HH24:MI:SS') AS formated_answer_time \nFROM clean_nps", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_visit_cancelled\""}, "model.houm.proc_monthly_daily_inflation_mx": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_mx') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_mx"], "unique_id": "model.houm.proc_monthly_daily_inflation_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "name": "proc_monthly_daily_inflation_mx", "alias": "proc_monthly_daily_inflation_mx", "checksum": {"name": "sha256", "checksum": "a0e46aeb50615f128eb111cbc1923708729639f05ba84ff98d007068472dc5ba"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_mx"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1664825037.518065, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\""}, "model.houm.proc_monthly_daily_inflation_co": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_co') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_co"], "unique_id": "model.houm.proc_monthly_daily_inflation_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "name": "proc_monthly_daily_inflation_co", "alias": "proc_monthly_daily_inflation_co", "checksum": {"name": "sha256", "checksum": "d75ca539417ee8ab0d909840ac4fb787fc086054928d01b35a53f8a766a48228"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_co"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1664825037.519527, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\""}, "model.houm.proc_monthly_daily_inflation_cl": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_cl') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_cl"], "unique_id": "model.houm.proc_monthly_daily_inflation_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "name": "proc_monthly_daily_inflation_cl", "alias": "proc_monthly_daily_inflation_cl", "checksum": {"name": "sha256", "checksum": "ed0edaf66573068c5a527e893215298f9e897dfa7d0d2bba03e13e9f4defc7b9"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_cl"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1664825037.520714, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\""}, "model.houm.proc_core_cancelations": {"raw_sql": "{{ config(materialized='table') }}\nWITH \nunion_cancelations AS (\nSELECT *\nFROM {{ ref('proc_app_cancelations') }}\nUNION \nSELECT *\nFROM {{ ref('proc_others_cancelations') }}   \n)\n\n, first_cancelation AS (\nSELECT *\nFROM {{ ref('proc_first_cancelation') }}   \n)\n\nSELECT \n    union_cancelations.cancelation_id ,\n    union_cancelations.schedule_id ,\n    first_cancelation.cancelled_at ,\n    union_cancelations.cancel_type ,\n    union_cancelations.cancel_reason ,\n    union_cancelations.roles , \n    union_cancelations.cancel_reason_text ,\n    union_cancelations.comment AS cancel_comment ,\n    union_cancelations.latitude_appraiser AS cancel_latitude_appraiser ,\n    union_cancelations.longitude_appraiser AS cancel_longitude_appraiser ,\n    union_cancelations.appraiser_id , \n    union_cancelations.name_appraiser ,\n    union_cancelations.email_appraiser ,\n    union_cancelations.cancel_timing ,\n    first_cancelation.origin AS first_cancelation_origin ,\n    first_cancelation.user_id AS first_cancel_user_id\nFROM first_cancelation\nLEFT JOIN union_cancelations\n   ON first_cancelation.schedule_id = union_cancelations.schedule_id\n   AND first_cancelation.cancelled_at = union_cancelations.cancelled_at\nWHERE union_cancelations.schedule_id IS NOT NULL", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations", "model.houm.proc_first_cancelation"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_core_cancelations"], "unique_id": "model.houm.proc_core_cancelations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_core_cancelations.sql", "original_file_path": "models/processing/demand/proc_core_cancelations.sql", "name": "proc_core_cancelations", "alias": "proc_core_cancelations", "checksum": {"name": "sha256", "checksum": "e1f205efec35f11ee0df8701526ac61a1a6fe5e3c2447bf4680dba9c01abab13"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_app_cancelations"], ["proc_others_cancelations"], ["proc_first_cancelation"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_core_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.522018, "compiled_sql": "\nWITH \nunion_cancelations AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_app_cancelations\"\nUNION \nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_others_cancelations\"   \n)\n\n, first_cancelation AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_first_cancelation\"   \n)\n\nSELECT \n    union_cancelations.cancelation_id ,\n    union_cancelations.schedule_id ,\n    first_cancelation.cancelled_at ,\n    union_cancelations.cancel_type ,\n    union_cancelations.cancel_reason ,\n    union_cancelations.roles , \n    union_cancelations.cancel_reason_text ,\n    union_cancelations.comment AS cancel_comment ,\n    union_cancelations.latitude_appraiser AS cancel_latitude_appraiser ,\n    union_cancelations.longitude_appraiser AS cancel_longitude_appraiser ,\n    union_cancelations.appraiser_id , \n    union_cancelations.name_appraiser ,\n    union_cancelations.email_appraiser ,\n    union_cancelations.cancel_timing ,\n    first_cancelation.origin AS first_cancelation_origin ,\n    first_cancelation.user_id AS first_cancel_user_id\nFROM first_cancelation\nLEFT JOIN union_cancelations\n   ON first_cancelation.schedule_id = union_cancelations.schedule_id\n   AND first_cancelation.cancelled_at = union_cancelations.cancelled_at\nWHERE union_cancelations.schedule_id IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_cancelations\""}, "model.houm.proc_core_scheduler_schedules": {"raw_sql": "{{ config(materialized='table') }}\nWITH schedules AS (\nSELECT \n    scheduler_schedules.id AS schedule_id ,\n    scheduler_schedules.begin_date ,\n    scheduler_schedules.end_date ,\n    scheduler_schedules.updated_at ,\n    scheduler_schedules.prop_id AS property_id ,\n    proc_properties_mz.geo_id ,\n    scheduler_schedules.status ,\n    scheduler_scheduletypes.name AS visit_type ,\n    scheduler_schedulehasapplicant.applicant_id\nFROM {{ ref('stg_scheduler_schedules') }} AS scheduler_schedules\nLEFT JOIN {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes\n    ON scheduler_schedules.schedule_type_id = scheduler_scheduletypes.id \nLEFT JOIN {{ ref('proc_properties_mz') }} AS proc_properties_mz\n    ON proc_properties_mz.property_id = scheduler_schedules.prop_id \nLEFT JOIN {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id = scheduler_schedules.id \n)\n, rescheduled AS (\nSELECT \n    id ,\n    schedule_id ,\n    created_at\nFROM {{ ref('stg_scheduler_scheduleevent') }} AS scheduler_scheduleevent\nWHERE action IN  ('Reschedule', 'Rescheduled')\n)\n, rescheduled_max AS (\nSELECT\n    a.*\nFROM rescheduled AS a\nINNER JOIN (\n    SELECT\n        schedule_id ,\n        MAX(created_at) AS created_at\n    FROM rescheduled\n    GROUP BY schedule_id\n) AS b\n     ON a.created_at = b.created_at AND a.schedule_id = b.schedule_id\n)\nSELECT\n    schedules.* ,\n    rescheduled_max.created_at AS rescheduled_at ,\n    CASE\n        WHEN rescheduled_max.id IS NOT NULL THEN true\n        ELSE false\n    END AS is_reschedule\nFROM schedules\nLEFT JOIN rescheduled_max\n    ON schedules.schedule_id = rescheduled_max.schedule_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.proc_properties_mz", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_scheduleevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_core_scheduler_schedules"], "unique_id": "model.houm.proc_core_scheduler_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_core_scheduler_schedules.sql", "original_file_path": "models/processing/demand/proc_core_scheduler_schedules.sql", "name": "proc_core_scheduler_schedules", "alias": "proc_core_scheduler_schedules", "checksum": {"name": "sha256", "checksum": "d90f593e055bfca9c0378d5040a0b03468168493fb51a6aecfb4c61ceb4adf2a"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["proc_properties_mz"], ["stg_scheduler_schedulehasapplicant"], ["stg_scheduler_scheduleevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_core_scheduler_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.523607, "compiled_sql": "\nWITH schedules AS (\nSELECT \n    scheduler_schedules.id AS schedule_id ,\n    scheduler_schedules.begin_date ,\n    scheduler_schedules.end_date ,\n    scheduler_schedules.updated_at ,\n    scheduler_schedules.prop_id AS property_id ,\n    proc_properties_mz.geo_id ,\n    scheduler_schedules.status ,\n    scheduler_scheduletypes.name AS visit_type ,\n    scheduler_schedulehasapplicant.applicant_id\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS scheduler_schedules\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes\n    ON scheduler_schedules.schedule_type_id = scheduler_scheduletypes.id \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS proc_properties_mz\n    ON proc_properties_mz.property_id = scheduler_schedules.prop_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant\n    ON scheduler_schedulehasapplicant.schedule_id = scheduler_schedules.id \n)\n, rescheduled AS (\nSELECT \n    id ,\n    schedule_id ,\n    created_at\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\" AS scheduler_scheduleevent\nWHERE action IN  ('Reschedule', 'Rescheduled')\n)\n, rescheduled_max AS (\nSELECT\n    a.*\nFROM rescheduled AS a\nINNER JOIN (\n    SELECT\n        schedule_id ,\n        MAX(created_at) AS created_at\n    FROM rescheduled\n    GROUP BY schedule_id\n) AS b\n     ON a.created_at = b.created_at AND a.schedule_id = b.schedule_id\n)\nSELECT\n    schedules.* ,\n    rescheduled_max.created_at AS rescheduled_at ,\n    CASE\n        WHEN rescheduled_max.id IS NOT NULL THEN true\n        ELSE false\n    END AS is_reschedule\nFROM schedules\nLEFT JOIN rescheduled_max\n    ON schedules.schedule_id = rescheduled_max.schedule_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_scheduler_schedules\""}, "model.houm.proc_core_appraisers": {"raw_sql": "{{ config(materialized='table') }}\nSELECT \n    scheduler_appraisers.id , \n    scheduler_appraisers.created_at ,\n    scheduler_appraisers.updated_at ,\n    scheduler_appraisers.country , \n    scheduler_appraisers.name , \n    scheduler_appraisers.phone , \n    scheduler_appraisers.email ,\n    scheduler_appraisers.active , \n    scheduler_appraisers.roles ,\n    CASE \n        WHEN roles::text LIKE '%Dummy%' THEN true \n        ELSE false \n        END AS is_dummy\nFROM {{ ref('stg_scheduler_appraisers') }} AS scheduler_appraisers", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_core_appraisers"], "unique_id": "model.houm.proc_core_appraisers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_core_appraisers.sql", "original_file_path": "models/processing/demand/proc_core_appraisers.sql", "name": "proc_core_appraisers", "alias": "proc_core_appraisers", "checksum": {"name": "sha256", "checksum": "da2ec90f5d76fc7aedaef5ba81441aaf1409036c4138e5c3b815f356b81d3c9a"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_appraisers"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_core_appraisers.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5255659, "compiled_sql": "\nSELECT \n    scheduler_appraisers.id , \n    scheduler_appraisers.created_at ,\n    scheduler_appraisers.updated_at ,\n    scheduler_appraisers.country , \n    scheduler_appraisers.name , \n    scheduler_appraisers.phone , \n    scheduler_appraisers.email ,\n    scheduler_appraisers.active , \n    scheduler_appraisers.roles ,\n    CASE \n        WHEN roles::text LIKE '%Dummy%' THEN true \n        ELSE false \n        END AS is_dummy\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" AS scheduler_appraisers", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_appraisers\""}, "model.houm.proc_demand_schedules_timing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH \nrelevant_events AS (\n    SELECT *\n    FROM {{ ref('proc_demand_schedules_appraiserevent') }} AS proc_demand_schedules_appraiserevent\n)\n\n, schedules_time AS (\n    SELECT \n        id schedule_id,\n        created_at,\n        begin_date,\n        end_date,\n        updated_at\n    FROM {{ ref('stg_scheduler_schedules')}}\n)\n-- modificar en un futuro, ideal utilizar proc_demand_schedules, pero no tiene timestamp de fecha\n\n, max_event AS (\n    SELECT \n    a.*\n    FROM relevant_events AS a    \n    INNER JOIN \n          (SELECT \n           schedule_id,\n           action,\n           MAX(created_at) AS created_at\n           FROM relevant_events \n           GROUP BY 1,2    \n          ) AS b \n        ON a.schedule_id = b.schedule_id\n            AND a.action = b.action \n            AND a.created_at = b.created_at\n)\n\n\n, arrived_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Arrived'\n)\n\n, start_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Started'\n)\n\n, done_event AS (\n    SELECT *\n    FROM max_event\n    WHERE action = 'Done'\n)\n\n, schedules AS (\n    SELECT \n        proc_demand_schedules.schedule_id,\n        proc_demand_schedules.property_id,\n        dim_macrozones.country,\n        dim_macrozones.geo_id,\n        proc_propertydetails.latitud,\n        proc_propertydetails.longitud,\n        schedules_time.created_at,\n        schedules_time.begin_date,\n        schedules_time.end_date,\n        schedules_time.updated_at,\n        proc_demand_schedules.status,\n        scheduler_appraisers.name,\n        proc_demand_schedules.roles, \n        proc_demand_schedules.schedule_type_name,\n        CASE WHEN proc_demand_schedules.email LIKE '%test.test%'\n             OR proc_demand_schedules.email LIKE '%test.com%'\n             OR proc_demand_schedules.applicant_id IS NULL \n             OR scheduler_appraisers.email in \n             ('oliver.houmtest@gmail.com',\n              'nadiana.cazorla@houm.com',\n              'ivan.santibanez@houm.com',\n              'luis.montecinos@houm.com',\n              'evelyn.gonzalez@houm.com',\n              'houmer_cl@houm.com',\n              'ivan.cerda@houm.com',\n              'alejandra.ramirez@houm.com',\n              'manuel.duran@houm.com',\n              'eyal.levy@houm.com',\n              'antoni.fuenmayor@houm.com',\n              'sonia.alvarado@houm.com') THEN TRUE\n             ELSE FALSE \n             END AS is_test,\n        CASE WHEN scheduler_appraisers.roles::text LIKE '%Dummy%' THEN TRUE \n             ELSE FALSE \n             END AS is_dummy   \n    FROM {{ ref('proc_demand_schedules') }} proc_demand_schedules\n    LEFT JOIN schedules_time \n       ON schedules_time.schedule_id = proc_demand_schedules.schedule_id\n    LEFT JOIN {{ ref('proc_propertydetails') }} proc_propertydetails\n       ON proc_propertydetails.property_id = proc_demand_schedules.property_id \n    LEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers      \n       ON scheduler_appraisers.email = proc_demand_schedules.appraiser_email\n    LEFT JOIN {{ ref('proc_properties_mz') }} proc_properties_mz\n       ON proc_properties_mz.property_id = proc_demand_schedules.property_id\n    LEFT JOIN {{ ref('dim_macrozones') }} dim_macrozones  \n       ON dim_macrozones.geo_id = proc_properties_mz.geo_id \n    WHERE TRUE\n    AND proc_demand_schedules.supply_relation!='New Properties'\n    AND scheduler_appraisers.roles::text NOT LIKE '%NonActive%'\n    AND proc_demand_schedules.begin_date IS NOT NULL \n    AND proc_demand_schedules.created_at IS NOT NULL \n    )\n\nSELECT \n    schedules.schedule_id,\n    schedules.property_id,\n    schedules.country,\n    schedules.geo_id,\n    schedules.latitud latitude,\n    schedules.longitud longitude,\n    schedules.created_at,\n    schedules.begin_date,\n    schedules.end_date,\n    schedules.status,\n    schedules.schedule_type_name,\n    schedules.name houmer,\n    schedules.roles,\n    ST_Transform(ST_SetSRID(ST_Point(arrived_event.longitude, arrived_event.latitude), 4326), 3857) AS arrived_point,\n    ST_Transform(ST_SetSRID(ST_Point(start_event.longitude,  start_event.latitude), 4326), 3857) as start_point,  \n    ST_Transform(ST_SetSRID(ST_Point(done_event.longitude,  done_event.latitude), 4326), 3857) AS done_point,\n    ST_Transform(ST_SetSRID(ST_Point(schedules.longitud, schedules.latitud), 4326) , 3857) AS property_point ,\n    arrived_event.created_at AS arrived_date, -- fecha_llegada_visita,\n    start_event.created_at AS start_date, -- fecha_inicio_visita,\n    done_event.created_at AS done_date, --fecha_termino_visita\n    schedules.is_dummy,\n    schedules.is_test\nFROM schedules \nLEFT JOIN done_event\n   ON done_event.schedule_id = schedules.schedule_id\nLEFT JOIN start_event\n   ON start_event.schedule_id = schedules.schedule_id\nLEFT JOIN  arrived_event\n   ON arrived_event.schedule_id = schedules.schedule_id\nORDER BY schedules.schedule_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules_appraiserevent", "model.houm.stg_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_propertydetails", "model.houm.stg_scheduler_appraisers", "model.houm.proc_properties_mz", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules_timing"], "unique_id": "model.houm.proc_demand_schedules_timing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules_timing.sql", "original_file_path": "models/processing/demand/proc_demand_schedules_timing.sql", "name": "proc_demand_schedules_timing", "alias": "proc_demand_schedules_timing", "checksum": {"name": "sha256", "checksum": "73942d5e6a1ef74de20dc914f8b532c7c529a696302887c25029d5a602daa40a"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_demand_schedules_appraiserevent"], ["stg_scheduler_schedules"], ["proc_demand_schedules"], ["proc_propertydetails"], ["stg_scheduler_appraisers"], ["proc_properties_mz"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules_timing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.526897, "compiled_sql": "\n\nWITH \nrelevant_events AS (\n    SELECT *\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_appraiserevent\" AS proc_demand_schedules_appraiserevent\n)\n\n, schedules_time AS (\n    SELECT \n        id schedule_id,\n        created_at,\n        begin_date,\n        end_date,\n        updated_at\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\"\n)\n-- modificar en un futuro, ideal utilizar proc_demand_schedules, pero no tiene timestamp de fecha\n\n, max_event AS (\n    SELECT \n    a.*\n    FROM relevant_events AS a    \n    INNER JOIN \n          (SELECT \n           schedule_id,\n           action,\n           MAX(created_at) AS created_at\n           FROM relevant_events \n           GROUP BY 1,2    \n          ) AS b \n        ON a.schedule_id = b.schedule_id\n            AND a.action = b.action \n            AND a.created_at = b.created_at\n)\n\n\n, arrived_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Arrived'\n)\n\n, start_event AS (\n    SELECT *\n    FROM max_event \n    WHERE action = 'Started'\n)\n\n, done_event AS (\n    SELECT *\n    FROM max_event\n    WHERE action = 'Done'\n)\n\n, schedules AS (\n    SELECT \n        proc_demand_schedules.schedule_id,\n        proc_demand_schedules.property_id,\n        dim_macrozones.country,\n        dim_macrozones.geo_id,\n        proc_propertydetails.latitud,\n        proc_propertydetails.longitud,\n        schedules_time.created_at,\n        schedules_time.begin_date,\n        schedules_time.end_date,\n        schedules_time.updated_at,\n        proc_demand_schedules.status,\n        scheduler_appraisers.name,\n        proc_demand_schedules.roles, \n        proc_demand_schedules.schedule_type_name,\n        CASE WHEN proc_demand_schedules.email LIKE '%test.test%'\n             OR proc_demand_schedules.email LIKE '%test.com%'\n             OR proc_demand_schedules.applicant_id IS NULL \n             OR scheduler_appraisers.email in \n             ('oliver.houmtest@gmail.com',\n              'nadiana.cazorla@houm.com',\n              'ivan.santibanez@houm.com',\n              'luis.montecinos@houm.com',\n              'evelyn.gonzalez@houm.com',\n              'houmer_cl@houm.com',\n              'ivan.cerda@houm.com',\n              'alejandra.ramirez@houm.com',\n              'manuel.duran@houm.com',\n              'eyal.levy@houm.com',\n              'antoni.fuenmayor@houm.com',\n              'sonia.alvarado@houm.com') THEN TRUE\n             ELSE FALSE \n             END AS is_test,\n        CASE WHEN scheduler_appraisers.roles::text LIKE '%Dummy%' THEN TRUE \n             ELSE FALSE \n             END AS is_dummy   \n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\" proc_demand_schedules\n    LEFT JOIN schedules_time \n       ON schedules_time.schedule_id = proc_demand_schedules.schedule_id\n    LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" proc_propertydetails\n       ON proc_propertydetails.property_id = proc_demand_schedules.property_id \n    LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers      \n       ON scheduler_appraisers.email = proc_demand_schedules.appraiser_email\n    LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" proc_properties_mz\n       ON proc_properties_mz.property_id = proc_demand_schedules.property_id\n    LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_macrozones  \n       ON dim_macrozones.geo_id = proc_properties_mz.geo_id \n    WHERE TRUE\n    AND proc_demand_schedules.supply_relation!='New Properties'\n    AND scheduler_appraisers.roles::text NOT LIKE '%NonActive%'\n    AND proc_demand_schedules.begin_date IS NOT NULL \n    AND proc_demand_schedules.created_at IS NOT NULL \n    )\n\nSELECT \n    schedules.schedule_id,\n    schedules.property_id,\n    schedules.country,\n    schedules.geo_id,\n    schedules.latitud latitude,\n    schedules.longitud longitude,\n    schedules.created_at,\n    schedules.begin_date,\n    schedules.end_date,\n    schedules.status,\n    schedules.schedule_type_name,\n    schedules.name houmer,\n    schedules.roles,\n    ST_Transform(ST_SetSRID(ST_Point(arrived_event.longitude, arrived_event.latitude), 4326), 3857) AS arrived_point,\n    ST_Transform(ST_SetSRID(ST_Point(start_event.longitude,  start_event.latitude), 4326), 3857) as start_point,  \n    ST_Transform(ST_SetSRID(ST_Point(done_event.longitude,  done_event.latitude), 4326), 3857) AS done_point,\n    ST_Transform(ST_SetSRID(ST_Point(schedules.longitud, schedules.latitud), 4326) , 3857) AS property_point ,\n    arrived_event.created_at AS arrived_date, -- fecha_llegada_visita,\n    start_event.created_at AS start_date, -- fecha_inicio_visita,\n    done_event.created_at AS done_date, --fecha_termino_visita\n    schedules.is_dummy,\n    schedules.is_test\nFROM schedules \nLEFT JOIN done_event\n   ON done_event.schedule_id = schedules.schedule_id\nLEFT JOIN start_event\n   ON start_event.schedule_id = schedules.schedule_id\nLEFT JOIN  arrived_event\n   ON arrived_event.schedule_id = schedules.schedule_id\nORDER BY schedules.schedule_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_timing\""}, "model.houm.proc_external_portal_leads_per_publication": {"raw_sql": "{{ \n        config(\n    materialized='table',\n    tags = ['arriendoasegurado','external_portal_integrations'],\n        ) \n    }}\n\nWITH destaques_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                                                                         AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                                                                            AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name                                                      AS load_status,\n           external_portal_integrations_loadstatus.uses_slot,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                                                           AS publication_business_type,\n           external_portal_integrations_portalplan.vigency                                                   AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name                                                 AS portal_name,\n           external_portal_integrations_externalportals.short_name                                           AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name                                                    AS country_name,\n           external_portal_integrations_country.iso_name                                                     AS country_iso_name,\n           LAG(publication_pretty_name)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt)                                        AS previous_state,\n           CASE\n               WHEN (previous_state != publication_pretty_name OR previous_state IS NULL) THEN 1\n               ELSE 0 END                                                                                    AS publication_change_aux\n\n    FROM {{ ref('stg_external_portal_integrations_publication_scd') }} AS pub\n\n             LEFT JOIN {{ ref('stg_external_portal_integrations_loadstatus') }} AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }} AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }} AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }} AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN {{ ref('stg_external_portal_integrations_country') }} AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n      AND audit_action != 'D'\n)\n\n   , periodos_destaques_aux AS (\n    SELECT\n        destaques_historicos_publicaciones.publication_id,\n        destaques_historicos_publicaciones.portal_name,\n        destaques_historicos_publicaciones.publication_business_type,\n        destaques_historicos_publicaciones.publication_pretty_name                                                                                      AS  publication_type,\n        destaques_historicos_publicaciones.country_name,\n        destaques_historicos_publicaciones.property_id                                                                                                  AS  property_id_publication,\n        destaques_historicos_publicaciones.audit_start_dt,\n        destaques_historicos_publicaciones.audit_end_dt_aux,\n        destaques_historicos_publicaciones.previous_state,\n        destaques_historicos_publicaciones.publication_change_aux,\n        SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )    AS  publication_change_logs\n\n    FROM destaques_historicos_publicaciones\n\n    WHERE TRUE\n)\n   , periodos_destaques AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           publication_business_type,\n           publication_type,\n           property_id_publication,\n           publication_change_logs,\n           MIN(audit_start_dt)   audit_start_dt,\n           MAX(audit_end_dt_aux) audit_end_dt_aux\n    FROM periodos_destaques_aux\n    GROUP BY 1, 2, 3, 4, 5, 6, 7\n)\n\n   , stg_demand_portalapplicant AS (\n    SELECT stg_demand_portalapplicant.id,\n           stg_demand_portalapplicant.created_at,\n           name,\n           last_name,\n           email,\n           phone,\n           CASE WHEN origin LIKE 'Inmuebles24 Premier' THEN 'Inmuebles24' ELSE origin END   AS origin_lead,\n           lead_id,\n           property_id                                                                      AS property_id_lead,\n           stg_demand_portalapplicant.business_type                                         AS business_type_lead,\n           proc_properties.country                                                          AS country_lead\n    FROM {{ ref('stg_demand_portalapplicant') }} AS stg_demand_portalapplicant\n             LEFT JOIN {{ ref('proc_properties') }} AS proc_properties ON stg_demand_portalapplicant.property_id = proc_properties.id\n    WHERE TRUE\n        AND stg_demand_portalapplicant.created_at > '2022-08-01'\n        AND proc_properties.country IS NOT NULL\n\n      AND email NOT LIKE '%test%' AND email NOT LIKE '%houm%' AND email NOT LIKE '%dummy%'\n\n)\n--, final as (\nSELECT \n\n       periodos_destaques.publication_id,\n       COALESCE(periodos_destaques.property_id_publication, stg_demand_portalapplicant.property_id_lead)    AS property_id,\n       COALESCE(periodos_destaques.country_name, stg_demand_portalapplicant.country_lead)                   AS country,\n       COALESCE(periodos_destaques.portal_name, stg_demand_portalapplicant.origin_lead)                     AS portal,\n       COALESCE(periodos_destaques.publication_business_type,stg_demand_portalapplicant.business_type_lead) AS business_type,\n       CASE\n           WHEN periodos_destaques.publication_type IS NULL THEN 'Publication Type Not Found'\n           ELSE periodos_destaques.publication_type END                                                     AS publication_type,\n\n       periodos_destaques.publication_change_logs,\n       periodos_destaques.audit_start_dt,\n       periodos_destaques.audit_end_dt_aux,\n       stg_demand_portalapplicant.id demand_portalapplicant_id,\n       stg_demand_portalapplicant.created_at,\n       stg_demand_portalapplicant.name,\n       stg_demand_portalapplicant.last_name,\n       stg_demand_portalapplicant.email,\n       stg_demand_portalapplicant.phone,\n       stg_demand_portalapplicant.origin_lead,\n       stg_demand_portalapplicant.lead_id,\n       stg_demand_portalapplicant.property_id_lead,\n       stg_demand_portalapplicant.business_type_lead                                                             AS business_type_lead,\n       stg_demand_portalapplicant.country_lead \n\nFROM periodos_destaques\n         FULL OUTER JOIN stg_demand_portalapplicant\n                            ON periodos_destaques.property_id_publication = stg_demand_portalapplicant.property_id_lead\n                            AND periodos_destaques.publication_business_type = stg_demand_portalapplicant.business_type_lead\n                            AND periodos_destaques.portal_name = stg_demand_portalapplicant.origin_lead\n                            AND (periodos_destaques.audit_start_dt <= stg_demand_portalapplicant.created_at)\n                            AND (stg_demand_portalapplicant.created_at < periodos_destaques.audit_end_dt_aux)\n\nWHERE TRUE\n\nORDER BY publication_id, audit_start_dt ASC, created_at ASC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_country", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand", "arriendoasegurado", "external_portal_integrations"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_external_portal_leads_per_publication"], "unique_id": "model.houm.proc_external_portal_leads_per_publication", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_external_portal_leads_per_publication.sql", "original_file_path": "models/processing/demand/proc_external_portal_leads_per_publication.sql", "name": "proc_external_portal_leads_per_publication", "alias": "proc_external_portal_leads_per_publication", "checksum": {"name": "sha256", "checksum": "10df70da47cb004544ec28561ae9dce9c0e71e40df1b4c15f4fe222c8e68a6eb"}, "tags": ["dw", "processing", "demand", "arriendoasegurado", "external_portal_integrations"], "refs": [["stg_external_portal_integrations_publication_scd"], ["stg_external_portal_integrations_loadstatus"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_country"], ["stg_demand_portalapplicant"], ["proc_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_external_portal_leads_per_publication.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["arriendoasegurado", "external_portal_integrations"]}, "created_at": 1664825037.528202, "compiled_sql": "\n\nWITH destaques_historicos_publicaciones AS (\n    SELECT pub.audit_event_id,\n           pub.audit_start_dt,\n           pub.audit_end_dt,\n           CASE\n               WHEN pub.audit_end_dt IS NULL THEN CURRENT_TIMESTAMP\n               ELSE audit_end_dt END                                                                         AS audit_end_dt_aux,\n           pub.audit_action,\n           pub.id                                                                                            AS publication_id,\n           pub.created_at,\n           pub.updated_at,\n           pub.property_id,\n           pub.failure_reasons,\n           pub.status_id,\n           external_portal_integrations_loadstatus.name                                                      AS load_status,\n           external_portal_integrations_loadstatus.uses_slot,\n           pub.portal_plan_id,\n           CASE external_portal_integrations_portalplan.business_type\n               WHEN 'sale'      THEN 'sales'\n               WHEN 'rental'    THEN 'rentals' END                                                           AS publication_business_type,\n           external_portal_integrations_portalplan.vigency                                                   AS portal_plan_vigency,\n           external_portal_integrations_portalplan.portal_id,\n           external_portal_integrations_portalplan.publication_type_id,\n           external_portal_integrations_publicationtype.publication_name,\n           external_portal_integrations_publicationtype.publication_pretty_name,\n           external_portal_integrations_publicationtype.type_priority,\n           external_portal_integrations_externalportals.name                                                 AS portal_name,\n           external_portal_integrations_externalportals.short_name                                           AS portal_short_name,\n           external_portal_integrations_externalportals.country_id,\n           external_portal_integrations_country.full_name                                                    AS country_name,\n           external_portal_integrations_country.iso_name                                                     AS country_iso_name,\n           LAG(publication_pretty_name)\n           OVER (PARTITION BY publication_id ORDER BY audit_start_dt)                                        AS previous_state,\n           CASE\n               WHEN (previous_state != publication_pretty_name OR previous_state IS NULL) THEN 1\n               ELSE 0 END                                                                                    AS publication_change_aux\n\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publication_scd\" AS pub\n\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_loadstatus\" AS          external_portal_integrations_loadstatus           ON external_portal_integrations_loadstatus.id = pub.status_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\" AS          external_portal_integrations_portalplan           ON external_portal_integrations_portalplan.id = pub.portal_plan_id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\" AS     external_portal_integrations_externalportals      ON external_portal_integrations_portalplan.portal_id = external_portal_integrations_externalportals.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\" AS     external_portal_integrations_publicationtype      ON external_portal_integrations_portalplan.publication_type_id = external_portal_integrations_publicationtype.id\n             LEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\" AS             external_portal_integrations_country              ON external_portal_integrations_country.id = external_portal_integrations_externalportals.country_id\n\n    WHERE TRUE\n      AND audit_action != 'D'\n)\n\n   , periodos_destaques_aux AS (\n    SELECT\n        destaques_historicos_publicaciones.publication_id,\n        destaques_historicos_publicaciones.portal_name,\n        destaques_historicos_publicaciones.publication_business_type,\n        destaques_historicos_publicaciones.publication_pretty_name                                                                                      AS  publication_type,\n        destaques_historicos_publicaciones.country_name,\n        destaques_historicos_publicaciones.property_id                                                                                                  AS  property_id_publication,\n        destaques_historicos_publicaciones.audit_start_dt,\n        destaques_historicos_publicaciones.audit_end_dt_aux,\n        destaques_historicos_publicaciones.previous_state,\n        destaques_historicos_publicaciones.publication_change_aux,\n        SUM(publication_change_aux) OVER (PARTITION BY publication_id ORDER BY audit_start_dt ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )    AS  publication_change_logs\n\n    FROM destaques_historicos_publicaciones\n\n    WHERE TRUE\n)\n   , periodos_destaques AS (\n    SELECT publication_id,\n           country_name,\n           portal_name,\n           publication_business_type,\n           publication_type,\n           property_id_publication,\n           publication_change_logs,\n           MIN(audit_start_dt)   audit_start_dt,\n           MAX(audit_end_dt_aux) audit_end_dt_aux\n    FROM periodos_destaques_aux\n    GROUP BY 1, 2, 3, 4, 5, 6, 7\n)\n\n   , stg_demand_portalapplicant AS (\n    SELECT stg_demand_portalapplicant.id,\n           stg_demand_portalapplicant.created_at,\n           name,\n           last_name,\n           email,\n           phone,\n           CASE WHEN origin LIKE 'Inmuebles24 Premier' THEN 'Inmuebles24' ELSE origin END   AS origin_lead,\n           lead_id,\n           property_id                                                                      AS property_id_lead,\n           stg_demand_portalapplicant.business_type                                         AS business_type_lead,\n           proc_properties.country                                                          AS country_lead\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS stg_demand_portalapplicant\n             LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS proc_properties ON stg_demand_portalapplicant.property_id = proc_properties.id\n    WHERE TRUE\n        AND stg_demand_portalapplicant.created_at > '2022-08-01'\n        AND proc_properties.country IS NOT NULL\n\n      AND email NOT LIKE '%test%' AND email NOT LIKE '%houm%' AND email NOT LIKE '%dummy%'\n\n)\n--, final as (\nSELECT \n\n       periodos_destaques.publication_id,\n       COALESCE(periodos_destaques.property_id_publication, stg_demand_portalapplicant.property_id_lead)    AS property_id,\n       COALESCE(periodos_destaques.country_name, stg_demand_portalapplicant.country_lead)                   AS country,\n       COALESCE(periodos_destaques.portal_name, stg_demand_portalapplicant.origin_lead)                     AS portal,\n       COALESCE(periodos_destaques.publication_business_type,stg_demand_portalapplicant.business_type_lead) AS business_type,\n       CASE\n           WHEN periodos_destaques.publication_type IS NULL THEN 'Publication Type Not Found'\n           ELSE periodos_destaques.publication_type END                                                     AS publication_type,\n\n       periodos_destaques.publication_change_logs,\n       periodos_destaques.audit_start_dt,\n       periodos_destaques.audit_end_dt_aux,\n       stg_demand_portalapplicant.id demand_portalapplicant_id,\n       stg_demand_portalapplicant.created_at,\n       stg_demand_portalapplicant.name,\n       stg_demand_portalapplicant.last_name,\n       stg_demand_portalapplicant.email,\n       stg_demand_portalapplicant.phone,\n       stg_demand_portalapplicant.origin_lead,\n       stg_demand_portalapplicant.lead_id,\n       stg_demand_portalapplicant.property_id_lead,\n       stg_demand_portalapplicant.business_type_lead                                                             AS business_type_lead,\n       stg_demand_portalapplicant.country_lead \n\nFROM periodos_destaques\n         FULL OUTER JOIN stg_demand_portalapplicant\n                            ON periodos_destaques.property_id_publication = stg_demand_portalapplicant.property_id_lead\n                            AND periodos_destaques.publication_business_type = stg_demand_portalapplicant.business_type_lead\n                            AND periodos_destaques.portal_name = stg_demand_portalapplicant.origin_lead\n                            AND (periodos_destaques.audit_start_dt <= stg_demand_portalapplicant.created_at)\n                            AND (stg_demand_portalapplicant.created_at < periodos_destaques.audit_end_dt_aux)\n\nWHERE TRUE\n\nORDER BY publication_id, audit_start_dt ASC, created_at ASC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_external_portal_leads_per_publication\""}, "model.houm.proc_demand_schedules": {"raw_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , (timezone( prop_mz.timezone, schedules.end_date)::timestamp with time zone)::date end_date\n    , (timezone( prop_mz.timezone, schedules.updated_at)::timestamp with time zone)::date updated_at\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , schedules.origin\n    , scheduler_scheduletypes.name as schedule_type_name\n    , scheduler_appraisers.roles\n    , scheduler_appraisers.email as appraiser_email\n    , applicant.email --as applicant_email\n    , applicant.id as  applicant_id \nfrom {{ ref('stg_scheduler_schedules') }} AS schedules\n    left join {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join {{ ref('stg_arriendoasegurado_applicant') }} AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join {{ ref('proc_properties_mz') }} AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join {{ ref('proc_properties') }} AS properties on properties.id = schedules.prop_id\n    left join {{ ref('stg_scheduler_appraisers')}} AS scheduler_appraisers on scheduler_appraisers.id = schedules.appraiser_id\nwhere scheduler_scheduletypes.name in ('Visit','SalesVisit')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties", "model.houm.stg_scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules"], "unique_id": "model.houm.proc_demand_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules.sql", "original_file_path": "models/processing/demand/proc_demand_schedules.sql", "name": "proc_demand_schedules", "alias": "proc_demand_schedules", "checksum": {"name": "sha256", "checksum": "50b0761d8486e28d0d2b9dcca14004132326a2acdad711058a7eb0607c6159f9"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"], ["stg_scheduler_appraisers"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.530048, "compiled_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , (timezone( prop_mz.timezone, schedules.end_date)::timestamp with time zone)::date end_date\n    , (timezone( prop_mz.timezone, schedules.updated_at)::timestamp with time zone)::date updated_at\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , schedules.origin\n    , scheduler_scheduletypes.name as schedule_type_name\n    , scheduler_appraisers.roles\n    , scheduler_appraisers.email as appraiser_email\n    , applicant.email --as applicant_email\n    , applicant.id as  applicant_id \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" AS properties on properties.id = schedules.prop_id\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" AS scheduler_appraisers on scheduler_appraisers.id = schedules.appraiser_id\nwhere scheduler_scheduletypes.name in ('Visit','SalesVisit')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\""}, "model.houm.proc_demand_schedules_appraiserevent": {"raw_sql": "{{ config(materialized='table') }}\nSELECT *\nFROM {{ ref('stg_scheduler_appraiserevent') }} scheduler_appraiserevent \nWHERE action IN ('Done', 'Arrived', 'Started')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules_appraiserevent"], "unique_id": "model.houm.proc_demand_schedules_appraiserevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules_appraiserevent.sql", "original_file_path": "models/processing/demand/proc_demand_schedules_appraiserevent.sql", "name": "proc_demand_schedules_appraiserevent", "alias": "proc_demand_schedules_appraiserevent", "checksum": {"name": "sha256", "checksum": "9c1eae5f8b419d42d6ef6cb632d6fe1383c3ef4321aa6ea275d9e7554b82f7a6"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_appraiserevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules_appraiserevent.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.531395, "compiled_sql": "\nSELECT *\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" scheduler_appraiserevent \nWHERE action IN ('Done', 'Arrived', 'Started')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules_appraiserevent\""}, "model.houm.proc_tmp_demand_schedules_cleaned": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    *\nfrom {{ref('proc_tmp_demand_schedules')}} a\nwhere cancel_reason != '% test%' and schedule_type_name not like 'Manual%' and schedule_type_name not like 'Block%' and schedule_type_name not like 'Keys%'\n and (email not like '%test.test' or email not like '%test.com' or applicant_id is null)\n order by 3 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_schedules_cleaned"], "unique_id": "model.houm.proc_tmp_demand_schedules_cleaned", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_schedules_cleaned.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_schedules_cleaned.sql", "name": "proc_tmp_demand_schedules_cleaned", "alias": "proc_tmp_demand_schedules_cleaned", "checksum": {"name": "sha256", "checksum": "2a0842d0021619d7a42a90f43a48f379214bebba207841bb516af264a202f4f2"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_tmp_demand_schedules"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_schedules_cleaned.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.532683, "compiled_sql": "\n\nselect\n    *\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules\" a\nwhere cancel_reason != '% test%' and schedule_type_name not like 'Manual%' and schedule_type_name not like 'Block%' and schedule_type_name not like 'Keys%'\n and (email not like '%test.test' or email not like '%test.com' or applicant_id is null)\n order by 3 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\""}, "model.houm.proc_app_cancelations": {"raw_sql": "{{ config(materialized='table') }}\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_appraiserevent.created_at cancelled_at ,\n    scheduler_appraiserevent.latitude latitude_appraiser ,\n    scheduler_appraiserevent.longitude longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_appraiserevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_appraiserevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM {{ ref('stg_scheduler_cancelreasons') }} scheduler_cancelreasons        \nLEFT JOIN {{ ref('stg_scheduler_schedules') }} scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN {{ ref('stg_scheduler_cancelreasontypes') }} scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN {{ ref('stg_scheduler_appraiserevent') }} scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nWHERE scheduler_appraiserevent.action = 'Cancelled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_app_cancelations"], "unique_id": "model.houm.proc_app_cancelations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_app_cancelations.sql", "original_file_path": "models/processing/demand/proc_app_cancelations.sql", "name": "proc_app_cancelations", "alias": "proc_app_cancelations", "checksum": {"name": "sha256", "checksum": "e03babb4ed14c4ac39b3d635150e756c32634a95a4d33af7bbb47937010bb2df"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_cancelreasons"], ["stg_scheduler_schedules"], ["stg_scheduler_cancelreasontypes"], ["stg_scheduler_appraiserevent"], ["stg_scheduler_appraisers"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_app_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5339541, "compiled_sql": "\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_appraiserevent.created_at cancelled_at ,\n    scheduler_appraiserevent.latitude latitude_appraiser ,\n    scheduler_appraiserevent.longitude longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_appraiserevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_appraiserevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\" scheduler_cancelreasons        \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\" scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nWHERE scheduler_appraiserevent.action = 'Cancelled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_app_cancelations\""}, "model.houm.proc_first_cancelation": {"raw_sql": "{{ config(materialized='table') }}\nWITH \ncancelation_events AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    editor AS origin , \n    user_id , \n    appraiser_id , \n    0 AS latitude , \n    0 AS longitude \nFROM {{ ref('stg_scheduler_scheduleevent') }}    \nWHERE true \nAND action = 'Cancelled' \nAND editor != 'Appraiser'\n  --and created_at > '2022-07-01'::date\n)\n\n, appraiser_cancelations AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    'App' AS origin , \n    NULL::FLOAT  AS user_id , \n    appraiser_id , \n    latitude , \n    longitude \nFROM {{ ref('stg_scheduler_appraiserevent') }}     \nWHERE TRUE \nAND action  = 'Cancelled' \n--    and created_at > '2022-07-01'::date\n)\n\n, Union_Cancelation_table AS (\nSELECT \n    * \nFROM cancelation_events\nUNION\nSELECT \n    * \nFROM appraiser_cancelations\n)\n\n, rank_schedules AS (\nSELECT \n    *, \n    RANK() OVER (PARTITION BY schedule_id ORDER BY created_at) AS rank_visita\nFROM Union_Cancelation_table\n)\n\nSELECT\n    schedule_id ,\n    action ,\n    created_at AS cancelled_at ,\n    origin ,\n    user_id\nFROM rank_schedules\nWHERE rank_visita=1", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_appraiserevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_first_cancelation"], "unique_id": "model.houm.proc_first_cancelation", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_first_cancelation.sql", "original_file_path": "models/processing/demand/proc_first_cancelation.sql", "name": "proc_first_cancelation", "alias": "proc_first_cancelation", "checksum": {"name": "sha256", "checksum": "762a4a08045a4d518b1e5ba81eee9c3436aa03880147713e60adae8f7d28b5cf"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_scheduleevent"], ["stg_scheduler_appraiserevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_first_cancelation.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5357609, "compiled_sql": "\nWITH \ncancelation_events AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    editor AS origin , \n    user_id , \n    appraiser_id , \n    0 AS latitude , \n    0 AS longitude \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\"    \nWHERE true \nAND action = 'Cancelled' \nAND editor != 'Appraiser'\n  --and created_at > '2022-07-01'::date\n)\n\n, appraiser_cancelations AS (\nSELECT \n    id , \n    schedule_id , \n    action ,\n    created_at, \n    updated_at , \n    'App' AS origin , \n    NULL::FLOAT  AS user_id , \n    appraiser_id , \n    latitude , \n    longitude \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\"     \nWHERE TRUE \nAND action  = 'Cancelled' \n--    and created_at > '2022-07-01'::date\n)\n\n, Union_Cancelation_table AS (\nSELECT \n    * \nFROM cancelation_events\nUNION\nSELECT \n    * \nFROM appraiser_cancelations\n)\n\n, rank_schedules AS (\nSELECT \n    *, \n    RANK() OVER (PARTITION BY schedule_id ORDER BY created_at) AS rank_visita\nFROM Union_Cancelation_table\n)\n\nSELECT\n    schedule_id ,\n    action ,\n    created_at AS cancelled_at ,\n    origin ,\n    user_id\nFROM rank_schedules\nWHERE rank_visita=1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_first_cancelation\""}, "model.houm.proc_demand_lead_activities": {"raw_sql": "{{ config(materialized='table')}}\n\nWITH portalhoum AS (\n    SELECT 'PH - ' || id            AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           last_name,\n           phone,\n           email,\n           lead_id,\n           'Houm Marketplace'::TEXT AS source,\n           origin,\n           'Houm'                   AS portal,\n           property_id,\n           business_type,\n           NULL                     AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM {{ ref('proc_demand_portalhoum') }} proc_demand_portalhoum\n)\n   , portalapplicant AS (\n    SELECT 'PA - ' || id             AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           last_name,\n           phone,\n           email,\n           lead_id,\n           'Portales Externos'::TEXT AS source,\n           origin,\n           origin                    AS portal,\n           property_id,\n           business_type,\n           NULL                      AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM {{ ref('proc_demand_portalapplicant') }} proc_demand_portalapplicant\n)\n   , whatsapp AS (\n    SELECT 'WP - ' || id             AS activity_id,\n           created_at,\n           updated_at,\n           NULL                      AS name,\n           NULL                      AS last_name,\n           phone,\n           NULL                      AS email,\n           lead_id,\n           'Whatsapp'::TEXT          AS source,\n           origin_clean              AS origin,\n           CASE\n               WHEN origin_clean IN ('Houm', 'Otro', 'MessageBird') THEN 'Houm'\n               ELSE origin_clean END AS portal,\n           property_id,\n           business_type,\n           NULL                      AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM {{ ref('proc_demand_whatsapp') }} proc_demand_whatsapp\n)\n   , marketingapplicant AS (\n    SELECT 'MKT - ' || id    AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           NULL              AS last_name,\n           phone,\n           email,\n           lead_id,\n           'Marketing'::TEXT AS source,\n           origin,\n           NULL              AS portal,\n           NULL              AS property_id,\n           business_type,\n           campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM {{ ref('proc_demand_marketingapplicant') }} proc_demand_marketingapplicant\n)\n   , demand_leads AS (\n    SELECT *\n    FROM portalhoum\n    UNION ALL\n    SELECT *\n    FROM portalapplicant\n    UNION ALL\n    SELECT *\n    FROM whatsapp\n    UNION ALL\n    SELECT *\n    FROM marketingapplicant\n)\nSELECT demand_leads.activity_id,\n       demand_leads.created_at,\n       COALESCE((TIMEZONE(dim_macrozones.timezone, demand_leads.created_at)::timestamp WITH TIME ZONE)::date,\n                demand_leads.created_at::date) AS created_at_utc,\n       dim_macrozones.timezone,\n       demand_leads.updated_at,\n       demand_leads.name,\n       demand_leads.last_name,\n       demand_leads.phone,\n       demand_leads.email,\n       demand_leads.lead_id,\n       demand_leads.source,\n       demand_leads.origin,\n       demand_leads.portal,\n       demand_leads.property_id,\n       demand_leads.business_type,\n       demand_leads.campaign_id,\n       demand_leads.geo_id,\n       demand_leads.country,\n       demand_leads.region_houm\nFROM demand_leads\n         LEFT JOIN {{ ref('dim_macrozones') }} dim_macrozones ON dim_macrozones.geo_id = demand_leads.geo_id\nORDER BY created_at_utc DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_portalhoum", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_whatsapp", "model.houm.proc_demand_marketingapplicant", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_lead_activities"], "unique_id": "model.houm.proc_demand_lead_activities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_lead_activities.sql", "original_file_path": "models/processing/demand/proc_demand_lead_activities.sql", "name": "proc_demand_lead_activities", "alias": "proc_demand_lead_activities", "checksum": {"name": "sha256", "checksum": "c1c42cbfd355757073dba44a832e7d65d737b10fccadda434aba5ae74e669c58"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_demand_portalhoum"], ["proc_demand_portalapplicant"], ["proc_demand_whatsapp"], ["proc_demand_marketingapplicant"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_lead_activities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.53708, "compiled_sql": "\n\nWITH portalhoum AS (\n    SELECT 'PH - ' || id            AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           last_name,\n           phone,\n           email,\n           lead_id,\n           'Houm Marketplace'::TEXT AS source,\n           origin,\n           'Houm'                   AS portal,\n           property_id,\n           business_type,\n           NULL                     AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalhoum\" proc_demand_portalhoum\n)\n   , portalapplicant AS (\n    SELECT 'PA - ' || id             AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           last_name,\n           phone,\n           email,\n           lead_id,\n           'Portales Externos'::TEXT AS source,\n           origin,\n           origin                    AS portal,\n           property_id,\n           business_type,\n           NULL                      AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalapplicant\" proc_demand_portalapplicant\n)\n   , whatsapp AS (\n    SELECT 'WP - ' || id             AS activity_id,\n           created_at,\n           updated_at,\n           NULL                      AS name,\n           NULL                      AS last_name,\n           phone,\n           NULL                      AS email,\n           lead_id,\n           'Whatsapp'::TEXT          AS source,\n           origin_clean              AS origin,\n           CASE\n               WHEN origin_clean IN ('Houm', 'Otro', 'MessageBird') THEN 'Houm'\n               ELSE origin_clean END AS portal,\n           property_id,\n           business_type,\n           NULL                      AS campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_whatsapp\" proc_demand_whatsapp\n)\n   , marketingapplicant AS (\n    SELECT 'MKT - ' || id    AS activity_id,\n           created_at,\n           updated_at,\n           name,\n           NULL              AS last_name,\n           phone,\n           email,\n           lead_id,\n           'Marketing'::TEXT AS source,\n           origin,\n           NULL              AS portal,\n           NULL              AS property_id,\n           business_type,\n           campaign_id,\n           geo_id,\n           country,\n           region_houm\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_marketingapplicant\" proc_demand_marketingapplicant\n)\n   , demand_leads AS (\n    SELECT *\n    FROM portalhoum\n    UNION ALL\n    SELECT *\n    FROM portalapplicant\n    UNION ALL\n    SELECT *\n    FROM whatsapp\n    UNION ALL\n    SELECT *\n    FROM marketingapplicant\n)\nSELECT demand_leads.activity_id,\n       demand_leads.created_at,\n       COALESCE((TIMEZONE(dim_macrozones.timezone, demand_leads.created_at)::timestamp WITH TIME ZONE)::date,\n                demand_leads.created_at::date) AS created_at_utc,\n       dim_macrozones.timezone,\n       demand_leads.updated_at,\n       demand_leads.name,\n       demand_leads.last_name,\n       demand_leads.phone,\n       demand_leads.email,\n       demand_leads.lead_id,\n       demand_leads.source,\n       demand_leads.origin,\n       demand_leads.portal,\n       demand_leads.property_id,\n       demand_leads.business_type,\n       demand_leads.campaign_id,\n       demand_leads.geo_id,\n       demand_leads.country,\n       demand_leads.region_houm\nFROM demand_leads\n         LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_macrozones ON dim_macrozones.geo_id = demand_leads.geo_id\nORDER BY created_at_utc DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_lead_activities\""}, "model.houm.proc_demand_whatsapp": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH properties_mz AS (\n    SELECT properties_mz.property_id,\n           properties_mz.geo_id\n    FROM {{ ref('proc_properties_mz') }} AS properties_mz\n)\n   , city_lead AS (\n    SELECT DISTINCT id                                    AS lead_id,\n                    country,\n                    city,\n                    CASE\n                        WHEN country LIKE 'cl' THEN 79::INT\n                        WHEN country LIKE 'co' THEN 14::INT\n                        WHEN country LIKE 'mx' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_country,\n                    CASE\n                        WHEN city LIKE '%Medell_n%' THEN 31::INT\n                        WHEN city LIKE '%Bogot_%' THEN 14::INT\n                        WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                        WHEN city LIKE '%Santiago%' THEN 79::INT\n                        WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                        WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                        WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                        WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                        WHEN city LIKE '%Monterrey%' THEN 54::INT\n                        WHEN city LIKE '%Nuevo Le_n%' THEN 54::INT\n                        WHEN city LIKE '%MTY%' THEN 54::INT\n                        WHEN city LIKE '%Tijuana%' THEN 67::INT\n                        WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                        WHEN city LIKE '%Puebla%' THEN 104::INT\n                        WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                        WHEN city LIKE '%GDL%' THEN 30::INT\n                        WHEN city LIKE '%CDMX%' THEN 104::INT\n                        WHEN city LIKE '%M_xico%' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_city,\n                    COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\n    FROM {{ ref('stg_demand_lead') }}\n)\n   , stg_demand_whatsapp AS (\n    SELECT stg_demand_whatsapp.id,\n           stg_demand_whatsapp.created_at,\n           stg_demand_whatsapp.updated_at,\n           stg_demand_whatsapp.phone,\n           stg_demand_whatsapp.lead_id,\n           stg_demand_whatsapp.property_id,\n           properties_mz.geo_id                                       AS geo_id_property,\n           stg_demand_whatsapp.business_type,\n           stg_demand_whatsapp.to_number,\n           CASE\n               WHEN to_number LIKE '+57%' THEN 14::INT\n               WHEN to_number LIKE '57%' THEN 14::INT\n               WHEN to_number LIKE '+56%' THEN 79::INT\n               WHEN to_number LIKE '56%' THEN 79::INT\n               WHEN to_number LIKE '+52%' THEN 104::INT\n               WHEN to_number LIKE '52%' THEN 104::INT END             AS geo_id_to_number,\n           stg_demand_whatsapp.origin,\n           CASE\n               --Portales\n               WHEN origin ILIKE '%MercadoLibre%' THEN 'MercadoLibre'\n               WHEN origin ILIKE 'Portal Inmobiliario' THEN 'MercadoLibre'\n               WHEN origin ILIKE '%meli%' THEN 'MercadoLibre'\n               WHEN origin ILIKE '%Inmuebles24%premier%' THEN 'Inmuebles24 Premier'\n               WHEN origin ILIKE '%Inmuebles24%' THEN 'Inmuebles24'\n               WHEN origin ILIKE '%I24%' THEN 'Inmuebles24'\n               WHEN origin ILIKE '%yapo%' THEN 'Yapo'\n               WHEN origin ILIKE '%Properati%' THEN 'Proppit'\n               WHEN origin ILIKE '%Properaty%' THEN 'Proppit'\n               WHEN origin ILIKE '%Chile Propiedades%' THEN 'Chile Propiedades'\n               WHEN origin ILIKE '%Proppit%' THEN 'Proppit'\n               WHEN origin ILIKE '%ciencuadras%' THEN 'Ciencuadras'\n               WHEN origin ILIKE '%Metrocuadrado%' THEN 'MetroCuadrado'\n               WHEN origin ILIKE '%inca%aiz%' THEN 'FincaRaiz'\n               WHEN origin ILIKE '%Vivanuncios%' THEN 'Vivanuncios'\n               WHEN origin ILIKE '%GoPlaceIt%' THEN 'GoPlaceIt'\n               WHEN origin ILIKE '%iCasas%' THEN 'iCasas'\n               WHEN origin ILIKE '%lamudi%' THEN 'Lamudi'\n               WHEN origin ILIKE '%metroscubicos%' THEN 'MetrosCubicos'\n               WHEN origin ILIKE '%Segundamano%' THEN 'Segundamano'\n               WHEN origin ILIKE '%TocToc%' THEN 'Segundamano'\n               WHEN origin ILIKE '%whatsapp%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%portales%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%essa%gebird%' THEN 'MessageBird'\n               --Houm\n               WHEN origin ILIKE '%houm%' THEN 'Houm'\n               WHEN origin ILIKE '%Marketplace%' THEN 'Houm'\n               WHEN origin ILIKE '%Asesor%a%' THEN 'Houm'\n               WHEN origin ILIKE '%.%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%property%' THEN 'Otro'\n               ELSE origin\n               END                                                    AS origin_clean,\n           CASE\n               WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 79::INT\n               WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 14::INT\n               WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 104::INT\n               ELSE NULL END                                          AS geo_id_portal,\n           COALESCE(geo_id_property, geo_id_to_number, geo_id_portal) AS geo_id_whatsapp\n    FROM {{ ref('stg_demand_whatsapp') }} AS stg_demand_whatsapp\n        LEFT JOIN properties_mz \n            ON properties_mz.property_id = stg_demand_whatsapp.property_id\n)\n   , stg_demand_whatsapp_2 AS (\n    SELECT stg_demand_whatsapp.id,\n           stg_demand_whatsapp.created_at,\n           stg_demand_whatsapp.updated_at,\n           stg_demand_whatsapp.phone,\n           stg_demand_whatsapp.lead_id,\n           stg_demand_whatsapp.property_id,\n           stg_demand_whatsapp.business_type,\n           stg_demand_whatsapp.to_number,\n           stg_demand_whatsapp.origin,\n           stg_demand_whatsapp.origin_clean,\n           COALESCE(geo_id_whatsapp, geo_id_lead) AS geo_id\n    FROM stg_demand_whatsapp\n        LEFT JOIN city_lead \n            ON stg_demand_whatsapp.lead_id = city_lead.lead_id\n)\nSELECT stg_demand_whatsapp_2.id,\n       stg_demand_whatsapp_2.created_at,\n       stg_demand_whatsapp_2.updated_at,\n       stg_demand_whatsapp_2.phone,\n       stg_demand_whatsapp_2.lead_id,\n       stg_demand_whatsapp_2.property_id,\n       stg_demand_whatsapp_2.business_type,\n       stg_demand_whatsapp_2.to_number,\n       stg_demand_whatsapp_2.origin,\n       stg_demand_whatsapp_2.origin_clean,\n       stg_demand_whatsapp_2.geo_id,\n       dim_mz.country,\n       dim_mz.region_houm\nFROM stg_demand_whatsapp_2\n    LEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz \n        ON stg_demand_whatsapp_2.geo_id = dim_mz.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_whatsapp", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_whatsapp"], "unique_id": "model.houm.proc_demand_whatsapp", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_whatsapp.sql", "original_file_path": "models/processing/demand/proc_demand_whatsapp.sql", "name": "proc_demand_whatsapp", "alias": "proc_demand_whatsapp", "checksum": {"name": "sha256", "checksum": "792dc018f1f1fb90b8e939bce5d2c46bd410fbc6a5b1e26aea724cd22d9d78da"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties_mz"], ["stg_demand_lead"], ["stg_demand_whatsapp"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_whatsapp.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "view", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5384011, "compiled_sql": "\n\nWITH properties_mz AS (\n    SELECT properties_mz.property_id,\n           properties_mz.geo_id\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n)\n   , city_lead AS (\n    SELECT DISTINCT id                                    AS lead_id,\n                    country,\n                    city,\n                    CASE\n                        WHEN country LIKE 'cl' THEN 79::INT\n                        WHEN country LIKE 'co' THEN 14::INT\n                        WHEN country LIKE 'mx' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_country,\n                    CASE\n                        WHEN city LIKE '%Medell_n%' THEN 31::INT\n                        WHEN city LIKE '%Bogot_%' THEN 14::INT\n                        WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                        WHEN city LIKE '%Santiago%' THEN 79::INT\n                        WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                        WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                        WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                        WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                        WHEN city LIKE '%Monterrey%' THEN 54::INT\n                        WHEN city LIKE '%Nuevo Le_n%' THEN 54::INT\n                        WHEN city LIKE '%MTY%' THEN 54::INT\n                        WHEN city LIKE '%Tijuana%' THEN 67::INT\n                        WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                        WHEN city LIKE '%Puebla%' THEN 104::INT\n                        WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                        WHEN city LIKE '%GDL%' THEN 30::INT\n                        WHEN city LIKE '%CDMX%' THEN 104::INT\n                        WHEN city LIKE '%M_xico%' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_city,\n                    COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\"\n)\n   , stg_demand_whatsapp AS (\n    SELECT stg_demand_whatsapp.id,\n           stg_demand_whatsapp.created_at,\n           stg_demand_whatsapp.updated_at,\n           stg_demand_whatsapp.phone,\n           stg_demand_whatsapp.lead_id,\n           stg_demand_whatsapp.property_id,\n           properties_mz.geo_id                                       AS geo_id_property,\n           stg_demand_whatsapp.business_type,\n           stg_demand_whatsapp.to_number,\n           CASE\n               WHEN to_number LIKE '+57%' THEN 14::INT\n               WHEN to_number LIKE '57%' THEN 14::INT\n               WHEN to_number LIKE '+56%' THEN 79::INT\n               WHEN to_number LIKE '56%' THEN 79::INT\n               WHEN to_number LIKE '+52%' THEN 104::INT\n               WHEN to_number LIKE '52%' THEN 104::INT END             AS geo_id_to_number,\n           stg_demand_whatsapp.origin,\n           CASE\n               --Portales\n               WHEN origin ILIKE '%MercadoLibre%' THEN 'MercadoLibre'\n               WHEN origin ILIKE 'Portal Inmobiliario' THEN 'MercadoLibre'\n               WHEN origin ILIKE '%meli%' THEN 'MercadoLibre'\n               WHEN origin ILIKE '%Inmuebles24%premier%' THEN 'Inmuebles24 Premier'\n               WHEN origin ILIKE '%Inmuebles24%' THEN 'Inmuebles24'\n               WHEN origin ILIKE '%I24%' THEN 'Inmuebles24'\n               WHEN origin ILIKE '%yapo%' THEN 'Yapo'\n               WHEN origin ILIKE '%Properati%' THEN 'Proppit'\n               WHEN origin ILIKE '%Properaty%' THEN 'Proppit'\n               WHEN origin ILIKE '%Chile Propiedades%' THEN 'Chile Propiedades'\n               WHEN origin ILIKE '%Proppit%' THEN 'Proppit'\n               WHEN origin ILIKE '%ciencuadras%' THEN 'Ciencuadras'\n               WHEN origin ILIKE '%Metrocuadrado%' THEN 'MetroCuadrado'\n               WHEN origin ILIKE '%inca%aiz%' THEN 'FincaRaiz'\n               WHEN origin ILIKE '%Vivanuncios%' THEN 'Vivanuncios'\n               WHEN origin ILIKE '%GoPlaceIt%' THEN 'GoPlaceIt'\n               WHEN origin ILIKE '%iCasas%' THEN 'iCasas'\n               WHEN origin ILIKE '%lamudi%' THEN 'Lamudi'\n               WHEN origin ILIKE '%metroscubicos%' THEN 'MetrosCubicos'\n               WHEN origin ILIKE '%Segundamano%' THEN 'Segundamano'\n               WHEN origin ILIKE '%TocToc%' THEN 'Segundamano'\n               WHEN origin ILIKE '%whatsapp%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%portales%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%essa%gebird%' THEN 'MessageBird'\n               --Houm\n               WHEN origin ILIKE '%houm%' THEN 'Houm'\n               WHEN origin ILIKE '%Marketplace%' THEN 'Houm'\n               WHEN origin ILIKE '%Asesor%a%' THEN 'Houm'\n               WHEN origin ILIKE '%.%' THEN 'Whatsapp Portales'\n               WHEN origin ILIKE '%property%' THEN 'Otro'\n               ELSE origin\n               END                                                    AS origin_clean,\n           CASE\n               WHEN origin_clean IN ('Yapo', 'Chile Propiedades', 'TocToc', 'Chile Propiedades') THEN 79::INT\n               WHEN origin_clean IN ('Proppit', 'FincaRaiz', 'Ciencuadras', 'MetroCuadrado') THEN 14::INT\n               WHEN origin_clean IN ('Segundamano', 'Inmuebles24', 'Inmuebles24 Premier', 'Lamudi', 'Vivanuncios', 'EasyBroker') THEN 104::INT\n               ELSE NULL END                                          AS geo_id_portal,\n           COALESCE(geo_id_property, geo_id_to_number, geo_id_portal) AS geo_id_whatsapp\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_whatsapp\" AS stg_demand_whatsapp\n        LEFT JOIN properties_mz \n            ON properties_mz.property_id = stg_demand_whatsapp.property_id\n)\n   , stg_demand_whatsapp_2 AS (\n    SELECT stg_demand_whatsapp.id,\n           stg_demand_whatsapp.created_at,\n           stg_demand_whatsapp.updated_at,\n           stg_demand_whatsapp.phone,\n           stg_demand_whatsapp.lead_id,\n           stg_demand_whatsapp.property_id,\n           stg_demand_whatsapp.business_type,\n           stg_demand_whatsapp.to_number,\n           stg_demand_whatsapp.origin,\n           stg_demand_whatsapp.origin_clean,\n           COALESCE(geo_id_whatsapp, geo_id_lead) AS geo_id\n    FROM stg_demand_whatsapp\n        LEFT JOIN city_lead \n            ON stg_demand_whatsapp.lead_id = city_lead.lead_id\n)\nSELECT stg_demand_whatsapp_2.id,\n       stg_demand_whatsapp_2.created_at,\n       stg_demand_whatsapp_2.updated_at,\n       stg_demand_whatsapp_2.phone,\n       stg_demand_whatsapp_2.lead_id,\n       stg_demand_whatsapp_2.property_id,\n       stg_demand_whatsapp_2.business_type,\n       stg_demand_whatsapp_2.to_number,\n       stg_demand_whatsapp_2.origin,\n       stg_demand_whatsapp_2.origin_clean,\n       stg_demand_whatsapp_2.geo_id,\n       dim_mz.country,\n       dim_mz.region_houm\nFROM stg_demand_whatsapp_2\n    LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz \n        ON stg_demand_whatsapp_2.geo_id = dim_mz.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_whatsapp\""}, "model.houm.proc_others_cancelations": {"raw_sql": "{{ config(materialized='table') }}\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_scheduleevent.created_at cancelled_at ,\n    0 latitude_appraiser ,\n    0 longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_scheduleevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_scheduleevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM {{ ref('stg_scheduler_cancelreasons') }} scheduler_cancelreasons        \nLEFT JOIN {{ ref('stg_scheduler_schedules') }} scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN {{ ref('stg_scheduler_cancelreasontypes') }} scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN {{ ref('stg_scheduler_appraiserevent') }} scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN {{ ref('stg_scheduler_appraisers') }} scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nLEFT JOIN {{ ref('stg_scheduler_scheduleevent') }} scheduler_scheduleevent \n    ON scheduler_scheduleevent.schedule_id = scheduler_schedules.id\nWHERE scheduler_scheduleevent.action = 'Cancelled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_scheduleevent"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_others_cancelations"], "unique_id": "model.houm.proc_others_cancelations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_others_cancelations.sql", "original_file_path": "models/processing/demand/proc_others_cancelations.sql", "name": "proc_others_cancelations", "alias": "proc_others_cancelations", "checksum": {"name": "sha256", "checksum": "be7e6bc07326b8391930b850c094322ee4bef1e06d716ddef0c4e60ddc7d23ef"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_cancelreasons"], ["stg_scheduler_schedules"], ["stg_scheduler_cancelreasontypes"], ["stg_scheduler_appraiserevent"], ["stg_scheduler_appraisers"], ["stg_scheduler_scheduleevent"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_others_cancelations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5400078, "compiled_sql": "\nSELECT \n    scheduler_schedules.id schedule_id ,\n    scheduler_cancelreasons.id cancelation_id ,\n    scheduler_cancelreasontypes.cancel_type ,\n    scheduler_cancelreasontypes.cancel_reason ,\n    scheduler_cancelreasontypes.roles ,\n    scheduler_cancelreasontypes.text cancel_reason_text ,\n    scheduler_cancelreasons.comment ,\n    scheduler_scheduleevent.created_at cancelled_at ,\n    0 latitude_appraiser ,\n    0 longitude_appraiser ,\n    scheduler_appraisers.id appraiser_id ,\n    scheduler_appraisers.name name_appraiser ,\n    scheduler_appraisers.email email_appraiser ,\n    CASE WHEN scheduler_schedules.begin_date >= scheduler_scheduleevent.created_at THEN 'Pre-Visit'::text\n         WHEN scheduler_schedules.begin_date < scheduler_scheduleevent.created_at THEN 'Post-Visit'::text\n         ELSE NULL END AS cancel_timing\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasons\" scheduler_cancelreasons        \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" scheduler_schedules\n    ON scheduler_schedules.selected_cancel_reason_id = scheduler_cancelreasons.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_cancelreasontypes\" scheduler_cancelreasontypes\n    ON scheduler_cancelreasontypes.id = scheduler_cancelreasons.type_id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraiserevent\" scheduler_appraiserevent \n    ON scheduler_appraiserevent.schedule_id = scheduler_schedules.id \nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_appraisers\" scheduler_appraisers\n    ON scheduler_appraisers.id = scheduler_schedules.appraiser_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduleevent\" scheduler_scheduleevent \n    ON scheduler_scheduleevent.schedule_id = scheduler_schedules.id\nWHERE scheduler_scheduleevent.action = 'Cancelled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_others_cancelations\""}, "model.houm.proc_demand_portalapplicant": {"raw_sql": "{{ config(materialized='view') }}\n\n\nWITH rental_properties AS (\n    SELECT id        AS property_id,\n           'rentals' AS business_type_property\n    FROM {{ ref('proc_properties') }}\n    WHERE TRUE\n      AND for_rental = TRUE\n)\n   , sales_properties AS (\n    SELECT id      AS property_id,\n           'sales' AS business_type_property\n    FROM {{ ref('proc_properties') }}\n    WHERE TRUE\n      AND for_sale = TRUE\n)\n   , union_properties AS (\n    SELECT *\n    FROM rental_properties\n    UNION\n    SELECT *\n    FROM sales_properties\n)\n    , stg_demand_portalapplicant AS (\n    SELECT demand_portalapplicant.id,\n           demand_portalapplicant.created_at,\n           demand_portalapplicant.updated_at,\n           demand_portalapplicant.phone,\n           demand_portalapplicant.email,\n           demand_portalapplicant.lead_id,\n           demand_portalapplicant.name,\n           demand_portalapplicant.last_name,\n           demand_portalapplicant.origin,\n           demand_portalapplicant.property_id,\n           demand_portalapplicant.business_type AS business_type_lead,\n           union_properties.business_type_property,\n           COALESCE(business_type_lead, business_type_property) AS business_type,\n           properties_mz.geo_id,\n           dim_mz.country,\n           dim_mz.region_houm\n    FROM {{ ref('stg_demand_portalapplicant') }} AS demand_portalapplicant\n        LEFT JOIN union_properties\n            ON demand_portalapplicant.property_id = union_properties.property_id \n            AND demand_portalapplicant.business_type IS NULL\n    --hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\n        LEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n            ON demand_portalapplicant.property_id = properties_mz.property_id\n        LEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz\n            ON properties_mz.geo_id = dim_mz.geo_id\n    WHERE TRUE\n      AND demand_portalapplicant.origin != 'Houm' --limpiamos los leads con origen de portal como \"Houm\" porque ya estan considerados en demand_portalhoum, y en el pasado esta tabla los duplicaba\n)\n  \nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        country,\n        region_houm\nFROM stg_demand_portalapplicant", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties_mz", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_portalapplicant"], "unique_id": "model.houm.proc_demand_portalapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_portalapplicant.sql", "original_file_path": "models/processing/demand/proc_demand_portalapplicant.sql", "name": "proc_demand_portalapplicant", "alias": "proc_demand_portalapplicant", "checksum": {"name": "sha256", "checksum": "be86d58c7c25ea622a5e2fd4549b576f485a47937cbae73ec1a655cbedb4b436"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["proc_properties"], ["stg_demand_portalapplicant"], ["proc_properties_mz"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_portalapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "view", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5416908, "compiled_sql": "\n\n\nWITH rental_properties AS (\n    SELECT id        AS property_id,\n           'rentals' AS business_type_property\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\n    WHERE TRUE\n      AND for_rental = TRUE\n)\n   , sales_properties AS (\n    SELECT id      AS property_id,\n           'sales' AS business_type_property\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\n    WHERE TRUE\n      AND for_sale = TRUE\n)\n   , union_properties AS (\n    SELECT *\n    FROM rental_properties\n    UNION\n    SELECT *\n    FROM sales_properties\n)\n    , stg_demand_portalapplicant AS (\n    SELECT demand_portalapplicant.id,\n           demand_portalapplicant.created_at,\n           demand_portalapplicant.updated_at,\n           demand_portalapplicant.phone,\n           demand_portalapplicant.email,\n           demand_portalapplicant.lead_id,\n           demand_portalapplicant.name,\n           demand_portalapplicant.last_name,\n           demand_portalapplicant.origin,\n           demand_portalapplicant.property_id,\n           demand_portalapplicant.business_type AS business_type_lead,\n           union_properties.business_type_property,\n           COALESCE(business_type_lead, business_type_property) AS business_type,\n           properties_mz.geo_id,\n           dim_mz.country,\n           dim_mz.region_houm\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS demand_portalapplicant\n        LEFT JOIN union_properties\n            ON demand_portalapplicant.property_id = union_properties.property_id \n            AND demand_portalapplicant.business_type IS NULL\n    --hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\n        LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n            ON demand_portalapplicant.property_id = properties_mz.property_id\n        LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz\n            ON properties_mz.geo_id = dim_mz.geo_id\n    WHERE TRUE\n      AND demand_portalapplicant.origin != 'Houm' --limpiamos los leads con origen de portal como \"Houm\" porque ya estan considerados en demand_portalhoum, y en el pasado esta tabla los duplicaba\n)\n  \nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        country,\n        region_houm\nFROM stg_demand_portalapplicant", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalapplicant\""}, "model.houm.proc_core_applicant": {"raw_sql": "{{ config(materialized='table') }}\nSELECT\n    arriendoasegurado_applicant.id , \n    arriendoasegurado_applicant.created_at ,\n    arriendoasegurado_applicant.updated_at ,\n    arriendoasegurado_applicant.country ,\n    COALESCE(arriendoasegurado_applicant.email,users.email) email ,\n    COALESCE(arriendoasegurado_applicant.phone,users.phone) phone\nFROM {{ ref('stg_arriendoasegurado_applicant') }} AS arriendoasegurado_applicant\nLEFT JOIN {{ ref('stg_users') }} AS users\n    ON arriendoasegurado_applicant.user_id=users.id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_core_applicant"], "unique_id": "model.houm.proc_core_applicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_core_applicant.sql", "original_file_path": "models/processing/demand/proc_core_applicant.sql", "name": "proc_core_applicant", "alias": "proc_core_applicant", "checksum": {"name": "sha256", "checksum": "ba1d48ffe20bd843d861ff7707f261e3ca1ceb42b555939c70d0c4e892d126c1"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_arriendoasegurado_applicant"], ["stg_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_core_applicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.542994, "compiled_sql": "\nSELECT\n    arriendoasegurado_applicant.id , \n    arriendoasegurado_applicant.created_at ,\n    arriendoasegurado_applicant.updated_at ,\n    arriendoasegurado_applicant.country ,\n    COALESCE(arriendoasegurado_applicant.email,users.email) email ,\n    COALESCE(arriendoasegurado_applicant.phone,users.phone) phone\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS arriendoasegurado_applicant\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_users\" AS users\n    ON arriendoasegurado_applicant.user_id=users.id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_core_applicant\""}, "model.houm.proc_demand_marketingapplicant": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH city_lead AS (\n    SELECT DISTINCT id                                    AS lead_id,\n                    country,\n                    city,\n                    CASE\n                        WHEN country LIKE 'cl' THEN 79::INT\n                        WHEN country LIKE 'co' THEN 14::INT\n                        WHEN country LIKE 'mx' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_country,\n                    CASE\n                        WHEN city LIKE '%Medell_n%' THEN 31::INT\n                        WHEN city LIKE '%Bogot_' THEN 14::INT\n                        WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                        WHEN city LIKE '%Santiago%' THEN 79::INT\n                        WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                        WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                        WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                        WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                        WHEN city LIKE '%Monterrey%' THEN 54::INT\n                        WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n                        WHEN city LIKE '%MTY%' THEN 54::INT\n                        WHEN city LIKE '%Tijuana%' THEN 67::INT\n                        WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                        WHEN city LIKE '%Puebla%' THEN 104::INT\n                        WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                        WHEN city LIKE '%GDL%' THEN 30::INT\n                        WHEN city LIKE '%CDMX%' THEN 104::INT\n                        WHEN city LIKE '%M_xico%' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_city,\n                    COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\n    FROM {{ ref('stg_demand_lead') }}\n)\n, stg_demand_marketingapplicant AS (\nSELECT  demand_marketingapplicant.id,\n        demand_marketingapplicant.created_at,\n        demand_marketingapplicant.updated_at,\n        demand_marketingapplicant.lead_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'phone') AS phone,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'email') AS email,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'name') AS name,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'business_type') AS business_type,\n        SPLIT_PART(json_extract_path_text(demand_marketingapplicant.extra_info, 'campaign_id'),'_',1) AS campaign_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'country') AS country,\n        CASE\n        \tWHEN country LIKE 'Chile' THEN 79::INT\n        \tWHEN country LIKE 'Mexico' THEN 104::INT\n        \tWHEN country LIKE 'Colombia' THEN 14::INT\n        ELSE NULL END\t\t\t\t\t\t\t\t\t\t\tAS geo_id_country,\n        CASE \n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%facebook%' THEN 'Facebook'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%google%' THEN 'Google'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%Unknow%' OR demand_marketingapplicant.utm_campaign LIKE '%-  ' THEN 'Origen No identificado'\n        \tELSE 'Otro' END \t\t\t\t\t\t\t\t\tAS origin\nFROM {{ ref('stg_demand_marketingapplicant') }} AS demand_marketingapplicant\n)\n, stg_demand_marketingapplicant_2 AS (\nSELECT  stg_demand_marketingapplicant.id,\n        stg_demand_marketingapplicant.created_at,\n        stg_demand_marketingapplicant.updated_at,\n        stg_demand_marketingapplicant.name,\n        stg_demand_marketingapplicant.phone,\n        stg_demand_marketingapplicant.email,\n        stg_demand_marketingapplicant.lead_id,\n        stg_demand_marketingapplicant.business_type,\n        stg_demand_marketingapplicant.campaign_id,\n        stg_demand_marketingapplicant.country,\n        stg_demand_marketingapplicant.origin,\n        stg_demand_marketingapplicant.geo_id_country,\n        marketing_paid_media.geo_id\t\t\t\t\t\t\t\tAS geo_id_paid_media,\n        COALESCE(geo_id_paid_media, stg_demand_marketingapplicant.geo_id_country) AS geo_id_marketing,\n        COALESCE(geo_id_marketing, geo_id_lead) AS geo_id\nFROM stg_demand_marketingapplicant\n    LEFT JOIN {{ ref('proc_marketing_paid_media_campaign') }} AS marketing_paid_media\n        ON marketing_paid_media.campaign_id = stg_demand_marketingapplicant.campaign_id\n    LEFT JOIN city_lead \n        ON stg_demand_marketingapplicant.lead_id = city_lead.lead_id\n)\n\nSELECT\n    stg_demand_marketingapplicant_2.id,\n    stg_demand_marketingapplicant_2.created_at,\n    stg_demand_marketingapplicant_2.updated_at,\n    stg_demand_marketingapplicant_2.name,\n    stg_demand_marketingapplicant_2.phone,\n    stg_demand_marketingapplicant_2.email,\n    stg_demand_marketingapplicant_2.lead_id,\n    stg_demand_marketingapplicant_2.business_type,\n    stg_demand_marketingapplicant_2.campaign_id,\n    stg_demand_marketingapplicant_2.origin,\n    stg_demand_marketingapplicant_2.geo_id,\n    dim_mz.country,\n    dim_mz.region_houm\nFROM stg_demand_marketingapplicant_2\n    LEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz\n        ON stg_demand_marketingapplicant_2.geo_id = dim_mz.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_lead", "model.houm.stg_demand_marketingapplicant", "model.houm.proc_marketing_paid_media_campaign", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_marketingapplicant"], "unique_id": "model.houm.proc_demand_marketingapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_marketingapplicant.sql", "original_file_path": "models/processing/demand/proc_demand_marketingapplicant.sql", "name": "proc_demand_marketingapplicant", "alias": "proc_demand_marketingapplicant", "checksum": {"name": "sha256", "checksum": "2845a00b02903d73f0b902c1e87f08b8c0901fc2b3ea36350ad5619a2587da38"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_lead"], ["stg_demand_marketingapplicant"], ["proc_marketing_paid_media_campaign"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_marketingapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "view", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5442739, "compiled_sql": "\n\nWITH city_lead AS (\n    SELECT DISTINCT id                                    AS lead_id,\n                    country,\n                    city,\n                    CASE\n                        WHEN country LIKE 'cl' THEN 79::INT\n                        WHEN country LIKE 'co' THEN 14::INT\n                        WHEN country LIKE 'mx' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_country,\n                    CASE\n                        WHEN city LIKE '%Medell_n%' THEN 31::INT\n                        WHEN city LIKE '%Bogot_' THEN 14::INT\n                        WHEN city LIKE '%Regi_n Metropolitana%' THEN 79::INT\n                        WHEN city LIKE '%Santiago%' THEN 79::INT\n                        WHEN city LIKE '%Valpara_so%' THEN 11::INT\n                        WHEN city LIKE '%Concepci_n%' THEN 8::INT\n                        WHEN city LIKE '%B_o B_o%' THEN 8::INT\n                        WHEN city LIKE '%Ciudad de M_xico%' THEN 104::INT\n                        WHEN city LIKE '%Monterrey%' THEN 54::INT\n                        WHEN city LIKE '%Nuevo Le_n' THEN 54::INT\n                        WHEN city LIKE '%MTY%' THEN 54::INT\n                        WHEN city LIKE '%Tijuana%' THEN 67::INT\n                        WHEN city LIKE '%Guadalajara%' THEN 30::INT\n                        WHEN city LIKE '%Puebla%' THEN 104::INT\n                        WHEN city LIKE '%Quer_taro%' THEN 104::INT\n                        WHEN city LIKE '%GDL%' THEN 30::INT\n                        WHEN city LIKE '%CDMX%' THEN 104::INT\n                        WHEN city LIKE '%M_xico%' THEN 104::INT\n                        ELSE NULL END                     AS geo_id_city,\n                    COALESCE(geo_id_city, geo_id_country) AS geo_id_lead\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\"\n)\n, stg_demand_marketingapplicant AS (\nSELECT  demand_marketingapplicant.id,\n        demand_marketingapplicant.created_at,\n        demand_marketingapplicant.updated_at,\n        demand_marketingapplicant.lead_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'phone') AS phone,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'email') AS email,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'name') AS name,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'business_type') AS business_type,\n        SPLIT_PART(json_extract_path_text(demand_marketingapplicant.extra_info, 'campaign_id'),'_',1) AS campaign_id,\n        json_extract_path_text(demand_marketingapplicant.extra_info, 'country') AS country,\n        CASE\n        \tWHEN country LIKE 'Chile' THEN 79::INT\n        \tWHEN country LIKE 'Mexico' THEN 104::INT\n        \tWHEN country LIKE 'Colombia' THEN 14::INT\n        ELSE NULL END\t\t\t\t\t\t\t\t\t\t\tAS geo_id_country,\n        CASE \n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%facebook%' THEN 'Facebook'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%google%' THEN 'Google'\n        \tWHEN demand_marketingapplicant.utm_campaign LIKE '%Unknow%' OR demand_marketingapplicant.utm_campaign LIKE '%-  ' THEN 'Origen No identificado'\n        \tELSE 'Otro' END \t\t\t\t\t\t\t\t\tAS origin\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_marketingapplicant\" AS demand_marketingapplicant\n)\n, stg_demand_marketingapplicant_2 AS (\nSELECT  stg_demand_marketingapplicant.id,\n        stg_demand_marketingapplicant.created_at,\n        stg_demand_marketingapplicant.updated_at,\n        stg_demand_marketingapplicant.name,\n        stg_demand_marketingapplicant.phone,\n        stg_demand_marketingapplicant.email,\n        stg_demand_marketingapplicant.lead_id,\n        stg_demand_marketingapplicant.business_type,\n        stg_demand_marketingapplicant.campaign_id,\n        stg_demand_marketingapplicant.country,\n        stg_demand_marketingapplicant.origin,\n        stg_demand_marketingapplicant.geo_id_country,\n        marketing_paid_media.geo_id\t\t\t\t\t\t\t\tAS geo_id_paid_media,\n        COALESCE(geo_id_paid_media, stg_demand_marketingapplicant.geo_id_country) AS geo_id_marketing,\n        COALESCE(geo_id_marketing, geo_id_lead) AS geo_id\nFROM stg_demand_marketingapplicant\n    LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media_campaign\" AS marketing_paid_media\n        ON marketing_paid_media.campaign_id = stg_demand_marketingapplicant.campaign_id\n    LEFT JOIN city_lead \n        ON stg_demand_marketingapplicant.lead_id = city_lead.lead_id\n)\n\nSELECT\n    stg_demand_marketingapplicant_2.id,\n    stg_demand_marketingapplicant_2.created_at,\n    stg_demand_marketingapplicant_2.updated_at,\n    stg_demand_marketingapplicant_2.name,\n    stg_demand_marketingapplicant_2.phone,\n    stg_demand_marketingapplicant_2.email,\n    stg_demand_marketingapplicant_2.lead_id,\n    stg_demand_marketingapplicant_2.business_type,\n    stg_demand_marketingapplicant_2.campaign_id,\n    stg_demand_marketingapplicant_2.origin,\n    stg_demand_marketingapplicant_2.geo_id,\n    dim_mz.country,\n    dim_mz.region_houm\nFROM stg_demand_marketingapplicant_2\n    LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz\n        ON stg_demand_marketingapplicant_2.geo_id = dim_mz.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_marketingapplicant\""}, "model.houm.proc_tmp_demand_schedules": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT\n    a.id AS schedule_id,\n    a.prop_id AS property_id,\n    a.created_at,\n    a.begin_date,\n    timezone(e.timezone,timezone('UTC',a.created_at)) AS local_created_at,\n    timezone(e.timezone,timezone('UTC',a.begin_date)) AS local_begin_date,\n    b.name as schedule_type_name,\n    CASE \n        WHEN lower(b.name) LIKE 'salesv%' THEN 'Visit'\n        WHEN lower(b.name) LIKE 'salesp%' THEN 'Photo'\n        ELSE b.name\n    END AS schedule_name,\n    a.status,\n    CASE \n        WHEN lower(b.name) \n        LIKE '%sales%' THEN 'Sales'\n        ELSE 'Rentals' \n    END AS business,\n    a.cancel_reason,\n    c.applicant_id,\n    d.email,\n    e.country,\n    e.City_Houm AS city,\n    e.supply_source,\n    e.supply_relation,\n    a.appraiser_id\nFROM {{ref('stg_scheduler_schedules')}} a\nLEFT JOIN {{ref('stg_scheduler_scheduletypes')}} b ON b.id = a.schedule_type_id\nLEFT JOIN {{ref('stg_scheduler_schedulehasapplicant')}} c ON c.schedule_id = a.id\nLEFT JOIN {{ref('stg_arriendoasegurado_applicant')}} d ON c.applicant_id = d.id\nLEFT JOIN {{ref('proc_tmp_supply_properties_macrozone')}} e ON e.property_id = a.prop_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_schedules"], "unique_id": "model.houm.proc_tmp_demand_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_schedules.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_schedules.sql", "name": "proc_tmp_demand_schedules", "alias": "proc_tmp_demand_schedules", "checksum": {"name": "sha256", "checksum": "2bc3cdf62b7604668b7d1a0e78da37e11bd8aec6d673a70436df78dac4e182df"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_tmp_supply_properties_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.545654, "compiled_sql": "\n\nSELECT\n    a.id AS schedule_id,\n    a.prop_id AS property_id,\n    a.created_at,\n    a.begin_date,\n    timezone(e.timezone,timezone('UTC',a.created_at)) AS local_created_at,\n    timezone(e.timezone,timezone('UTC',a.begin_date)) AS local_begin_date,\n    b.name as schedule_type_name,\n    CASE \n        WHEN lower(b.name) LIKE 'salesv%' THEN 'Visit'\n        WHEN lower(b.name) LIKE 'salesp%' THEN 'Photo'\n        ELSE b.name\n    END AS schedule_name,\n    a.status,\n    CASE \n        WHEN lower(b.name) \n        LIKE '%sales%' THEN 'Sales'\n        ELSE 'Rentals' \n    END AS business,\n    a.cancel_reason,\n    c.applicant_id,\n    d.email,\n    e.country,\n    e.City_Houm AS city,\n    e.supply_source,\n    e.supply_relation,\n    a.appraiser_id\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" a\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" b ON b.id = a.schedule_type_id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" c ON c.schedule_id = a.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" d ON c.applicant_id = d.id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" e ON e.property_id = a.prop_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules\""}, "model.houm.proc_tmp_demand_tenant_houm_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nwith first_clean as (\nSELECT\n    stg_demand_portalhoum.id houm_applicant_id,\n    stg_demand_portalhoum.property_id as property_id,\n    stg_demand_portalhoum.lead_id,\n    stg_demand_portalhoum.created_at as created_at,\n    'Houm' origin,\n    coalesce(proc_properties_macrozone.geo_id, case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\nfrom {{ref('stg_demand_portalhoum')}} \nLEFT JOIN {{ref('proc_tmp_supply_properties_macrozone')}} proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalhoum.property_id\nWHERE stg_demand_portalhoum.created_at::date > '2022-03-10')\nselect\n\tfirst_clean.houm_applicant_id,\n\tfirst_clean.property_id,\n\tfirst_clean.lead_id,\n\tfirst_clean.created_at,\n\ttimezone(proc_tmp_supply_cities.timezone, timezone('UTC',first_clean.created_at)) as local_created_at,\n\tfirst_clean.origin,\n\tfirst_clean.geo_id\nfrom first_clean\nleft join {{ref('proc_tmp_supply_cities')}} on proc_tmp_supply_cities.geo_id = first_clean.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_portalhoum", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.proc_tmp_supply_cities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_tenant_houm_leads"], "unique_id": "model.houm.proc_tmp_demand_tenant_houm_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "name": "proc_tmp_demand_tenant_houm_leads", "alias": "proc_tmp_demand_tenant_houm_leads", "checksum": {"name": "sha256", "checksum": "2ab21abec14d11a5aadb8f6632418f170f9be4ffd1ae24c120260d263dfb4911"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_portalhoum"], ["proc_tmp_supply_properties_macrozone"], ["proc_tmp_supply_cities"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.547044, "compiled_sql": "\n\nwith first_clean as (\nSELECT\n    stg_demand_portalhoum.id houm_applicant_id,\n    stg_demand_portalhoum.property_id as property_id,\n    stg_demand_portalhoum.lead_id,\n    stg_demand_portalhoum.created_at as created_at,\n    'Houm' origin,\n    coalesce(proc_properties_macrozone.geo_id, case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalhoum.property_id\nWHERE stg_demand_portalhoum.created_at::date > '2022-03-10')\nselect\n\tfirst_clean.houm_applicant_id,\n\tfirst_clean.property_id,\n\tfirst_clean.lead_id,\n\tfirst_clean.created_at,\n\ttimezone(proc_tmp_supply_cities.timezone, timezone('UTC',first_clean.created_at)) as local_created_at,\n\tfirst_clean.origin,\n\tfirst_clean.geo_id\nfrom first_clean\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\" on proc_tmp_supply_cities.geo_id = first_clean.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_tenant_houm_leads\""}, "model.houm.proc_demand_sales_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM {{ ref('proc_pipedrive_leads') }}\nWHERE TRUE   \n    AND funnel = 'Demand' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    -- supply_qualification_date ,\n    -- supply_qualification ,\n    buyer_qualification_date ,\n    buyer_qualification ,\n    negotiation_property_condition ,\n    ---------\n    profile_financial ,\n    profile_buying_interest ,\n    profile_timing_need ,\n    profile_income ,\n    profile_savings_initial_fee ,\n    profile_decision_maker ,\n    profile_property_type ,\n    profile_property_condition ,\n    profile_geographic_interest ,\n    profile_rooms ,\n    profile_bathrooms ,\n    profile_parkings ,\n    profile_storage ,\n    profile_source_of_income ,\n    profile_income_type ,\n    profile_profession ,\n    profile_income_supplement ,\n    profile_saving_capacity ,\n    profile_ap_buyers ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_pipedrive_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_sales_leads"], "unique_id": "model.houm.proc_demand_sales_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_sales_leads.sql", "original_file_path": "models/processing/demand/proc_demand_sales_leads.sql", "name": "proc_demand_sales_leads", "alias": "proc_demand_sales_leads", "checksum": {"name": "sha256", "checksum": "bbd14a464d974920124f032157a742e0e94deed6f8b5ca593c69e6b2669b2b6f"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_pipedrive_leads"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_sales_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.5482671, "compiled_sql": "\n\nWITH demand_lead AS (\nSELECT \n    *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_pipedrive_leads\"\nWHERE TRUE   \n    AND funnel = 'Demand' \n    AND deal_business in ('Sales', 'Rental/Sales')\n)\n\nSELECT\n    deal_id ,\n    title ,\n    add_time ,\n    update_time ,\n    add_time_utc ,\n    update_time_utc ,\n    ------\n    pipeline_id ,\n    pipeline_name ,\n    pipeline_country ,\n    pipeline_geo_id ,\n    funnel ,\n    ------\n    person_id ,\n    person_name ,\n    person_email ,\n    person_phone ,\n    ------\n    owner_name ,\n    owner_email,\n    owner_id,\n    stage_name ,\n    status ,\n    label_id ,\n    label ,\n    active ,\n    deal_business ,\n    is_selfprofiling ,\n    ------\n    marketing_id ,\n    campaign_id ,\n    ad_group_id ,\n    ad_id ,\n    marketing_lead_id ,\n    source ,\n    source_city ,\n    source_geo_id ,\n    ------\n    -- source_buyer_property_condition ,\n    property_id ,\n    property_supply_source ,\n    negotiation_city ,\n    negotiation_geo_id ,\n    -- supply_qualification_date ,\n    -- supply_qualification ,\n    buyer_qualification_date ,\n    buyer_qualification ,\n    negotiation_property_condition ,\n    ---------\n    profile_financial ,\n    profile_buying_interest ,\n    profile_timing_need ,\n    profile_income ,\n    profile_savings_initial_fee ,\n    profile_decision_maker ,\n    profile_property_type ,\n    profile_property_condition ,\n    profile_geographic_interest ,\n    profile_rooms ,\n    profile_bathrooms ,\n    profile_parkings ,\n    profile_storage ,\n    profile_source_of_income ,\n    profile_income_type ,\n    profile_profession ,\n    profile_income_supplement ,\n    profile_saving_capacity ,\n    profile_ap_buyers ,\n    ------\n    won_time ,\n    first_won_time ,\n    lost_reason ,\n    lost_time ,\n    ------\n    is_deleted ,\n    is_test ,\n    is_merged \nFROM demand_lead", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_sales_leads\""}, "model.houm.proc_demand_reservations": {"raw_sql": "WITH payments_cl AS (\nSELECT\n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM {{ ref('stg_payments_cl_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_co AS (\nselect \n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,  -- 'CO-' || _id reservation_id\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM {{ ref('stg_payments_co_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz  \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_mx AS (\nSELECT \n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,  -- 'MX-' || _id reservation_id\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM {{ ref('stg_payments_mx_db_movements') }} AS movements \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED')    \n)\n\n, demand_reservations AS (\nSELECT \n    * \nFROM payments_cl\nUNION ALL \nSELECT \n    * \nFROM payments_co\nUNION ALL\nSELECT\n    * \nFROM payments_mx\n)\n\nSELECT *\nFROM demand_reservations", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_cl_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_co_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_mx_db_movements", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_reservations"], "unique_id": "model.houm.proc_demand_reservations", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_reservations.sql", "original_file_path": "models/processing/demand/proc_demand_reservations.sql", "name": "proc_demand_reservations", "alias": "proc_demand_reservations", "checksum": {"name": "sha256", "checksum": "8a6d0c3949c5e0d2e42f79b0fbcc8256e58f16ea51c3ec7c6e44b41fccfe67fa"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_payments_cl_db_movements"], ["proc_properties_mz"], ["stg_payments_co_db_movements"], ["proc_properties_mz"], ["stg_payments_mx_db_movements"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.549576, "compiled_sql": "WITH payments_cl AS (\nSELECT\n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_co AS (\nselect \n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,  -- 'CO-' || _id reservation_id\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  \n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED') \n)\n\n, payments_mx AS (\nSELECT \n    movements.date::TIMESTAMP AS payment_date ,\n    COALESCE((timezone( prop_mz.timezone, movements.date::TIMESTAMP)::TIMESTAMP WITH TIME ZONE),movements.date::TIMESTAMP) AS payment_date_local , \n    movements.agreed_date ,\n    prop_mz.geo_id  ,\n    _id AS reservation_id ,  -- 'MX-' || _id reservation_id\n    movements.property_id ,\n    movements.concept ,\n    movements.type ,\n    movements.person_data_sub_person_id ,\n    status \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\" AS movements \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n    ON prop_mz.property_id = movements.property_id\nWHERE TRUE \n    AND concept='RESERVATION' \n    AND type = 'INCOME'\n    AND status IN ('PAID','REFUNDED')    \n)\n\n, demand_reservations AS (\nSELECT \n    * \nFROM payments_cl\nUNION ALL \nSELECT \n    * \nFROM payments_co\nUNION ALL\nSELECT\n    * \nFROM payments_mx\n)\n\nSELECT *\nFROM demand_reservations", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\""}, "model.houm.proc_tmp_demand_tenant_pa_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT  \n    stg_demand_portalapplicant.id as portal_applicant_id,\n    stg_demand_portalapplicant.property_id as property_id,\n    stg_demand_portalapplicant.lead_id,\n    stg_demand_portalapplicant.created_at as created_at,\n    coalesce((timezone(proc_properties_macrozone.timezone,timezone('UTC',stg_demand_portalapplicant.created_at))),stg_demand_portalapplicant.created_at) as local_created_at,\n    case \n        when length(stg_demand_portalapplicant.origin) < 1 then null\n        else stg_demand_portalapplicant.origin\n    end as origin,\n    coalesce(proc_properties_macrozone.geo_id,case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\n    -- Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\n    -- No es necesario para las properties, es necesaria para las properties sin macrozona\n    -- Ademas eso deberia estar en un Test que cada portalapplicant tenga un Prop id\nFROM {{ref('stg_demand_portalapplicant')}}\nLEFT JOIN {{ref('proc_tmp_supply_properties_macrozone')}} proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalapplicant.property_id\nWHERE stg_demand_portalapplicant.created_at::date > '2022-03-10'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_portalapplicant", "model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_tenant_pa_leads"], "unique_id": "model.houm.proc_tmp_demand_tenant_pa_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "name": "proc_tmp_demand_tenant_pa_leads", "alias": "proc_tmp_demand_tenant_pa_leads", "checksum": {"name": "sha256", "checksum": "35dde35bc41bb6bdf0a5feac3976baa26fa00810a58c1abbe922c3bfa48a91af"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_portalapplicant"], ["proc_tmp_supply_properties_macrozone"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.551112, "compiled_sql": "\n\nSELECT  \n    stg_demand_portalapplicant.id as portal_applicant_id,\n    stg_demand_portalapplicant.property_id as property_id,\n    stg_demand_portalapplicant.lead_id,\n    stg_demand_portalapplicant.created_at as created_at,\n    coalesce((timezone(proc_properties_macrozone.timezone,timezone('UTC',stg_demand_portalapplicant.created_at))),stg_demand_portalapplicant.created_at) as local_created_at,\n    case \n        when length(stg_demand_portalapplicant.origin) < 1 then null\n        else stg_demand_portalapplicant.origin\n    end as origin,\n    coalesce(proc_properties_macrozone.geo_id,case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\n    -- Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\n    -- No es necesario para las properties, es necesaria para las properties sin macrozona\n    -- Ademas eso deberia estar en un Test que cada portalapplicant tenga un Prop id\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\"\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalapplicant.property_id\nWHERE stg_demand_portalapplicant.created_at::date > '2022-03-10'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_tenant_pa_leads\""}, "model.houm.proc_demand_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH rental_properties AS (\nSELECT \n\tid AS property_id \nFROM {{ ref('proc_properties') }}\nWHERE TRUE\n\tAND for_rental = TRUE\n)\n\n, demand_leads_clean AS (\nSELECT * \nFROM {{ ref('stg_demand_lead') }} AS demand_leads\nWHERE TRUE \n\tAND ( ( email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR email IS NULL )\n)\n\n, pa_leads AS (\nSELECT \n\t'PA -' || demand_portalapplicant.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) AS created_at ,\n\tCOALESCE(origin, 'Portal No Identificado')  AS origin ,\n\tprop_mz.geo_id \n\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM {{ ref('stg_demand_portalapplicant') }} AS demand_portalapplicant\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties \n\tON rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n\tON prop_mz.property_id = rental_properties.property_id\nWHERE TRUE \n\tAND ( origin != 'Test' OR origin IS NULL) \n)\n\n, houm_leads AS ( \nSELECT      \n\t'HOUM -' || demand_portalhoum.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalhoum.created_at)::TIMESTAMP WITH TIME ZONE )::DATE,demand_portalhoum.created_at::DATE) AS created_at ,\n\t'Houm' AS origin , \n\tprop_mz.geo_id \nFROM {{ ref('stg_demand_portalhoum') }} demand_portalhoum\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz\n\tON prop_mz.property_id = demand_portalhoum.property_id\nWHERE TRUE \n\tAND business_type = 'rentals' \n)\n\n, demand_leads AS (\nSELECT \n\t* \nFROM pa_leads\nUNION ALL \nSELECT \n\t* \nFROM houm_leads\n)\n\nSELECT *\nFROM demand_leads", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalhoum", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_leads"], "unique_id": "model.houm.proc_demand_leads", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_leads.sql", "original_file_path": "models/processing/demand/proc_demand_leads.sql", "name": "proc_demand_leads", "alias": "proc_demand_leads", "checksum": {"name": "sha256", "checksum": "f0a000db7a1450dc1d084ccb8c9150b144e9044ee7678976c1f0bc2727996321"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["stg_demand_lead"], ["stg_demand_portalapplicant"], ["proc_properties_mz"], ["stg_demand_portalhoum"], ["proc_properties_mz"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.552402, "compiled_sql": "\n\nWITH rental_properties AS (\nSELECT \n\tid AS property_id \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nWHERE TRUE\n\tAND for_rental = TRUE\n)\n\n, demand_leads_clean AS (\nSELECT * \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\" AS demand_leads\nWHERE TRUE \n\tAND ( ( email NOT LIKE '%test.test' AND email NOT LIKE '%test.com') OR email IS NULL )\n)\n\n, pa_leads AS (\nSELECT \n\t'PA -' || demand_portalapplicant.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) AS created_at ,\n\tCOALESCE(origin, 'Portal No Identificado')  AS origin ,\n\tprop_mz.geo_id \n\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" AS demand_portalapplicant\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties \n\tON rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n\tON prop_mz.property_id = rental_properties.property_id\nWHERE TRUE \n\tAND ( origin != 'Test' OR origin IS NULL) \n)\n\n, houm_leads AS ( \nSELECT      \n\t'HOUM -' || demand_portalhoum.id AS activity_id ,\n\tlead_id ,\n\tCOALESCE((timezone( prop_mz.timezone, demand_portalhoum.created_at)::TIMESTAMP WITH TIME ZONE )::DATE,demand_portalhoum.created_at::DATE) AS created_at ,\n\t'Houm' AS origin , \n\tprop_mz.geo_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" demand_portalhoum\nINNER JOIN demand_leads_clean \n\tON demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz\n\tON prop_mz.property_id = demand_portalhoum.property_id\nWHERE TRUE \n\tAND business_type = 'rentals' \n)\n\n, demand_leads AS (\nSELECT \n\t* \nFROM pa_leads\nUNION ALL \nSELECT \n\t* \nFROM houm_leads\n)\n\nSELECT *\nFROM demand_leads", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\""}, "model.houm.proc_demand_portalhoum": {"raw_sql": "{{ config(materialized='view') }}\n\nWITH rental_properties AS (\n    SELECT id        AS property_id,\n           'rentals' AS business_type_property\n    FROM {{ ref('proc_properties') }}\n    WHERE TRUE\n      AND for_rental = TRUE\n)\n   , sales_properties AS (\n    SELECT id      AS property_id,\n           'sales' AS business_type_property\n    FROM {{ ref('proc_properties') }}\n    WHERE TRUE\n      AND for_sale = TRUE\n)\n   , union_properties AS (\n    SELECT *\n    FROM rental_properties\n    UNION\n    SELECT *\n    FROM sales_properties\n)\n    , stg_demand_portalhoum AS (\n    SELECT demand_portalhoum.id,\n           demand_portalhoum.created_at,\n           demand_portalhoum.updated_at,\n           demand_portalhoum.phone,\n           demand_portalhoum.email,\n           demand_portalhoum.lead_id,\n           demand_portalhoum.name,\n           demand_portalhoum.last_name,\n           demand_portalhoum.origin,\n           demand_portalhoum.property_id,\n           demand_portalhoum.business_type AS business_type_lead,\n           union_properties.business_type_property,\n           COALESCE(business_type_lead, business_type_property) AS business_type,\n           properties_mz.geo_id,\n           dim_mz.country,\n           dim_mz.region_houm\n    FROM {{ ref('stg_demand_portalhoum') }} AS demand_portalhoum\n        LEFT JOIN union_properties\n            ON demand_portalhoum.property_id = union_properties.property_id \n            AND demand_portalhoum.business_type IS NULL\n    --hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\n        LEFT JOIN {{ ref('proc_properties_mz') }} AS properties_mz\n            ON demand_portalhoum.property_id = properties_mz.property_id\n        LEFT JOIN {{ ref('dim_macrozones') }} AS dim_mz\n            ON properties_mz.geo_id = dim_mz.geo_id\n    )\n\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        country,\n        region_houm\nFROM stg_demand_portalhoum", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties", "model.houm.stg_demand_portalhoum", "model.houm.proc_properties_mz", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_portalhoum"], "unique_id": "model.houm.proc_demand_portalhoum", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_portalhoum.sql", "original_file_path": "models/processing/demand/proc_demand_portalhoum.sql", "name": "proc_demand_portalhoum", "alias": "proc_demand_portalhoum", "checksum": {"name": "sha256", "checksum": "b79266a781235a688b8bc3188a62f44caf5236b04098d8256ba6d897f62f9569"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["proc_properties"], ["stg_demand_portalhoum"], ["proc_properties_mz"], ["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_portalhoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "view", "tags": ["dw", "processing", "demand"]}, "created_at": 1664825037.553816, "compiled_sql": "\n\nWITH rental_properties AS (\n    SELECT id        AS property_id,\n           'rentals' AS business_type_property\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\n    WHERE TRUE\n      AND for_rental = TRUE\n)\n   , sales_properties AS (\n    SELECT id      AS property_id,\n           'sales' AS business_type_property\n    FROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\n    WHERE TRUE\n      AND for_sale = TRUE\n)\n   , union_properties AS (\n    SELECT *\n    FROM rental_properties\n    UNION\n    SELECT *\n    FROM sales_properties\n)\n    , stg_demand_portalhoum AS (\n    SELECT demand_portalhoum.id,\n           demand_portalhoum.created_at,\n           demand_portalhoum.updated_at,\n           demand_portalhoum.phone,\n           demand_portalhoum.email,\n           demand_portalhoum.lead_id,\n           demand_portalhoum.name,\n           demand_portalhoum.last_name,\n           demand_portalhoum.origin,\n           demand_portalhoum.property_id,\n           demand_portalhoum.business_type AS business_type_lead,\n           union_properties.business_type_property,\n           COALESCE(business_type_lead, business_type_property) AS business_type,\n           properties_mz.geo_id,\n           dim_mz.country,\n           dim_mz.region_houm\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" AS demand_portalhoum\n        LEFT JOIN union_properties\n            ON demand_portalhoum.property_id = union_properties.property_id \n            AND demand_portalhoum.business_type IS NULL\n    --hacemos este UNION porque en el pasado no traiamos el business_type del lead, en este join duplicamos las filas para los leads que vieron props de ambos negocios y en la epoca que no sabiamos el negocio exacto\n        LEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS properties_mz\n            ON demand_portalhoum.property_id = properties_mz.property_id\n        LEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_mz\n            ON properties_mz.geo_id = dim_mz.geo_id\n    )\n\nSELECT  id,\n        created_at,\n        updated_at,\n        name,\n        last_name,\n        phone,\n        email,\n        lead_id,\n        origin,\n        property_id,\n        business_type,\n        geo_id,\n        country,\n        region_houm\nFROM stg_demand_portalhoum", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_portalhoum\""}, "model.houm.processing_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "processing_phase"], "unique_id": "model.houm.processing_phase", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "audit/processing_phase.sql", "original_file_path": "models/audit/processing_phase.sql", "name": "processing_phase", "alias": "processing_phase", "checksum": {"name": "sha256", "checksum": "ae91d6d2a5f8b288784499471395a79ff569788ea64c61b1f6cac581821fee14"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/processing_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1664825037.555098, "compiled_sql": "\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '2022-10-11 18:29:46.503778-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"processing_phase\""}, "model.houm.staging_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "staging_phase"], "unique_id": "model.houm.staging_phase", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "audit/staging_phase.sql", "original_file_path": "models/audit/staging_phase.sql", "name": "staging_phase", "alias": "staging_phase", "checksum": {"name": "sha256", "checksum": "77af671f108a3b96b2d55e2281247576de2ff93d0d7199f5c33670b8f0bad2a8"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/staging_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1664825037.558462, "compiled_sql": "\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '2022-10-11 18:29:46.503778-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"staging_phase\""}, "model.houm.freshness_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "freshness_phase"], "unique_id": "model.houm.freshness_phase", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "audit/freshness_phase.sql", "original_file_path": "models/audit/freshness_phase.sql", "name": "freshness_phase", "alias": "freshness_phase", "checksum": {"name": "sha256", "checksum": "738568135da8a2e72a4fe5994a7d47264532e0b3c662efd6ebbe3394980b1288"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/freshness_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1664825037.5611022, "compiled_sql": "\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '2022-10-11 18:29:46.503778-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"freshness_phase\""}, "model.houm.dwh_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "dwh_phase"], "unique_id": "model.houm.dwh_phase", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "audit/dwh_phase.sql", "original_file_path": "models/audit/dwh_phase.sql", "name": "dwh_phase", "alias": "dwh_phase", "checksum": {"name": "sha256", "checksum": "05c0f61b5e87deff2708d3aad3b3c55c6fad3cbd55513cd8f435c886a764164c"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/dwh_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1664825037.563518, "compiled_sql": "\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '2022-10-11 18:29:46.503778-03:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"dwh_phase\""}, "snapshot.houm.stg_macrozoneportalplan_snapshot": {"raw_sql": "\n\n    {{\n        config(\n          target_schema='dbt_snapshots',\n          strategy='check',\n          unique_key='unique_key',\n          tags = [\"snapshot\",\"external_portal_integrations\"],\n          check_cols=['total_slots', 'available_slots', 'portal_plan_slots'],\n          invalidate_hard_deletes=True,\n        )\n    }}\n\nSELECT\n       mpp.macrozone_id||'-'||ec.iso_name||'-'||ep.short_name||'-'||pp.business_type||'-'||pt.publication_name as unique_key,\n       mpp.id ,\n       mpp.total_slots ,\n       mpp.available_slots ,\n       mpp.macrozone_id ,\n       mpp.portal_plan_id ,\n       pp.portal_id ,\n       pp.publication_type_id ,\n       pt.publication_name ,\n       pt.publication_pretty_name ,\n       pp.business_type ,\n       pp.slots                 AS portal_plan_slots,\n       ep.name                  AS portal_name ,\n       ep.short_name            AS portal_short_name ,\n       ec.full_name             AS country ,\n       ec.iso_name              AS country_iso\n\nFROM      {{ ref('stg_external_portal_integrations_macrozoneportalplan') }}     AS mpp\nLEFT JOIN {{ ref('stg_external_portal_integrations_portalplan') }}              AS pp  ON mpp.portal_plan_id = pp.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_publicationtype') }}         AS pt  ON pp.publication_type_id = pt.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_externalportals') }}         AS ep  ON pp.portal_id = ep.id\nLEFT JOIN {{ ref('stg_external_portal_integrations_country') }}                 AS ec  ON ep.country_id = ec.id\n    \n", "compiled": true, "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.houm.stg_external_portal_integrations_macrozoneportalplan", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publicationtype", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_country"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["snapshot", "external_portal_integrations"], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "unique_key", "on_schema_change": "ignore", "grants": {}, "strategy": "check", "target_schema": "dbt_snapshots", "check_cols": ["total_slots", "available_slots", "portal_plan_slots"], "invalidate_hard_deletes": true, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_snapshots", "fqn": ["houm", "external_portal_integrations", "stg_macrozoneportalplan_snapshot", "stg_macrozoneportalplan_snapshot"], "unique_id": "snapshot.houm.stg_macrozoneportalplan_snapshot", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "external_portal_integrations/stg_macrozoneportalplan_snapshot.sql", "original_file_path": "snapshots/external_portal_integrations/stg_macrozoneportalplan_snapshot.sql", "name": "stg_macrozoneportalplan_snapshot", "alias": "stg_macrozoneportalplan_snapshot", "checksum": {"name": "sha256", "checksum": "28f473d9d9ffa30ff9bf39dbd22cf2e0bcdfe0b9e56436ebaa800c6431110d99"}, "tags": ["snapshot", "external_portal_integrations"], "refs": [["stg_external_portal_integrations_macrozoneportalplan"], ["stg_external_portal_integrations_portalplan"], ["stg_external_portal_integrations_publicationtype"], ["stg_external_portal_integrations_externalportals"], ["stg_external_portal_integrations_country"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "dbt_snapshots", "strategy": "check", "unique_key": "unique_key", "tags": ["snapshot", "external_portal_integrations"], "check_cols": ["total_slots", "available_slots", "portal_plan_slots"], "invalidate_hard_deletes": true}, "created_at": 1664825037.571914, "compiled_sql": "\n\n    \n\nSELECT\n       mpp.macrozone_id||'-'||ec.iso_name||'-'||ep.short_name||'-'||pp.business_type||'-'||pt.publication_name as unique_key,\n       mpp.id ,\n       mpp.total_slots ,\n       mpp.available_slots ,\n       mpp.macrozone_id ,\n       mpp.portal_plan_id ,\n       pp.portal_id ,\n       pp.publication_type_id ,\n       pt.publication_name ,\n       pt.publication_pretty_name ,\n       pp.business_type ,\n       pp.slots                 AS portal_plan_slots,\n       ep.name                  AS portal_name ,\n       ep.short_name            AS portal_short_name ,\n       ec.full_name             AS country ,\n       ec.iso_name              AS country_iso\n\nFROM      \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_macrozoneportalplan\"     AS mpp\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_portalplan\"              AS pp  ON mpp.portal_plan_id = pp.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_publicationtype\"         AS pt  ON pp.publication_type_id = pt.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_externalportals\"         AS ep  ON pp.portal_id = ep.id\nLEFT JOIN \"houmdw_prod\".\"dbt_staging\".\"stg_external_portal_integrations_country\"                 AS ec  ON ep.country_id = ec.id\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_snapshots\".\"stg_macrozoneportalplan_snapshot\""}, "test.houm.assert_properties_rent_prices_chile": {"raw_sql": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom {{ ref('stg_propertydetails' )}}  propertiesdetails\ninner join {{ref('stg_properties')}} properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "compiled": true, "resource_type": "test", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails", "model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "assert_properties_rent_prices_chile"], "unique_id": "test.houm.assert_properties_rent_prices_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/assert_properties_rent_prices_chile.sql", "original_file_path": "tests/staging/assert_properties_rent_prices_chile.sql", "name": "assert_properties_rent_prices_chile", "alias": "assert_properties_rent_prices_chile", "checksum": {"name": "sha256", "checksum": "4ec2e33ef03374d3793a93f32671a95972e1c84f375e743e9b7a4dcfa981e093"}, "tags": [], "refs": [["stg_propertydetails"], ["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/tests/staging/assert_properties_rent_prices_chile.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.5819478, "compiled_sql": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"  propertiesdetails\ninner join \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "seed.houm.country-codes": {"raw_sql": "", "compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "country-codes"], "unique_id": "seed.houm.country-codes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "country-codes.csv", "original_file_path": "seeds/country-codes.csv", "name": "country-codes", "alias": "country-codes", "checksum": {"name": "sha256", "checksum": "ea57c67f19126730facb36f54d1c059294a74a8865b6e2391e1526d563cd1c68"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.5894709, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"analytics_team\".\"country-codes\""}, "operation.houm.houm-on-run-end-0": {"raw_sql": "grant usage on schema analytics to metabase", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-0"], "unique_id": "operation.houm.houm-on-run-end-0", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-0.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-0", "alias": "houm-on-run-end-0", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.597236, "compiled_sql": "grant usage on schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 0}, "operation.houm.houm-on-run-end-1": {"raw_sql": "grant select on all tables in schema analytics to metabase", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-1"], "unique_id": "operation.houm.houm-on-run-end-1", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-1.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-1", "alias": "houm-on-run-end-1", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-1.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.5987258, "compiled_sql": "grant select on all tables in schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 1}, "operation.houm.houm-on-run-end-2": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-2"], "unique_id": "operation.houm.houm-on-run-end-2", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-2.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-2", "alias": "houm-on-run-end-2", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-2.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.600159, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 2}, "operation.houm.houm-on-run-end-3": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-3"], "unique_id": "operation.houm.houm-on-run-end-3", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-3.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-3", "alias": "houm-on-run-end-3", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-3.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.601551, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 3}, "operation.houm.houm-on-run-end-4": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-4"], "unique_id": "operation.houm.houm-on-run-end-4", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-4.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-4", "alias": "houm-on-run-end-4", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-4.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.603167, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 4}, "operation.houm.houm-on-run-end-5": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-5"], "unique_id": "operation.houm.houm-on-run-end-5", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-5.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-5", "alias": "houm-on-run-end-5", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-5.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.604628, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 5}, "operation.houm.houm-on-run-end-6": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-6"], "unique_id": "operation.houm.houm-on-run-end-6", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-6.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-6", "alias": "houm-on-run-end-6", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-6.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6060958, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 6}, "operation.houm.houm-on-run-end-7": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-7"], "unique_id": "operation.houm.houm-on-run-end-7", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-7.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-7", "alias": "houm-on-run-end-7", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-7.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.607609, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 7}, "operation.houm.houm-on-run-end-8": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-8"], "unique_id": "operation.houm.houm-on-run-end-8", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-8.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-8", "alias": "houm-on-run-end-8", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-8.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.610029, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 8}, "operation.houm.houm-on-run-end-9": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-9"], "unique_id": "operation.houm.houm-on-run-end-9", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-9.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-9", "alias": "houm-on-run-end-9", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-9.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.611412, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 9}, "operation.houm.houm-on-run-end-10": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-10"], "unique_id": "operation.houm.houm-on-run-end-10", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-10.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-10", "alias": "houm-on-run-end-10", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-10.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.612764, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 10}, "operation.houm.houm-on-run-end-11": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-11"], "unique_id": "operation.houm.houm-on-run-end-11", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-11.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-11", "alias": "houm-on-run-end-11", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-11.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.614191, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 11}, "operation.houm.houm-on-run-end-12": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-12"], "unique_id": "operation.houm.houm-on-run-end-12", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-12.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-12", "alias": "houm-on-run-end-12", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-12.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.615608, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 12}, "operation.houm.houm-on-run-end-13": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-13"], "unique_id": "operation.houm.houm-on-run-end-13", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-13.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-13", "alias": "houm-on-run-end-13", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-13.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.617106, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 13}, "operation.houm.houm-on-run-end-14": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-14"], "unique_id": "operation.houm.houm-on-run-end-14", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-14.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-14", "alias": "houm-on-run-end-14", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-14.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.618728, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 14}, "operation.houm.houm-on-run-end-15": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-15"], "unique_id": "operation.houm.houm-on-run-end-15", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-15.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-15", "alias": "houm-on-run-end-15", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-15.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6202528, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 15}, "operation.houm.houm-on-run-end-16": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-16"], "unique_id": "operation.houm.houm-on-run-end-16", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-16.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-16", "alias": "houm-on-run-end-16", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-16.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.621683, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 16}, "operation.houm.houm-on-run-end-17": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-17"], "unique_id": "operation.houm.houm-on-run-end-17", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-17.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-17", "alias": "houm-on-run-end-17", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-17.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.623102, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 17}, "operation.houm.houm-on-run-end-18": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-18"], "unique_id": "operation.houm.houm-on-run-end-18", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-18.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-18", "alias": "houm-on-run-end-18", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-18.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.626091, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 18}, "operation.houm.houm-on-run-end-19": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-19"], "unique_id": "operation.houm.houm-on-run-end-19", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-19.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-19", "alias": "houm-on-run-end-19", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-19.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6275818, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 19}, "operation.houm.houm-on-run-end-20": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-20"], "unique_id": "operation.houm.houm-on-run-end-20", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-20.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-20", "alias": "houm-on-run-end-20", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-20.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6290188, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 20}, "operation.houm.houm-on-run-end-21": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-21"], "unique_id": "operation.houm.houm-on-run-end-21", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-21.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-21", "alias": "houm-on-run-end-21", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-21.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.630481, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 21}, "operation.houm.houm-on-run-end-22": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-22"], "unique_id": "operation.houm.houm-on-run-end-22", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-22.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-22", "alias": "houm-on-run-end-22", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-22.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.631785, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 22}, "operation.houm.houm-on-run-end-23": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-23"], "unique_id": "operation.houm.houm-on-run-end-23", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-23.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-23", "alias": "houm-on-run-end-23", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-23.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.633139, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 23}, "operation.houm.houm-on-run-end-24": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-24"], "unique_id": "operation.houm.houm-on-run-end-24", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-24.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-24", "alias": "houm-on-run-end-24", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-24.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.634447, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 24}, "operation.houm.houm-on-run-end-25": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-25"], "unique_id": "operation.houm.houm-on-run-end-25", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-25.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-25", "alias": "houm-on-run-end-25", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-25.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.635871, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 25}, "operation.houm.houm-on-run-end-26": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-26"], "unique_id": "operation.houm.houm-on-run-end-26", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-26.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-26", "alias": "houm-on-run-end-26", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-26.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.637255, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 26}, "operation.houm.houm-on-run-end-27": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-27"], "unique_id": "operation.houm.houm-on-run-end-27", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-27.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-27", "alias": "houm-on-run-end-27", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-27.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.638588, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 27}, "operation.houm.houm-on-run-end-28": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-28"], "unique_id": "operation.houm.houm-on-run-end-28", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-28.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-28", "alias": "houm-on-run-end-28", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-28.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6413062, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 28}, "operation.houm.houm-on-run-end-29": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-29"], "unique_id": "operation.houm.houm-on-run-end-29", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-29.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-29", "alias": "houm-on-run-end-29", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-29.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6426501, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 29}, "operation.houm.houm-on-run-end-30": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-30"], "unique_id": "operation.houm.houm-on-run-end-30", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-30.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-30", "alias": "houm-on-run-end-30", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-30.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.643946, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_analytics_deliver\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 30}, "operation.houm.houm-on-run-end-31": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "analytics_team", "fqn": ["houm", "hooks", "houm-on-run-end-31"], "unique_id": "operation.houm.houm-on-run-end-31", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-31.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-31", "alias": "houm-on-run-end-31", "checksum": {"name": "sha256", "checksum": "5c35d9622261aacde508d05e32c982d96cec9c18846341eef5856fd47ec754b8"}, "tags": ["on-run-end"], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-31.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6453109, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_snapshots\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 31}, "test.houm.unique_properties_published_property_id.3fc869c6e4": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "unique_properties_published_property_id"], "unique_id": "test.houm.unique_properties_published_property_id.3fc869c6e4", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "unique_properties_published_property_id", "alias": "unique_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/unique_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.664625, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.not_null_properties_published_property_id.cfd67d7b86": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "not_null_properties_published_property_id"], "unique_id": "test.houm.not_null_properties_published_property_id.cfd67d7b86", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "not_null_properties_published_property_id", "alias": "not_null_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/not_null_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.6656609, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "unique_dim_macrozones_macrozone"], "unique_id": "test.houm.unique_dim_macrozones_macrozone.99a7937a3d", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "unique_dim_macrozones_macrozone", "alias": "unique_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/unique_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.667397, "compiled_sql": "\n    \n    \n\nselect\n    macrozone as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is not null\ngroup by macrozone\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "not_null_dim_macrozones_macrozone"], "unique_id": "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "not_null_dim_macrozones_macrozone", "alias": "not_null_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/not_null_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.668401, "compiled_sql": "\n    \n    \n\n\n\nselect macrozone\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.unique_stg_properties_id.c012ce6a29": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_properties_id"], "unique_id": "test.houm.unique_stg_properties_id.c012ce6a29", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_properties_id", "alias": "unique_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.711762, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.not_null_stg_properties_id.d43465ee9b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_properties_id"], "unique_id": "test.houm.not_null_stg_properties_id.d43465ee9b", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_properties_id", "alias": "not_null_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.7136471, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.unique_stg_propertydetails_property_id.3d72328240": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_propertydetails_property_id"], "unique_id": "test.houm.unique_stg_propertydetails_property_id.3d72328240", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_propertydetails_property_id", "alias": "unique_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.714627, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.not_null_stg_propertydetails_property_id.e78288fade": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_propertydetails_property_id"], "unique_id": "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_propertydetails_property_id", "alias": "not_null_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.715631, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_propertydetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_propertydetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_propertydetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1"}, "created_at": 1664825037.7165198, "compiled_sql": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_property_salesdetails_property_id"], "unique_id": "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_property_salesdetails_property_id", "alias": "unique_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.72332, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_property_salesdetails_property_id"], "unique_id": "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_property_salesdetails_property_id", "alias": "not_null_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.72452, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_property_salesdetails"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee"}, "created_at": 1664825037.725409, "compiled_sql": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_employees_dwh_person_id"], "unique_id": "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_employees_dwh_person_id", "alias": "unique_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.72898, "compiled_sql": "\n    \n    \n\nselect\n    dwh_person_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is not null\ngroup by dwh_person_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_employees_dwh_person_id"], "unique_id": "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_employees_dwh_person_id", "alias": "not_null_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.729812, "compiled_sql": "\n    \n    \n\n\n\nselect dwh_person_id\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.unique_stg_zendesk_users_id.e79d686872": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_users_id"], "unique_id": "test.houm.unique_stg_zendesk_users_id.e79d686872", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_users_id", "alias": "unique_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.730609, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_id.52cc258f65": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_id"], "unique_id": "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_id", "alias": "not_null_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.7317, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_created_at", "alias": "not_null_stg_zendesk_users_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.732534, "compiled_sql": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_users"}, "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_tickets_id"], "unique_id": "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_tickets_id", "alias": "unique_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.7333472, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_id", "alias": "not_null_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.734185, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_created_at", "alias": "not_null_stg_zendesk_tickets_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.735178, "compiled_sql": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_requester_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_requester_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_requester_id", "alias": "not_null_stg_zendesk_tickets_requester_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_requester_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.736091, "compiled_sql": "\n    \n    \n\n\n\nselect requester_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere requester_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784"}, "created_at": 1664825037.737084, "compiled_sql": "\n    \n    \n\nwith child as (\n    select requester_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where requester_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_submitter_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_submitter_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_submitter_id", "alias": "not_null_stg_zendesk_tickets_submitter_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_submitter_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1664825037.740442, "compiled_sql": "\n    \n    \n\n\n\nselect submitter_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere submitter_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651"}, "created_at": 1664825037.7413352, "compiled_sql": "\n    \n    \n\nwith child as (\n    select submitter_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where submitter_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}}, "sources": {"source.houm.public.dim_polygons": {"fqn": ["houm", "dwh", "dims", "public", "dim_polygons"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_polygons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "dim_polygons", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_polygons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_polygons\"", "created_at": 1664825037.790404}, "source.houm.historical.historical_scheduler_macrozone": {"fqn": ["houm", "dwh", "dims", "historical", "historical_scheduler_macrozone"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_scheduler_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "historical_scheduler_macrozone", "source_name": "historical", "source_description": "", "loader": "", "identifier": "historical_scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_scheduler_macrozone\"", "created_at": 1664825037.790508}, "source.houm.public.dim_dates": {"fqn": ["houm", "staging", "public", "dim_dates"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_dates", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "dim_dates", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_dates", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_dates\"", "created_at": 1664825037.790569}, "source.houm.public.rev_houm_properties": {"fqn": ["houm", "staging", "public", "rev_houm_properties"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.rev_houm_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "rev_houm_properties", "source_name": "public", "source_description": "", "loader": "", "identifier": "rev_houm_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"rev_houm_properties\"", "created_at": 1664825037.790623}, "source.houm.historical.historical_properties": {"fqn": ["houm", "staging", "historical", "historical_properties"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties\"", "created_at": 1664825037.7906759}, "source.houm.historical.historical_arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_propertydetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_propertydetails\"", "created_at": 1664825037.7907279}, "source.houm.historical.historical_properties_salesdetails": {"fqn": ["houm", "staging", "historical", "historical_properties_salesdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties_salesdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties_salesdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties_salesdetails\"", "created_at": 1664825037.7907782}, "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_homecheckerdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_homecheckerdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_homecheckerdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_homecheckerdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"", "created_at": 1664825037.790828}, "source.houm.historical.historical_users": {"fqn": ["houm", "staging", "historical", "historical_users"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_users", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_users\"", "created_at": 1664825037.790884}, "source.houm.historical.historical_contracts": {"fqn": ["houm", "staging", "historical", "historical_contracts"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_contracts", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_contracts", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_contracts", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_contracts\"", "created_at": 1664825037.790933}, "source.houm.historical.historical_plans": {"fqn": ["houm", "staging", "historical", "historical_plans"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_plans", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_plans", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_plans", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_plans\"", "created_at": 1664825037.790981}, "source.houm.historical.historical_external_portal_integrations_publication": {"fqn": ["houm", "staging", "historical", "historical_external_portal_integrations_publication"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_external_portal_integrations_publication", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_external_portal_integrations_publication", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_external_portal_integrations_publication", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_external_portal_integrations_publication\"", "created_at": 1664825037.791029}, "source.houm.historical.historical_evaluation": {"fqn": ["houm", "staging", "historical", "historical_evaluation"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_evaluation", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_evaluation", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_evaluation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_evaluation\"", "created_at": 1664825037.7910779}, "source.houm.raw_stage.series_ipc_cl": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_cl"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_cl", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"", "created_at": 1664825037.79122}, "source.houm.raw_stage.series_ipc_mx": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_mx"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_mx", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"", "created_at": 1664825037.791274}, "source.houm.raw_stage.series_ipc_co": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_co"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_co", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"", "created_at": 1664825037.7913249}, "source.houm.raw_stage.properties": {"fqn": ["houm", "staging", "raw_stage", "properties"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties\"", "created_at": 1664825037.7913752}, "source.houm.raw_stage.properties_salesdetails": {"fqn": ["houm", "staging", "raw_stage", "properties_salesdetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_salesdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_salesdetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"", "created_at": 1664825037.791434}, "source.houm.raw_stage.properties_location": {"fqn": ["houm", "staging", "raw_stage", "properties_location"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_location", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_location", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_location", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_location\"", "created_at": 1664825037.7914891}, "source.houm.raw_stage.properties_associationamenities": {"fqn": ["houm", "staging", "raw_stage", "properties_associationamenities"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_associationamenities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_associationamenities", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_associationamenities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_associationamenities\"", "created_at": 1664825037.791541}, "source.houm.raw_stage.properties_inspectionreport": {"fqn": ["houm", "staging", "raw_stage", "properties_inspectionreport"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_inspectionreport", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_inspectionreport", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_inspectionreport", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_inspectionreport\"", "created_at": 1664825037.791593}, "source.houm.raw_stage.properties_basicservice": {"fqn": ["houm", "staging", "raw_stage", "properties_basicservice"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_basicservice", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_basicservice", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_basicservice", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_basicservice\"", "created_at": 1664825037.7916439}, "source.houm.raw_stage.arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_propertydetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"", "created_at": 1664825037.791728}, "source.houm.raw_stage.arriendoasegurado_city": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_city"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_city", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_city", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_city", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_city\"", "created_at": 1664825037.791966}, "source.houm.raw_stage.arriendoasegurado_applicant": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_applicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_applicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_applicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_applicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "created_at": 1664825037.7920399}, "source.houm.raw_stage.arriendoasegurado_contractperson": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_contractperson"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_contractperson", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_contractperson", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_contractperson", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_contractperson\"", "created_at": 1664825037.792099}, "source.houm.raw_stage.arriendoasegurado_planmonth": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_planmonth"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_planmonth", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_planmonth", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_planmonth", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_planmonth\"", "created_at": 1664825037.7921548}, "source.houm.raw_stage.arriendoasegurado_rentfeedback": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_rentfeedback"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_rentfeedback", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_rentfeedback", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_rentfeedback", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_rentfeedback\"", "created_at": 1664825037.792212}, "source.houm.raw_stage.users": {"fqn": ["houm", "staging", "raw_stage", "users"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"users\"", "created_at": 1664825037.792265}, "source.houm.raw_stage.subscription_subscription": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscription"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscription", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscription", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscription", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"", "created_at": 1664825037.792319}, "source.houm.raw_stage.real_estate_developments_developments": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_developments"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_developments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_developments", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_developments", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developments\"", "created_at": 1664825037.792372}, "source.houm.raw_stage.real_estate_developments_developmentdetails": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_developmentdetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_developmentdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_developmentdetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_developmentdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_developmentdetails\"", "created_at": 1664825037.792425}, "source.houm.raw_stage.real_estate_developments_unittypes": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_unittypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_unittypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_unittypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_unittypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_unittypes\"", "created_at": 1664825037.792477}, "source.houm.raw_stage.real_estate_developments_units": {"fqn": ["houm", "staging", "raw_stage", "real_estate_developments_units"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.real_estate_developments_units", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "real_estate_developments_units", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "real_estate_developments_units", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"real_estate_developments_units\"", "created_at": 1664825037.7925289}, "source.houm.raw_stage.demand_lead": {"fqn": ["houm", "staging", "raw_stage", "demand_lead"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_lead", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_lead", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_lead", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "created_at": 1664825037.792584}, "source.houm.raw_stage.demand_portalhoum": {"fqn": ["houm", "staging", "raw_stage", "demand_portalhoum"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalhoum", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalhoum", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalhoum", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "created_at": 1664825037.792638}, "source.houm.raw_stage.demand_portalapplicant": {"fqn": ["houm", "staging", "raw_stage", "demand_portalapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "created_at": 1664825037.792706}, "source.houm.raw_stage.demand_marketingapplicant": {"fqn": ["houm", "staging", "raw_stage", "demand_marketingapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_marketingapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_marketingapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_marketingapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_marketingapplicant\"", "created_at": 1664825037.79278}, "source.houm.raw_stage.demand_whatsapp": {"fqn": ["houm", "staging", "raw_stage", "demand_whatsapp"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_whatsapp", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_whatsapp", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_whatsapp", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_whatsapp\"", "created_at": 1664825037.7928379}, "source.houm.raw_stage.demand_calls": {"fqn": ["houm", "staging", "raw_stage", "demand_calls"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_calls", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_calls", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_calls", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_calls\"", "created_at": 1664825037.792893}, "source.houm.raw_stage.demand_eventleadhasappraiser": {"fqn": ["houm", "staging", "raw_stage", "demand_eventleadhasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_eventleadhasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_eventleadhasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_eventleadhasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_eventleadhasappraiser\"", "created_at": 1664825037.792948}, "source.houm.raw_stage.demand_leadhasappraiser": {"fqn": ["houm", "staging", "raw_stage", "demand_leadhasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_leadhasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_leadhasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_leadhasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_leadhasappraiser\"", "created_at": 1664825037.793001}, "source.houm.raw_stage.demand_eventleadprofile": {"fqn": ["houm", "staging", "raw_stage", "demand_eventleadprofile"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_eventleadprofile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_eventleadprofile", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_eventleadprofile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_eventleadprofile\"", "created_at": 1664825037.7930508}, "source.houm.raw_stage.scheduler_schedules": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedules"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedules", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedules", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedules", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "created_at": 1664825037.793104}, "source.houm.raw_stage.scheduler_scheduletypes": {"fqn": ["houm", "staging", "raw_stage", "scheduler_scheduletypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_scheduletypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_scheduletypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_scheduletypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "created_at": 1664825037.7931561}, "source.houm.raw_stage.scheduler_appraisers": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraisers"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraisers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraisers", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraisers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraisers\"", "created_at": 1664825037.793207}, "source.houm.raw_stage.scheduler_schedulehasapplicant": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedulehasapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedulehasapplicant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedulehasapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedulehasapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "created_at": 1664825037.793257}, "source.houm.raw_stage.scheduler_applicanthasappraiser": {"fqn": ["houm", "staging", "raw_stage", "scheduler_applicanthasappraiser"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_applicanthasappraiser", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_applicanthasappraiser", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_applicanthasappraiser", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_applicanthasappraiser\"", "created_at": 1664825037.79331}, "source.houm.raw_stage.scheduler_appraiseravailability": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiseravailability"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiseravailability", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiseravailability", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiseravailability", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiseravailability\"", "created_at": 1664825037.793361}, "source.houm.raw_stage.scheduler_appraiserevent": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiserevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiserevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiserevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiserevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserevent\"", "created_at": 1664825037.793411}, "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": {"fqn": ["houm", "staging", "raw_stage", "scheduler_appraiserworkingmacrozone"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_appraiserworkingmacrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_appraiserworkingmacrozone", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_appraiserworkingmacrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_appraiserworkingmacrozone\"", "created_at": 1664825037.793462}, "source.houm.raw_stage.scheduler_cancelreasons": {"fqn": ["houm", "staging", "raw_stage", "scheduler_cancelreasons"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_cancelreasons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_cancelreasons", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_cancelreasons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasons\"", "created_at": 1664825037.79351}, "source.houm.raw_stage.scheduler_cancelreasontypes": {"fqn": ["houm", "staging", "raw_stage", "scheduler_cancelreasontypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_cancelreasontypes", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_cancelreasontypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_cancelreasontypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_cancelreasontypes\"", "created_at": 1664825037.793559}, "source.houm.raw_stage.scheduler_macrozone": {"fqn": ["houm", "staging", "raw_stage", "scheduler_macrozone"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_macrozone", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_macrozone", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\"", "created_at": 1664825037.793607}, "source.houm.raw_stage.scheduler_scheduleevent": {"fqn": ["houm", "staging", "raw_stage", "scheduler_scheduleevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_scheduleevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_scheduleevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_scheduleevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_scheduleevent\"", "created_at": 1664825037.793656}, "source.houm.raw_stage.subscription_subscriptiondiscount": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscriptiondiscount"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscriptiondiscount", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscriptiondiscount", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscriptiondiscount", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscriptiondiscount\"", "created_at": 1664825037.793707}, "source.houm.raw_stage.subscription_subscriptionevent": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscriptionevent"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscriptionevent", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscriptionevent", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscriptionevent", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscriptionevent\"", "created_at": 1664825037.793782}, "source.houm.raw_stage.bid": {"fqn": ["houm", "staging", "raw_stage", "bid"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.bid", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "bid", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"bid\"", "created_at": 1664825037.7938318}, "source.houm.raw_stage.negotiation": {"fqn": ["houm", "staging", "raw_stage", "negotiation"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.negotiation", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "negotiation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"negotiation\"", "created_at": 1664825037.7938812}, "source.houm.raw_stage.identification": {"fqn": ["houm", "staging", "raw_stage", "identification"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.identification", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "identification", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"identification\"", "created_at": 1664825037.79393}, "source.houm.raw_stage.identification_type": {"fqn": ["houm", "staging", "raw_stage", "identification_type"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.identification_type", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification_type", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "identification_type", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"identification_type\"", "created_at": 1664825037.79398}, "source.houm.raw_stage.contracts_codebtors": {"fqn": ["houm", "staging", "raw_stage", "contracts_codebtors"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.contracts_codebtors", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "contracts_codebtors", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "contracts_codebtors", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"contracts_codebtors\"", "created_at": 1664825037.794029}, "source.houm.raw_stage.plans_cities": {"fqn": ["houm", "staging", "raw_stage", "plans_cities"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.plans_cities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "plans_cities", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "plans_cities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"plans_cities\"", "created_at": 1664825037.794077}, "source.houm.raw_stage.billing_adjustment": {"fqn": ["houm", "staging", "raw_stage", "billing_adjustment"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.billing_adjustment", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "billing_adjustment", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "billing_adjustment", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"billing_adjustment\"", "created_at": 1664825037.794127}, "source.houm.raw_stage.payment_orders": {"fqn": ["houm", "staging", "raw_stage", "payment_orders"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.payment_orders", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payment_orders", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "payment_orders", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"payment_orders\"", "created_at": 1664825037.794175}, "source.houm.raw_stage.plans": {"fqn": ["houm", "staging", "raw_stage", "plans"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.plans", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "plans", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "plans", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"plans\"", "created_at": 1664825037.794223}, "source.houm.raw_stage.contracts": {"fqn": ["houm", "staging", "raw_stage", "contracts"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.contracts", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "contracts", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "contracts", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"contracts\"", "created_at": 1664825037.794272}, "source.houm.raw_stage.external_portal_integrations_country": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_country"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_country", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_country", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_country", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_country\"", "created_at": 1664825037.7943199}, "source.houm.raw_stage.external_portal_integrations_publication": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publication"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publication", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publication", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publication", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publication\"", "created_at": 1664825037.794368}, "source.houm.raw_stage.external_portal_integrations_publicationtype": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publicationtype"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publicationtype", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publicationtype", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publicationtype", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationtype\"", "created_at": 1664825037.7944162}, "source.houm.raw_stage.external_portal_integrations_portalplan": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_portalplan"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_portalplan", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_portalplan", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_portalplan", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_portalplan\"", "created_at": 1664825037.794464}, "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_macrozoneportalplan"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_macrozoneportalplan", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_macrozoneportalplan", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_macrozoneportalplan\"", "created_at": 1664825037.794515}, "source.houm.raw_stage.external_portal_integrations_loadstatus": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_loadstatus"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_loadstatus", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_loadstatus", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_loadstatus", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_loadstatus\"", "created_at": 1664825037.794562}, "source.houm.raw_stage.external_portal_integrations_externalportals": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_externalportals"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_externalportals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_externalportals", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_externalportals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_externalportals\"", "created_at": 1664825037.79461}, "source.houm.raw_stage.external_portal_integrations_publicationurl": {"fqn": ["houm", "staging", "raw_stage", "external_portal_integrations_publicationurl"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.external_portal_integrations_publicationurl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "external_portal_integrations_publicationurl", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "external_portal_integrations_publicationurl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"external_portal_integrations_publicationurl\"", "created_at": 1664825037.794657}, "source.houm.staging_buk.employees_chile": {"fqn": ["houm", "staging", "staging_buk", "employees_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_chile\"", "created_at": 1664825037.7947059}, "source.houm.staging_buk.employees_colombia": {"fqn": ["houm", "staging", "staging_buk", "employees_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "created_at": 1664825037.794754}, "source.houm.staging_buk.roles_chile": {"fqn": ["houm", "staging", "staging_buk", "roles_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_chile\"", "created_at": 1664825037.794803}, "source.houm.staging_buk.roles_colombia": {"fqn": ["houm", "staging", "staging_buk", "roles_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "created_at": 1664825037.7948549}, "source.houm.staging_buk.accounting_chile": {"fqn": ["houm", "staging", "staging_buk", "accounting_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_chile\"", "created_at": 1664825037.795021}, "source.houm.staging_buk.accounting_colombia": {"fqn": ["houm", "staging", "staging_buk", "accounting_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_colombia\"", "created_at": 1664825037.79509}, "source.houm.staging_buk.areas_chile": {"fqn": ["houm", "staging", "staging_buk", "areas_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_chile\"", "created_at": 1664825037.7951481}, "source.houm.staging_buk.areas_colombia": {"fqn": ["houm", "staging", "staging_buk", "areas_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "created_at": 1664825037.7952042}, "source.houm.staging_buk.companies_chile": {"fqn": ["houm", "staging", "staging_buk", "companies_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_chile\"", "created_at": 1664825037.7952561}, "source.houm.staging_buk.companies_colombia": {"fqn": ["houm", "staging", "staging_buk", "companies_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "created_at": 1664825037.795308}, "source.houm.staging_buk.departments_chile": {"fqn": ["houm", "staging", "staging_buk", "departments_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_chile\"", "created_at": 1664825037.795358}, "source.houm.staging_buk.departments_colombia": {"fqn": ["houm", "staging", "staging_buk", "departments_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "created_at": 1664825037.7954078}, "source.houm.staging_buk.jobs_chile": {"fqn": ["houm", "staging", "staging_buk", "jobs_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_chile\"", "created_at": 1664825037.795459}, "source.houm.staging_buk.jobs_colombia": {"fqn": ["houm", "staging", "staging_buk", "jobs_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "created_at": 1664825037.795509}, "source.houm.staging_buk.payrolls_chile": {"fqn": ["houm", "staging", "staging_buk", "payrolls_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"", "created_at": 1664825037.795558}, "source.houm.staging_buk.payrolls_colombia": {"fqn": ["houm", "staging", "staging_buk", "payrolls_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "created_at": 1664825037.795607}, "source.houm.staging_buk.line_settlements_chile": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_chile", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"", "created_at": 1664825037.795686}, "source.houm.staging_buk.line_settlements_colombia": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_colombia", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "created_at": 1664825037.795767}, "source.houm.airbyte_zendesk.users": {"fqn": ["houm", "staging", "airbyte_zendesk", "users"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"users\"", "created_at": 1664825037.795829}, "source.houm.airbyte_zendesk.tickets": {"fqn": ["houm", "staging", "airbyte_zendesk", "tickets"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.tickets", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "tickets", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "tickets", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "created_at": 1664825037.795883}, "source.houm.airbyte_zendesk.ticket_audits": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\"", "created_at": 1664825037.795937}, "source.houm.airbyte_zendesk.ticket_audits_events": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_events"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_events", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_events", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_events", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\"", "created_at": 1664825037.795988}, "source.houm.airbyte_zendesk.ticket_audits_via": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\"", "created_at": 1664825037.796059}, "source.houm.airbyte_zendesk.ticket_audits_via_source": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\"", "created_at": 1664825037.7961118}, "source.houm.airbyte_zendesk.ticket_audits_via_source_from": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_from"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_from", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source_from", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\"", "created_at": 1664825037.7961652}, "source.houm.airbyte_zendesk.ticket_audits_via_source_to": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_to"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_to", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_to", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_audits_via_source_to", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\"", "created_at": 1664825037.796215}, "source.houm.airbyte_zendesk.ticket_metrics": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_metrics"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_metrics", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_metrics", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_metrics", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "created_at": 1664825037.796263}, "source.houm.airbyte_zendesk.ticket_comments": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_comments"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_comments", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_comments", "source_name": "airbyte_zendesk", "source_description": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.", "loader": "", "identifier": "ticket_comments", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\"", "created_at": 1664825037.796313}, "source.houm.pipedrive.activities": {"fqn": ["houm", "staging", "pipedrive", "activities"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.activities", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "activities", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "activities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"activities\"", "created_at": 1664825037.796366}, "source.houm.pipedrive.deals": {"fqn": ["houm", "staging", "pipedrive", "deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.deals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"deals\"", "created_at": 1664825037.796417}, "source.houm.pipedrive.pipelines": {"fqn": ["houm", "staging", "pipedrive", "pipelines"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.pipelines", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "pipelines", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "pipelines", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"pipelines\"", "created_at": 1664825037.796468}, "source.houm.pipedrive.stages": {"fqn": ["houm", "staging", "pipedrive", "stages"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.stages", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "stages", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "stages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"stages\"", "created_at": 1664825037.796521}, "source.houm.pipedrive.bi_persons": {"fqn": ["houm", "staging", "pipedrive", "bi_persons"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_persons", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_persons", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_persons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_persons\"", "created_at": 1664825037.7965739}, "source.houm.pipedrive.bi_deals": {"fqn": ["houm", "staging", "pipedrive", "bi_deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_deals", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_deals\"", "created_at": 1664825037.796624}, "source.houm.mongo_tables.payments_cl_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_cl_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_cl_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_cl_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_cl_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "created_at": 1664825037.796673}, "source.houm.mongo_tables.payments_co_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_co_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_co_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_co_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_co_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "created_at": 1664825037.796722}, "source.houm.mongo_tables.payments_mx_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_mx_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_mx_db_movements", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_mx_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_mx_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "created_at": 1664825037.79677}, "source.houm.airbyte_gspread.bb_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "bb_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.bb_fb", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bb_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "bb_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "created_at": 1664825037.79682}, "source.houm.airbyte_gspread.gg_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "created_at": 1664825037.796871}, "source.houm.airbyte_gspread.gg_mxco": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_mxco"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_mxco", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_mxco", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_mxco", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "created_at": 1664825037.796923}, "source.houm.airbyte_gspread.campaign_keys_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_fb", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "created_at": 1664825037.796972}, "source.houm.airbyte_gspread.campaign_keys_gg": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_gg"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_gg", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_gg", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_gg", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "created_at": 1664825037.79702}, "source.houm.airbyte_gspread.data": {"fqn": ["houm", "staging", "airbyte_gspread", "data"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.data", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "data", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "data", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"data\"", "created_at": 1664825037.797068}, "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"", "created_at": 1664825037.797123}, "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "created_at": 1664825037.797172}, "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_24_hrs"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_24_hrs", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_24_hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"", "created_at": 1664825037.79722}, "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"", "created_at": 1664825037.797269}, "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"", "created_at": 1664825037.797319}, "source.houm.airbyte_gspread.nps_cancel_visit": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_cancel_visit"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_cancel_visit", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_cancel_visit", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_cancel_visit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"", "created_at": 1664825037.797369}, "source.houm.airbyte_gspread.nps_chile_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_foto", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"", "created_at": 1664825037.79742}, "source.houm.airbyte_gspread.nps_chile_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_renta", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"", "created_at": 1664825037.7974699}, "source.houm.airbyte_gspread.nps_chile_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_sales", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_sales\"", "created_at": 1664825037.797518}, "source.houm.airbyte_gspread.nps_colombia_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_foto", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"", "created_at": 1664825037.797565}, "source.houm.airbyte_gspread.nps_colombia_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_renta", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"", "created_at": 1664825037.797614}, "source.houm.airbyte_gspread.nps_colombia_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_sales", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_sales\"", "created_at": 1664825037.797666}, "source.houm.airbyte_gspread.nps_mexico_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_foto", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "created_at": 1664825037.797719}, "source.houm.airbyte_gspread.nps_mexico_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_renta", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"", "created_at": 1664825037.797771}, "source.houm.airbyte_gspread.nps_mexico_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_sales", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_sales\"", "created_at": 1664825037.797821}, "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"", "created_at": 1664825037.797872}, "source.houm.airbyte_gspread.nps_sales_post_venta_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_seller", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"", "created_at": 1664825037.797923}, "source.houm.airbyte_gspread.nps_sales_promesa_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"", "created_at": 1664825037.797977}, "source.houm.airbyte_gspread.nps_sales_promesa_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_seller", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"", "created_at": 1664825037.798028}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"", "created_at": 1664825037.79808}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"", "created_at": 1664825037.798152}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"", "created_at": 1664825037.7982059}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_cl\"", "created_at": 1664825037.798259}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_co\"", "created_at": 1664825037.798312}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_mx\"", "created_at": 1664825037.798367}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"", "created_at": 1664825037.798421}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"", "created_at": 1664825037.7984881}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "created_at": 1664825037.7985432}, "source.houm.airbyte_gspread.anuncios": {"fqn": ["houm", "staging", "airbyte_gspread", "anuncios"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.anuncios", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "anuncios", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "anuncios", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "created_at": 1664825037.798597}, "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_24_horas_tenant"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_24_horas_tenant", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_24_horas_tenant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_24_horas_tenant\"", "created_at": 1664825037.798648}, "source.houm.airbyte_gspread.new_nps_rentals_new_listing": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_new_listing"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_new_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_new_listing", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_new_listing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_new_listing\"", "created_at": 1664825037.798701}, "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_rentals_propietary_poscontract"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_rentals_propietary_poscontract", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_rentals_propietary_poscontract", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_rentals_propietary_poscontract\"", "created_at": 1664825037.7987509}, "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_landlord_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_landlord_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_landlord_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_3_meses\"", "created_at": 1664825037.7988029}, "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_landlord_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_landlord_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_landlord_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_landlord_6_meses\"", "created_at": 1664825037.7988522}, "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_tenant_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_tenant_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_tenant_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_3_meses\"", "created_at": 1664825037.798902}, "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_automatic_tenant_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_automatic_tenant_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_automatic_tenant_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_automatic_tenant_6_meses\"", "created_at": 1664825037.798955}, "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_buyer_posventa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_buyer_posventa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_buyer_posventa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_posventa\"", "created_at": 1664825037.799005}, "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_buyer_promesa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_buyer_promesa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_buyer_promesa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_buyer_promesa\"", "created_at": 1664825037.799057}, "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_landlord_posventa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_landlord_posventa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_landlord_posventa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_posventa\"", "created_at": 1664825037.799108}, "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_sales_landlord_promesa"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_sales_landlord_promesa", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_sales_landlord_promesa", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_sales_landlord_promesa\"", "created_at": 1664825037.799281}, "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_cancel_visit"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_cancel_visit", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_cancel_visit", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_cancel_visit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_cancel_visit\"", "created_at": 1664825037.799333}, "source.houm.airbyte_gspread.new_nps_visit_photo_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_photo_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_photo_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_photo_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_photo_done\"", "created_at": 1664825037.799383}, "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_rental_visit_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_rental_visit_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_rental_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_rental_visit_done\"", "created_at": 1664825037.799437}, "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": {"fqn": ["houm", "staging", "airbyte_gspread", "new_nps_visit_sales_visit_done"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "new_nps_visit_sales_visit_done", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "new_nps_visit_sales_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"new_nps_visit_sales_visit_done\"", "created_at": 1664825037.799489}, "source.houm.survicate.nps_landlord_satisfaction_6months_cl": {"fqn": ["houm", "staging", "survicate", "nps_landlord_satisfaction_6months_cl"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_satisfaction_6months_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_satisfaction_6months_cl", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_satisfaction_6months_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "created_at": 1664825037.799545}, "source.houm.survicate.nps_landlord_listing": {"fqn": ["houm", "staging", "survicate", "nps_landlord_listing"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_listing", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_listing", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_listing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "created_at": 1664825037.799595}, "source.houm.survicate.nps_landlord_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_landlord_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_new_sub", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "created_at": 1664825037.799648}, "source.houm.survicate.nps_tennant_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_tennant_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tennant_new_sub", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tennant_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tennant_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "created_at": 1664825037.799832}, "source.houm.survicate.photo_done": {"fqn": ["houm", "staging", "survicate", "photo_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.photo_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "photo_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "photo_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"photo_done\"", "created_at": 1664825037.799944}, "source.houm.survicate.nps_tenant_satisfaction_24hrs": {"fqn": ["houm", "staging", "survicate", "nps_tenant_satisfaction_24hrs"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tenant_satisfaction_24hrs", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tenant_satisfaction_24hrs", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tenant_satisfaction_24hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "created_at": 1664825037.799998}, "source.houm.survicate.nps_visit_done": {"fqn": ["houm", "staging", "survicate", "nps_visit_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_visit_done", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_visit_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "created_at": 1664825037.80005}, "source.houm.survicate.nps_sac_surveys": {"fqn": ["houm", "staging", "survicate", "nps_sac_surveys"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_sac_surveys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sac_surveys", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_sac_surveys", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_sac_surveys\"", "created_at": 1664825037.800101}, "source.houm.survicate.nps_sac_answers": {"fqn": ["houm", "staging", "survicate", "nps_sac_answers"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_sac_answers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sac_answers", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_sac_answers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_sac_answers\"", "created_at": 1664825037.800152}, "source.houm.survicate.nps_admin_surveys": {"fqn": ["houm", "staging", "survicate", "nps_admin_surveys"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_admin_surveys", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_admin_surveys", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_admin_surveys", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_admin_surveys\"", "created_at": 1664825037.800443}, "source.houm.survicate.nps_admin_answers": {"fqn": ["houm", "staging", "survicate", "nps_admin_answers"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_admin_answers", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_admin_answers", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_admin_answers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_admin_answers\"", "created_at": 1664825037.801586}, "source.houm.supermetrics.googleads_conversion": {"fqn": ["houm", "staging", "supermetrics", "googleads_conversion"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_conversion", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_conversion", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_conversion", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_conversion\"", "created_at": 1664825037.801692}, "source.houm.supermetrics.googleads_campaign": {"fqn": ["houm", "staging", "supermetrics", "googleads_campaign"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_campaign", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_campaign", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_campaign\"", "created_at": 1664825037.80175}, "source.houm.supermetrics.googleads_ad": {"fqn": ["houm", "staging", "supermetrics", "googleads_ad"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.googleads_ad", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "googleads_ad", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "googleads_ad", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"googleads_ad\"", "created_at": 1664825037.801804}, "source.houm.supermetrics.fbads_campaign": {"fqn": ["houm", "staging", "supermetrics", "fbads_campaign"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_campaign", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_campaign", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_campaign\"", "created_at": 1664825037.801856}, "source.houm.supermetrics.fbads_ad": {"fqn": ["houm", "staging", "supermetrics", "fbads_ad"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_ad", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_ad", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_ad", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_ad\"", "created_at": 1664825037.801907}, "source.houm.supermetrics.fbads_geo": {"fqn": ["houm", "staging", "supermetrics", "fbads_geo"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_geo", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_geo", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_geo", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_geo\"", "created_at": 1664825037.80196}, "source.houm.supermetrics.fbads_conversion": {"fqn": ["houm", "staging", "supermetrics", "fbads_conversion"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_conversion", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_conversion", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_conversion", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_conversion\"", "created_at": 1664825037.8020449}, "source.houm.supermetrics.fbads_age_gender": {"fqn": ["houm", "staging", "supermetrics", "fbads_age_gender"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_age_gender", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_age_gender", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_age_gender", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_age_gender\"", "created_at": 1664825037.8021}, "source.houm.supermetrics.fbads_video": {"fqn": ["houm", "staging", "supermetrics", "fbads_video"], "database": "houmdw_prod", "schema": "supermetrics", "unique_id": "source.houm.supermetrics.fbads_video", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "fbads_video", "source_name": "supermetrics", "source_description": "Marketing data related of campaign and ads executed in google ads and facebook ads ", "loader": "", "identifier": "fbads_video", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', date::date)", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', date::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"supermetrics\".\"fbads_video\"", "created_at": 1664825037.802151}, "source.houm.raw_stage_analytics.property__rent_recommended_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__rent_recommended_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__rent_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__rent_recommended_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__rent_recommended_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__rent_recommended_properties\"", "created_at": 1664825037.802204}, "source.houm.raw_stage_analytics.property__sale_recommended_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__sale_recommended_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__sale_recommended_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__sale_recommended_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__sale_recommended_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__sale_recommended_properties\"", "created_at": 1664825037.802254}, "source.houm.raw_stage_analytics.property__recommended_new_properties": {"fqn": ["houm", "staging", "raw_stage_analytics", "property__recommended_new_properties"], "database": "houmdw_prod", "schema": "raw_stage_analytics", "unique_id": "source.houm.raw_stage_analytics.property__recommended_new_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property__recommended_new_properties", "source_name": "raw_stage_analytics", "source_description": "Schema for analytics purposes, like properties recommender.", "loader": "", "identifier": "property__recommended_new_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage_analytics\".\"property__recommended_new_properties\"", "created_at": 1664825037.802304}, "source.houm.bidding_app.bid": {"fqn": ["houm", "staging", "bidding_app", "bid"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.bid", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "bid", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"bid\"", "created_at": 1664825037.802355}, "source.houm.bidding_app.bid_response": {"fqn": ["houm", "staging", "bidding_app", "bid_response"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.bid_response", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bid_response", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "bid_response", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"bid_response\"", "created_at": 1664825037.802405}, "source.houm.bidding_app.negotiation": {"fqn": ["houm", "staging", "bidding_app", "negotiation"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.negotiation", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "negotiation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"negotiation\"", "created_at": 1664825037.802455}, "source.houm.bidding_app.negotiation_user": {"fqn": ["houm", "staging", "bidding_app", "negotiation_user"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.negotiation_user", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "negotiation_user", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "negotiation_user", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"negotiation_user\"", "created_at": 1664825037.802505}, "source.houm.bidding_app.identification": {"fqn": ["houm", "staging", "bidding_app", "identification"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.identification", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "identification", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"identification\"", "created_at": 1664825037.8025541}, "source.houm.bidding_app.identification_type": {"fqn": ["houm", "staging", "bidding_app", "identification_type"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.identification_type", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "identification_type", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "identification_type", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"identification_type\"", "created_at": 1664825037.802604}, "source.houm.bidding_app.property": {"fqn": ["houm", "staging", "bidding_app", "property"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.property", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "property", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "property", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"property\"", "created_at": 1664825037.802655}, "source.houm.bidding_app.user": {"fqn": ["houm", "staging", "bidding_app", "user"], "database": "houmdw_prod", "schema": "bidding_app", "unique_id": "source.houm.bidding_app.user", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "user", "source_name": "bidding_app", "source_description": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382", "loader": "", "identifier": "user", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"bidding_app\".\"user\"", "created_at": 1664825037.802708}, "source.houm.scraped_data_ops.scraped_properties_melico": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_melico"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_melico", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_melico", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_melico", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_melico\"", "created_at": 1664825037.802759}, "source.houm.scraped_data_ops.scraped_properties_fincaraiz": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_fincaraiz"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_fincaraiz", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_fincaraiz", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_fincaraiz", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_fincaraiz\"", "created_at": 1664825037.802809}, "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_goplaceit_cl"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_goplaceit_cl", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_goplaceit_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_goplaceit_cl\"", "created_at": 1664825037.802859}, "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_portalinmobiliario"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_portalinmobiliario", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_portalinmobiliario", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_portalinmobiliario\"", "created_at": 1664825037.8029099}, "source.houm.scraped_data_ops.scraped_properties_segundamano": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_segundamano"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_segundamano", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_segundamano", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_segundamano", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_segundamano\"", "created_at": 1664825037.80296}, "source.houm.scraped_data_ops.scraped_properties_melimx": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_melimx"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_melimx", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_melimx", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_melimx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_melimx\"", "created_at": 1664825037.80301}, "source.houm.scraped_data_ops.scraped_properties_yapo": {"fqn": ["houm", "staging", "scraped_data_ops", "scraped_properties_yapo"], "database": "houmdw_prod", "schema": "scraped_data_ops", "unique_id": "source.houm.scraped_data_ops.scraped_properties_yapo", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scraped_properties_yapo", "source_name": "scraped_data_ops", "source_description": "Data related of a web scraping process, to obtain a large datasets of publications in the major real estate portals", "loader": "", "identifier": "scraped_properties_yapo", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "convert_timezone('UTC', scraped_at::date)", "freshness": {"warn_after": {"count": 10, "period": "day"}, "error_after": {"count": 30, "period": "day"}, "filter": "date_diff('month',convert_timezone('UTC', scraped_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"scraped_data_ops\".\"scraped_properties_yapo\"", "created_at": 1664825037.803061}}, "macros": {"macro.houm.create_date_aggregate_columns": {"unique_id": "macro.houm.create_date_aggregate_columns", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "macros/create_date_aggregate_columns.sql", "original_file_path": "macros/create_date_aggregate_columns.sql", "name": "create_date_aggregate_columns", "macro_sql": "{%- macro create_date_aggregate_columns( thedate = 'created_at') -%}   \n    CASE \n        WHEN {{ thedate }} = DATEADD(DAY,-1,'{{ var(\"processed_time\") }}'::DATE) THEN 1\n        ELSE 0 \n    END AS yesterday ,\n    CASE \n        WHEN {{ thedate }} = DATEADD(DAY,-2,'{{ var(\"processed_time\") }}'::DATE) THEN 1 \n        ELSE 0 \n    END AS daybeforeyesterday , \n    CASE \n        WHEN DATE_TRUNC('week', {{ thedate }} ) = DATEADD(WEEK,-1, DATE_TRUNC('week','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LastWeek ,\n    CASE \n        WHEN DATE_TRUNC('week',{{ thedate }}) = DATEADD(WEEK,-2, DATE_TRUNC('week','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS PastLastWeek ,\n    CASE WHEN \n            DATE_TRUNC('month',{{ thedate }}) = DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) \n            AND {{ thedate }} <= DATEADD(DAY,-1,'{{ var(\"processed_time\") }}'::DATE)\n            THEN 1 ELSE 0 \n    END AS ThisMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month',{{ thedate }}) = DATEADD(MONTH,-1, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            AND {{ thedate }} <= DATEADD(DAY,-1 ,DATEADD(MONTH,-1, '{{ var(\"processed_time\") }}'::DATE)) \n            THEN 1 \n        ELSE 0 \n    END AS LastMonthtoday , \n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }}) = DATEADD(MONTH,-1, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1\n        ELSE 0 \n    END AS LastMonth ,\n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }} ) = DATEADD(MONTH,-2, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n    END AS LasttwoMonth , \n    CASE \n        WHEN DATE_TRUNC('month', {{ thedate }} ) = DATEADD(MONTH,-3, DATE_TRUNC('month','{{ var(\"processed_time\") }}'::DATE) ) \n            THEN 1 \n        ELSE 0 \n        END AS LastthreeMonth\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0342772}, "macro.houm.create_aggregate_metric": {"unique_id": "macro.houm.create_aggregate_metric", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "macros/create_aggregate_metric.sql", "original_file_path": "macros/create_aggregate_metric.sql", "name": "create_aggregate_metric", "macro_sql": "{%- macro create_aggregate_metric( to_aggregate = 'id', agregation_func = 'COUNT', is_distinct = 'TRUE' ) -%}   \n    {%- set columns = [ 'yesterday' , 'daybeforeyesterday' , 'LastWeek'  , 'PastLastWeek' , 'ThisMonthtoday' , 'LastMonthtoday' , 'LastMonth' , 'LasttwoMonth' , 'LastthreeMonth' ] -%}\n\t    SELECT \n        orden ,  \n        metric ,\t\n        geo_id ,\n        {% for column in columns -%}\n        {%- if is_distinct ==  'TRUE' -%}\n        {{ agregation_func }}(DISTINCT CASE WHEN {{ column }} = 1 THEN {{to_aggregate}} END ) {{ column }}\n        {%- else -%}\n        {{ agregation_func }}(CASE WHEN {{ column }} = 1 THEN {{to_aggregate}} END ) {{ column }}\n        {%- endif  -%}\n        {%- if not loop.last -%}\n        ,  \n        {% endif -%}\n        {%- endfor %} \n    from metric \n    group by 1,2,3 \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0354922}, "macro.houm.generate_schema_name": {"unique_id": "macro.houm.generate_schema_name", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n\n    {%- if target.name[-3:] == 'dev' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif target.schema[:9] == 'dbt_cloud' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0363479}, "macro.dbt_redshift.redshift__get_base_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_base_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_base_catalog", "macro_sql": "{% macro redshift__get_base_catalog(information_schema, schemas) -%}\n  {%- call statement('base_catalog', fetch_result=True) -%}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    with late_binding as (\n      select\n        '{{ database }}'::varchar as table_database,\n        table_schema,\n        table_name,\n        'LATE BINDING VIEW'::varchar as table_type,\n        null::text as table_comment,\n\n        column_name,\n        column_index,\n        column_type,\n        null::text as column_comment\n      from pg_get_late_binding_view_cols()\n        cols(table_schema name, table_name name, column_name name,\n             column_type varchar,\n             column_index int)\n        order by \"column_index\"\n    ),\n\n    early_binding as (\n        select\n            '{{ database }}'::varchar as table_database,\n            sch.nspname as table_schema,\n            tbl.relname as table_name,\n            case tbl.relkind\n                when 'v' then 'VIEW'\n                else 'BASE TABLE'\n            end as table_type,\n            tbl_desc.description as table_comment,\n            col.attname as column_name,\n            col.attnum as column_index,\n            pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n            col_desc.description as column_comment\n\n        from pg_catalog.pg_namespace sch\n        join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n        join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n        left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n        left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n        where (\n            {%- for schema in schemas -%}\n              upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n            {%- endfor -%}\n          )\n            and tbl.relkind in ('r', 'v', 'f', 'p')\n            and col.attnum > 0\n            and not col.attisdropped\n    ),\n\n    table_owners as (\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            tablename as table_name,\n            tableowner as table_owner\n\n        from pg_tables\n\n        union all\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            viewname as table_name,\n            viewowner as table_owner\n\n        from pg_views\n\n    ),\n\n    unioned as (\n\n        select *\n        from early_binding\n\n        union all\n\n        select *\n        from late_binding\n\n    )\n\n    select *,\n        table_database || '.' || table_schema || '.' || table_name as table_id\n\n    from unioned\n    join table_owners using (table_database, table_schema, table_name)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n\n    order by \"column_index\"\n  {%- endcall -%}\n\n  {{ return(load_result('base_catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.041825}, "macro.dbt_redshift.redshift__get_extended_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_extended_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_extended_catalog", "macro_sql": "{% macro redshift__get_extended_catalog(schemas) %}\n  {%- call statement('extended_catalog', fetch_result=True) -%}\n\n    select\n        \"database\" || '.' || \"schema\" || '.' || \"table\" as table_id,\n\n        'Encoded'::text as \"stats:encoded:label\",\n        encoded as \"stats:encoded:value\",\n        'Indicates whether any column in the table has compression encoding defined.'::text as \"stats:encoded:description\",\n        true as \"stats:encoded:include\",\n\n        'Dist Style' as \"stats:diststyle:label\",\n        diststyle as \"stats:diststyle:value\",\n        'Distribution style or distribution key column, if key distribution is defined.'::text as \"stats:diststyle:description\",\n        true as \"stats:diststyle:include\",\n\n        'Sort Key 1' as \"stats:sortkey1:label\",\n        -- handle 0xFF byte in response for interleaved sort styles\n        case\n            when sortkey1 like 'INTERLEAVED%' then 'INTERLEAVED'::text\n            else sortkey1\n        end as \"stats:sortkey1:value\",\n        'First column in the sort key.'::text as \"stats:sortkey1:description\",\n        (sortkey1 is not null) as \"stats:sortkey1:include\",\n\n        'Max Varchar' as \"stats:max_varchar:label\",\n        max_varchar as \"stats:max_varchar:value\",\n        'Size of the largest column that uses a VARCHAR data type.'::text as \"stats:max_varchar:description\",\n        true as \"stats:max_varchar:include\",\n\n        -- exclude this, as the data is strangely returned with null-byte characters\n        'Sort Key 1 Encoding' as \"stats:sortkey1_enc:label\",\n        sortkey1_enc as \"stats:sortkey1_enc:value\",\n        'Compression encoding of the first column in the sort key.' as \"stats:sortkey1_enc:description\",\n        false as \"stats:sortkey1_enc:include\",\n\n        '# Sort Keys' as \"stats:sortkey_num:label\",\n        sortkey_num as \"stats:sortkey_num:value\",\n        'Number of columns defined as sort keys.' as \"stats:sortkey_num:description\",\n        (sortkey_num > 0) as \"stats:sortkey_num:include\",\n\n        'Approximate Size' as \"stats:size:label\",\n        size * 1000000 as \"stats:size:value\",\n        'Approximate size of the table, calculated from a count of 1MB blocks'::text as \"stats:size:description\",\n        true as \"stats:size:include\",\n\n        'Disk Utilization' as \"stats:pct_used:label\",\n        pct_used / 100.0 as \"stats:pct_used:value\",\n        'Percent of available space that is used by the table.'::text as \"stats:pct_used:description\",\n        true as \"stats:pct_used:include\",\n\n        'Unsorted %' as \"stats:unsorted:label\",\n        unsorted / 100.0 as \"stats:unsorted:value\",\n        'Percent of unsorted rows in the table.'::text as \"stats:unsorted:description\",\n        (unsorted is not null) as \"stats:unsorted:include\",\n\n        'Stats Off' as \"stats:stats_off:label\",\n        stats_off as \"stats:stats_off:value\",\n        'Number that indicates how stale the table statistics are; 0 is current, 100 is out of date.'::text as \"stats:stats_off:description\",\n        true as \"stats:stats_off:include\",\n\n        'Approximate Row Count' as \"stats:rows:label\",\n        tbl_rows as \"stats:rows:value\",\n        'Approximate number of rows in the table. This value includes rows marked for deletion, but not yet vacuumed.'::text as \"stats:rows:description\",\n        true as \"stats:rows:include\",\n\n        'Sort Key Skew' as \"stats:skew_sortkey1:label\",\n        skew_sortkey1 as \"stats:skew_sortkey1:value\",\n        'Ratio of the size of the largest non-sort key column to the size of the first column of the sort key.'::text as \"stats:skew_sortkey1:description\",\n        (skew_sortkey1 is not null) as \"stats:skew_sortkey1:include\",\n\n        'Skew Rows' as \"stats:skew_rows:label\",\n        skew_rows as \"stats:skew_rows:value\",\n        'Ratio of the number of rows in the slice with the most rows to the number of rows in the slice with the fewest rows.'::text as \"stats:skew_rows:description\",\n        (skew_rows is not null) as \"stats:skew_rows:include\"\n\n    from svv_table_info\n    where (\n        {%- for schema in schemas -%}\n          upper(schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n\n  {%- endcall -%}\n\n  {{ return(load_result('extended_catalog').table) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.042474}, "macro.dbt_redshift.redshift__can_select_from": {"unique_id": "macro.dbt_redshift.redshift__can_select_from", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__can_select_from", "macro_sql": "{% macro redshift__can_select_from(table_name) %}\n\n  {%- call statement('has_table_privilege', fetch_result=True) -%}\n\n    select has_table_privilege(current_user, '{{ table_name }}', 'SELECT') as can_select\n\n  {%- endcall -%}\n\n  {% set can_select = load_result('has_table_privilege').table[0]['can_select'] %}\n  {{ return(can_select) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.042849}, "macro.dbt_redshift.redshift__no_svv_table_info_warning": {"unique_id": "macro.dbt_redshift.redshift__no_svv_table_info_warning", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__no_svv_table_info_warning", "macro_sql": "{% macro redshift__no_svv_table_info_warning() %}\n\n    {% set msg %}\n\n    Warning: The database user \"{{ target.user }}\" has insufficient permissions to\n    query the \"svv_table_info\" table. Please grant SELECT permissions on this table\n    to the \"{{ target.user }}\" user to fetch extended table details from Redshift.\n\n    {% endset %}\n\n    {{ log(msg, info=True) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0431318}, "macro.dbt_redshift.redshift__get_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_catalog", "macro_sql": "{% macro redshift__get_catalog(information_schema, schemas) %}\n\n    {#-- Compute a left-outer join in memory. Some Redshift queries are\n      -- leader-only, and cannot be joined to other compute-based queries #}\n\n    {% set catalog = redshift__get_base_catalog(information_schema, schemas) %}\n\n    {% set select_extended =  redshift__can_select_from('svv_table_info') %}\n    {% if select_extended %}\n        {% set extended_catalog = redshift__get_extended_catalog(schemas) %}\n        {% set catalog = catalog.join(extended_catalog, 'table_id') %}\n    {% else %}\n        {{ redshift__no_svv_table_info_warning() }}\n    {% endif %}\n\n    {{ return(catalog.exclude(['table_id'])) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_base_catalog", "macro.dbt_redshift.redshift__can_select_from", "macro.dbt_redshift.redshift__get_extended_catalog", "macro.dbt_redshift.redshift__no_svv_table_info_warning"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.04376}, "macro.dbt_redshift.redshift__get_relations": {"unique_id": "macro.dbt_redshift.redshift__get_relations", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "redshift__get_relations", "macro_sql": "{% macro redshift__get_relations () -%}\n  {{ return(dbt.postgres__get_relations()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0441222}, "macro.dbt_redshift.dist": {"unique_id": "macro.dbt_redshift.dist", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "dist", "macro_sql": "{% macro dist(dist) %}\n  {%- if dist is not none -%}\n      {%- set dist = dist.strip().lower() -%}\n\n      {%- if dist in ['all', 'even'] -%}\n        diststyle {{ dist }}\n      {%- elif dist == \"auto\" -%}\n      {%- else -%}\n        diststyle key distkey ({{ dist }})\n      {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.055294}, "macro.dbt_redshift.sort": {"unique_id": "macro.dbt_redshift.sort", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "sort", "macro_sql": "{% macro sort(sort_type, sort) %}\n  {%- if sort is not none %}\n      {{ sort_type | default('compound', boolean=true) }} sortkey(\n      {%- if sort is string -%}\n        {%- set sort = [sort] -%}\n      {%- endif -%}\n      {%- for item in sort -%}\n        {{ item }}\n        {%- if not loop.last -%},{%- endif -%}\n      {%- endfor -%}\n      )\n  {%- endif %}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0559208}, "macro.dbt_redshift.redshift__create_table_as": {"unique_id": "macro.dbt_redshift.redshift__create_table_as", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_table_as", "macro_sql": "{% macro redshift__create_table_as(temporary, relation, sql) -%}\n\n  {%- set _dist = config.get('dist') -%}\n  {%- set _sort_type = config.get(\n          'sort_type',\n          validator=validation.any['compound', 'interleaved']) -%}\n  {%- set _sort = config.get(\n          'sort',\n          validator=validation.any[list, basestring]) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {%- set backup = config.get('backup') -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n    {% if backup == false -%}backup no{%- endif %}\n    {{ dist(_dist) }}\n    {{ sort(_sort_type, _sort) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.dist", "macro.dbt_redshift.sort"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.057141}, "macro.dbt_redshift.redshift__create_view_as": {"unique_id": "macro.dbt_redshift.redshift__create_view_as", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_view_as", "macro_sql": "{% macro redshift__create_view_as(relation, sql) -%}\n  {%- set binding = config.get('bind', default=True) -%}\n\n  {% set bind_qualifier = '' if binding else 'with no schema binding' %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create view {{ relation }} as (\n    {{ sql }}\n  ) {{ bind_qualifier }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.057639}, "macro.dbt_redshift.redshift__create_schema": {"unique_id": "macro.dbt_redshift.redshift__create_schema", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_schema", "macro_sql": "{% macro redshift__create_schema(relation) -%}\n  {{ postgres__create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.057782}, "macro.dbt_redshift.redshift__drop_schema": {"unique_id": "macro.dbt_redshift.redshift__drop_schema", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__drop_schema", "macro_sql": "{% macro redshift__drop_schema(relation) -%}\n  {{ postgres__drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.05791}, "macro.dbt_redshift.redshift__get_columns_in_relation": {"unique_id": "macro.dbt_redshift.redshift__get_columns_in_relation", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__get_columns_in_relation", "macro_sql": "{% macro redshift__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      with bound_views as (\n        select\n          ordinal_position,\n          table_schema,\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n        from information_schema.\"columns\"\n        where table_name = '{{ relation.identifier }}'\n    ),\n\n    unbound_views as (\n      select\n        ordinal_position,\n        view_schema,\n        col_name,\n        case\n          when col_type ilike 'character varying%' then\n            'character varying'\n          when col_type ilike 'numeric%' then 'numeric'\n          else col_type\n        end as col_type,\n        case\n          when col_type like 'character%'\n          then nullif(REGEXP_SUBSTR(col_type, '[0-9]+'), '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n\n      from pg_get_late_binding_view_cols()\n      cols(view_schema name, view_name name, col_name name,\n           col_type varchar, ordinal_position int)\n      where view_name = '{{ relation.identifier }}'\n    ),\n\n    external_views as (\n      select\n        columnnum,\n        schemaname,\n        columnname,\n        case\n          when external_type ilike 'character varying%' or external_type ilike 'varchar%'\n          then 'character varying'\n          when external_type ilike 'numeric%' then 'numeric'\n          else external_type\n        end as external_type,\n        case\n          when external_type like 'character%' or external_type like 'varchar%'\n          then nullif(\n            REGEXP_SUBSTR(external_type, '[0-9]+'),\n            '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n      from\n        pg_catalog.svv_external_columns\n      where\n        schemaname = '{{ relation.schema }}'\n        and tablename = '{{ relation.identifier }}'\n\n    ),\n\n    unioned as (\n      select * from bound_views\n      union all\n      select * from unbound_views\n      union all\n      select * from external_views\n    )\n\n    select\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n    from unioned\n    {% if relation.schema %}\n    where table_schema = '{{ relation.schema }}'\n    {% endif %}\n    order by ordinal_position\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0586119}, "macro.dbt_redshift.redshift__list_relations_without_caching": {"unique_id": "macro.dbt_redshift.redshift__list_relations_without_caching", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_relations_without_caching", "macro_sql": "{% macro redshift__list_relations_without_caching(schema_relation) %}\n  {{ return(postgres__list_relations_without_caching(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.058775}, "macro.dbt_redshift.redshift__information_schema_name": {"unique_id": "macro.dbt_redshift.redshift__information_schema_name", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__information_schema_name", "macro_sql": "{% macro redshift__information_schema_name(database) -%}\n  {{ return(postgres__information_schema_name(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.058922}, "macro.dbt_redshift.redshift__list_schemas": {"unique_id": "macro.dbt_redshift.redshift__list_schemas", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_schemas", "macro_sql": "{% macro redshift__list_schemas(database) -%}\n  {{ return(postgres__list_schemas(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.059062}, "macro.dbt_redshift.redshift__check_schema_exists": {"unique_id": "macro.dbt_redshift.redshift__check_schema_exists", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__check_schema_exists", "macro_sql": "{% macro redshift__check_schema_exists(information_schema, schema) -%}\n  {{ return(postgres__check_schema_exists(information_schema, schema)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.059231}, "macro.dbt_redshift.redshift__current_timestamp": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() -%}\n  getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0593102}, "macro.dbt_redshift.redshift__snapshot_get_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_get_time", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__snapshot_get_time", "macro_sql": "{% macro redshift__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.059416}, "macro.dbt_redshift.redshift__snapshot_string_as_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_string_as_time", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__snapshot_string_as_time", "macro_sql": "{% macro redshift__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.059615}, "macro.dbt_redshift.redshift__make_temp_relation": {"unique_id": "macro.dbt_redshift.redshift__make_temp_relation", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__make_temp_relation", "macro_sql": "{% macro redshift__make_temp_relation(base_relation, suffix) %}\n    {% do return(postgres__make_temp_relation(base_relation, suffix)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.059804}, "macro.dbt_redshift.redshift__persist_docs": {"unique_id": "macro.dbt_redshift.redshift__persist_docs", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__persist_docs", "macro_sql": "{% macro redshift__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {# Override: do not set column comments for LBVs #}\n  {% set is_lbv = config.get('materialized') == 'view' and config.get('bind') == false %}\n  {% if for_columns and config.persist_column_docs() and model.columns and not is_lbv %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0605052}, "macro.dbt_redshift.redshift__alter_relation_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_comment", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_comment", "macro_sql": "{% macro redshift__alter_relation_comment(relation, comment) %}\n  {% do return(postgres__alter_relation_comment(relation, comment)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0607}, "macro.dbt_redshift.redshift__alter_column_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_column_comment", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_column_comment", "macro_sql": "{% macro redshift__alter_column_comment(relation, column_dict) %}\n  {% do return(postgres__alter_column_comment(relation, column_dict)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.060889}, "macro.dbt_redshift.redshift__alter_relation_add_remove_columns": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_add_remove_columns", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_add_remove_columns", "macro_sql": "{% macro redshift__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns %}\n\n    {% for column in add_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} add column {{ column.name }} {{ column.data_type }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n  {% if remove_columns %}\n\n    {% for column in remove_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} drop column {{ column.name }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.061738}, "macro.dbt_redshift.redshift__snapshot_merge_sql": {"unique_id": "macro.dbt_redshift.redshift__snapshot_merge_sql", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "redshift__snapshot_merge_sql", "macro_sql": "{% macro redshift__snapshot_merge_sql(target, source, insert_cols) -%}\n    {{ postgres__snapshot_merge_sql(target, source, insert_cols) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.06222}, "macro.dbt_redshift.redshift__length": {"unique_id": "macro.dbt_redshift.redshift__length", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.062478}, "macro.dbt_redshift.redshift__dateadd": {"unique_id": "macro.dbt_redshift.redshift__dateadd", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0628119}, "macro.dbt_redshift.redshift__listagg": {"unique_id": "macro.dbt_redshift.redshift__listagg", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "redshift__listagg", "macro_sql": "{% macro redshift__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    {% set ns = namespace() %}\n    {% set ns.delimiter_text_regex = delimiter_text|trim(\"'\") %}\n    {% set special_chars %}\\,^,$,.,|,?,*,+,(,),[,],{,}{% endset %}\n    {%- for char in special_chars.split(',') -%}\n        {% set escape_char %}\\\\{{ char }}{% endset %}\n        {% set ns.delimiter_text_regex = ns.delimiter_text_regex|replace(char,escape_char) %}\n    {%- endfor -%}\n\n    {% set regex %}'([^{{ ns.delimiter_text_regex }}]+{{ ns.delimiter_text_regex }}){1,{{ limit_num - 1}}}[^{{ ns.delimiter_text_regex }}]+'{% endset %}\n    regexp_substr(\n        listagg(\n            {{ measure }},\n            {{ delimiter_text }}\n            )\n            {% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n        ,{{ regex }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.06476}, "macro.dbt_redshift.redshift__datediff": {"unique_id": "macro.dbt_redshift.redshift__datediff", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.065137}, "macro.dbt_redshift.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_redshift.redshift__cast_bool_to_text", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.065402}, "macro.dbt_redshift.redshift__last_day": {"unique_id": "macro.dbt_redshift.redshift__last_day", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0658188}, "macro.dbt_redshift.redshift__split_part": {"unique_id": "macro.dbt_redshift.redshift__split_part", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "redshift__split_part", "macro_sql": "{% macro redshift__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.06632}, "macro.dbt_redshift.redshift__get_show_grant_sql": {"unique_id": "macro.dbt_redshift.redshift__get_show_grant_sql", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "redshift__get_show_grant_sql", "macro_sql": "{% macro redshift__get_show_grant_sql(relation) %}\n\nwith privileges as (\n\n    -- valid options per https://docs.aws.amazon.com/redshift/latest/dg/r_HAS_TABLE_PRIVILEGE.html\n    select 'select' as privilege_type\n    union all\n    select 'insert' as privilege_type\n    union all\n    select 'update' as privilege_type\n    union all\n    select 'delete' as privilege_type\n    union all\n    select 'references' as privilege_type\n\n)\n\nselect\n    u.usename as grantee,\n    p.privilege_type\nfrom pg_user u\ncross join privileges p\nwhere has_table_privilege(u.usename, '{{ relation }}', privilege_type)\n    and u.usename != current_user\n    and not u.usesuper\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.066601}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.067754}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.06844}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0754502}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.076}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.076333}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.076666}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.077173}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0775669}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.077754}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0781178}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.078602}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0786822}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.078866}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0789702}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = 63 %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.079814}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.080022}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0803552}, "macro.dbt_postgres.postgres__make_backup_relation": {"unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0806458}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.081099}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.081341}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.081981}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.082196}, "macro.dbt_postgres.postgres__copy_grants": {"unique_id": "macro.dbt_postgres.postgres__copy_grants", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.082314}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.083246}, "macro.dbt_postgres.postgres__dateadd": {"unique_id": "macro.dbt_postgres.postgres__dateadd", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.083602}, "macro.dbt_postgres.postgres__listagg": {"unique_id": "macro.dbt_postgres.postgres__listagg", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0843399}, "macro.dbt_postgres.postgres__datediff": {"unique_id": "macro.dbt_postgres.postgres__datediff", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.088083}, "macro.dbt_postgres.postgres__any_value": {"unique_id": "macro.dbt_postgres.postgres__any_value", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.088466}, "macro.dbt_postgres.postgres__last_day": {"unique_id": "macro.dbt_postgres.postgres__last_day", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.089122}, "macro.dbt_postgres.postgres__split_part": {"unique_id": "macro.dbt_postgres.postgres__split_part", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0896971}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.090925}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0911381}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.091285}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.09143}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.091579}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.092042}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.092376}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0927172}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.093237}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0935261}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.097329}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0975292}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0977678}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0979211}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.098021}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.0988019}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.099031}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.099231}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n          select {{ check_cols_config | join(', ') }} from ({{ node['compiled_sql'] }}) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1008}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.102253}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.10638}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.106685}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.106862}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.106952}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.107111}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.107234}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.107522}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.108465}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1086788}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.108963}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1094248}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.116062}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.118412}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.118965}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.119295}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.119756}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.120165}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.121099}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.121707}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.122368}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.127958}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1296}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1301131}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n        {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.13095}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.13126}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.131952}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1327841}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, temp_relation, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.137708}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.142781}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.144147}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.145725}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.146605}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.149625}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.150213}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1504261}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.150647}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.151093}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.154094}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1545641}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.154809}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=True) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.156638}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.157166}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.157345}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.157542}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.157841}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.16147}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.166741}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.167732}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.167992}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.16852}, "macro.dbt.get_csv_sql": {"unique_id": "macro.dbt.get_csv_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.168737}, "macro.dbt.default__get_csv_sql": {"unique_id": "macro.dbt.default__get_csv_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1688802}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.16903}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.169156}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.169324}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.169454}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.169995}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1701918}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.171613}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.172192}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1724339}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.173158}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.173444}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.173792}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.174313}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.174585}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.17501}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1753962}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.175723}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.176372}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.177577}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1782122}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1785212}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.180456}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.181824}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1826382}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.182889}, "macro.dbt.except": {"unique_id": "macro.dbt.except", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.183253}, "macro.dbt.default__except": {"unique_id": "macro.dbt.default__except", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1833322}, "macro.dbt.replace": {"unique_id": "macro.dbt.replace", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.18374}, "macro.dbt.default__replace": {"unique_id": "macro.dbt.default__replace", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.183913}, "macro.dbt.concat": {"unique_id": "macro.dbt.concat", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.18424}, "macro.dbt.default__concat": {"unique_id": "macro.dbt.default__concat", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1843998}, "macro.dbt.length": {"unique_id": "macro.dbt.length", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.184729}, "macro.dbt.default__length": {"unique_id": "macro.dbt.default__length", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.184839}, "macro.dbt.dateadd": {"unique_id": "macro.dbt.dateadd", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.185259}, "macro.dbt.default__dateadd": {"unique_id": "macro.dbt.default__dateadd", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.185437}, "macro.dbt.intersect": {"unique_id": "macro.dbt.intersect", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.185735}, "macro.dbt.default__intersect": {"unique_id": "macro.dbt.default__intersect", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1858099}, "macro.dbt.escape_single_quotes": {"unique_id": "macro.dbt.escape_single_quotes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.186151}, "macro.dbt.default__escape_single_quotes": {"unique_id": "macro.dbt.default__escape_single_quotes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.186302}, "macro.dbt.right": {"unique_id": "macro.dbt.right", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.186666}, "macro.dbt.default__right": {"unique_id": "macro.dbt.default__right", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.186809}, "macro.dbt.listagg": {"unique_id": "macro.dbt.listagg", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__listagg"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.187511}, "macro.dbt.default__listagg": {"unique_id": "macro.dbt.default__listagg", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.188021}, "macro.dbt.datediff": {"unique_id": "macro.dbt.datediff", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1884449}, "macro.dbt.default__datediff": {"unique_id": "macro.dbt.default__datediff", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1886148}, "macro.dbt.safe_cast": {"unique_id": "macro.dbt.safe_cast", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.188978}, "macro.dbt.default__safe_cast": {"unique_id": "macro.dbt.default__safe_cast", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.189128}, "macro.dbt.hash": {"unique_id": "macro.dbt.hash", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.189458}, "macro.dbt.default__hash": {"unique_id": "macro.dbt.default__hash", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.189657}, "macro.dbt.cast_bool_to_text": {"unique_id": "macro.dbt.cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.190003}, "macro.dbt.default__cast_bool_to_text": {"unique_id": "macro.dbt.default__cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.190179}, "macro.dbt.any_value": {"unique_id": "macro.dbt.any_value", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.190509}, "macro.dbt.default__any_value": {"unique_id": "macro.dbt.default__any_value", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.190619}, "macro.dbt.position": {"unique_id": "macro.dbt.position", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1909928}, "macro.dbt.default__position": {"unique_id": "macro.dbt.default__position", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.191148}, "macro.dbt.string_literal": {"unique_id": "macro.dbt.string_literal", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.191471}, "macro.dbt.default__string_literal": {"unique_id": "macro.dbt.default__string_literal", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1915789}, "macro.dbt.type_string": {"unique_id": "macro.dbt.type_string", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1925278}, "macro.dbt.default__type_string": {"unique_id": "macro.dbt.default__type_string", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.192686}, "macro.dbt.type_timestamp": {"unique_id": "macro.dbt.type_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.192854}, "macro.dbt.default__type_timestamp": {"unique_id": "macro.dbt.default__type_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.193016}, "macro.dbt.type_float": {"unique_id": "macro.dbt.type_float", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1932642}, "macro.dbt.default__type_float": {"unique_id": "macro.dbt.default__type_float", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.193426}, "macro.dbt.type_numeric": {"unique_id": "macro.dbt.type_numeric", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.193596}, "macro.dbt.default__type_numeric": {"unique_id": "macro.dbt.default__type_numeric", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.193783}, "macro.dbt.type_bigint": {"unique_id": "macro.dbt.type_bigint", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1939561}, "macro.dbt.default__type_bigint": {"unique_id": "macro.dbt.default__type_bigint", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.194122}, "macro.dbt.type_int": {"unique_id": "macro.dbt.type_int", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.194297}, "macro.dbt.default__type_int": {"unique_id": "macro.dbt.default__type_int", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1944609}, "macro.dbt.bool_or": {"unique_id": "macro.dbt.bool_or", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.194819}, "macro.dbt.default__bool_or": {"unique_id": "macro.dbt.default__bool_or", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.194987}, "macro.dbt.last_day": {"unique_id": "macro.dbt.last_day", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.1957078}, "macro.dbt.default_last_day": {"unique_id": "macro.dbt.default_last_day", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.196036}, "macro.dbt.default__last_day": {"unique_id": "macro.dbt.default__last_day", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.196207}, "macro.dbt.split_part": {"unique_id": "macro.dbt.split_part", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.196928}, "macro.dbt.default__split_part": {"unique_id": "macro.dbt.default__split_part", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.197113}, "macro.dbt._split_part_negative": {"unique_id": "macro.dbt._split_part_negative", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.19736}, "macro.dbt.date_trunc": {"unique_id": "macro.dbt.date_trunc", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.197835}, "macro.dbt.default__date_trunc": {"unique_id": "macro.dbt.default__date_trunc", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.197974}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.198451}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.198655}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.198838}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.199139}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.199699}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.199841}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.200008}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.200602}, "macro.dbt.make_intermediate_relation": {"unique_id": "macro.dbt.make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2042089}, "macro.dbt.default__make_intermediate_relation": {"unique_id": "macro.dbt.default__make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2044082}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.204662}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.205003}, "macro.dbt.make_backup_relation": {"unique_id": "macro.dbt.make_backup_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.205319}, "macro.dbt.default__make_backup_relation": {"unique_id": "macro.dbt.default__make_backup_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2057118}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.205909}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.206133}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.206323}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.206493}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.20671}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.207008}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2072818}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.207989}, "macro.dbt.load_cached_relation": {"unique_id": "macro.dbt.load_cached_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.208244}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.208404}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.208611}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.209271}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.209425}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.209669}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.210117}, "macro.dbt.copy_grants": {"unique_id": "macro.dbt.copy_grants", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.211937}, "macro.dbt.default__copy_grants": {"unique_id": "macro.dbt.default__copy_grants", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.212061}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.21224}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2123551}, "macro.dbt.should_revoke": {"unique_id": "macro.dbt.should_revoke", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2127209}, "macro.dbt.get_show_grant_sql": {"unique_id": "macro.dbt.get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.212926}, "macro.dbt.default__get_show_grant_sql": {"unique_id": "macro.dbt.default__get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.213045}, "macro.dbt.get_grant_sql": {"unique_id": "macro.dbt.get_grant_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.213282}, "macro.dbt.default__get_grant_sql": {"unique_id": "macro.dbt.default__get_grant_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.213482}, "macro.dbt.get_revoke_sql": {"unique_id": "macro.dbt.get_revoke_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.213718}, "macro.dbt.default__get_revoke_sql": {"unique_id": "macro.dbt.default__get_revoke_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.213922}, "macro.dbt.get_dcl_statement_list": {"unique_id": "macro.dbt.get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2141562}, "macro.dbt.default__get_dcl_statement_list": {"unique_id": "macro.dbt.default__get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2149508}, "macro.dbt.call_dcl_statements": {"unique_id": "macro.dbt.call_dcl_statements", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.215151}, "macro.dbt.default__call_dcl_statements": {"unique_id": "macro.dbt.default__call_dcl_statements", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.215411}, "macro.dbt.apply_grants": {"unique_id": "macro.dbt.apply_grants", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.215657}, "macro.dbt.default__apply_grants": {"unique_id": "macro.dbt.default__apply_grants", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.216913}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.217813}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.218}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.218217}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.218395}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2186828}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.219209}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.220822}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.221099}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2212968}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.221465}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2216709}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.221935}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2221482}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.222479}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2227}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.222878}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.224695}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.224957}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.225294}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2255008}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.225868}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.226113}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.226752}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.227069}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.227913}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.228545}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.2287931}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.229098}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1664825036.229393}}, "docs": {"houm.__overview__": {"unique_id": "houm.__overview__", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "overview.md", "original_file_path": "models/overview.md", "name": "__overview__", "block_contents": "# Data Documentation for GitLab\n\nAll other documentation is in our handbook in the following links:\n\n* [Data Team Handbook](https://wiki.houm.com/doc/recursos-data-engineer-qbDEpLU3Vc)\n* [dbt Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/dbt-guide/)\n* [SQL Style  Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/sql-style-guide)\n* [Slack Channel for questions](https://houmteam.slack.com/archives/CG9ND40K0) \n\n\n\nThe data in any of our projects has four distinct checkpoints:\n\n- ** 1. Sources ** : Schemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.\n\n\n- ** 2. Staging models ** : The atomic unit of data modeling. Each model bears a one-to-one relationship with the source data table it represents. It has the same granularity, but the columns have been renamed, recast, or usefully reconsidered into a consistent format.\n\n\n- ** 3. Processing models ** : This is a enrich and cleaning process of the transformations \n\n\n- ** 4.1 Facts models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.2 Dims models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.3 Marts models ** : Models that represent **aggregated** business processes and entities, abstracted from the data sources that they are based on"}, "houm.historical": {"unique_id": "houm.historical", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "historical", "block_contents": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt"}, "houm.raw_stage": {"unique_id": "houm.raw_stage", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "raw_stage", "block_contents": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location"}, "houm.staging_buk": {"unique_id": "houm.staging_buk", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "staging_buk", "block_contents": "This information is collected by the current Human Resources System: BUK"}, "houm.airbyte_zendesk": {"unique_id": "houm.airbyte_zendesk", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "airbyte_zendesk", "block_contents": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool."}, "houm.bidding_app": {"unique_id": "houm.bidding_app", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "bidding_app", "block_contents": "Schema for sales bidding-app, in house development related to the negotiation sales process between bidder and property owner.\n\nTables and columns in a source-conformed structure based on directly bidding-app's metadata (postgresql):\n\nthe principal tables in this schema are:\n- bid: \n    basic information of a bid, main columns are amount and status.\n- bid_response: \n    basic information of a property owner response related to a bid.\n- negotiation:\n    basic information of a negotiation. a negotiation has a multiple bids 1:N\n- negotiation_user: \n    information to match the negotiation to users. For the other hand, a property can have a simultaneously severals bids\n- identification_type:\n    table that contains regex criteria for a personal document validation, \n- identification: \n    table that contains Tax identification code for the users\n- user: \n    basic informations of the users, consolidation of all bidders and owners.\n- property: \n    basic information related of a property, this contains address information, houm property executive, etc.\n\n\nref:: https://app.clickup.com/3061486/v/dc/2xdqe-17582/2xdqe-62382"}, "houm.stg_properties": {"unique_id": "houm.stg_properties", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_properties_id": {"unique_id": "houm.stg_properties_id", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties_id", "block_contents": "This is a unique identifier for the properties at Houm."}, "houm.stg_propertydetails": {"unique_id": "houm.stg_propertydetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_propertydetails_id": {"unique_id": "houm.stg_propertydetails_id", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails_id", "block_contents": "This is a unique identifier for the properties details at Houm."}, "houm.stg_property_salesdetails": {"unique_id": "houm.stg_property_salesdetails", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_property_salesdetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_zendesk_users": {"unique_id": "houm.stg_zendesk_users", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users", "block_contents": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut"}, "houm.stg_zendesk_users_id": {"unique_id": "houm.stg_zendesk_users_id", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users_id", "block_contents": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id"}, "houm.stg_zendesk_tickets": {"unique_id": "houm.stg_zendesk_tickets", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets", "block_contents": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket."}, "houm.stg_zendesk_tickets_audits": {"unique_id": "houm.stg_zendesk_tickets_audits", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets_audits", "block_contents": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *"}, "houm.stg_zendesk_metrics": {"unique_id": "houm.stg_zendesk_metrics", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_metrics", "block_contents": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**"}, "houm.stg_employees": {"unique_id": "houm.stg_employees", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_employees", "block_contents": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link"}, "houm.stg_roles": {"unique_id": "houm.stg_roles", "package_name": "houm", "root_path": "/Users/GeraSanchez/Documents/GitHub/documentacion/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_roles", "block_contents": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.2.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.houm.property__recommended_new_properties": ["model.houm.stg_property__recommended_new_properties"], "model.houm.property__sale_recommended_properties": ["model.houm.property__published_properties", "model.houm.stg_property__sale_recommended_properties"], "model.houm.property__rent_recommended_properties": ["model.houm.property__published_properties", "model.houm.stg_property__rent_recommended_properties"], "model.houm.property__rev_kpi_recommendation_performance": ["model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio", "model.houm.property__rev_kpi_ratio"], "model.houm.goals_current": ["model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue", "model.houm.cum_sales_units", "model.houm.eop_subs", "model.houm.rentals_units", "model.houm.sales_local_revenue", "model.houm.sales_units"], "model.houm.cum_rentals_units": ["model.houm.rentals_units"], "model.houm.cum_sales_units": ["model.houm.sales_units"], "model.houm.cum_sales_local_revenue": ["model.houm.sales_local_revenue"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_metric_details_leads"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_metric_details_paid_media_cost"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_metric_details_photo_done"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_metric_details_new_sale_listing"], "model.houm.sales_company_metric_new_units_listing": ["model.houm.sales_company_metric_details_new_units_listing"], "model.houm.sales_company_metric_new_unittypes_listing": ["model.houm.sales_company_metric_details_new_unittypes_listing"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.sales_company_metric_new_project_listing": ["model.houm.sales_company_metric_details_new_project_listing"], "model.houm.properties_published": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_metric_details_leads_qualified"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_metric_details_leads_qualified_date"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_metric_details_photo_created"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_metric_details_paid_media_cost"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_metric_details_leads"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_metric_details_photo_created"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_metric_details_photo_done"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_metric_details_new_rental_listing"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_metric_details_leads_qualified"], "model.houm.kpi_landlord_photo_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_tenant_visit_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_nrl": ["model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.kpi_landlord_photo_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_photo_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_tenant_visit_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_tenant_visit_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_seller_photo_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_seller_nsl": ["model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.kpi_seller_photo_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_visit_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_visit_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_seller_photo_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_visit_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.sales_investor_metric_leads_qualified_date": ["model.houm.sales_investor_metric_details_leads_qualified_date"], "model.houm.rental_tenant_metric_schedules_cancelled": ["model.houm.rental_tenant_metric_details_schedules_cancelled"], "model.houm.sales_buyer_metric_leads_qualified": ["model.houm.sales_buyer_metric_details_leads_qualified"], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_metric_details_leads_interactions"], "model.houm.rental_tenant_metric_correct_visit_done": ["model.houm.rental_tenant_metric_details_correct_visit_done"], "model.houm.sales_buyer_metric_leads_qualified_date": ["model.houm.sales_buyer_metric_details_leads_qualified_date"], "model.houm.sales_demand_metric_paid_media_cost": ["model.houm.sales_demand_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_schedules_scheduled_organic": ["model.houm.rental_tenant_metric_details_schedules_scheduled_organic"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_tenant_metric_details_schedules_created"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_metric_details_schedules_created"], "model.houm.rental_tenant_metric_correct_visit_finished": ["model.houm.rental_tenant_metric_details_correct_visit_finished"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_metric_details_schedules_done"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_metric_details_leads"], "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": ["model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_tenant_metric_details_reservations_refunded"], "model.houm.sales_demand_metric_leads": ["model.houm.sales_demand_metric_details_leads"], "model.houm.rental_tenant_metric_schedules_scheduled_admin": ["model.houm.rental_tenant_metric_details_schedules_scheduled_admin"], "model.houm.sales_buyer_metric_leads": ["model.houm.sales_buyer_metric_details_leads"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_metric_details_schedules_scheduled"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_metric_details_new_tenant"], "model.houm.sales_investor_metric_leads": ["model.houm.sales_investor_metric_details_leads"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_tenant_metric_details_reservations"], "model.houm.rental_tenant_metric_schedules_unfinished": ["model.houm.rental_tenant_metric_details_schedules_unfinished"], "model.houm.sales_investor_metric_schedules_created": ["model.houm.sales_investor_metric_details_schedules_created"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_tenant_metric_details_schedules_done"], "model.houm.sales_investor_metric_paid_media_cost": ["model.houm.sales_investor_metric_details_paid_media_cost"], "model.houm.sales_investor_metric_schedules_done": ["model.houm.sales_investor_metric_details_schedules_done"], "model.houm.rental_tenant_metric_done_time": ["model.houm.rental_tenant_metric_details_done_time"], "model.houm.rental_tenant_metric_arrived_on_time": ["model.houm.rental_tenant_metric_details_arrived_on_time"], "model.houm.sales_buyer_metric_correct_visit_done": ["model.houm.sales_buyer_metric_details_correct_visit_done"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_metric_details_new_subs"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_tenant_metric_details_schedules_scheduled"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_tenant_metric_details_reservations_effective"], "model.houm.sales_investor_metric_leads_qualified": ["model.houm.sales_investor_metric_details_leads_qualified"], "model.houm.sales_investor_metric_schedules_scheduled": ["model.houm.sales_investor_metric_details_schedules_scheduled"], "model.houm.rental_tenant_metric_schedules_cancelled_at": ["model.houm.rental_tenant_metric_details_schedules_cancelled_at"], "model.houm.rental_tenant_funnel": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_new_subs", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled"], "model.houm.rental_real_time_ops_funnel": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_schedules_cancelled", "model.houm.rental_tenant_metric_schedules_cancelled_at", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_schedules_scheduled_admin", "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_schedules_scheduled_organic", "model.houm.rental_tenant_metric_schedules_unfinished"], "model.houm.rental_landlord_funnel": ["model.houm.dim_macrozones", "model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled"], "model.houm.rental_real_time_ops_funnel_timing": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_arrived_on_time", "model.houm.rental_tenant_metric_correct_visit_done", "model.houm.rental_tenant_metric_correct_visit_finished", "model.houm.rental_tenant_metric_done_time"], "model.houm.sales_buyer_funnel": ["model.houm.dim_macrozones", "model.houm.sales_buyer_metric_correct_visit_done", "model.houm.sales_buyer_metric_leads", "model.houm.sales_buyer_metric_leads_qualified", "model.houm.sales_buyer_metric_leads_qualified_date", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.sales_demand_metric_leads", "model.houm.sales_demand_metric_paid_media_cost"], "model.houm.sales_company_funnel": ["model.houm.dim_macrozones", "model.houm.sales_company_metric_new_project_listing", "model.houm.sales_company_metric_new_units_listing", "model.houm.sales_company_metric_new_unittypes_listing"], "model.houm.sales_seller_funnel": ["model.houm.dim_macrozones", "model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled"], "model.houm.sales_investor_funnel": ["model.houm.dim_macrozones", "model.houm.sales_demand_metric_leads", "model.houm.sales_demand_metric_paid_media_cost", "model.houm.sales_investor_metric_leads", "model.houm.sales_investor_metric_leads_qualified", "model.houm.sales_investor_metric_leads_qualified_date", "model.houm.sales_investor_metric_paid_media_cost", "model.houm.sales_investor_metric_schedules_created", "model.houm.sales_investor_metric_schedules_done", "model.houm.sales_investor_metric_schedules_scheduled"], "model.houm.dim_currency": [], "model.houm.dim_properties": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.dim_macrozones": ["model.houm.proc_macrozone"], "model.houm.dim_cities": ["model.houm.proc_macrozone"], "model.houm.dim_dates": [], "model.houm.dim_locations": ["source.houm.public.dim_polygons"], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.proc_supply_seller_leads"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.sales_company_metric_details_new_units_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_units"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.sales_company_metric_details_new_unittypes_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_unittypes"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.proc_supply_landlord_leads"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_leads": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.proc_supply_landlord_leads"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.proc_supply_landlord_leads"], "model.houm.sales_company_metric_details_new_project_listing": ["model.houm.proc_properties_mz", "model.houm.proc_supply_projects"], "model.houm.fact_daily_virtual_uf_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.fact_daily_virtual_uf_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.fact_daily_virtual_uf_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.sales_investor_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.rental_tenant_metric_details_schedules_unfinished": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.proc_demand_reservations"], "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": ["model.houm.proc_demand_schedules"], "model.houm.sales_demand_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_correct_visit_done": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_correct_visit_finished": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_arrived_on_time": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_leads_qualified": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_investor_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_correct_visit_done": ["model.houm.proc_demand_schedules_timing"], "model.houm.sales_investor_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_schedules_cancelled_at": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.proc_demand_reservations"], "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_done_time": ["model.houm.proc_demand_schedules_timing"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.proc_demand_leads"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.proc_closure_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metric_details_leads_qualified": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_cancelled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.proc_demand_leads"], "model.houm.sales_investor_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metric_details_leads": ["model.houm.proc_demand_sales_leads"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.proc_closure_subs"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_leads_qualified_date": ["model.houm.proc_demand_sales_leads"], "model.houm.sales_demand_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_leads_qualified_date": ["model.houm.proc_demand_sales_leads"], "model.houm.property__published_properties_rev_suggested_prices": ["model.houm.proc_properties_rev_suggested_prices", "model.houm.property__published_properties"], "model.houm.property__rev_ratio_country_city": ["model.houm.property__published_properties", "model.houm.property__published_properties_rev_suggested_prices"], "model.houm.property__published_properties": ["model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.property__rev_kpi_ratio": ["model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties", "model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties"], "model.houm.property__published_new_properties": ["model.houm.proc_new_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails", "model.houm.stg_properties_associationamenities", "model.houm.stg_real_estate_developments_developmentdetails", "model.houm.stg_real_estate_developments_developments", "model.houm.stg_real_estate_developments_units", "model.houm.stg_real_estate_developments_unittypes", "model.houm.stg_users"], "model.houm.stg_survicate_nps_sac_surveys": ["source.houm.survicate.nps_sac_surveys"], "model.houm.stg_survicate_nps_sac_bi_executives": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"], "model.houm.stg_survicate_nps_admin_surveys": ["source.houm.survicate.nps_admin_surveys"], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"], "model.houm.stg_survicate_nps_admin_executives": ["model.houm.stg_survicate_nps_admin_answers", "model.houm.stg_survicate_nps_admin_surveys"], "model.houm.stg_survicate_nps_visit_done": ["source.houm.survicate.nps_visit_done"], "model.houm.stg_survicate_nps_admin_answers": ["source.houm.survicate.nps_admin_answers"], "model.houm.stg_survicate_nps_sac_executives": ["model.houm.stg_survicate_nps_sac_answers", "model.houm.stg_survicate_nps_sac_surveys"], "model.houm.stg_survicate_nps_sac_answers": ["source.houm.survicate.nps_sac_answers"], "model.houm.stg_survicate_nps_landlord_listing": ["source.houm.survicate.nps_landlord_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": ["source.houm.survicate.nps_landlord_new_sub"], "model.houm.stg_survicate_nps_photo_done": ["source.houm.survicate.photo_done"], "model.houm.stg_survicate_nps_tenant_new_sub": ["source.houm.survicate.nps_tennant_new_sub"], "model.houm.stg_supermetrics_fbads_video": ["source.houm.supermetrics.fbads_video"], "model.houm.stg_supermetrics_fbads_geo": ["source.houm.supermetrics.fbads_geo"], "model.houm.stg_supermetrics_googleads_campaign": ["source.houm.supermetrics.googleads_campaign"], "model.houm.stg_supermetrics_fbads_conversion": ["source.houm.supermetrics.fbads_conversion"], "model.houm.stg_supermetrics_googleads_ad": ["source.houm.supermetrics.googleads_ad"], "model.houm.stg_supermetrics_fbads_campaign": ["source.houm.supermetrics.fbads_campaign"], "model.houm.stg_supermetrics_googleads_conversion": ["source.houm.supermetrics.googleads_conversion"], "model.houm.stg_supermetrics_fbads_age_gender": ["source.houm.supermetrics.fbads_age_gender"], "model.houm.stg_supermetrics_fbads_ad": ["source.houm.supermetrics.fbads_ad"], "model.houm.stg_sales_negotiation": ["source.houm.bidding_app.negotiation"], "model.houm.stg_sales_negotiation_user": ["source.houm.bidding_app.negotiation_user"], "model.houm.stg_sales_bid": ["source.houm.bidding_app.bid"], "model.houm.stg_sales_identification": ["source.houm.bidding_app.identification"], "model.houm.stg_sales_property": ["source.houm.bidding_app.property"], "model.houm.stg_sales_bid_response": ["source.houm.bidding_app.bid_response"], "model.houm.stg_sales_identification_type": ["source.houm.bidding_app.identification_type"], "model.houm.stg_sales_user": ["source.houm.bidding_app.user"], "model.houm.stg_whatsapp_csat_photo_done": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"], "model.houm.stg_whatsapp_ces_sales_promises": ["source.houm.airbyte_gspread.new_nps_sales_buyer_promesa", "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa"], "model.houm.stg_whatsapp_nps_automatic_tenants": ["source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses", "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses", "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs", "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses", "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses"], "model.houm.stg_whatsapp_nps_photo": ["source.houm.airbyte_gspread.nps_chile_foto", "source.houm.airbyte_gspread.nps_colombia_foto", "source.houm.airbyte_gspread.nps_mexico_foto"], "model.houm.stg_whatsapp_nps_rentas_new_listing": ["source.houm.airbyte_gspread.new_nps_rentals_new_listing", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx"], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": ["source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx"], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses", "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses"], "model.houm.stg_whatsapp_nps_visits_done": ["source.houm.airbyte_gspread.nps_chile_renta", "source.houm.airbyte_gspread.nps_chile_sales", "source.houm.airbyte_gspread.nps_colombia_renta", "source.houm.airbyte_gspread.nps_colombia_sales", "source.houm.airbyte_gspread.nps_mexico_renta", "source.houm.airbyte_gspread.nps_mexico_sales"], "model.houm.stg_whatsapp_ces_rentas_photo_done": ["source.houm.airbyte_gspread.new_nps_visit_photo_done"], "model.houm.stg_whatsapp_ces_rentas_24_horas_tenant": ["source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant"], "model.houm.stg_whatsapp_nps_sales_promises": ["source.houm.airbyte_gspread.new_nps_sales_buyer_posventa", "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa", "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "source.houm.airbyte_gspread.nps_sales_post_venta_seller", "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "source.houm.airbyte_gspread.nps_sales_promesa_seller"], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"], "model.houm.stg_whatsapp_nps_visits_cancelled": ["source.houm.airbyte_gspread.new_nps_visit_cancel_visit", "source.houm.airbyte_gspread.nps_cancel_visit"], "model.houm.stg_whatsapp_csat_visit_done": ["source.houm.airbyte_gspread.new_nps_visit_rental_visit_done", "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done"], "model.houm.stg_whatsapp_ces_rentas_propietary_pc": ["source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract"], "model.houm.stg_whatsapp_nps_rentas_tenant_pc": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"], "model.houm.stg_activies": ["source.houm.pipedrive.activities"], "model.houm.stg_pipelines": ["source.houm.pipedrive.pipelines"], "model.houm.stg_bi_persons": ["source.houm.pipedrive.bi_persons"], "model.houm.stg_stages": ["source.houm.pipedrive.stages"], "model.houm.stg_bi_deals": ["source.houm.pipedrive.bi_deals"], "model.houm.stg_deals": ["source.houm.pipedrive.deals"], "model.houm.stg_scheduler_appraiserworkingmacrozone": ["source.houm.raw_stage.scheduler_appraiserworkingmacrozone"], "model.houm.stg_subscription_subscription": ["source.houm.raw_stage.subscription_subscription"], "model.houm.stg_demand_calls": ["source.houm.raw_stage.demand_calls"], "model.houm.stg_demand_portalhoum": ["source.houm.raw_stage.demand_portalhoum"], "model.houm.stg_scheduler_cancelreasontypes": ["source.houm.raw_stage.scheduler_cancelreasontypes"], "model.houm.stg_billing_adjustment": ["source.houm.raw_stage.billing_adjustment"], "model.houm.stg_payment_orders": ["source.houm.raw_stage.payment_orders"], "model.houm.stg_properties_associationamenities": ["source.houm.raw_stage.properties_associationamenities"], "model.houm.stg_scheduler_appraiseravailability": ["source.houm.raw_stage.scheduler_appraiseravailability"], "model.houm.stg_external_portal_integrations_publicationurl": ["source.houm.raw_stage.external_portal_integrations_publicationurl"], "model.houm.stg_contracts_scd": ["source.houm.historical.historical_contracts"], "model.houm.stg_contracts": ["source.houm.raw_stage.contracts"], "model.houm.stg_arriendoasegurado_rentfeedback": ["source.houm.raw_stage.arriendoasegurado_rentfeedback"], "model.houm.stg_demand_marketingapplicant": ["source.houm.raw_stage.demand_marketingapplicant"], "model.houm.stg_external_portal_integrations_publication": ["source.houm.raw_stage.external_portal_integrations_publication"], "model.houm.stg_arriendoasegurado_applicant": ["source.houm.raw_stage.arriendoasegurado_applicant"], "model.houm.stg_scheduler_schedules": ["source.houm.raw_stage.scheduler_schedules"], "model.houm.stg_external_portal_integrations_externalportals": ["source.houm.raw_stage.external_portal_integrations_externalportals"], "model.houm.stg_demand_portalapplicant": ["source.houm.raw_stage.demand_portalapplicant"], "model.houm.stg_external_portal_integrations_loadstatus": ["source.houm.raw_stage.external_portal_integrations_loadstatus"], "model.houm.stg_subscription_subscriptionevent": ["source.houm.raw_stage.subscription_subscriptionevent"], "model.houm.stg_users": ["source.houm.raw_stage.users"], "model.houm.stg_external_portal_integrations_country": ["source.houm.raw_stage.external_portal_integrations_country"], "model.houm.stg_real_estate_developments_units": ["source.houm.raw_stage.real_estate_developments_units"], "model.houm.stg_real_estate_developments_developmentdetails": ["source.houm.raw_stage.real_estate_developments_developmentdetails"], "model.houm.stg_scheduler_scheduletypes": ["source.houm.raw_stage.scheduler_scheduletypes"], "model.houm.stg_properties_location": ["source.houm.raw_stage.properties_location"], "model.houm.stg_scheduler_schedulehasapplicant": ["source.houm.raw_stage.scheduler_schedulehasapplicant"], "model.houm.stg_scheduler_macrozone": ["source.houm.raw_stage.scheduler_macrozone"], "model.houm.stg_external_portal_integrations_macrozoneportalplan": ["source.houm.raw_stage.external_portal_integrations_macrozoneportalplan"], "model.houm.stg_subscription_subscriptiondiscount": ["source.houm.raw_stage.subscription_subscriptiondiscount"], "model.houm.stg_demand_eventleadprofile": ["source.houm.raw_stage.demand_eventleadprofile"], "model.houm.stg_properties": ["source.houm.raw_stage.properties"], "model.houm.stg_demand_leadhasappraiser": ["source.houm.raw_stage.demand_leadhasappraiser"], "model.houm.stg_plans_cities": ["source.houm.raw_stage.plans_cities"], "model.houm.stg_real_estate_developments_unittypes": ["source.houm.raw_stage.real_estate_developments_unittypes"], "model.houm.stg_external_portal_integrations_publication_scd": ["source.houm.historical.historical_external_portal_integrations_publication"], "model.houm.stg_scheduler_scheduleevent": ["source.houm.raw_stage.scheduler_scheduleevent"], "model.houm.stg_demand_lead": ["source.houm.raw_stage.demand_lead"], "model.houm.stg_scheduler_applicanthasappraiser": ["source.houm.raw_stage.scheduler_applicanthasappraiser"], "model.houm.stg_external_portal_integrations_publicationtype": ["source.houm.raw_stage.external_portal_integrations_publicationtype"], "model.houm.stg_demand_eventleadhasappraiser": ["source.houm.raw_stage.demand_eventleadhasappraiser"], "model.houm.stg_arriendoasegurado_contractperson": ["source.houm.raw_stage.arriendoasegurado_contractperson"], "model.houm.stg_external_portal_integrations_portalplan": ["source.houm.raw_stage.external_portal_integrations_portalplan"], "model.houm.stg_contracts_codebtors": ["source.houm.raw_stage.contracts_codebtors"], "model.houm.stg_property_salesdetails": ["source.houm.raw_stage.properties_salesdetails"], "model.houm.stg_homecheckerdetails": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"], "model.houm.stg_arriendoasegurado_city": ["source.houm.raw_stage.arriendoasegurado_city"], "model.houm.stg_arriendoasegurado_planmonth": ["source.houm.raw_stage.arriendoasegurado_planmonth"], "model.houm.stg_scheduler_appraiserevent": ["source.houm.raw_stage.scheduler_appraiserevent"], "model.houm.stg_macrozone": ["source.houm.raw_stage.scheduler_macrozone"], "model.houm.stg_real_estate_developments_developments": ["source.houm.raw_stage.real_estate_developments_developments"], "model.houm.stg_scheduler_cancelreasons": ["source.houm.raw_stage.scheduler_cancelreasons"], "model.houm.stg_properties_inspectionreport": ["source.houm.raw_stage.properties_inspectionreport"], "model.houm.stg_plans": ["source.houm.raw_stage.plans"], "model.houm.stg_demand_whatsapp": ["source.houm.raw_stage.demand_whatsapp"], "model.houm.stg_properties_basicservice": ["source.houm.raw_stage.properties_basicservice"], "model.houm.stg_scheduler_appraisers": ["source.houm.raw_stage.scheduler_appraisers"], "model.houm.stg_arriendoasegurado_propertydetails": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_propertydetails": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_paid_media_google_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_gg"], "model.houm.stg_tmp_marketing_pipedrive_data": ["source.houm.airbyte_gspread.data"], "model.houm.stg_paid_media_facebook_campaigns": ["source.houm.airbyte_gspread.bb_fb"], "model.houm.stg_paid_media_google_campaigns_co_mx": ["source.houm.airbyte_gspread.gg_mxco"], "model.houm.stg_paid_media_ad_groups": ["source.houm.airbyte_gspread.anuncios"], "model.houm.stg_paid_media_facebook_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_fb"], "model.houm.stg_paid_media_google_campaigns_cl": ["source.houm.airbyte_gspread.gg_cl"], "model.houm.stg_rev_kpi_rented_properties": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_rev_houm_properties": ["source.houm.public.rev_houm_properties"], "model.houm.stg_rev_kpi_published_properties": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_zendesk_metrics": ["source.houm.airbyte_zendesk.ticket_metrics"], "model.houm.stg_zendesk_tickets_audits_events": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_events"], "model.houm.stg_zendesk_users": ["source.houm.airbyte_zendesk.users"], "model.houm.stg_zendesk_tickets_audits_via": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via", "source.houm.airbyte_zendesk.ticket_audits_via_source", "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "source.houm.airbyte_zendesk.ticket_audits_via_source_to"], "model.houm.stg_zendesk_tickets_comments": ["source.houm.airbyte_zendesk.ticket_comments"], "model.houm.stg_zendesk_tickets_audits": ["source.houm.airbyte_zendesk.ticket_audits"], "model.houm.stg_zendesk_tickets": ["source.houm.airbyte_zendesk.tickets"], "model.houm.stg_property__rent_recommended_properties": ["source.houm.raw_stage_analytics.property__rent_recommended_properties"], "model.houm.stg_property__sale_recommended_properties": ["source.houm.raw_stage_analytics.property__sale_recommended_properties"], "model.houm.stg_property__recommended_new_properties": ["source.houm.raw_stage_analytics.property__recommended_new_properties"], "model.houm.stg_evaluations_scd": ["source.houm.historical.historical_evaluation"], "model.houm.stg_monthly_inflation_mx": ["source.houm.raw_stage.series_ipc_mx"], "model.houm.stg_monthly_inflation_co": ["source.houm.raw_stage.series_ipc_co"], "model.houm.stg_monthly_inflation_cl": ["source.houm.raw_stage.series_ipc_cl"], "model.houm.stg_payments_cl_db_movements": ["source.houm.mongo_tables.payments_cl_db_movements"], "model.houm.stg_payments_mx_db_movements": ["source.houm.mongo_tables.payments_mx_db_movements"], "model.houm.stg_payments_co_db_movements": ["source.houm.mongo_tables.payments_co_db_movements"], "model.houm.stg_departments": ["source.houm.staging_buk.departments_chile", "source.houm.staging_buk.departments_colombia"], "model.houm.stg_payrolls": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_companies": ["source.houm.staging_buk.companies_chile", "source.houm.staging_buk.companies_colombia"], "model.houm.stg_accounting": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_jobs": ["source.houm.staging_buk.jobs_chile", "source.houm.staging_buk.jobs_colombia"], "model.houm.stg_areas": ["source.houm.staging_buk.areas_chile", "source.houm.staging_buk.areas_colombia"], "model.houm.stg_line_settlements": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"], "model.houm.stg_employees": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"], "model.houm.stg_roles": ["source.houm.staging_buk.roles_chile", "source.houm.staging_buk.roles_colombia"], "model.houm.proc_closure_subs": ["model.houm.proc_closure_contracts", "model.houm.proc_closure_plans", "model.houm.proc_properties_mz", "model.houm.stg_subscription_subscription"], "model.houm.proc_finance_plans": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"], "model.houm.proc_closure_evaluation_has_a_contract": [], "model.houm.proc_closure_plans_taxes_region": ["model.houm.proc_properties", "model.houm.stg_plans", "model.houm.stg_subscription_subscription"], "model.houm.proc_closure_plans": ["model.houm.stg_plans", "model.houm.stg_plans", "model.houm.stg_plans"], "model.houm.proc_finance_multifamily": [], "model.houm.proc_closure_evaluations": [], "model.houm.proc_closure_contracts": ["model.houm.stg_contracts"], "model.houm.proc_closure_contract_historical_status": ["model.houm.stg_contracts"], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.stg_zendesk_tickets_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.proc_pipedrive_leads": ["model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_labels", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_pipelines", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_stages"], "model.houm.proc_supply_seller_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_property_salesdetails": ["model.houm.stg_property_salesdetails"], "model.houm.proc_pipedrive_pipelines": ["model.houm.stg_pipelines"], "model.houm.proc_supply_unittypes": ["model.houm.proc_supply_projects", "model.houm.stg_real_estate_developments_unittypes"], "model.houm.proc_properties_mz": ["model.houm.proc_macrozone", "model.houm.proc_propertydetails"], "model.houm.proc_supply_schedules": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_pipedrive_persons": ["model.houm.proc_pipedrive_persons_emails", "model.houm.proc_pipedrive_persons_phones", "model.houm.stg_deals"], "model.houm.proc_supply_landlord_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_pipedrive_cities": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_deals"], "model.houm.proc_supply_units": ["model.houm.proc_supply_unittypes", "model.houm.stg_real_estate_developments_units"], "model.houm.proc_propertydetails": ["model.houm.stg_propertydetails"], "model.houm.proc_new_properties": ["model.houm.proc_properties"], "model.houm.proc_tmp_supply_cities": ["model.houm.proc_macrozone"], "model.houm.proc_macrozone": ["model.houm.proc_supply_marketplace_city", "model.houm.stg_macrozone"], "model.houm.proc_pipedrive_persons_phones": ["model.houm.stg_deals"], "model.houm.proc_properties": ["model.houm.stg_properties", "model.houm.stg_users"], "model.houm.proc_pipedrive_persons_emails": ["model.houm.stg_deals"], "model.houm.proc_pipedrive_deals": ["model.houm.stg_deals"], "model.houm.proc_supply_marketplace_city": ["model.houm.stg_arriendoasegurado_city"], "model.houm.proc_supply_projects": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.stg_real_estate_developments_developments"], "model.houm.proc_pipedrive_labels": ["model.houm.proc_pipedrive_deals"], "model.houm.proc_tmp_supply_properties_macrozone": ["model.houm.proc_macrozone", "model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_propertydetails"], "model.houm.proc_external_portal_historical_publications": ["model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_publicationtype"], "model.houm.proc_pipedrive_stages": ["model.houm.stg_stages"], "model.houm.proc_properties_location": ["model.houm.stg_properties_location"], "model.houm.proc_rev_properties": ["model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_properties_location", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.proc_properties_rev_suggested_prices": ["model.houm.stg_rev_houm_properties", "model.houm.stg_rev_houm_properties"], "model.houm.proc_rev_rental_last_months_properties": ["model.houm.proc_rev_rental_properties"], "model.houm.proc_rev_rental_published_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_rental_rented_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_rental_properties": ["model.houm.proc_rev_properties"], "model.houm.proc_rev_sales_properties": ["model.houm.proc_rev_properties"], "model.houm.proc_rev_sales_sold_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_rev_sales_last_months_properties": ["model.houm.proc_rev_sales_properties"], "model.houm.proc_rev_sales_published_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_marketing_paid_media": ["model.houm.proc_marketing_paid_media_campaign", "model.houm.proc_marketing_paid_media_executions"], "model.houm.proc_marketing_paid_media_campaign": ["model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_executions"], "model.houm.proc_marketing_paid_media_executions": ["model.houm.stg_supermetrics_fbads_ad", "model.houm.stg_supermetrics_googleads_ad"], "model.houm.sales_local_revenue": [], "model.houm.rentals_units": [], "model.houm.eop_subs": [], "model.houm.sales_units": [], "model.houm.proc_cx_nps_new_listing": ["model.houm.stg_survicate_nps_landlord_listing", "model.houm.stg_whatsapp_nps_rentas_new_listing"], "model.houm.proc_cx_nps_visit_done": ["model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_scheduler_appraisers", "model.houm.stg_survicate_nps_visit_done", "model.houm.stg_whatsapp_nps_visits_done"], "model.houm.proc_cx_nps_photo": ["model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_survicate_nps_photo_done", "model.houm.stg_whatsapp_nps_photo"], "model.houm.proc_cx_nps_tenants": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "model.houm.proc_cx_nps_landlords_pc": ["model.houm.stg_survicate_nps_landlord_new_sub", "model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "model.houm.proc_cx_nps_promises": ["model.houm.stg_whatsapp_nps_sales_promises"], "model.houm.proc_cx_nps_landlords": ["model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "model.houm.proc_cx_nps_tenants_pc": ["model.houm.stg_survicate_nps_tenant_new_sub", "model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "model.houm.proc_cx_nps_visit_cancelled": ["model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_whatsapp_nps_visits_cancelled"], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.stg_monthly_inflation_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.stg_monthly_inflation_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.stg_monthly_inflation_cl"], "model.houm.proc_core_cancelations": ["model.houm.proc_app_cancelations", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.proc_core_scheduler_schedules": ["model.houm.proc_properties_mz", "model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_core_appraisers": ["model.houm.stg_scheduler_appraisers"], "model.houm.proc_demand_schedules_timing": ["model.houm.dim_macrozones", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_appraiserevent", "model.houm.proc_properties_mz", "model.houm.proc_propertydetails", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_schedules"], "model.houm.proc_external_portal_leads_per_publication": ["model.houm.proc_properties", "model.houm.stg_demand_portalapplicant", "model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_loadstatus", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publication_scd", "model.houm.stg_external_portal_integrations_publicationtype"], "model.houm.proc_demand_schedules": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_demand_schedules_appraiserevent": ["model.houm.stg_scheduler_appraiserevent"], "model.houm.proc_tmp_demand_schedules_cleaned": ["model.houm.proc_tmp_demand_schedules"], "model.houm.proc_app_cancelations": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_schedules"], "model.houm.proc_first_cancelation": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_scheduleevent"], "model.houm.proc_demand_lead_activities": ["model.houm.dim_macrozones", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_whatsapp"], "model.houm.proc_demand_whatsapp": ["model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_whatsapp"], "model.houm.proc_others_cancelations": ["model.houm.stg_scheduler_appraiserevent", "model.houm.stg_scheduler_appraisers", "model.houm.stg_scheduler_cancelreasons", "model.houm.stg_scheduler_cancelreasontypes", "model.houm.stg_scheduler_scheduleevent", "model.houm.stg_scheduler_schedules"], "model.houm.proc_demand_portalapplicant": ["model.houm.dim_macrozones", "model.houm.proc_properties", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalapplicant"], "model.houm.proc_core_applicant": ["model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_users"], "model.houm.proc_demand_marketingapplicant": ["model.houm.dim_macrozones", "model.houm.proc_marketing_paid_media_campaign", "model.houm.stg_demand_lead", "model.houm.stg_demand_marketingapplicant"], "model.houm.proc_tmp_demand_schedules": ["model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_tmp_demand_tenant_houm_leads": ["model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_demand_portalhoum"], "model.houm.proc_demand_sales_leads": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_demand_reservations": ["model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_payments_cl_db_movements", "model.houm.stg_payments_co_db_movements", "model.houm.stg_payments_mx_db_movements"], "model.houm.proc_tmp_demand_tenant_pa_leads": ["model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_demand_portalapplicant"], "model.houm.proc_demand_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.stg_demand_portalhoum"], "model.houm.proc_demand_portalhoum": ["model.houm.dim_macrozones", "model.houm.proc_properties", "model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalhoum"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "snapshot.houm.stg_macrozoneportalplan_snapshot": ["model.houm.stg_external_portal_integrations_country", "model.houm.stg_external_portal_integrations_externalportals", "model.houm.stg_external_portal_integrations_macrozoneportalplan", "model.houm.stg_external_portal_integrations_portalplan", "model.houm.stg_external_portal_integrations_publicationtype"], "test.houm.assert_properties_rent_prices_chile": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "seed.houm.country-codes": [], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "operation.houm.houm-on-run-end-22": [], "operation.houm.houm-on-run-end-23": [], "operation.houm.houm-on-run-end-24": [], "operation.houm.houm-on-run-end-25": [], "operation.houm.houm-on-run-end-26": [], "operation.houm.houm-on-run-end-27": [], "operation.houm.houm-on-run-end-28": [], "operation.houm.houm-on-run-end-29": [], "operation.houm.houm-on-run-end-30": [], "operation.houm.houm-on-run-end-31": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": ["model.houm.properties_published"], "test.houm.not_null_properties_published_property_id.cfd67d7b86": ["model.houm.properties_published"], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": ["model.houm.dim_macrozones"], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": ["model.houm.dim_macrozones"], "test.houm.unique_stg_properties_id.c012ce6a29": ["model.houm.stg_properties"], "test.houm.not_null_stg_properties_id.d43465ee9b": ["model.houm.stg_properties"], "test.houm.unique_stg_propertydetails_property_id.3d72328240": ["model.houm.stg_propertydetails"], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": ["model.houm.stg_propertydetails"], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": ["model.houm.stg_property_salesdetails"], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": ["model.houm.stg_property_salesdetails"], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": ["model.houm.stg_employees"], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": ["model.houm.stg_employees"], "test.houm.unique_stg_zendesk_users_id.e79d686872": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": ["model.houm.stg_zendesk_users"], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "source.houm.public.dim_polygons": [], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.public.rev_houm_properties": [], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": [], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": [], "source.houm.historical.historical_plans": [], "source.houm.historical.historical_external_portal_integrations_publication": [], "source.houm.historical.historical_evaluation": [], "source.houm.raw_stage.series_ipc_cl": [], "source.houm.raw_stage.series_ipc_mx": [], "source.houm.raw_stage.series_ipc_co": [], "source.houm.raw_stage.properties": [], "source.houm.raw_stage.properties_salesdetails": [], "source.houm.raw_stage.properties_location": [], "source.houm.raw_stage.properties_associationamenities": [], "source.houm.raw_stage.properties_inspectionreport": [], "source.houm.raw_stage.properties_basicservice": [], "source.houm.raw_stage.arriendoasegurado_propertydetails": [], "source.houm.raw_stage.arriendoasegurado_city": [], "source.houm.raw_stage.arriendoasegurado_applicant": [], "source.houm.raw_stage.arriendoasegurado_contractperson": [], "source.houm.raw_stage.arriendoasegurado_planmonth": [], "source.houm.raw_stage.arriendoasegurado_rentfeedback": [], "source.houm.raw_stage.users": [], "source.houm.raw_stage.subscription_subscription": [], "source.houm.raw_stage.real_estate_developments_developments": [], "source.houm.raw_stage.real_estate_developments_developmentdetails": [], "source.houm.raw_stage.real_estate_developments_unittypes": [], "source.houm.raw_stage.real_estate_developments_units": [], "source.houm.raw_stage.demand_lead": [], "source.houm.raw_stage.demand_portalhoum": [], "source.houm.raw_stage.demand_portalapplicant": [], "source.houm.raw_stage.demand_marketingapplicant": [], "source.houm.raw_stage.demand_whatsapp": [], "source.houm.raw_stage.demand_calls": [], "source.houm.raw_stage.demand_eventleadhasappraiser": [], "source.houm.raw_stage.demand_leadhasappraiser": [], "source.houm.raw_stage.demand_eventleadprofile": [], "source.houm.raw_stage.scheduler_schedules": [], "source.houm.raw_stage.scheduler_scheduletypes": [], "source.houm.raw_stage.scheduler_appraisers": [], "source.houm.raw_stage.scheduler_schedulehasapplicant": [], "source.houm.raw_stage.scheduler_applicanthasappraiser": [], "source.houm.raw_stage.scheduler_appraiseravailability": [], "source.houm.raw_stage.scheduler_appraiserevent": [], "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": [], "source.houm.raw_stage.scheduler_cancelreasons": [], "source.houm.raw_stage.scheduler_cancelreasontypes": [], "source.houm.raw_stage.scheduler_macrozone": [], "source.houm.raw_stage.scheduler_scheduleevent": [], "source.houm.raw_stage.subscription_subscriptiondiscount": [], "source.houm.raw_stage.subscription_subscriptionevent": [], "source.houm.raw_stage.bid": [], "source.houm.raw_stage.negotiation": [], "source.houm.raw_stage.identification": [], "source.houm.raw_stage.identification_type": [], "source.houm.raw_stage.contracts_codebtors": [], "source.houm.raw_stage.plans_cities": [], "source.houm.raw_stage.billing_adjustment": [], "source.houm.raw_stage.payment_orders": [], "source.houm.raw_stage.plans": [], "source.houm.raw_stage.contracts": [], "source.houm.raw_stage.external_portal_integrations_country": [], "source.houm.raw_stage.external_portal_integrations_publication": [], "source.houm.raw_stage.external_portal_integrations_publicationtype": [], "source.houm.raw_stage.external_portal_integrations_portalplan": [], "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": [], "source.houm.raw_stage.external_portal_integrations_loadstatus": [], "source.houm.raw_stage.external_portal_integrations_externalportals": [], "source.houm.raw_stage.external_portal_integrations_publicationurl": [], "source.houm.staging_buk.employees_chile": [], "source.houm.staging_buk.employees_colombia": [], "source.houm.staging_buk.roles_chile": [], "source.houm.staging_buk.roles_colombia": [], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": [], "source.houm.staging_buk.areas_colombia": [], "source.houm.staging_buk.companies_chile": [], "source.houm.staging_buk.companies_colombia": [], "source.houm.staging_buk.departments_chile": [], "source.houm.staging_buk.departments_colombia": [], "source.houm.staging_buk.jobs_chile": [], "source.houm.staging_buk.jobs_colombia": [], "source.houm.staging_buk.payrolls_chile": [], "source.houm.staging_buk.payrolls_colombia": [], "source.houm.staging_buk.line_settlements_chile": [], "source.houm.staging_buk.line_settlements_colombia": [], "source.houm.airbyte_zendesk.users": [], "source.houm.airbyte_zendesk.tickets": [], "source.houm.airbyte_zendesk.ticket_audits": [], "source.houm.airbyte_zendesk.ticket_audits_events": [], "source.houm.airbyte_zendesk.ticket_audits_via": [], "source.houm.airbyte_zendesk.ticket_audits_via_source": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": [], "source.houm.airbyte_zendesk.ticket_metrics": [], "source.houm.airbyte_zendesk.ticket_comments": [], "source.houm.pipedrive.activities": [], "source.houm.pipedrive.deals": [], "source.houm.pipedrive.pipelines": [], "source.houm.pipedrive.stages": [], "source.houm.pipedrive.bi_persons": [], "source.houm.pipedrive.bi_deals": [], "source.houm.mongo_tables.payments_cl_db_movements": [], "source.houm.mongo_tables.payments_co_db_movements": [], "source.houm.mongo_tables.payments_mx_db_movements": [], "source.houm.airbyte_gspread.bb_fb": [], "source.houm.airbyte_gspread.gg_cl": [], "source.houm.airbyte_gspread.gg_mxco": [], "source.houm.airbyte_gspread.campaign_keys_fb": [], "source.houm.airbyte_gspread.campaign_keys_gg": [], "source.houm.airbyte_gspread.data": [], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": [], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": [], "source.houm.airbyte_gspread.nps_cancel_visit": [], "source.houm.airbyte_gspread.nps_chile_foto": [], "source.houm.airbyte_gspread.nps_chile_renta": [], "source.houm.airbyte_gspread.nps_chile_sales": [], "source.houm.airbyte_gspread.nps_colombia_foto": [], "source.houm.airbyte_gspread.nps_colombia_renta": [], "source.houm.airbyte_gspread.nps_colombia_sales": [], "source.houm.airbyte_gspread.nps_mexico_foto": [], "source.houm.airbyte_gspread.nps_mexico_renta": [], "source.houm.airbyte_gspread.nps_mexico_sales": [], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": [], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": [], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": [], "source.houm.airbyte_gspread.nps_sales_promesa_seller": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": [], "source.houm.airbyte_gspread.anuncios": [], "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": [], "source.houm.airbyte_gspread.new_nps_rentals_new_listing": [], "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": [], "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": [], "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": [], "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": [], "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": [], "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": [], "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": [], "source.houm.airbyte_gspread.new_nps_visit_photo_done": [], "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": [], "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": [], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": [], "source.houm.survicate.nps_landlord_listing": [], "source.houm.survicate.nps_landlord_new_sub": [], "source.houm.survicate.nps_tennant_new_sub": [], "source.houm.survicate.photo_done": [], "source.houm.survicate.nps_tenant_satisfaction_24hrs": [], "source.houm.survicate.nps_visit_done": [], "source.houm.survicate.nps_sac_surveys": [], "source.houm.survicate.nps_sac_answers": [], "source.houm.survicate.nps_admin_surveys": [], "source.houm.survicate.nps_admin_answers": [], "source.houm.supermetrics.googleads_conversion": [], "source.houm.supermetrics.googleads_campaign": [], "source.houm.supermetrics.googleads_ad": [], "source.houm.supermetrics.fbads_campaign": [], "source.houm.supermetrics.fbads_ad": [], "source.houm.supermetrics.fbads_geo": [], "source.houm.supermetrics.fbads_conversion": [], "source.houm.supermetrics.fbads_age_gender": [], "source.houm.supermetrics.fbads_video": [], "source.houm.raw_stage_analytics.property__rent_recommended_properties": [], "source.houm.raw_stage_analytics.property__sale_recommended_properties": [], "source.houm.raw_stage_analytics.property__recommended_new_properties": [], "source.houm.bidding_app.bid": [], "source.houm.bidding_app.bid_response": [], "source.houm.bidding_app.negotiation": [], "source.houm.bidding_app.negotiation_user": [], "source.houm.bidding_app.identification": [], "source.houm.bidding_app.identification_type": [], "source.houm.bidding_app.property": [], "source.houm.bidding_app.user": [], "source.houm.scraped_data_ops.scraped_properties_melico": [], "source.houm.scraped_data_ops.scraped_properties_fincaraiz": [], "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": [], "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": [], "source.houm.scraped_data_ops.scraped_properties_segundamano": [], "source.houm.scraped_data_ops.scraped_properties_melimx": [], "source.houm.scraped_data_ops.scraped_properties_yapo": []}, "child_map": {"model.houm.property__recommended_new_properties": [], "model.houm.property__sale_recommended_properties": [], "model.houm.property__rent_recommended_properties": [], "model.houm.property__rev_kpi_recommendation_performance": [], "model.houm.goals_current": [], "model.houm.cum_rentals_units": ["model.houm.goals_current"], "model.houm.cum_sales_units": ["model.houm.goals_current"], "model.houm.cum_sales_local_revenue": ["model.houm.goals_current"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_funnel"], "model.houm.sales_company_metric_new_units_listing": ["model.houm.sales_company_funnel"], "model.houm.sales_company_metric_new_unittypes_listing": ["model.houm.sales_company_funnel"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_funnel"], "model.houm.sales_company_metric_new_project_listing": ["model.houm.sales_company_funnel"], "model.houm.properties_published": ["test.houm.not_null_properties_published_property_id.cfd67d7b86", "test.houm.unique_properties_published_property_id.3fc869c6e4"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_funnel"], "model.houm.kpi_landlord_photo_scheduled": [], "model.houm.kpi_tenant_visit_done": [], "model.houm.kpi_landlord_nrl": [], "model.houm.kpi_landlord_photo_created": [], "model.houm.kpi_landlord_photo_done": [], "model.houm.kpi_tenant_visit_created": [], "model.houm.kpi_tenant_visit_scheduled": [], "model.houm.kpi_seller_photo_created": [], "model.houm.kpi_seller_nsl": [], "model.houm.kpi_seller_photo_scheduled": [], "model.houm.kpi_buyer_visit_done": [], "model.houm.kpi_buyer_visit_created": [], "model.houm.kpi_seller_photo_done": [], "model.houm.kpi_buyer_visit_scheduled": [], "model.houm.sales_investor_metric_leads_qualified_date": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_cancelled": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_buyer_metric_leads_qualified": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_correct_visit_done": ["model.houm.rental_real_time_ops_funnel_timing", "model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_leads_qualified_date": ["model.houm.sales_buyer_funnel"], "model.houm.sales_demand_metric_paid_media_cost": ["model.houm.sales_buyer_funnel", "model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_organic": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_correct_visit_finished": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_demand_metric_leads": ["model.houm.sales_buyer_funnel", "model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled_admin": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_buyer_metric_leads": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_leads": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_unfinished": ["model.houm.rental_real_time_ops_funnel"], "model.houm.sales_investor_metric_schedules_created": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_paid_media_cost": ["model.houm.sales_investor_funnel"], "model.houm.sales_investor_metric_schedules_done": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_done_time": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.rental_tenant_metric_arrived_on_time": ["model.houm.rental_real_time_ops_funnel_timing"], "model.houm.sales_buyer_metric_correct_visit_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_real_time_ops_funnel", "model.houm.rental_tenant_funnel"], "model.houm.sales_investor_metric_leads_qualified": ["model.houm.sales_investor_funnel"], "model.houm.sales_investor_metric_schedules_scheduled": ["model.houm.sales_investor_funnel"], "model.houm.rental_tenant_metric_schedules_cancelled_at": ["model.houm.rental_real_time_ops_funnel"], "model.houm.rental_tenant_funnel": [], "model.houm.rental_real_time_ops_funnel": [], "model.houm.rental_landlord_funnel": [], "model.houm.rental_real_time_ops_funnel_timing": [], "model.houm.sales_buyer_funnel": [], "model.houm.sales_company_funnel": [], "model.houm.sales_seller_funnel": [], "model.houm.sales_investor_funnel": [], "model.houm.dim_currency": [], "model.houm.dim_properties": [], "model.houm.dim_macrozones": ["model.houm.proc_demand_lead_activities", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_marketing_paid_media_campaign", "model.houm.rental_landlord_funnel", "model.houm.rental_real_time_ops_funnel", "model.houm.rental_real_time_ops_funnel_timing", "model.houm.rental_tenant_funnel", "model.houm.sales_buyer_funnel", "model.houm.sales_company_funnel", "model.houm.sales_investor_funnel", "model.houm.sales_seller_funnel", "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "test.houm.unique_dim_macrozones_macrozone.99a7937a3d"], "model.houm.dim_cities": [], "model.houm.dim_dates": [], "model.houm.dim_locations": [], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.rental_landlord_metric_paid_media_cost"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.sales_seller_metric_leads_qualified_date"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.sales_seller_metric_paid_media_cost"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.sales_seller_metric_new_sale_listing"], "model.houm.sales_company_metric_details_new_units_listing": ["model.houm.sales_company_metric_new_units_listing"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.sales_seller_metric_photo_done"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.rental_landlord_metric_photo_done"], "model.houm.sales_company_metric_details_new_unittypes_listing": ["model.houm.sales_company_metric_new_unittypes_listing"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.rental_landlord_metric_leads_qualified"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.sales_seller_metric_leads_qualified"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.rental_landlord_metric_new_rental_listing"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.sales_seller_metric_photo_scheduled"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.rental_landlord_metric_photo_scheduled"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.sales_seller_metric_photo_created"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.sales_seller_metric_new_sale_listing_b2c"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.rental_landlord_metric_photo_created"], "model.houm.sales_seller_metric_details_leads": ["model.houm.sales_seller_metric_leads"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.rental_landlord_metric_leads_qualified_date"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.rental_landlord_metric_leads"], "model.houm.sales_company_metric_details_new_project_listing": ["model.houm.sales_company_metric_new_project_listing"], "model.houm.fact_daily_virtual_uf_cl": [], "model.houm.fact_daily_virtual_uf_co": [], "model.houm.fact_daily_virtual_uf_mx": [], "model.houm.sales_investor_metric_details_paid_media_cost": ["model.houm.sales_investor_metric_paid_media_cost"], "model.houm.rental_tenant_metric_details_schedules_unfinished": ["model.houm.rental_tenant_metric_schedules_unfinished"], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.rental_tenant_metric_reservations_refunded"], "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled": ["model.houm.rental_tenant_metric_schedules_scheduled_autoscheduled"], "model.houm.sales_demand_metric_details_leads": ["model.houm.sales_demand_metric_leads"], "model.houm.rental_tenant_metric_details_correct_visit_done": ["model.houm.rental_tenant_metric_correct_visit_done"], "model.houm.rental_tenant_metric_details_correct_visit_finished": ["model.houm.rental_tenant_metric_correct_visit_finished"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.rental_tenant_metric_schedules_scheduled"], "model.houm.sales_investor_metric_details_schedules_created": ["model.houm.sales_investor_metric_schedules_created"], "model.houm.rental_tenant_metric_details_arrived_on_time": ["model.houm.rental_tenant_metric_arrived_on_time"], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.rental_tenant_metric_schedules_done"], "model.houm.sales_investor_metric_details_leads_qualified": ["model.houm.sales_investor_metric_leads_qualified"], "model.houm.sales_investor_metric_details_schedules_scheduled": ["model.houm.sales_investor_metric_schedules_scheduled"], "model.houm.rental_tenant_metric_details_schedules_scheduled_organic": ["model.houm.rental_tenant_metric_schedules_scheduled_organic"], "model.houm.sales_buyer_metric_details_correct_visit_done": ["model.houm.sales_buyer_metric_correct_visit_done"], "model.houm.sales_investor_metric_details_leads": ["model.houm.sales_investor_metric_leads"], "model.houm.rental_tenant_metric_details_schedules_cancelled_at": ["model.houm.rental_tenant_metric_schedules_cancelled_at"], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.rental_tenant_metric_reservations_effective"], "model.houm.rental_tenant_metric_details_schedules_scheduled_admin": ["model.houm.rental_tenant_metric_schedules_scheduled_admin"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.sales_buyer_metric_schedules_scheduled"], "model.houm.rental_tenant_metric_details_done_time": ["model.houm.rental_tenant_metric_done_time"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.rental_tenant_metric_portal_leads"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.rental_tenant_metric_new_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.rental_tenant_metric_reservations"], "model.houm.sales_buyer_metric_details_leads_qualified": ["model.houm.sales_buyer_metric_leads_qualified"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.sales_buyer_metric_schedules_created"], "model.houm.rental_tenant_metric_details_schedules_cancelled": ["model.houm.rental_tenant_metric_schedules_cancelled"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.rental_tenant_metric_schedules_created"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.rental_tenant_metric_portal_leads_interactions"], "model.houm.sales_investor_metric_details_schedules_done": ["model.houm.sales_investor_metric_schedules_done"], "model.houm.sales_buyer_metric_details_leads": ["model.houm.sales_buyer_metric_leads"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.rental_tenant_metric_new_tenant"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.rental_tenant_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.sales_buyer_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.sales_buyer_metric_schedules_done"], "model.houm.sales_investor_metric_details_leads_qualified_date": ["model.houm.sales_investor_metric_leads_qualified_date"], "model.houm.sales_demand_metric_details_paid_media_cost": ["model.houm.sales_demand_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_leads_qualified_date": ["model.houm.sales_buyer_metric_leads_qualified_date"], "model.houm.property__published_properties_rev_suggested_prices": ["model.houm.property__rev_ratio_country_city"], "model.houm.property__rev_ratio_country_city": [], "model.houm.property__published_properties": ["model.houm.property__published_properties_rev_suggested_prices", "model.houm.property__rent_recommended_properties", "model.houm.property__rev_ratio_country_city", "model.houm.property__sale_recommended_properties"], "model.houm.property__rev_kpi_ratio": ["model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance", "model.houm.property__rev_kpi_recommendation_performance"], "model.houm.property__published_new_properties": [], "model.houm.stg_survicate_nps_sac_surveys": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_sac_bi_executives": [], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": [], "model.houm.stg_survicate_nps_admin_surveys": ["model.houm.stg_survicate_nps_admin_executives"], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_survicate_nps_admin_executives": [], "model.houm.stg_survicate_nps_visit_done": ["model.houm.proc_cx_nps_visit_done"], "model.houm.stg_survicate_nps_admin_answers": ["model.houm.stg_survicate_nps_admin_executives"], "model.houm.stg_survicate_nps_sac_executives": ["model.houm.stg_survicate_nps_sac_bi_executives"], "model.houm.stg_survicate_nps_sac_answers": ["model.houm.stg_survicate_nps_sac_executives"], "model.houm.stg_survicate_nps_landlord_listing": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": ["model.houm.proc_cx_nps_landlords_pc"], "model.houm.stg_survicate_nps_photo_done": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_survicate_nps_tenant_new_sub": ["model.houm.proc_cx_nps_tenants_pc"], "model.houm.stg_supermetrics_fbads_video": [], "model.houm.stg_supermetrics_fbads_geo": [], "model.houm.stg_supermetrics_googleads_campaign": [], "model.houm.stg_supermetrics_fbads_conversion": [], "model.houm.stg_supermetrics_googleads_ad": ["model.houm.proc_marketing_paid_media_executions"], "model.houm.stg_supermetrics_fbads_campaign": [], "model.houm.stg_supermetrics_googleads_conversion": [], "model.houm.stg_supermetrics_fbads_age_gender": [], "model.houm.stg_supermetrics_fbads_ad": ["model.houm.proc_marketing_paid_media_executions"], "model.houm.stg_sales_negotiation": [], "model.houm.stg_sales_negotiation_user": [], "model.houm.stg_sales_bid": [], "model.houm.stg_sales_identification": [], "model.houm.stg_sales_property": [], "model.houm.stg_sales_bid_response": [], "model.houm.stg_sales_identification_type": [], "model.houm.stg_sales_user": [], "model.houm.stg_whatsapp_csat_photo_done": [], "model.houm.stg_whatsapp_ces_sales_promises": [], "model.houm.stg_whatsapp_nps_automatic_tenants": ["model.houm.proc_cx_nps_tenants"], "model.houm.stg_whatsapp_nps_photo": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_whatsapp_nps_rentas_new_listing": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": ["model.houm.proc_cx_nps_landlords_pc"], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_whatsapp_nps_visits_done": ["model.houm.proc_cx_nps_visit_done"], "model.houm.stg_whatsapp_ces_rentas_photo_done": [], "model.houm.stg_whatsapp_ces_rentas_24_horas_tenant": [], "model.houm.stg_whatsapp_nps_sales_promises": ["model.houm.proc_cx_nps_promises"], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_whatsapp_nps_visits_cancelled": ["model.houm.proc_cx_nps_visit_cancelled"], "model.houm.stg_whatsapp_csat_visit_done": [], "model.houm.stg_whatsapp_ces_rentas_propietary_pc": [], "model.houm.stg_whatsapp_nps_rentas_tenant_pc": ["model.houm.proc_cx_nps_tenants_pc"], "model.houm.stg_activies": [], "model.houm.stg_pipelines": ["model.houm.proc_pipedrive_pipelines"], "model.houm.stg_bi_persons": [], "model.houm.stg_stages": ["model.houm.proc_pipedrive_leads", "model.houm.proc_pipedrive_stages"], "model.houm.stg_bi_deals": [], "model.houm.stg_deals": ["model.houm.proc_pipedrive_deals", "model.houm.proc_pipedrive_persons", "model.houm.proc_pipedrive_persons_emails", "model.houm.proc_pipedrive_persons_phones"], "model.houm.stg_scheduler_appraiserworkingmacrozone": [], "model.houm.stg_subscription_subscription": ["model.houm.proc_closure_plans_taxes_region", "model.houm.proc_closure_subs"], "model.houm.stg_demand_calls": [], "model.houm.stg_demand_portalhoum": ["model.houm.proc_demand_leads", "model.houm.proc_demand_portalhoum", "model.houm.proc_tmp_demand_tenant_houm_leads"], "model.houm.stg_scheduler_cancelreasontypes": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations"], "model.houm.stg_billing_adjustment": [], "model.houm.stg_payment_orders": [], "model.houm.stg_properties_associationamenities": ["model.houm.property__published_new_properties"], "model.houm.stg_scheduler_appraiseravailability": [], "model.houm.stg_external_portal_integrations_publicationurl": [], "model.houm.stg_contracts_scd": [], "model.houm.stg_contracts": ["model.houm.proc_closure_contract_historical_status", "model.houm.proc_closure_contracts"], "model.houm.stg_arriendoasegurado_rentfeedback": [], "model.houm.stg_demand_marketingapplicant": ["model.houm.proc_demand_marketingapplicant"], "model.houm.stg_external_portal_integrations_publication": [], "model.houm.stg_arriendoasegurado_applicant": ["model.houm.proc_core_applicant", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_scheduler_schedules": ["model.houm.proc_app_cancelations", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_others_cancelations", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_external_portal_integrations_externalportals": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_demand_portalapplicant": ["model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_external_portal_leads_per_publication", "model.houm.proc_tmp_demand_tenant_pa_leads"], "model.houm.stg_external_portal_integrations_loadstatus": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication"], "model.houm.stg_subscription_subscriptionevent": [], "model.houm.stg_users": ["model.houm.proc_core_applicant", "model.houm.proc_properties", "model.houm.property__published_new_properties"], "model.houm.stg_external_portal_integrations_country": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_real_estate_developments_units": ["model.houm.proc_supply_units", "model.houm.property__published_new_properties"], "model.houm.stg_real_estate_developments_developmentdetails": ["model.houm.property__published_new_properties"], "model.houm.stg_scheduler_scheduletypes": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_properties_location": ["model.houm.proc_properties_location"], "model.houm.stg_scheduler_schedulehasapplicant": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_scheduler_macrozone": [], "model.houm.stg_external_portal_integrations_macrozoneportalplan": ["snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_subscription_subscriptiondiscount": [], "model.houm.stg_demand_eventleadprofile": [], "model.houm.stg_properties": ["model.houm.proc_properties", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_properties_id.d43465ee9b", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_properties_id.c012ce6a29"], "model.houm.stg_demand_leadhasappraiser": [], "model.houm.stg_plans_cities": [], "model.houm.stg_real_estate_developments_unittypes": ["model.houm.proc_supply_unittypes", "model.houm.property__published_new_properties"], "model.houm.stg_external_portal_integrations_publication_scd": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication"], "model.houm.stg_scheduler_scheduleevent": ["model.houm.proc_core_scheduler_schedules", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.stg_demand_lead": ["model.houm.proc_demand_leads", "model.houm.proc_demand_marketingapplicant", "model.houm.proc_demand_whatsapp"], "model.houm.stg_scheduler_applicanthasappraiser": [], "model.houm.stg_external_portal_integrations_publicationtype": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_demand_eventleadhasappraiser": [], "model.houm.stg_arriendoasegurado_contractperson": [], "model.houm.stg_external_portal_integrations_portalplan": ["model.houm.proc_external_portal_historical_publications", "model.houm.proc_external_portal_leads_per_publication", "snapshot.houm.stg_macrozoneportalplan_snapshot"], "model.houm.stg_contracts_codebtors": [], "model.houm.stg_property_salesdetails": ["model.houm.proc_property_salesdetails", "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6"], "model.houm.stg_homecheckerdetails": [], "model.houm.stg_arriendoasegurado_city": ["model.houm.proc_supply_marketplace_city"], "model.houm.stg_arriendoasegurado_planmonth": [], "model.houm.stg_scheduler_appraiserevent": ["model.houm.proc_app_cancelations", "model.houm.proc_demand_schedules_appraiserevent", "model.houm.proc_first_cancelation", "model.houm.proc_others_cancelations"], "model.houm.stg_macrozone": ["model.houm.proc_macrozone"], "model.houm.stg_real_estate_developments_developments": ["model.houm.proc_supply_projects", "model.houm.property__published_new_properties"], "model.houm.stg_scheduler_cancelreasons": ["model.houm.proc_app_cancelations", "model.houm.proc_others_cancelations"], "model.houm.stg_properties_inspectionreport": [], "model.houm.stg_plans": ["model.houm.proc_closure_plans", "model.houm.proc_closure_plans", "model.houm.proc_closure_plans", "model.houm.proc_closure_plans_taxes_region"], "model.houm.stg_demand_whatsapp": ["model.houm.proc_demand_whatsapp"], "model.houm.stg_properties_basicservice": [], "model.houm.stg_scheduler_appraisers": ["model.houm.proc_app_cancelations", "model.houm.proc_core_appraisers", "model.houm.proc_cx_nps_visit_done", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_others_cancelations"], "model.houm.stg_arriendoasegurado_propertydetails": [], "model.houm.stg_propertydetails": ["model.houm.proc_propertydetails", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_propertydetails_property_id.3d72328240"], "model.houm.stg_paid_media_google_campaign_keys": [], "model.houm.stg_tmp_marketing_pipedrive_data": [], "model.houm.stg_paid_media_facebook_campaigns": [], "model.houm.stg_paid_media_google_campaigns_co_mx": [], "model.houm.stg_paid_media_ad_groups": [], "model.houm.stg_paid_media_facebook_campaign_keys": [], "model.houm.stg_paid_media_google_campaigns_cl": [], "model.houm.stg_rev_kpi_rented_properties": [], "model.houm.stg_rev_houm_properties": ["model.houm.proc_properties_rev_suggested_prices", "model.houm.proc_properties_rev_suggested_prices"], "model.houm.stg_rev_kpi_published_properties": [], "model.houm.stg_zendesk_metrics": [], "model.houm.stg_zendesk_tickets_audits_events": [], "model.houm.stg_zendesk_users": ["test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_users_id.e79d686872"], "model.houm.stg_zendesk_tickets_audits_via": [], "model.houm.stg_zendesk_tickets_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.stg_zendesk_tickets_audits": [], "model.houm.stg_zendesk_tickets": ["test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52"], "model.houm.stg_property__rent_recommended_properties": ["model.houm.property__rent_recommended_properties"], "model.houm.stg_property__sale_recommended_properties": ["model.houm.property__sale_recommended_properties"], "model.houm.stg_property__recommended_new_properties": ["model.houm.property__recommended_new_properties"], "model.houm.stg_evaluations_scd": [], "model.houm.stg_monthly_inflation_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.stg_monthly_inflation_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.stg_monthly_inflation_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.stg_payments_cl_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_payments_mx_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_payments_co_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_departments": [], "model.houm.stg_payrolls": [], "model.houm.stg_companies": [], "model.houm.stg_accounting": [], "model.houm.stg_jobs": [], "model.houm.stg_areas": [], "model.houm.stg_line_settlements": [], "model.houm.stg_employees": ["test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced"], "model.houm.stg_roles": [], "model.houm.proc_closure_subs": ["model.houm.rental_tenant_metric_details_new_subs", "model.houm.rental_tenant_metric_details_new_tenant"], "model.houm.proc_finance_plans": [], "model.houm.proc_closure_evaluation_has_a_contract": [], "model.houm.proc_closure_plans_taxes_region": ["model.houm.proc_finance_plans"], "model.houm.proc_closure_plans": ["model.houm.proc_closure_subs", "model.houm.proc_finance_plans"], "model.houm.proc_finance_multifamily": [], "model.houm.proc_closure_evaluations": [], "model.houm.proc_closure_contracts": ["model.houm.proc_closure_subs"], "model.houm.proc_closure_contract_historical_status": [], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.proc_cx_zendesk_first_clean_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": [], "model.houm.proc_pipedrive_leads": ["model.houm.proc_demand_sales_leads", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_seller_leads"], "model.houm.proc_supply_seller_leads": ["model.houm.sales_seller_metric_details_leads", "model.houm.sales_seller_metric_details_leads_qualified", "model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.proc_property_salesdetails": ["model.houm.dim_properties", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.properties_published", "model.houm.property__published_new_properties", "model.houm.property__published_properties", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_pipedrive_pipelines": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_supply_unittypes": ["model.houm.proc_supply_units", "model.houm.sales_company_metric_details_new_unittypes_listing"], "model.houm.proc_properties_mz": ["model.houm.proc_closure_subs", "model.houm.proc_core_scheduler_schedules", "model.houm.proc_demand_leads", "model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_demand_schedules_timing", "model.houm.proc_demand_whatsapp", "model.houm.proc_pipedrive_leads", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.proc_supply_schedules", "model.houm.property__published_properties", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_company_metric_details_new_project_listing", "model.houm.sales_company_metric_details_new_units_listing", "model.houm.sales_company_metric_details_new_unittypes_listing", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_supply_schedules": ["model.houm.rental_landlord_metric_details_photo_created", "model.houm.rental_landlord_metric_details_photo_done", "model.houm.rental_landlord_metric_details_photo_scheduled", "model.houm.sales_seller_metric_details_photo_created", "model.houm.sales_seller_metric_details_photo_done", "model.houm.sales_seller_metric_details_photo_scheduled"], "model.houm.proc_pipedrive_persons": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_supply_landlord_leads": ["model.houm.rental_landlord_metric_details_leads", "model.houm.rental_landlord_metric_details_leads_qualified", "model.houm.rental_landlord_metric_details_leads_qualified_date"], "model.houm.proc_pipedrive_cities": ["model.houm.proc_pipedrive_leads", "model.houm.proc_pipedrive_leads"], "model.houm.proc_supply_units": ["model.houm.sales_company_metric_details_new_units_listing"], "model.houm.proc_propertydetails": ["model.houm.dim_properties", "model.houm.proc_demand_schedules_timing", "model.houm.proc_properties_mz", "model.houm.proc_rev_properties", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.properties_published", "model.houm.property__published_new_properties", "model.houm.property__published_properties"], "model.houm.proc_new_properties": ["model.houm.property__published_new_properties"], "model.houm.proc_tmp_supply_cities": ["model.houm.proc_tmp_demand_tenant_houm_leads"], "model.houm.proc_macrozone": ["model.houm.dim_cities", "model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.proc_rev_properties", "model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.property__published_properties"], "model.houm.proc_pipedrive_persons_phones": ["model.houm.proc_pipedrive_persons"], "model.houm.proc_properties": ["model.houm.dim_properties", "model.houm.proc_closure_plans_taxes_region", "model.houm.proc_demand_leads", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalapplicant", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_portalhoum", "model.houm.proc_demand_schedules", "model.houm.proc_external_portal_leads_per_publication", "model.houm.proc_new_properties", "model.houm.proc_pipedrive_leads", "model.houm.proc_rev_properties", "model.houm.proc_supply_projects", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.properties_published", "model.houm.property__published_properties", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_pipedrive_persons_emails": ["model.houm.proc_pipedrive_persons"], "model.houm.proc_pipedrive_deals": ["model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_cities", "model.houm.proc_pipedrive_labels", "model.houm.proc_pipedrive_leads"], "model.houm.proc_supply_marketplace_city": ["model.houm.proc_macrozone"], "model.houm.proc_supply_projects": ["model.houm.proc_supply_unittypes", "model.houm.sales_company_metric_details_new_project_listing"], "model.houm.proc_pipedrive_labels": ["model.houm.proc_pipedrive_leads"], "model.houm.proc_tmp_supply_properties_macrozone": ["model.houm.kpi_landlord_nrl", "model.houm.kpi_seller_nsl", "model.houm.proc_tmp_demand_schedules", "model.houm.proc_tmp_demand_tenant_houm_leads", "model.houm.proc_tmp_demand_tenant_pa_leads"], "model.houm.proc_external_portal_historical_publications": [], "model.houm.proc_pipedrive_stages": [], "model.houm.proc_properties_location": ["model.houm.proc_rev_properties", "model.houm.property__published_properties"], "model.houm.proc_rev_properties": ["model.houm.proc_rev_rental_properties", "model.houm.proc_rev_sales_properties"], "model.houm.proc_properties_rev_suggested_prices": ["model.houm.property__published_properties_rev_suggested_prices"], "model.houm.proc_rev_rental_last_months_properties": ["model.houm.proc_rev_rental_published_properties", "model.houm.proc_rev_rental_rented_properties"], "model.houm.proc_rev_rental_published_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_rental_rented_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_rental_properties": ["model.houm.proc_rev_rental_last_months_properties"], "model.houm.proc_rev_sales_properties": ["model.houm.proc_rev_sales_last_months_properties"], "model.houm.proc_rev_sales_sold_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_rev_sales_last_months_properties": ["model.houm.proc_rev_sales_published_properties", "model.houm.proc_rev_sales_sold_properties"], "model.houm.proc_rev_sales_published_properties": ["model.houm.property__rev_kpi_ratio"], "model.houm.proc_marketing_paid_media": ["model.houm.rental_landlord_metric_details_paid_media_cost", "model.houm.rental_tenant_metric_details_paid_media_cost", "model.houm.sales_buyer_metric_details_paid_media_cost", "model.houm.sales_demand_metric_details_paid_media_cost", "model.houm.sales_investor_metric_details_paid_media_cost", "model.houm.sales_seller_metric_details_paid_media_cost"], "model.houm.proc_marketing_paid_media_campaign": ["model.houm.proc_demand_marketingapplicant", "model.houm.proc_marketing_paid_media"], "model.houm.proc_marketing_paid_media_executions": ["model.houm.proc_marketing_paid_media", "model.houm.proc_marketing_paid_media_campaign"], "model.houm.sales_local_revenue": ["model.houm.cum_sales_local_revenue", "model.houm.goals_current"], "model.houm.rentals_units": ["model.houm.cum_rentals_units", "model.houm.goals_current"], "model.houm.eop_subs": ["model.houm.goals_current"], "model.houm.sales_units": ["model.houm.cum_sales_units", "model.houm.goals_current"], "model.houm.proc_cx_nps_new_listing": [], "model.houm.proc_cx_nps_visit_done": [], "model.houm.proc_cx_nps_photo": [], "model.houm.proc_cx_nps_tenants": [], "model.houm.proc_cx_nps_landlords_pc": [], "model.houm.proc_cx_nps_promises": [], "model.houm.proc_cx_nps_landlords": [], "model.houm.proc_cx_nps_tenants_pc": [], "model.houm.proc_cx_nps_visit_cancelled": [], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.fact_daily_virtual_uf_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.fact_daily_virtual_uf_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.fact_daily_virtual_uf_cl"], "model.houm.proc_core_cancelations": [], "model.houm.proc_core_scheduler_schedules": [], "model.houm.proc_core_appraisers": [], "model.houm.proc_demand_schedules_timing": ["model.houm.rental_tenant_metric_details_arrived_on_time", "model.houm.rental_tenant_metric_details_correct_visit_done", "model.houm.rental_tenant_metric_details_correct_visit_finished", "model.houm.rental_tenant_metric_details_done_time", "model.houm.sales_buyer_metric_details_correct_visit_done"], "model.houm.proc_external_portal_leads_per_publication": [], "model.houm.proc_demand_schedules": ["model.houm.proc_demand_schedules_timing", "model.houm.rental_tenant_metric_details_schedules_cancelled", "model.houm.rental_tenant_metric_details_schedules_cancelled_at", "model.houm.rental_tenant_metric_details_schedules_created", "model.houm.rental_tenant_metric_details_schedules_done", "model.houm.rental_tenant_metric_details_schedules_scheduled", "model.houm.rental_tenant_metric_details_schedules_scheduled_admin", "model.houm.rental_tenant_metric_details_schedules_scheduled_autoscheduled", "model.houm.rental_tenant_metric_details_schedules_scheduled_organic", "model.houm.rental_tenant_metric_details_schedules_unfinished", "model.houm.sales_buyer_metric_details_schedules_created", "model.houm.sales_buyer_metric_details_schedules_done", "model.houm.sales_buyer_metric_details_schedules_scheduled", "model.houm.sales_investor_metric_details_schedules_created", "model.houm.sales_investor_metric_details_schedules_done", "model.houm.sales_investor_metric_details_schedules_scheduled"], "model.houm.proc_demand_schedules_appraiserevent": ["model.houm.proc_demand_schedules_timing"], "model.houm.proc_tmp_demand_schedules_cleaned": ["model.houm.kpi_buyer_visit_created", "model.houm.kpi_buyer_visit_done", "model.houm.kpi_buyer_visit_scheduled", "model.houm.kpi_landlord_photo_created", "model.houm.kpi_landlord_photo_done", "model.houm.kpi_landlord_photo_scheduled", "model.houm.kpi_seller_photo_created", "model.houm.kpi_seller_photo_done", "model.houm.kpi_seller_photo_scheduled", "model.houm.kpi_tenant_visit_created", "model.houm.kpi_tenant_visit_done", "model.houm.kpi_tenant_visit_scheduled", "model.houm.proc_cx_nps_photo", "model.houm.proc_cx_nps_visit_cancelled", "model.houm.proc_cx_nps_visit_done"], "model.houm.proc_app_cancelations": ["model.houm.proc_core_cancelations"], "model.houm.proc_first_cancelation": ["model.houm.proc_core_cancelations"], "model.houm.proc_demand_lead_activities": [], "model.houm.proc_demand_whatsapp": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_others_cancelations": ["model.houm.proc_core_cancelations"], "model.houm.proc_demand_portalapplicant": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_core_applicant": [], "model.houm.proc_demand_marketingapplicant": ["model.houm.proc_demand_lead_activities"], "model.houm.proc_tmp_demand_schedules": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.proc_tmp_demand_tenant_houm_leads": [], "model.houm.proc_demand_sales_leads": ["model.houm.sales_buyer_metric_details_leads", "model.houm.sales_buyer_metric_details_leads_qualified", "model.houm.sales_buyer_metric_details_leads_qualified_date", "model.houm.sales_demand_metric_details_leads", "model.houm.sales_investor_metric_details_leads", "model.houm.sales_investor_metric_details_leads_qualified", "model.houm.sales_investor_metric_details_leads_qualified_date"], "model.houm.proc_demand_reservations": ["model.houm.rental_tenant_metric_details_reservations", "model.houm.rental_tenant_metric_details_reservations_effective", "model.houm.rental_tenant_metric_details_reservations_refunded"], "model.houm.proc_tmp_demand_tenant_pa_leads": [], "model.houm.proc_demand_leads": ["model.houm.rental_tenant_metric_details_leads", "model.houm.rental_tenant_metric_details_leads_interactions"], "model.houm.proc_demand_portalhoum": ["model.houm.proc_demand_lead_activities"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "snapshot.houm.stg_macrozoneportalplan_snapshot": [], "test.houm.assert_properties_rent_prices_chile": [], "seed.houm.country-codes": [], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "operation.houm.houm-on-run-end-22": [], "operation.houm.houm-on-run-end-23": [], "operation.houm.houm-on-run-end-24": [], "operation.houm.houm-on-run-end-25": [], "operation.houm.houm-on-run-end-26": [], "operation.houm.houm-on-run-end-27": [], "operation.houm.houm-on-run-end-28": [], "operation.houm.houm-on-run-end-29": [], "operation.houm.houm-on-run-end-30": [], "operation.houm.houm-on-run-end-31": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": [], "test.houm.not_null_properties_published_property_id.cfd67d7b86": [], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": [], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": [], "test.houm.unique_stg_properties_id.c012ce6a29": [], "test.houm.not_null_stg_properties_id.d43465ee9b": [], "test.houm.unique_stg_propertydetails_property_id.3d72328240": [], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": [], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": [], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": [], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": [], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": [], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": [], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": [], "test.houm.unique_stg_zendesk_users_id.e79d686872": [], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": [], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": [], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": [], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": [], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": [], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": [], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": [], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": [], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": [], "source.houm.public.dim_polygons": ["model.houm.dim_locations"], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.public.rev_houm_properties": ["model.houm.stg_rev_houm_properties"], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": ["model.houm.stg_homecheckerdetails"], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": ["model.houm.stg_contracts_scd"], "source.houm.historical.historical_plans": [], "source.houm.historical.historical_external_portal_integrations_publication": ["model.houm.stg_external_portal_integrations_publication_scd"], "source.houm.historical.historical_evaluation": ["model.houm.stg_evaluations_scd"], "source.houm.raw_stage.series_ipc_cl": ["model.houm.stg_monthly_inflation_cl"], "source.houm.raw_stage.series_ipc_mx": ["model.houm.stg_monthly_inflation_mx"], "source.houm.raw_stage.series_ipc_co": ["model.houm.stg_monthly_inflation_co"], "source.houm.raw_stage.properties": ["model.houm.stg_properties"], "source.houm.raw_stage.properties_salesdetails": ["model.houm.stg_property_salesdetails"], "source.houm.raw_stage.properties_location": ["model.houm.stg_properties_location"], "source.houm.raw_stage.properties_associationamenities": ["model.houm.stg_properties_associationamenities"], "source.houm.raw_stage.properties_inspectionreport": ["model.houm.stg_properties_inspectionreport"], "source.houm.raw_stage.properties_basicservice": ["model.houm.stg_properties_basicservice"], "source.houm.raw_stage.arriendoasegurado_propertydetails": ["model.houm.stg_arriendoasegurado_propertydetails", "model.houm.stg_propertydetails", "model.houm.stg_rev_kpi_published_properties", "model.houm.stg_rev_kpi_rented_properties"], "source.houm.raw_stage.arriendoasegurado_city": ["model.houm.stg_arriendoasegurado_city"], "source.houm.raw_stage.arriendoasegurado_applicant": ["model.houm.stg_arriendoasegurado_applicant"], "source.houm.raw_stage.arriendoasegurado_contractperson": ["model.houm.stg_arriendoasegurado_contractperson"], "source.houm.raw_stage.arriendoasegurado_planmonth": ["model.houm.stg_arriendoasegurado_planmonth"], "source.houm.raw_stage.arriendoasegurado_rentfeedback": ["model.houm.stg_arriendoasegurado_rentfeedback"], "source.houm.raw_stage.users": ["model.houm.stg_users"], "source.houm.raw_stage.subscription_subscription": ["model.houm.stg_subscription_subscription"], "source.houm.raw_stage.real_estate_developments_developments": ["model.houm.stg_real_estate_developments_developments"], "source.houm.raw_stage.real_estate_developments_developmentdetails": ["model.houm.stg_real_estate_developments_developmentdetails"], "source.houm.raw_stage.real_estate_developments_unittypes": ["model.houm.stg_real_estate_developments_unittypes"], "source.houm.raw_stage.real_estate_developments_units": ["model.houm.stg_real_estate_developments_units"], "source.houm.raw_stage.demand_lead": ["model.houm.stg_demand_lead"], "source.houm.raw_stage.demand_portalhoum": ["model.houm.stg_demand_portalhoum"], "source.houm.raw_stage.demand_portalapplicant": ["model.houm.stg_demand_portalapplicant"], "source.houm.raw_stage.demand_marketingapplicant": ["model.houm.stg_demand_marketingapplicant"], "source.houm.raw_stage.demand_whatsapp": ["model.houm.stg_demand_whatsapp"], "source.houm.raw_stage.demand_calls": ["model.houm.stg_demand_calls"], "source.houm.raw_stage.demand_eventleadhasappraiser": ["model.houm.stg_demand_eventleadhasappraiser"], "source.houm.raw_stage.demand_leadhasappraiser": ["model.houm.stg_demand_leadhasappraiser"], "source.houm.raw_stage.demand_eventleadprofile": ["model.houm.stg_demand_eventleadprofile"], "source.houm.raw_stage.scheduler_schedules": ["model.houm.stg_scheduler_schedules"], "source.houm.raw_stage.scheduler_scheduletypes": ["model.houm.stg_scheduler_scheduletypes"], "source.houm.raw_stage.scheduler_appraisers": ["model.houm.stg_scheduler_appraisers"], "source.houm.raw_stage.scheduler_schedulehasapplicant": ["model.houm.stg_scheduler_schedulehasapplicant"], "source.houm.raw_stage.scheduler_applicanthasappraiser": ["model.houm.stg_scheduler_applicanthasappraiser"], "source.houm.raw_stage.scheduler_appraiseravailability": ["model.houm.stg_scheduler_appraiseravailability"], "source.houm.raw_stage.scheduler_appraiserevent": ["model.houm.stg_scheduler_appraiserevent"], "source.houm.raw_stage.scheduler_appraiserworkingmacrozone": ["model.houm.stg_scheduler_appraiserworkingmacrozone"], "source.houm.raw_stage.scheduler_cancelreasons": ["model.houm.stg_scheduler_cancelreasons"], "source.houm.raw_stage.scheduler_cancelreasontypes": ["model.houm.stg_scheduler_cancelreasontypes"], "source.houm.raw_stage.scheduler_macrozone": ["model.houm.stg_macrozone", "model.houm.stg_scheduler_macrozone"], "source.houm.raw_stage.scheduler_scheduleevent": ["model.houm.stg_scheduler_scheduleevent"], "source.houm.raw_stage.subscription_subscriptiondiscount": ["model.houm.stg_subscription_subscriptiondiscount"], "source.houm.raw_stage.subscription_subscriptionevent": ["model.houm.stg_subscription_subscriptionevent"], "source.houm.raw_stage.bid": [], "source.houm.raw_stage.negotiation": [], "source.houm.raw_stage.identification": [], "source.houm.raw_stage.identification_type": [], "source.houm.raw_stage.contracts_codebtors": ["model.houm.stg_contracts_codebtors"], "source.houm.raw_stage.plans_cities": ["model.houm.stg_plans_cities"], "source.houm.raw_stage.billing_adjustment": ["model.houm.stg_billing_adjustment"], "source.houm.raw_stage.payment_orders": ["model.houm.stg_payment_orders"], "source.houm.raw_stage.plans": ["model.houm.stg_plans"], "source.houm.raw_stage.contracts": ["model.houm.stg_contracts"], "source.houm.raw_stage.external_portal_integrations_country": ["model.houm.stg_external_portal_integrations_country"], "source.houm.raw_stage.external_portal_integrations_publication": ["model.houm.stg_external_portal_integrations_publication"], "source.houm.raw_stage.external_portal_integrations_publicationtype": ["model.houm.stg_external_portal_integrations_publicationtype"], "source.houm.raw_stage.external_portal_integrations_portalplan": ["model.houm.stg_external_portal_integrations_portalplan"], "source.houm.raw_stage.external_portal_integrations_macrozoneportalplan": ["model.houm.stg_external_portal_integrations_macrozoneportalplan"], "source.houm.raw_stage.external_portal_integrations_loadstatus": ["model.houm.stg_external_portal_integrations_loadstatus"], "source.houm.raw_stage.external_portal_integrations_externalportals": ["model.houm.stg_external_portal_integrations_externalportals"], "source.houm.raw_stage.external_portal_integrations_publicationurl": ["model.houm.stg_external_portal_integrations_publicationurl"], "source.houm.staging_buk.employees_chile": ["model.houm.stg_employees"], "source.houm.staging_buk.employees_colombia": ["model.houm.stg_employees"], "source.houm.staging_buk.roles_chile": ["model.houm.stg_roles"], "source.houm.staging_buk.roles_colombia": ["model.houm.stg_roles"], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": ["model.houm.stg_areas"], "source.houm.staging_buk.areas_colombia": ["model.houm.stg_areas"], "source.houm.staging_buk.companies_chile": ["model.houm.stg_companies"], "source.houm.staging_buk.companies_colombia": ["model.houm.stg_companies"], "source.houm.staging_buk.departments_chile": ["model.houm.stg_departments"], "source.houm.staging_buk.departments_colombia": ["model.houm.stg_departments"], "source.houm.staging_buk.jobs_chile": ["model.houm.stg_jobs"], "source.houm.staging_buk.jobs_colombia": ["model.houm.stg_jobs"], "source.houm.staging_buk.payrolls_chile": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.payrolls_colombia": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.line_settlements_chile": ["model.houm.stg_line_settlements"], "source.houm.staging_buk.line_settlements_colombia": ["model.houm.stg_line_settlements"], "source.houm.airbyte_zendesk.users": ["model.houm.stg_zendesk_users"], "source.houm.airbyte_zendesk.tickets": ["model.houm.stg_zendesk_tickets"], "source.houm.airbyte_zendesk.ticket_audits": ["model.houm.stg_zendesk_tickets_audits", "model.houm.stg_zendesk_tickets_audits_events", "model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_events": ["model.houm.stg_zendesk_tickets_audits_events"], "source.houm.airbyte_zendesk.ticket_audits_via": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_metrics": ["model.houm.stg_zendesk_metrics"], "source.houm.airbyte_zendesk.ticket_comments": ["model.houm.stg_zendesk_tickets_comments"], "source.houm.pipedrive.activities": ["model.houm.stg_activies"], "source.houm.pipedrive.deals": ["model.houm.stg_deals"], "source.houm.pipedrive.pipelines": ["model.houm.stg_pipelines"], "source.houm.pipedrive.stages": ["model.houm.stg_stages"], "source.houm.pipedrive.bi_persons": ["model.houm.stg_bi_persons"], "source.houm.pipedrive.bi_deals": ["model.houm.stg_bi_deals"], "source.houm.mongo_tables.payments_cl_db_movements": ["model.houm.stg_payments_cl_db_movements"], "source.houm.mongo_tables.payments_co_db_movements": ["model.houm.stg_payments_co_db_movements"], "source.houm.mongo_tables.payments_mx_db_movements": ["model.houm.stg_payments_mx_db_movements"], "source.houm.airbyte_gspread.bb_fb": ["model.houm.stg_paid_media_facebook_campaigns"], "source.houm.airbyte_gspread.gg_cl": ["model.houm.stg_paid_media_google_campaigns_cl"], "source.houm.airbyte_gspread.gg_mxco": ["model.houm.stg_paid_media_google_campaigns_co_mx"], "source.houm.airbyte_gspread.campaign_keys_fb": ["model.houm.stg_paid_media_facebook_campaign_keys"], "source.houm.airbyte_gspread.campaign_keys_gg": ["model.houm.stg_paid_media_google_campaign_keys"], "source.houm.airbyte_gspread.data": ["model.houm.stg_tmp_marketing_pipedrive_data"], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "source.houm.airbyte_gspread.nps_cancel_visit": ["model.houm.stg_whatsapp_nps_visits_cancelled"], "source.houm.airbyte_gspread.nps_chile_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_chile_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_chile_sales": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_colombia_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_colombia_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_colombia_sales": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_mexico_foto": ["model.houm.stg_whatsapp_nps_photo"], "source.houm.airbyte_gspread.nps_mexico_renta": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_mexico_sales": ["model.houm.stg_whatsapp_nps_visits_done"], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_sales_promesa_seller": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": ["model.houm.stg_whatsapp_nps_rentas_tenant_pc"], "source.houm.airbyte_gspread.anuncios": ["model.houm.stg_paid_media_ad_groups"], "source.houm.airbyte_gspread.new_nps_rentals_24_horas_tenant": ["model.houm.stg_whatsapp_ces_rentas_24_horas_tenant"], "source.houm.airbyte_gspread.new_nps_rentals_new_listing": ["model.houm.stg_whatsapp_nps_rentas_new_listing"], "source.houm.airbyte_gspread.new_nps_rentals_propietary_poscontract": ["model.houm.stg_whatsapp_ces_rentas_propietary_pc"], "source.houm.airbyte_gspread.new_nps_automatic_landlord_3_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"], "source.houm.airbyte_gspread.new_nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.new_nps_automatic_tenant_3_meses": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "source.houm.airbyte_gspread.new_nps_automatic_tenant_6_meses": ["model.houm.stg_whatsapp_nps_automatic_tenants"], "source.houm.airbyte_gspread.new_nps_sales_buyer_posventa": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_buyer_promesa": ["model.houm.stg_whatsapp_ces_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_landlord_posventa": ["model.houm.stg_whatsapp_nps_sales_promises"], "source.houm.airbyte_gspread.new_nps_sales_landlord_promesa": ["model.houm.stg_whatsapp_ces_sales_promises"], "source.houm.airbyte_gspread.new_nps_visit_cancel_visit": ["model.houm.stg_whatsapp_nps_visits_cancelled"], "source.houm.airbyte_gspread.new_nps_visit_photo_done": ["model.houm.stg_whatsapp_ces_rentas_photo_done", "model.houm.stg_whatsapp_csat_photo_done"], "source.houm.airbyte_gspread.new_nps_visit_rental_visit_done": ["model.houm.stg_whatsapp_csat_visit_done"], "source.houm.airbyte_gspread.new_nps_visit_sales_visit_done": ["model.houm.stg_whatsapp_csat_visit_done"], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": ["model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"], "source.houm.survicate.nps_landlord_listing": ["model.houm.stg_survicate_nps_landlord_listing"], "source.houm.survicate.nps_landlord_new_sub": ["model.houm.stg_survicate_nps_landlord_new_sub"], "source.houm.survicate.nps_tennant_new_sub": ["model.houm.stg_survicate_nps_tenant_new_sub"], "source.houm.survicate.photo_done": ["model.houm.stg_survicate_nps_photo_done"], "source.houm.survicate.nps_tenant_satisfaction_24hrs": ["model.houm.stg_survicate_nps_tenant_satisfaction_24hrs"], "source.houm.survicate.nps_visit_done": ["model.houm.stg_survicate_nps_visit_done"], "source.houm.survicate.nps_sac_surveys": ["model.houm.stg_survicate_nps_sac_surveys"], "source.houm.survicate.nps_sac_answers": ["model.houm.stg_survicate_nps_sac_answers"], "source.houm.survicate.nps_admin_surveys": ["model.houm.stg_survicate_nps_admin_surveys"], "source.houm.survicate.nps_admin_answers": ["model.houm.stg_survicate_nps_admin_answers"], "source.houm.supermetrics.googleads_conversion": ["model.houm.stg_supermetrics_googleads_conversion"], "source.houm.supermetrics.googleads_campaign": ["model.houm.stg_supermetrics_googleads_campaign"], "source.houm.supermetrics.googleads_ad": ["model.houm.stg_supermetrics_googleads_ad"], "source.houm.supermetrics.fbads_campaign": ["model.houm.stg_supermetrics_fbads_campaign"], "source.houm.supermetrics.fbads_ad": ["model.houm.stg_supermetrics_fbads_ad"], "source.houm.supermetrics.fbads_geo": ["model.houm.stg_supermetrics_fbads_geo"], "source.houm.supermetrics.fbads_conversion": ["model.houm.stg_supermetrics_fbads_conversion"], "source.houm.supermetrics.fbads_age_gender": ["model.houm.stg_supermetrics_fbads_age_gender"], "source.houm.supermetrics.fbads_video": ["model.houm.stg_supermetrics_fbads_video"], "source.houm.raw_stage_analytics.property__rent_recommended_properties": ["model.houm.stg_property__rent_recommended_properties"], "source.houm.raw_stage_analytics.property__sale_recommended_properties": ["model.houm.stg_property__sale_recommended_properties"], "source.houm.raw_stage_analytics.property__recommended_new_properties": ["model.houm.stg_property__recommended_new_properties"], "source.houm.bidding_app.bid": ["model.houm.stg_sales_bid"], "source.houm.bidding_app.bid_response": ["model.houm.stg_sales_bid_response"], "source.houm.bidding_app.negotiation": ["model.houm.stg_sales_negotiation"], "source.houm.bidding_app.negotiation_user": ["model.houm.stg_sales_negotiation_user"], "source.houm.bidding_app.identification": ["model.houm.stg_sales_identification"], "source.houm.bidding_app.identification_type": ["model.houm.stg_sales_identification_type"], "source.houm.bidding_app.property": ["model.houm.stg_sales_property"], "source.houm.bidding_app.user": ["model.houm.stg_sales_user"], "source.houm.scraped_data_ops.scraped_properties_melico": [], "source.houm.scraped_data_ops.scraped_properties_fincaraiz": [], "source.houm.scraped_data_ops.scraped_properties_goplaceit_cl": [], "source.houm.scraped_data_ops.scraped_properties_portalinmobiliario": [], "source.houm.scraped_data_ops.scraped_properties_segundamano": [], "source.houm.scraped_data_ops.scraped_properties_melimx": [], "source.houm.scraped_data_ops.scraped_properties_yapo": []}}